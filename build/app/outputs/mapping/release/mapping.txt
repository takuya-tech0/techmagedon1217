# compiler: R8
# compiler_version: 8.1.56
# min_api: 21
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.2"}
# pg_map_id: d8f99cb
# pg_map_hash: SHA-256 d8f99cb82e6cb95e9a20e2309cabe967ca65debd55af6778433c364c39fa6b89
_COROUTINE.ArtificialStackFrames -> a.a:
    void <init>() -> <init>
    1:1:java.lang.StackTraceElement coroutineBoundary():0:0 -> a
_COROUTINE.CoroutineDebuggingKt -> a.b:
    java.lang.String ARTIFICIAL_FRAME_PACKAGE_NAME -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.StackTraceElement access$artificialFrame(java.lang.Throwable,java.lang.String):0:0 -> a
    1:1:java.lang.StackTraceElement artificialFrame(java.lang.Throwable,java.lang.String):0:0 -> b
_COROUTINE._BOUNDARY -> a.c:
androidx.arch.core.executor.ArchTaskExecutor -> b.c:
    androidx.arch.core.executor.TaskExecutor mDelegate -> a
    androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor -> b
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> c
    java.util.concurrent.Executor sMainThreadExecutor -> d
    java.util.concurrent.Executor sIOThreadExecutor -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void executeOnDiskIO(java.lang.Runnable):0:0 -> a
    1:1:boolean isMainThread():0:0 -> b
    1:1:void postToMainThread(java.lang.Runnable):0:0 -> c
    1:1:void $r8$lambda$660dvPX9TmFUAes_5pIFbpOEa8M(java.lang.Runnable):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$B-NyukiANkmKkd3XkhAfbEit2Bs(java.lang.Runnable):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.arch.core.executor.ArchTaskExecutor getInstance():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb/c;"}
    1:1:void lambda$static$0(java.lang.Runnable):0:0 -> g
    1:1:void lambda$static$1(java.lang.Runnable):0:0 -> h
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda0 -> b.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda1 -> b.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$1$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$1.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.DefaultTaskExecutor -> b.d:
    java.lang.Object mLock -> a
    java.util.concurrent.ExecutorService mDiskIO -> b
    android.os.Handler mMainHandler -> c
    1:1:void <init>():0:0 -> <init>
    1:1:void executeOnDiskIO(java.lang.Runnable):0:0 -> a
    1:1:boolean isMainThread():0:0 -> b
    1:1:void postToMainThread(java.lang.Runnable):0:0 -> c
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> d
androidx.arch.core.executor.DefaultTaskExecutor$1 -> b.d$a:
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
    androidx.arch.core.executor.DefaultTaskExecutor this$0 -> b
    1:1:void <init>(androidx.arch.core.executor.DefaultTaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb/d;)V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
androidx.arch.core.executor.DefaultTaskExecutor$Api28Impl -> b.d$b:
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.arch.core.executor.TaskExecutor -> b.e:
    void <init>() -> <init>
    void executeOnDiskIO(java.lang.Runnable) -> a
    boolean isMainThread() -> b
    void postToMainThread(java.lang.Runnable) -> c
androidx.arch.core.internal.FastSafeIterableMap -> c.a:
    java.util.HashMap mHashMap -> j
    1:1:void <init>():0:0 -> <init>
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:java.util.Map$Entry ceil(java.lang.Object):0:0 -> e
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lc/b$c;"}
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> g
androidx.arch.core.internal.SafeIterableMap -> c.b:
    androidx.arch.core.internal.SafeIterableMap$Entry mStart -> f
    androidx.arch.core.internal.SafeIterableMap$Entry mEnd -> g
    java.util.WeakHashMap mIterators -> h
    int mSize -> i
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.Map$Entry eldest():0:0 -> a
    1:1:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc/b$d;"}
    1:1:java.util.Map$Entry newest():0:0 -> c
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Lc/b$c;"}
    1:1:java.util.Iterator descendingIterator():0:0 -> descendingIterator
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> c.b$a:
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;Lc/b$c;)V"}
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)Lc/b$c;"}
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> c.b$b:
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;Lc/b$c;)V"}
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)Lc/b$c;"}
androidx.arch.core.internal.SafeIterableMap$Entry -> c.b$c:
    java.lang.Object mKey -> f
    java.lang.Object mValue -> g
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> h
    androidx.arch.core.internal.SafeIterableMap$Entry mPrevious -> i
    1:1:void <init>(java.lang.Object,java.lang.Object):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:1:java.lang.String toString():0:0 -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> c.b$d:
    androidx.arch.core.internal.SafeIterableMap$Entry mCurrent -> f
    boolean mBeforeStart -> g
    androidx.arch.core.internal.SafeIterableMap this$0 -> h
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b;)V"}
    1:1:java.util.Map$Entry next():0:0 -> a
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
androidx.arch.core.internal.SafeIterableMap$ListIterator -> c.b$e:
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> f
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> g
    1:1:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;Lc/b$c;)V"}
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b$c;)Lc/b$c;"}
    1:1:java.util.Map$Entry next():0:0 -> b
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry nextNode():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc/b$c;"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> c.b$f:
    void <init>() -> <init>
androidx.collection.ArrayMap -> d.a:
    androidx.collection.ArrayMap$EntrySet mEntrySet -> m
    androidx.collection.ArrayMap$KeySet mKeySet -> n
    androidx.collection.ArrayMap$ValueCollection mValues -> o
    void <init>() -> <init>
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:boolean containsAll(java.util.Collection):0:0 -> m
    1:1:boolean equalsSetHelper(java.util.Set,java.lang.Object):0:0 -> n
    1:1:boolean removeAll(java.util.Collection):0:0 -> o
    1:1:boolean retainAll(java.util.Collection):0:0 -> p
    1:1:void putAll(java.util.Map):0:0 -> putAll
    1:1:java.lang.Object[] toArrayHelper(java.lang.Object[],int):0:0 -> q
    1:1:java.util.Collection values():0:0 -> values
androidx.collection.ArrayMap$EntrySet -> d.a$a:
    androidx.collection.ArrayMap this$0 -> f
    1:1:void <init>(androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/a;)V"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
androidx.collection.ArrayMap$KeyIterator -> d.a$b:
    androidx.collection.ArrayMap this$0 -> i
    1:1:void <init>(androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/a;)V"}
    1:1:java.lang.Object elementAt(int):0:0 -> a
    1:1:void removeAt(int):0:0 -> b
androidx.collection.ArrayMap$KeySet -> d.a$c:
    androidx.collection.ArrayMap this$0 -> f
    1:1:void <init>(androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/a;)V"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.ArrayMap$MapIterator -> d.a$d:
    int mEnd -> f
    int mIndex -> g
    boolean mEntryValid -> h
    androidx.collection.ArrayMap this$0 -> i
    1:1:void <init>(androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/a;)V"}
    1:1:java.util.Map$Entry next():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
    1:1:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:1:java.lang.String toString():0:0 -> toString
androidx.collection.ArrayMap$ValueCollection -> d.a$e:
    androidx.collection.ArrayMap this$0 -> f
    1:1:void <init>(androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/a;)V"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.ArrayMap$ValueIterator -> d.a$f:
    androidx.collection.ArrayMap this$0 -> i
    1:1:void <init>(androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/a;)V"}
    1:1:java.lang.Object elementAt(int):0:0 -> a
    1:1:void removeAt(int):0:0 -> b
androidx.collection.CircularIntArray -> d.b:
    int[] mElements -> a
    int mHead -> b
    int mTail -> c
    int mCapacityBitmask -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:void addLast(int):0:0 -> a
    1:1:void clear():0:0 -> b
    1:1:void doubleCapacity():0:0 -> c
    1:1:boolean isEmpty():0:0 -> d
    1:1:int popFirst():0:0 -> e
androidx.collection.ContainerHelpers -> d.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int binarySearch(int[],int,int):0:0 -> a
    1:1:boolean equal(java.lang.Object,java.lang.Object):0:0 -> b
androidx.collection.IndexBasedArrayIterator -> d.d:
    int mSize -> f
    int mIndex -> g
    boolean mCanRemove -> h
    1:1:void <init>(int):0:0 -> <init>
    java.lang.Object elementAt(int) -> a
    void removeAt(int) -> b
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
androidx.collection.SimpleArrayMap -> d.e:
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    java.lang.Object[] mBaseCache -> i
    int mBaseCacheSize -> j
    java.lang.Object[] mTwiceBaseCache -> k
    int mTwiceBaseCacheSize -> l
    1:1:void <init>():0:0 -> <init>
    1:1:void allocArrays(int):0:0 -> a
    1:1:int binarySearchHashes(int[],int,int):0:0 -> b
    1:1:void ensureCapacity(int):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean containsValue(java.lang.Object):0:0 -> containsValue
    1:1:void freeArrays(int[],java.lang.Object[],int):0:0 -> d
    1:1:int indexOf(java.lang.Object,int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int indexOfKey(java.lang.Object):0:0 -> f
    1:1:int indexOfNull():0:0 -> g
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object):0:0 -> getOrDefault
    1:1:int indexOfValue(java.lang.Object):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.Object keyAt(int):0:0 -> i
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.lang.Object removeAt(int):0:0 -> j
    1:1:java.lang.Object setValueAt(int,java.lang.Object):0:0 -> k
    1:1:java.lang.Object valueAt(int):0:0 -> l
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> putIfAbsent
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    2:2:boolean remove(java.lang.Object,java.lang.Object):0:0 -> remove
    1:1:java.lang.Object replace(java.lang.Object,java.lang.Object):0:0 -> replace
    2:2:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> replace
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
androidx.concurrent.futures.AbstractResolvableFuture -> androidx.concurrent.futures.a:
    java.lang.Object value -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters -> c
    boolean GENERATE_CANCELLATION_CAUSES -> d
    java.util.logging.Logger log -> e
    androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper ATOMIC_HELPER -> f
    java.lang.Object NULL -> g
    1:1:void addDoneString(java.lang.StringBuilder):0:0 -> a
    1:1:void afterDone():0:0 -> b
    1:1:java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable):0:0 -> c
    1:1:androidx.concurrent.futures.AbstractResolvableFuture$Listener clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$e;)Landroidx/concurrent/futures/a$e;"}
    1:1:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;)V"}
    1:1:void executeListener(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> f
    1:1:java.lang.Object getDoneValue(java.lang.Object):0:0 -> g
    1:1:java.lang.Object get():0:0 -> get
    2:2:java.lang.Object get(long,java.util.concurrent.TimeUnit):0:0 -> get
    1:1:java.lang.Object getUninterruptibly(java.util.concurrent.Future):0:0 -> h
    1:1:void interruptTask():0:0 -> i
    1:1:java.lang.String pendingToString():0:0 -> j
    1:1:void releaseWaiters():0:0 -> k
    1:1:void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;)V"}
    1:1:boolean set(java.lang.Object):0:0 -> m
    1:1:java.lang.String userObjectToString(java.lang.Object):0:0 -> n
androidx.concurrent.futures.AbstractResolvableFuture$1 -> androidx.concurrent.futures.a$a:
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper -> androidx.concurrent.futures.a$b:
    void <init>() -> <init>
    1:1:void <init>(androidx.concurrent.futures.AbstractResolvableFuture$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$a;)V"}
    boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$e;Landroidx/concurrent/futures/a$e;)Z"}
    boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)Z"}
    void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)V"}
    void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation -> androidx.concurrent.futures.a$c:
    boolean wasInterrupted -> a
    java.lang.Throwable cause -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_INTERRUPTED -> c
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_CANCELLED -> d
androidx.concurrent.futures.AbstractResolvableFuture$Failure -> androidx.concurrent.futures.a$d:
    java.lang.Throwable exception -> a
androidx.concurrent.futures.AbstractResolvableFuture$Listener -> androidx.concurrent.futures.a$e:
    java.lang.Runnable task -> a
    java.util.concurrent.Executor executor -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Listener next -> c
    androidx.concurrent.futures.AbstractResolvableFuture$Listener TOMBSTONE -> d
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper -> androidx.concurrent.futures.a$f:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater -> a
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater -> c
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater -> e
    1:1:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$e;Landroidx/concurrent/futures/a$e;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)Z"}
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$ExternalSyntheticBackportWithForwarding0 -> androidx.concurrent.futures.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper$$InternalSyntheticBackportWithForwarding$2$58dd097c22a157c6fc915c3ca83711e3efdab037cd14fe4274f47b3cf6d48957$0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper -> androidx.concurrent.futures.a$g:
    1:1:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$e;Landroidx/concurrent/futures/a$e;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)Z"}
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Landroidx/concurrent/futures/a$h;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$Waiter -> androidx.concurrent.futures.a$h:
    java.lang.Thread thread -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter next -> b
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter TOMBSTONE -> c
    1:1:void <init>():0:0 -> <init>
    void <init>(boolean) -> <init>
    1:1:void setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/concurrent/futures/a$h;)V"}
    1:1:void unpark():0:0 -> b
androidx.concurrent.futures.ResolvableFuture -> androidx.concurrent.futures.c:
    1:1:boolean set(java.lang.Object):0:0 -> m
    1:1:androidx.concurrent.futures.ResolvableFuture create():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/concurrent/futures/c;"}
androidx.core.R$id -> e.a:
    int accessibility_custom_action_4 -> A
    int accessibility_custom_action_5 -> B
    int accessibility_custom_action_6 -> C
    int accessibility_custom_action_7 -> D
    int accessibility_custom_action_8 -> E
    int accessibility_custom_action_9 -> F
    int tag_accessibility_pane_title -> G
    int tag_on_apply_window_listener -> H
    int tag_unhandled_key_listeners -> I
    int tag_window_insets_animation_callback -> J
    int accessibility_custom_action_0 -> a
    int accessibility_custom_action_1 -> b
    int accessibility_custom_action_10 -> c
    int accessibility_custom_action_11 -> d
    int accessibility_custom_action_12 -> e
    int accessibility_custom_action_13 -> f
    int accessibility_custom_action_14 -> g
    int accessibility_custom_action_15 -> h
    int accessibility_custom_action_16 -> i
    int accessibility_custom_action_17 -> j
    int accessibility_custom_action_18 -> k
    int accessibility_custom_action_19 -> l
    int accessibility_custom_action_2 -> m
    int accessibility_custom_action_20 -> n
    int accessibility_custom_action_21 -> o
    int accessibility_custom_action_22 -> p
    int accessibility_custom_action_23 -> q
    int accessibility_custom_action_24 -> r
    int accessibility_custom_action_25 -> s
    int accessibility_custom_action_26 -> t
    int accessibility_custom_action_27 -> u
    int accessibility_custom_action_28 -> v
    int accessibility_custom_action_29 -> w
    int accessibility_custom_action_3 -> x
    int accessibility_custom_action_30 -> y
    int accessibility_custom_action_31 -> z
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    1:1:java.lang.Object checkCompatWrapper(java.lang.Object):0:0 -> a
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    android.app.PendingIntent mActionIntent -> d
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
androidx.core.content.ContextCompat -> androidx.core.content.a:
    java.lang.Object sSync -> a
    1:1:java.util.concurrent.Executor getMainExecutor(android.content.Context):0:0 -> a
androidx.core.content.ContextCompat$Api28Impl -> androidx.core.content.a$a:
    1:1:java.util.concurrent.Executor getMainExecutor(android.content.Context):0:0 -> a
androidx.core.graphics.Insets -> androidx.core.graphics.e:
    int left -> a
    int top -> b
    int right -> c
    int bottom -> d
    androidx.core.graphics.Insets NONE -> e
    1:1:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;Landroidx/core/graphics/e;)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets of(int,int,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIII)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets of(android.graphics.Rect):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Insets;)Landroidx/core/graphics/e;"}
    1:1:android.graphics.Insets toPlatformInsets():0:0 -> e
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline0 -> androidx.core.graphics.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$0.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline1 -> androidx.core.graphics.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$1.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline2 -> androidx.core.graphics.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$2.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$$ExternalSyntheticApiModelOutline3 -> androidx.core.graphics.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.graphics.Insets$$InternalSyntheticApiModelOutline$3$477a10c44318bbfe7913f741cd5b3e5da5be327bf73c5ec070df0e0139db252d$3.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.graphics.Insets$Api29Impl -> androidx.core.graphics.e$a:
    1:1:android.graphics.Insets of(int,int,int,int):0:0 -> a
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    int mType -> a
    java.lang.Object mObj1 -> b
    byte[] mData -> c
    android.os.Parcelable mParcelable -> d
    int mInt1 -> e
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    android.graphics.PorterDuff$Mode mTintMode -> h
    java.lang.String mTintModeStr -> i
    java.lang.String mString1 -> j
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> k
    1:1:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean):0:0 -> a
    1:1:int getResId():0:0 -> b
    1:1:java.lang.String getResPackage():0:0 -> c
    1:1:android.net.Uri getUri():0:0 -> d
    1:1:java.io.InputStream getUriInputStream(android.content.Context):0:0 -> e
    1:1:void onPostParceling():0:0 -> f
    1:1:void onPreParceling(boolean):0:0 -> g
    1:1:java.lang.String typeToString(int):0:0 -> h
androidx.core.graphics.drawable.IconCompat$Api23Impl -> androidx.core.graphics.drawable.IconCompat$a:
    1:1:int getResId(java.lang.Object):0:0 -> a
    1:1:java.lang.String getResPackage(java.lang.Object):0:0 -> b
    1:1:android.net.Uri getUri(java.lang.Object):0:0 -> c
    1:1:android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context):0:0 -> d
    1:1:android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context):0:0 -> e
androidx.core.graphics.drawable.IconCompat$Api26Impl -> androidx.core.graphics.drawable.IconCompat$b:
    1:1:android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0:0 -> a
    1:1:android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap):0:0 -> b
androidx.core.graphics.drawable.IconCompat$Api28Impl -> androidx.core.graphics.drawable.IconCompat$c:
    1:1:int getResId(java.lang.Object):0:0 -> a
    1:1:java.lang.String getResPackage(java.lang.Object):0:0 -> b
    1:1:int getType(java.lang.Object):0:0 -> c
    1:1:android.net.Uri getUri(java.lang.Object):0:0 -> d
androidx.core.graphics.drawable.IconCompat$Api30Impl -> androidx.core.graphics.drawable.IconCompat$d:
    1:1:android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri):0:0 -> a
androidx.core.os.ExecutorCompat -> f.a:
    1:1:java.util.concurrent.Executor create(android.os.Handler):0:0 -> a
androidx.core.os.ExecutorCompat$HandlerExecutor -> f.a$a:
    android.os.Handler mHandler -> f
    1:1:void <init>(android.os.Handler):0:0 -> <init>
    1:1:void execute(java.lang.Runnable):0:0 -> execute
androidx.core.util.Consumer -> g.a:
    void accept(java.lang.Object) -> accept
androidx.core.util.ObjectsCompat -> g.b:
    1:1:boolean equals(java.lang.Object,java.lang.Object):0:0 -> a
    1:1:int hash(java.lang.Object[]):0:0 -> b
androidx.core.util.Preconditions -> g.c:
    1:1:java.lang.Object checkNotNull(java.lang.Object):0:0 -> a
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.b:
    android.view.DisplayCutout mDisplayCutout -> a
    1:1:int getSafeInsetBottom():0:0 -> a
    1:1:int getSafeInsetLeft():0:0 -> b
    1:1:int getSafeInsetRight():0:0 -> c
    1:1:int getSafeInsetTop():0:0 -> d
    1:1:androidx.core.view.DisplayCutoutCompat wrap(android.view.DisplayCutout):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/DisplayCutout;)Landroidx/core/view/b;"}
androidx.core.view.DisplayCutoutCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.DisplayCutoutCompat$$InternalSyntheticApiModelOutline$3$5995697582f938161ab89c8390e62ddcc8be8764d4286173706240625ed8d046$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.DisplayCutoutCompat$Api28Impl -> androidx.core.view.b$a:
    1:1:android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List):0:0 -> a
    1:1:java.util.List getBoundingRects(android.view.DisplayCutout):0:0 -> b
    1:1:int getSafeInsetBottom(android.view.DisplayCutout):0:0 -> c
    1:1:int getSafeInsetLeft(android.view.DisplayCutout):0:0 -> d
    1:1:int getSafeInsetRight(android.view.DisplayCutout):0:0 -> e
    1:1:int getSafeInsetTop(android.view.DisplayCutout):0:0 -> f
androidx.core.view.OnApplyWindowInsetsListener -> androidx.core.view.c:
androidx.core.view.OnReceiveContentViewBehavior -> androidx.core.view.d:
androidx.core.view.SoftwareKeyboardControllerCompat -> androidx.core.view.e:
    androidx.core.view.SoftwareKeyboardControllerCompat$Impl mImpl -> a
androidx.core.view.SoftwareKeyboardControllerCompat$Impl -> androidx.core.view.e$c:
androidx.core.view.SoftwareKeyboardControllerCompat$Impl20 -> androidx.core.view.e$a:
    android.view.View mView -> a
androidx.core.view.SoftwareKeyboardControllerCompat$Impl30 -> androidx.core.view.e$b:
    android.view.View mView -> b
androidx.core.view.ViewCompat -> androidx.core.view.g:
    int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS -> a
    androidx.core.view.OnReceiveContentViewBehavior NO_OP_ON_RECEIVE_CONTENT_VIEW_BEHAVIOR -> b
    androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager -> c
    1:1:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/i;"}
    1:1:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0:0 -> c
    1:1:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/g$c;"}
    1:1:void setImportantForAccessibilityIfNeeded(android.view.View):0:0 -> e
androidx.core.view.ViewCompat$$ExternalSyntheticLambda0 -> androidx.core.view.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.core.view.ViewCompat$$InternalSyntheticLambda$2$32a2c537725442ee4ae90f16773237f2371bb9b4d0e5fb29df8b99d9c001b7e2$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$2 -> androidx.core.view.g$a:
    1:1:java.lang.Object frameworkGet(android.view.View):0:0 -> b
    1:1:java.lang.CharSequence frameworkGet(android.view.View):0:0 -> d
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.g$b:
    java.util.WeakHashMap mPanesToVisible -> a
    1:1:void checkPaneVisibility(java.util.Map$Entry):0:0 -> a
    1:1:void registerForLayoutCallback(android.view.View):0:0 -> b
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.g$c:
    int mTagKey -> a
    java.lang.Class mType -> b
    int mFrameworkMinimumSdk -> c
    int mContentChangeType -> d
    1:1:boolean frameworkAvailable():0:0 -> a
    java.lang.Object frameworkGet(android.view.View) -> b
    1:1:java.lang.Object get(android.view.View):0:0 -> c
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.g$d:
    1:1:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View):0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/i;Landroid/graphics/Rect;)Landroidx/core/view/i;"}
    1:1:boolean dispatchNestedFling(android.view.View,float,float,boolean):0:0 -> c
    1:1:boolean dispatchNestedPreFling(android.view.View,float,float):0:0 -> d
    1:1:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]):0:0 -> e
    1:1:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]):0:0 -> f
    1:1:android.content.res.ColorStateList getBackgroundTintList(android.view.View):0:0 -> g
    1:1:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View):0:0 -> h
    1:1:float getElevation(android.view.View):0:0 -> i
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/i;"}
    1:1:java.lang.String getTransitionName(android.view.View):0:0 -> k
    1:1:float getTranslationZ(android.view.View):0:0 -> l
    1:1:float getZ(android.view.View):0:0 -> m
    1:1:boolean hasNestedScrollingParent(android.view.View):0:0 -> n
    1:1:boolean isImportantForAccessibility(android.view.View):0:0 -> o
    1:1:boolean isNestedScrollingEnabled(android.view.View):0:0 -> p
    1:1:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList):0:0 -> q
    1:1:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode):0:0 -> r
    1:1:void setElevation(android.view.View,float):0:0 -> s
    1:1:void setNestedScrollingEnabled(android.view.View,boolean):0:0 -> t
    1:1:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/c;)V"}
    1:1:void setTransitionName(android.view.View,java.lang.String):0:0 -> v
    1:1:void setTranslationZ(android.view.View,float):0:0 -> w
    1:1:void setZ(android.view.View,float):0:0 -> x
    1:1:boolean startNestedScroll(android.view.View,int):0:0 -> y
    1:1:void stopNestedScroll(android.view.View):0:0 -> z
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.g$d$a:
    androidx.core.view.WindowInsetsCompat mLastInsets -> a
    android.view.View val$v -> b
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.g$e:
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/i;"}
    1:1:int getScrollIndicators(android.view.View):0:0 -> b
    1:1:void setScrollIndicators(android.view.View,int):0:0 -> c
    1:1:void setScrollIndicators(android.view.View,int,int):0:0 -> d
androidx.core.view.ViewCompat$Api28Impl -> androidx.core.view.g$f:
    1:1:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/g$g;)V"}
    1:1:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0:0 -> b
    1:1:boolean isAccessibilityHeading(android.view.View):0:0 -> c
    1:1:boolean isScreenReaderFocusable(android.view.View):0:0 -> d
    1:1:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Landroidx/core/view/g$g;)V"}
    1:1:java.lang.Object requireViewById(android.view.View,int):0:0 -> f
    1:1:void setAccessibilityHeading(android.view.View,boolean):0:0 -> g
    1:1:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence):0:0 -> h
    1:1:void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lh/a;)V"}
    1:1:void setScreenReaderFocusable(android.view.View,boolean):0:0 -> j
androidx.core.view.ViewCompat$Api28Impl$$ExternalSyntheticLambda0 -> androidx.core.view.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$3$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.<init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/g$g;)V"}
    1:1:boolean androidx.core.view.ViewCompat$Api28Impl$$InternalSyntheticLambda$3$2681dfbdcb67c35f98eab0e2bfd7b6e0f40bc9ea41db120cd68736076963a523$0.onUnhandledKeyEvent(android.view.View,android.view.KeyEvent):0:0 -> onUnhandledKeyEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> androidx.core.view.g$g:
androidx.core.view.WindowInsetsCompat -> androidx.core.view.i:
    androidx.core.view.WindowInsetsCompat$Impl mImpl -> a
    androidx.core.view.WindowInsetsCompat CONSUMED -> b
    1:1:void <init>(android.view.WindowInsets):0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getStableInsets():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/core/graphics/e;)V"}
    1:1:void setRootViewData(androidx.core.graphics.Insets):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:android.view.WindowInsets toWindowInsets():0:0 -> l
    1:1:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets;)Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets;Landroid/view/View;)Landroidx/core/view/i;"}
androidx.core.view.WindowInsetsCompat$Api21ReflectionHolder -> androidx.core.view.i$a:
    java.lang.reflect.Field sViewAttachInfoField -> a
    java.lang.reflect.Field sStableInsets -> b
    java.lang.reflect.Field sContentInsets -> c
    boolean sReflectionSucceeded -> d
    1:1:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/view/i;"}
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.i$b:
    androidx.core.view.WindowInsetsCompat$BuilderImpl mImpl -> a
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)Landroidx/core/view/i$b;"}
    1:1:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)Landroidx/core/view/i$b;"}
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.i$f:
    androidx.core.view.WindowInsetsCompat mInsets -> a
    androidx.core.graphics.Insets[] mInsetsTypeMask -> b
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:void applyInsetTypes():0:0 -> a
    androidx.core.view.WindowInsetsCompat build() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    void setStableInsets(androidx.core.graphics.Insets) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemGestureInsets(androidx.core.graphics.Insets):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    void setSystemWindowInsets(androidx.core.graphics.Insets) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setTappableElementInsets(androidx.core.graphics.Insets):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.i$c:
    android.view.WindowInsets mPlatformInsets -> c
    androidx.core.graphics.Insets mStableInsets -> d
    java.lang.reflect.Field sConsumedField -> e
    boolean sConsumedFieldFetched -> f
    java.lang.reflect.Constructor sConstructor -> g
    boolean sConstructorFetched -> h
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:android.view.WindowInsets createWindowInsetsInstance():0:0 -> h
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.i$d:
    android.view.WindowInsets$Builder mPlatBuilder -> c
    1:1:androidx.core.view.WindowInsetsCompat build():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemGestureInsets(androidx.core.graphics.Insets):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setSystemWindowInsets(androidx.core.graphics.Insets):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setTappableElementInsets(androidx.core.graphics.Insets):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$15$a204b8eefc41564daf6595e28b0232288c13e496630a36581a3f2c9667b5b6be$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$59943e04c37930a0531d4f6494ed649568ab127f92ede377b1f504d2dcd54863$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$9d187abb3bbc9745a880878a21bef611d92809b2198c7b753440a50ba682397e$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$a7bac0df715b28c98a7dcfbd576701be30c0b9593556f6a2c1e40d1cb3582ae7$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$e2db7d8c486f2bd0b97fa630bde348b860e908278df8e0203f613641cfeefcc4$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$e9cf16e04656d3d7361528f4e1263ec758c19a703cd1553ad658eb1456381f1b$0.m(android.view.WindowInsets$Builder,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl29$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$BuilderImpl29$$InternalSyntheticApiModelOutline$2$ee8cb0ef857f0d92636e84006869a5dab776eec7bf08e3331dcf284032d49109$0.m(android.view.WindowInsets$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.i$e:
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.i$l:
    androidx.core.view.WindowInsetsCompat mHost -> a
    androidx.core.view.WindowInsetsCompat CONSUMED -> b
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getMandatorySystemGestureInsets():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getStableInsets():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemGestureInsets():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemWindowInsets():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getTappableElementInsets():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:boolean isConsumed():0:0 -> m
    1:1:boolean isRound():0:0 -> n
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/core/graphics/e;)V"}
    1:1:void setRootViewData(androidx.core.graphics.Insets):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.i$g:
    android.view.WindowInsets mPlatformInsets -> c
    androidx.core.graphics.Insets[] mOverriddenInsets -> d
    androidx.core.graphics.Insets mSystemWindowInsets -> e
    androidx.core.view.WindowInsetsCompat mRootWindowInsets -> f
    androidx.core.graphics.Insets mRootViewVisibleInsets -> g
    boolean sVisibleRectReflectionFetched -> h
    java.lang.reflect.Method sGetViewRootImplMethod -> i
    java.lang.Class sAttachInfoClass -> j
    java.lang.reflect.Field sVisibleInsetsField -> k
    java.lang.reflect.Field sAttachInfoField -> l
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroidx/core/view/i$g;)V"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemWindowInsets():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:boolean isRound():0:0 -> n
    1:1:void setOverriddenInsets(androidx.core.graphics.Insets[]):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/core/graphics/e;)V"}
    1:1:void setRootViewData(androidx.core.graphics.Insets):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
    1:1:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;)V"}
    1:1:androidx.core.graphics.Insets getInsets(int,boolean):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getInsetsForType(int,boolean):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getRootStableInsets():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getVisibleInsets(android.view.View):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)Landroidx/core/graphics/e;"}
    1:1:void loadReflectionField():0:0 -> w
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.i$h:
    androidx.core.graphics.Insets mStableInsets -> m
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroidx/core/view/i$h;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeStableInsets():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.graphics.Insets getStableInsets():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:boolean isConsumed():0:0 -> m
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.i$i:
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroidx/core/view/i$i;)V"}
    1:1:androidx.core.view.WindowInsetsCompat consumeDisplayCutout():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/i;"}
    1:1:androidx.core.view.DisplayCutoutCompat getDisplayCutout():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/view/b;"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.DisplayCutout androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$2$1ac87aafd592b5506d107ed040b16d853d1a131cdb8856d2e13ed11b9a207052$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl28$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl28$$InternalSyntheticApiModelOutline$2$9207719b7ce5d8db03f418025a4671b26e9b85828127b36d45b1560d40c7fc23$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.i$j:
    androidx.core.graphics.Insets mSystemGestureInsets -> n
    androidx.core.graphics.Insets mMandatorySystemGestureInsets -> o
    androidx.core.graphics.Insets mTappableElementInsets -> p
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroidx/core/view/i$j;)V"}
    1:1:androidx.core.graphics.Insets getMandatorySystemGestureInsets():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getSystemGestureInsets():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:androidx.core.graphics.Insets getTappableElementInsets():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/core/graphics/e;"}
    1:1:void setStableInsets(androidx.core.graphics.Insets):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/e;)V"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$2$463f5d2e905bee7a94c5e1e784176828b7f74fb1bd3f21ce4d1229a6ccfdd624$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$2$8f53c81c8f092140ac3e804e5c1bbe674a9a15bae1dde5747b904aef74c08e69$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl29$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl29$$InternalSyntheticApiModelOutline$2$a095b61c286ceceac8def73d5e6718b1c88d3a7c271856e1785f04ff68e4f101$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.i$k:
    androidx.core.view.WindowInsetsCompat CONSUMED -> q
    1:1:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroid/view/WindowInsets;)V"}
    2:2:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/view/i;Landroidx/core/view/i$k;)V"}
    1:1:void copyRootViewBounds(android.view.View):0:0 -> d
    1:1:androidx.core.graphics.Insets getInsets(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/core/graphics/e;"}
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$2$7c95e3cf87277cc9e90a5ee20212fa74552db1fed9bbd019afd18ee3ae455fac$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets androidx.core.view.WindowInsetsCompat$Impl30$$InternalSyntheticApiModelOutline$2$f14b93863108dc0e407f09f9bde286f72e692d6f9a2448abe9587c9d544bc2bf$0.m(android.view.WindowInsets,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.i$m:
    1:1:int captionBar():0:0 -> a
    1:1:int displayCutout():0:0 -> b
    1:1:int ime():0:0 -> c
    1:1:int indexOf(int):0:0 -> d
    1:1:int mandatorySystemGestures():0:0 -> e
    1:1:int navigationBars():0:0 -> f
    1:1:int statusBars():0:0 -> g
    1:1:int systemGestures():0:0 -> h
    1:1:int tappableElement():0:0 -> i
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.i$n:
    1:1:int toPlatformType(int):0:0 -> a
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline2 -> androidx.core.view.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$2.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline3 -> androidx.core.view.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$3.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline4 -> androidx.core.view.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$4.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline5 -> androidx.core.view.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$5.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline6 -> androidx.core.view.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$6.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsCompat$TypeImpl30$$ExternalSyntheticApiModelOutline7 -> androidx.core.view.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.core.view.WindowInsetsCompat$TypeImpl30$$InternalSyntheticApiModelOutline$3$b589ba04317a3b31c3fe73f4bd3f53d07e89d65fd2d5125cc106790ac25bedc3$7.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat -> androidx.core.view.f0:
    androidx.core.view.WindowInsetsControllerCompat$Impl mImpl -> a
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
androidx.core.view.WindowInsetsControllerCompat$Impl -> androidx.core.view.f0$e:
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
androidx.core.view.WindowInsetsControllerCompat$Impl20 -> androidx.core.view.f0$a:
    android.view.Window mWindow -> a
    androidx.core.view.SoftwareKeyboardControllerCompat mSoftwareKeyboardControllerCompat -> b
    1:1:void setSystemUiFlag(int):0:0 -> c
    1:1:void setWindowFlag(int):0:0 -> d
    1:1:void unsetSystemUiFlag(int):0:0 -> e
    1:1:void unsetWindowFlag(int):0:0 -> f
androidx.core.view.WindowInsetsControllerCompat$Impl23 -> androidx.core.view.f0$b:
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
androidx.core.view.WindowInsetsControllerCompat$Impl26 -> androidx.core.view.f0$c:
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
androidx.core.view.WindowInsetsControllerCompat$Impl30 -> androidx.core.view.f0$d:
    androidx.core.view.WindowInsetsControllerCompat mCompatController -> a
    android.view.WindowInsetsController mInsetsController -> b
    androidx.core.view.SoftwareKeyboardControllerCompat mSoftwareKeyboardControllerCompat -> c
    androidx.collection.SimpleArrayMap mListeners -> d
    android.view.Window mWindow -> e
    1:1:void <init>(android.view.Window,androidx.core.view.WindowInsetsControllerCompat,androidx.core.view.SoftwareKeyboardControllerCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/Window;Landroidx/core/view/f0;Landroidx/core/view/e;)V"}
    2:2:void <init>(android.view.WindowInsetsController,androidx.core.view.WindowInsetsControllerCompat,androidx.core.view.SoftwareKeyboardControllerCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsetsController;Landroidx/core/view/f0;Landroidx/core/view/e;)V"}
    1:1:void setAppearanceLightNavigationBars(boolean):0:0 -> a
    1:1:void setAppearanceLightStatusBars(boolean):0:0 -> b
    1:1:void setSystemUiFlag(int):0:0 -> c
    1:1:void unsetSystemUiFlag(int):0:0 -> d
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline0 -> androidx.core.view.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsetsController androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$2$2c36919335bf4dcdedc394bc02623914235fa7fa3145ee8adfaceb2f1be0ab75$0.m(android.view.Window):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.WindowInsetsControllerCompat$Impl30$$ExternalSyntheticApiModelOutline1 -> androidx.core.view.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.view.WindowInsetsControllerCompat$Impl30$$InternalSyntheticApiModelOutline$2$d6fb3db9c12ac2c8a355cda7e3de6180a104013a10776c246d439dbb950c3f8b$0.m(android.view.WindowInsetsController,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.view.autofill.AutofillIdCompat -> h.a:
androidx.core.view.inputmethod.EditorInfoCompat -> i.b:
    java.lang.String[] EMPTY_STRING_ARRAY -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]):0:0 -> a
androidx.core.view.inputmethod.EditorInfoCompat$$ExternalSyntheticApiModelOutline0 -> i.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.core.view.inputmethod.EditorInfoCompat$$InternalSyntheticApiModelOutline$1$146b49169c1e54fa61ed4a40cd4c1de6db19541b4186361dd99f2554fe43f4a5$0.m(android.view.inputmethod.EditorInfo,java.lang.String[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.exifinterface.media.ExifInterface -> androidx.exifinterface.media.a:
    byte[] JPEG_SIGNATURE -> A
    byte[] HEIF_TYPE_FTYP -> B
    byte[] HEIF_BRAND_MIF1 -> C
    byte[] HEIF_BRAND_HEIC -> D
    byte[] ORF_MAKER_NOTE_HEADER_1 -> E
    byte[] ORF_MAKER_NOTE_HEADER_2 -> F
    byte[] PNG_SIGNATURE -> G
    byte[] PNG_CHUNK_TYPE_EXIF -> H
    byte[] PNG_CHUNK_TYPE_IHDR -> I
    byte[] PNG_CHUNK_TYPE_IEND -> J
    byte[] WEBP_SIGNATURE_1 -> K
    byte[] WEBP_SIGNATURE_2 -> L
    byte[] WEBP_CHUNK_TYPE_EXIF -> M
    byte[] WEBP_VP8_SIGNATURE -> N
    byte[] WEBP_CHUNK_TYPE_VP8X -> O
    byte[] WEBP_CHUNK_TYPE_VP8L -> P
    byte[] WEBP_CHUNK_TYPE_VP8 -> Q
    byte[] WEBP_CHUNK_TYPE_ANIM -> R
    byte[] WEBP_CHUNK_TYPE_ANMF -> S
    java.text.SimpleDateFormat sFormatterPrimary -> T
    java.text.SimpleDateFormat sFormatterSecondary -> U
    java.lang.String[] IFD_FORMAT_NAMES -> V
    int[] IFD_FORMAT_BYTES_PER_FORMAT -> W
    byte[] EXIF_ASCII_PREFIX -> X
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS -> Y
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS -> Z
    java.lang.String mFilename -> a
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_GPS_TAGS -> a0
    java.io.FileDescriptor mSeekableFileDescriptor -> b
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS -> b0
    android.content.res.AssetManager$AssetInputStream mAssetInputStream -> c
    androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS -> c0
    int mMimeType -> d
    androidx.exifinterface.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE -> d0
    boolean mIsExifDataOnly -> e
    androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS -> e0
    java.util.HashMap[] mAttributes -> f
    androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS -> f0
    java.util.Set mAttributesOffsets -> g
    androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS -> g0
    java.nio.ByteOrder mExifByteOrder -> h
    androidx.exifinterface.media.ExifInterface$ExifTag[] PEF_TAGS -> h0
    boolean mHasThumbnail -> i
    androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS -> i0
    boolean mHasThumbnailStrips -> j
    androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS -> j0
    boolean mAreThumbnailStripsConsecutive -> k
    java.util.HashMap[] sExifTagMapsForReading -> k0
    int mThumbnailOffset -> l
    java.util.HashMap[] sExifTagMapsForWriting -> l0
    int mThumbnailLength -> m
    java.util.HashSet sTagSetForCompatibility -> m0
    byte[] mThumbnailBytes -> n
    java.util.HashMap sExifPointerTagMap -> n0
    int mThumbnailCompression -> o
    java.nio.charset.Charset ASCII -> o0
    int mOffsetToExifData -> p
    byte[] IDENTIFIER_EXIF_APP1 -> p0
    int mOrfMakerNoteOffset -> q
    byte[] IDENTIFIER_XMP_APP1 -> q0
    int mOrfThumbnailOffset -> r
    java.util.regex.Pattern NON_ZERO_TIME_PATTERN -> r0
    int mOrfThumbnailLength -> s
    java.util.regex.Pattern GPS_TIMESTAMP_PATTERN -> s0
    boolean mXmpIsFromSeparateMarker -> t
    java.util.regex.Pattern DATETIME_PRIMARY_FORMAT_PATTERN -> t0
    boolean DEBUG -> u
    java.util.regex.Pattern DATETIME_SECONDARY_FORMAT_PATTERN -> u0
    java.util.List ROTATION_ORDER -> v
    java.util.List FLIPPED_ROTATION_ORDER -> w
    int[] BITS_PER_SAMPLE_RGB -> x
    int[] BITS_PER_SAMPLE_GREYSCALE_1 -> y
    int[] BITS_PER_SAMPLE_GREYSCALE_2 -> z
    1:1:void <init>(java.io.InputStream):0:0 -> <init>
    2:2:void <init>(java.io.InputStream,int):0:0 -> <init>
    1:1:boolean isThumbnail(java.util.HashMap):0:0 -> A
    1:1:boolean isWebpFormat(byte[]):0:0 -> B
    1:1:void loadAttributes(java.io.InputStream):0:0 -> C
    1:1:void parseTiffHeaders(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)V"}
    1:1:void printAttributes():0:0 -> E
    1:1:java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)Ljava/nio/ByteOrder;"}
    1:1:void readExifSegment(byte[],int):0:0 -> G
    1:1:void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;I)V"}
    1:1:void replaceInvalidTags(int,java.lang.String,java.lang.String):0:0 -> I
    1:1:void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;I)V"}
    1:1:void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)V"}
    1:1:boolean shouldSupportSeek(int):0:0 -> L
    1:1:void swapBasedOnImageSize(int,int):0:0 -> M
    1:1:void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream,int):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;I)V"}
    1:1:void validateImages():0:0 -> O
    1:1:void addDefaultValuesForCompatibility():0:0 -> a
    1:1:java.lang.String getAttribute(java.lang.String):0:0 -> b
    1:1:int getAttributeInt(java.lang.String,int):0:0 -> c
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/exifinterface/media/a$c;"}
    1:1:void getHeifAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;)V"}
    1:1:void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;II)V"}
    1:1:int getMimeType(java.io.BufferedInputStream):0:0 -> g
    1:1:void getOrfAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;)V"}
    1:1:void getPngAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)V"}
    1:1:void getRafAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)V"}
    1:1:void getRawAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;)V"}
    1:1:int getRotationDegrees():0:0 -> l
    1:1:void getRw2Attributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;)V"}
    1:1:void getStandaloneAttributes(androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$f;)V"}
    1:1:void getWebpAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;)V"}
    1:1:void handleThumbnailFromJfif(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;Ljava/util/HashMap;)V"}
    1:1:void handleThumbnailFromStrips(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$b;Ljava/util/HashMap;)V"}
    1:1:boolean isExifDataOnly(java.io.BufferedInputStream):0:0 -> r
    1:1:boolean isHeifFormat(byte[]):0:0 -> s
    1:1:boolean isJpegFormat(byte[]):0:0 -> t
    1:1:boolean isOrfFormat(byte[]):0:0 -> u
    1:1:boolean isPngFormat(byte[]):0:0 -> v
    1:1:boolean isRafFormat(byte[]):0:0 -> w
    1:1:boolean isRw2Format(byte[]):0:0 -> x
    1:1:boolean isSeekableFD(java.io.FileDescriptor):0:0 -> y
    1:1:boolean isSupportedDataType(java.util.HashMap):0:0 -> z
androidx.exifinterface.media.ExifInterface$1 -> androidx.exifinterface.media.a$a:
    long mPosition -> f
    androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream val$in -> g
    androidx.exifinterface.media.ExifInterface this$0 -> h
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream -> androidx.exifinterface.media.a$b:
    java.io.DataInputStream mDataInputStream -> f
    java.nio.ByteOrder mByteOrder -> g
    int mPosition -> h
    byte[] mSkipBuffer -> i
    java.nio.ByteOrder LITTLE_ENDIAN -> j
    java.nio.ByteOrder BIG_ENDIAN -> k
    1:1:void <init>(java.io.InputStream):0:0 -> <init>
    2:2:void <init>(java.io.InputStream,java.nio.ByteOrder):0:0 -> <init>
    3:3:void <init>(byte[]):0:0 -> <init>
    1:1:int position():0:0 -> a
    1:1:long readUnsignedInt():0:0 -> b
    1:1:void setByteOrder(java.nio.ByteOrder):0:0 -> c
    1:1:void skipFully(int):0:0 -> d
    1:1:int read():0:0 -> read
    2:2:int read(byte[],int,int):0:0 -> read
    1:1:void readFully(byte[]):0:0 -> readFully
    2:2:void readFully(byte[],int,int):0:0 -> readFully
androidx.exifinterface.media.ExifInterface$ExifAttribute -> androidx.exifinterface.media.a$c:
    int format -> a
    int numberOfComponents -> b
    long bytesOffset -> c
    byte[] bytes -> d
    1:1:void <init>(int,int,long,byte[]):0:0 -> <init>
    2:2:void <init>(int,int,byte[]):0:0 -> <init>
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLjava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([JLjava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational,java.nio.ByteOrder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/exifinterface/media/a$e;Ljava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/exifinterface/media/a$e;Ljava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"([ILjava/nio/ByteOrder;)Landroidx/exifinterface/media/a$c;"}
    1:1:double getDoubleValue(java.nio.ByteOrder):0:0 -> h
    1:1:int getIntValue(java.nio.ByteOrder):0:0 -> i
    1:1:java.lang.String getStringValue(java.nio.ByteOrder):0:0 -> j
    1:1:java.lang.Object getValue(java.nio.ByteOrder):0:0 -> k
androidx.exifinterface.media.ExifInterface$ExifTag -> androidx.exifinterface.media.a$d:
    int number -> a
    java.lang.String name -> b
    int primaryFormat -> c
    int secondaryFormat -> d
    1:1:void <init>(java.lang.String,int,int):0:0 -> <init>
    2:2:void <init>(java.lang.String,int,int,int):0:0 -> <init>
    1:1:boolean isFormatCompatible(int):0:0 -> a
androidx.exifinterface.media.ExifInterface$Rational -> androidx.exifinterface.media.a$e:
    long numerator -> a
    long denominator -> b
    1:1:double calculate():0:0 -> a
androidx.exifinterface.media.ExifInterface$SeekableByteOrderedDataInputStream -> androidx.exifinterface.media.a$f:
    1:1:void <init>(java.io.InputStream):0:0 -> <init>
    2:2:void <init>(byte[]):0:0 -> <init>
    1:1:void seek(long):0:0 -> e
androidx.exifinterface.media.ExifInterfaceUtils -> androidx.exifinterface.media.b:
    1:1:java.lang.String byteArrayToHexString(byte[]):0:0 -> a
    1:1:long[] convertToLongArray(java.lang.Object):0:0 -> b
    1:1:boolean startsWith(byte[],byte[]):0:0 -> c
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl -> androidx.exifinterface.media.b$a:
    1:1:void close(java.io.FileDescriptor):0:0 -> a
    1:1:java.io.FileDescriptor dup(java.io.FileDescriptor):0:0 -> b
    1:1:long lseek(java.io.FileDescriptor,long,int):0:0 -> c
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl -> androidx.exifinterface.media.b$b:
    1:1:void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource):0:0 -> a
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.a:
    java.util.Map mCallbackMap -> a
    java.util.Map mHasLifecycleMethods -> b
    androidx.lifecycle.ClassesInfoCache sInstance -> c
    1:1:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;[Ljava/lang/reflect/Method;)Landroidx/lifecycle/a$a;"}
    1:1:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> b
    1:1:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Landroidx/lifecycle/a$a;"}
    1:1:boolean hasLifecycleMethods(java.lang.Class):0:0 -> d
    1:1:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;Landroidx/lifecycle/a$b;Landroidx/lifecycle/h$a;Ljava/lang/Class;)V"}
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.a$a:
    java.util.Map mEventToHandlers -> a
    java.util.Map mHandlerToEvent -> b
    1:1:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;Ljava/lang/Object;)V"}
    1:1:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;Ljava/lang/Object;)V"}
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.a$b:
    int mCallType -> a
    java.lang.reflect.Method mMethod -> b
    1:1:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;Ljava/lang/Object;)V"}
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.b:
    androidx.lifecycle.GeneratedAdapter[] generatedAdapters -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
androidx.lifecycle.DefaultLifecycleObserver -> androidx.lifecycle.d:
    void onResume(androidx.lifecycle.LifecycleOwner) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    void onDestroy(androidx.lifecycle.LifecycleOwner) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    void onCreate(androidx.lifecycle.LifecycleOwner) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    void onPause(androidx.lifecycle.LifecycleOwner) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    void onStop(androidx.lifecycle.LifecycleOwner) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    void onStart(androidx.lifecycle.LifecycleOwner) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
androidx.lifecycle.DefaultLifecycleObserver$-CC -> androidx.lifecycle.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onCreate(androidx.lifecycle.LifecycleOwner):0:0 -> a
    3:6:void $default$onCreate(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/l;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onDestroy(androidx.lifecycle.LifecycleOwner):0:0 -> b
    3:6:void $default$onDestroy(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/l;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onPause(androidx.lifecycle.LifecycleOwner):0:0 -> c
    3:6:void $default$onPause(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/l;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onStart(androidx.lifecycle.LifecycleOwner):0:0 -> d
    3:6:void $default$onStart(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/l;)V"}
    3:6:void androidx.lifecycle.DefaultLifecycleObserver.onStop(androidx.lifecycle.LifecycleOwner):0:0 -> e
    3:6:void $default$onStop(androidx.lifecycle.DefaultLifecycleObserver,androidx.lifecycle.LifecycleOwner):0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;Landroidx/lifecycle/l;)V"}
androidx.lifecycle.DefaultLifecycleObserverAdapter -> androidx.lifecycle.e:
    androidx.lifecycle.DefaultLifecycleObserver defaultLifecycleObserver -> a
    androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver -> b
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
androidx.lifecycle.DefaultLifecycleObserverAdapter$WhenMappings -> androidx.lifecycle.e$a:
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.f:
androidx.lifecycle.GeneratedAdapter -> androidx.lifecycle.g:
androidx.lifecycle.Lifecycle -> androidx.lifecycle.h:
    java.util.concurrent.atomic.AtomicReference internalScopeRef -> a
    void addObserver(androidx.lifecycle.LifecycleObserver) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.h$a:
    1:1:androidx.lifecycle.Lifecycle$Event[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Landroidx/lifecycle/h$a;"}
    1:1:androidx.lifecycle.Lifecycle$State getTargetState():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h$b;"}
androidx.lifecycle.Lifecycle$Event$Companion -> androidx.lifecycle.h$a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$b;)Landroidx/lifecycle/h$a;"}
    1:1:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$b;)Landroidx/lifecycle/h$a;"}
androidx.lifecycle.Lifecycle$Event$Companion$WhenMappings -> androidx.lifecycle.h$a$a$a:
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.Lifecycle$Event$WhenMappings -> androidx.lifecycle.h$a$b:
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.h$b:
    androidx.lifecycle.Lifecycle$State DESTROYED -> f
    androidx.lifecycle.Lifecycle$State INITIALIZED -> g
    androidx.lifecycle.Lifecycle$State CREATED -> h
    androidx.lifecycle.Lifecycle$State STARTED -> i
    androidx.lifecycle.Lifecycle$State RESUMED -> j
    androidx.lifecycle.Lifecycle$State[] $VALUES -> k
    1:1:androidx.lifecycle.Lifecycle$State[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Landroidx/lifecycle/h$b;"}
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.i:
    androidx.lifecycle.LifecycleDispatcher INSTANCE -> a
    java.util.concurrent.atomic.AtomicBoolean initialized -> b
    1:1:void init(android.content.Context):0:0 -> a
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.i$a:
androidx.lifecycle.LifecycleEventObserver -> androidx.lifecycle.j:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
androidx.lifecycle.LifecycleObserver -> androidx.lifecycle.k:
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.l:
    androidx.lifecycle.Lifecycle getLifecycle() -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h;"}
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.m:
    boolean enforceMainThread -> b
    androidx.arch.core.internal.FastSafeIterableMap observerMap -> c
    androidx.lifecycle.Lifecycle$State state -> d
    java.lang.ref.WeakReference lifecycleOwner -> e
    int addingObserverCounter -> f
    boolean handlingEvent -> g
    boolean newEventOccurred -> h
    java.util.ArrayList parentStates -> i
    kotlinx.coroutines.flow.MutableStateFlow _currentStateFlow -> j
    androidx.lifecycle.LifecycleRegistry$Companion Companion -> k
    1:1:void <init>(androidx.lifecycle.LifecycleOwner):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    2:2:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Z)V"}
    1:1:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)V"}
    1:1:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/k;)Landroidx/lifecycle/h$b;"}
    1:1:void enforceMainThreadIfNeeded(java.lang.String):0:0 -> d
    1:1:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:androidx.lifecycle.Lifecycle$State getCurrentState():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h$b;"}
    1:1:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$a;)V"}
    1:1:boolean isSynced():0:0 -> h
    1:1:void moveToState(androidx.lifecycle.Lifecycle$State):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$b;)V"}
    1:1:void popParentState():0:0 -> j
    1:1:void pushParentState(androidx.lifecycle.Lifecycle$State):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$b;)V"}
    1:1:void sync():0:0 -> l
androidx.lifecycle.LifecycleRegistry$Companion -> androidx.lifecycle.m$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:androidx.lifecycle.Lifecycle$State min$lifecycle_runtime_release(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$b;Landroidx/lifecycle/h$b;)Landroidx/lifecycle/h$b;"}
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.m$b:
    androidx.lifecycle.Lifecycle$State state -> a
    androidx.lifecycle.LifecycleEventObserver lifecycleObserver -> b
    1:1:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
    1:1:androidx.lifecycle.Lifecycle$State getState():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h$b;"}
androidx.lifecycle.Lifecycling -> androidx.lifecycle.o:
    androidx.lifecycle.Lifecycling INSTANCE -> a
    java.util.Map callbackCache -> b
    java.util.Map classToAdapters -> c
    1:1:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/reflect/Constructor;Ljava/lang/Object;)Landroidx/lifecycle/g;"}
    1:1:java.lang.reflect.Constructor generatedConstructor(java.lang.Class):0:0 -> b
    1:1:java.lang.String getAdapterName(java.lang.String):0:0 -> c
    1:1:int getObserverConstructorType(java.lang.Class):0:0 -> d
    1:1:boolean isLifecycleParent(java.lang.Class):0:0 -> e
    1:1:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Landroidx/lifecycle/j;"}
    1:1:int resolveObserverCallbackType(java.lang.Class):0:0 -> g
androidx.lifecycle.Lifecycling$$ExternalSyntheticThrowCCEIfNotNull0 -> androidx.lifecycle.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.lifecycle.Lifecycling$$InternalSyntheticThrowCCEIfNotNull$15$9f5d826c7cb3654602020ecf8a22286878ec845e76a62dd23dd66ab85161c0f5$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.p:
    java.util.Map calledMethods -> a
androidx.lifecycle.OnLifecycleEvent -> androidx.lifecycle.q:
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
    1:1:java.util.List dependencies():0:0 -> a
    1:1:java.lang.Object create(android.content.Context):0:0 -> b
    1:1:androidx.lifecycle.LifecycleOwner create(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/lifecycle/l;"}
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.s:
    int startedCounter -> a
    int resumedCounter -> b
    boolean pauseSent -> c
    boolean stopSent -> d
    android.os.Handler handler -> e
    androidx.lifecycle.LifecycleRegistry registry -> f
    java.lang.Runnable delayedPauseRunnable -> g
    androidx.lifecycle.ReportFragment$ActivityInitializationListener initializationListener -> h
    androidx.lifecycle.ProcessLifecycleOwner$Companion Companion -> i
    androidx.lifecycle.ProcessLifecycleOwner newInstance -> j
    1:1:void $r8$lambda$8RHFmaqBQY2MpEYiTr99NwPTGEU(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/s;)V"}
    1:1:androidx.lifecycle.ReportFragment$ActivityInitializationListener access$getInitializationListener$p(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/s;)Landroidx/lifecycle/u$a;"}
    1:1:androidx.lifecycle.ProcessLifecycleOwner access$getNewInstance$cp():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/s;"}
    1:1:void activityPaused$lifecycle_process_release():0:0 -> d
    1:1:void activityResumed$lifecycle_process_release():0:0 -> e
    1:1:void activityStarted$lifecycle_process_release():0:0 -> f
    1:1:void activityStopped$lifecycle_process_release():0:0 -> g
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h;"}
    1:1:void attach$lifecycle_process_release(android.content.Context):0:0 -> i
    1:1:void delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/s;)V"}
    1:1:void dispatchPauseIfNeeded$lifecycle_process_release():0:0 -> k
    1:1:void dispatchStopIfNeeded$lifecycle_process_release():0:0 -> l
    1:1:androidx.lifecycle.LifecycleOwner get():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/l;"}
androidx.lifecycle.ProcessLifecycleOwner$$ExternalSyntheticLambda0 -> androidx.lifecycle.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.lifecycle.ProcessLifecycleOwner androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.f$0 -> f
    1:1:void androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.<init>(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/s;)V"}
    1:1:void androidx.lifecycle.ProcessLifecycleOwner$$InternalSyntheticLambda$1$0631a20a71004f441aa1085954970e5d87a340529f105a0cdcc90b7c5a541c69$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl -> androidx.lifecycle.s$a:
    androidx.lifecycle.ProcessLifecycleOwner$Api29Impl INSTANCE -> a
    1:1:void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> a
androidx.lifecycle.ProcessLifecycleOwner$Companion -> androidx.lifecycle.s$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:androidx.lifecycle.LifecycleOwner get():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/l;"}
    1:1:void init$lifecycle_process_release(android.content.Context):0:0 -> b
androidx.lifecycle.ProcessLifecycleOwner$attach$1 -> androidx.lifecycle.s$c:
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 -> androidx.lifecycle.s$c$a:
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 -> androidx.lifecycle.s$d:
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> a
    1:1:void onCreate():0:0 -> a
    1:1:void onResume():0:0 -> b
    1:1:void onStart():0:0 -> c
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.t:
    java.lang.Object mWrapped -> a
    androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
androidx.lifecycle.ReportFragment -> androidx.lifecycle.u:
    androidx.lifecycle.ReportFragment$ActivityInitializationListener processListener -> a
    androidx.lifecycle.ReportFragment$Companion Companion -> b
    1:1:void dispatch(androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/h$a;)V"}
    1:1:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u$a;)V"}
    1:1:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u$a;)V"}
    1:1:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u$a;)V"}
    1:1:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/u$a;)V"}
androidx.lifecycle.ReportFragment$ActivityInitializationListener -> androidx.lifecycle.u$a:
    void onCreate() -> a
    void onResume() -> b
    void onStart() -> c
androidx.lifecycle.ReportFragment$Companion -> androidx.lifecycle.u$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:void dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/h$a;)V"}
    1:1:androidx.lifecycle.ReportFragment get(android.app.Activity):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Landroidx/lifecycle/u;"}
    1:1:void injectIfNeededIn(android.app.Activity):0:0 -> c
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.u$c:
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion -> androidx.lifecycle.u$c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:void registerIn(android.app.Activity):0:0 -> a
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$ExternalSyntheticApiModelOutline0 -> androidx.lifecycle.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$InternalSyntheticApiModelOutline$1$697f715c7301ae348f7ba2ab082eb37b64d67d01fe586b84528231ac2d1ce45b$0.m(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.w:
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;Landroidx/lifecycle/h$a;)V"}
androidx.media3.common.AdPlaybackState -> j.a:
    java.lang.Object adsId -> a
    int adGroupCount -> b
    long adResumePositionUs -> c
    long contentDurationUs -> d
    int removedAdGroupCount -> e
    androidx.media3.common.AdPlaybackState$AdGroup[] adGroups -> f
    androidx.media3.common.AdPlaybackState NONE -> g
    androidx.media3.common.AdPlaybackState$AdGroup REMOVED_AD_GROUP -> h
    java.lang.String FIELD_AD_GROUPS -> i
    java.lang.String FIELD_AD_RESUME_POSITION_US -> j
    java.lang.String FIELD_CONTENT_DURATION_US -> k
    java.lang.String FIELD_REMOVED_AD_GROUP_COUNT -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object,androidx.media3.common.AdPlaybackState$AdGroup[],long,long,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;[Lj/a$a;JJI)V"}
    1:1:androidx.media3.common.AdPlaybackState$AdGroup getAdGroup(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/a$a;"}
    1:1:int getAdGroupIndexAfterPositionUs(long,long):0:0 -> b
    1:1:int getAdGroupIndexForPositionUs(long,long):0:0 -> c
    1:1:boolean isLivePostrollPlaceholder(int):0:0 -> d
    1:1:boolean isPositionBeforeAdGroup(long,long,int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.common.AdPlaybackState$AdGroup -> j.a$a:
    long timeUs -> a
    int count -> b
    int originalCount -> c
    android.net.Uri[] uris -> d
    androidx.media3.common.MediaItem[] mediaItems -> e
    int[] states -> f
    long[] durationsUs -> g
    long contentResumeOffsetUs -> h
    boolean isServerSideInserted -> i
    java.lang.String FIELD_TIME_US -> j
    java.lang.String FIELD_COUNT -> k
    java.lang.String FIELD_URIS -> l
    java.lang.String FIELD_STATES -> m
    java.lang.String FIELD_DURATIONS_US -> n
    java.lang.String FIELD_CONTENT_RESUME_OFFSET_US -> o
    java.lang.String FIELD_IS_SERVER_SIDE_INSERTED -> p
    java.lang.String FIELD_ORIGINAL_COUNT -> q
    java.lang.String FIELD_MEDIA_ITEMS -> r
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long):0:0 -> <init>
    2:2:void <init>(long,int,int,int[],androidx.media3.common.MediaItem[],long[],long,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JII[I[Lj/u;[JJZ)V"}
    1:1:boolean access$000(androidx.media3.common.AdPlaybackState$AdGroup):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/a$a;)Z"}
    1:1:long[] copyDurationsUsWithSpaceForAdCount(long[],int):0:0 -> b
    1:1:int[] copyStatesWithSpaceForAdCount(int[],int):0:0 -> c
    1:1:int getFirstAdIndexToPlay():0:0 -> d
    1:1:int getNextAdIndexToPlay(int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:boolean hasUnplayedAds():0:0 -> f
    1:1:boolean isLivePostrollPlaceholder():0:0 -> g
    1:1:boolean shouldPlayAdGroup():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:androidx.media3.common.AdPlaybackState$AdGroup withAdCount(int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/a$a;"}
androidx.media3.common.AudioAttributes -> j.b:
    int contentType -> a
    int flags -> b
    int usage -> c
    int allowedCapturePolicy -> d
    int spatializationBehavior -> e
    androidx.media3.common.AudioAttributes$AudioAttributesV21 audioAttributesV21 -> f
    androidx.media3.common.AudioAttributes DEFAULT -> g
    java.lang.String FIELD_CONTENT_TYPE -> h
    java.lang.String FIELD_FLAGS -> i
    java.lang.String FIELD_USAGE -> j
    java.lang.String FIELD_ALLOWED_CAPTURE_POLICY -> k
    java.lang.String FIELD_SPATIALIZATION_BEHAVIOR -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int,int,int):0:0 -> <init>
    2:2:void <init>(int,int,int,int,int,androidx.media3.common.AudioAttributes$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIIIILj/b$a;)V"}
    1:1:androidx.media3.common.AudioAttributes$AudioAttributesV21 getAudioAttributesV21():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/b$d;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.AudioAttributes$1 -> j.b$a:
androidx.media3.common.AudioAttributes$Api29 -> j.b$b:
    1:1:void setAllowedCapturePolicy(android.media.AudioAttributes$Builder,int):0:0 -> a
androidx.media3.common.AudioAttributes$Api29$$ExternalSyntheticApiModelOutline0 -> j.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioAttributes$Builder androidx.media3.common.AudioAttributes$Api29$$InternalSyntheticApiModelOutline$8$17d2f728b01840308c57dfddb46bf880271c6b94f75682e778a29de535bd0d10$0.m(android.media.AudioAttributes$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.AudioAttributes$Api32 -> j.b$c:
    1:1:void setSpatializationBehavior(android.media.AudioAttributes$Builder,int):0:0 -> a
androidx.media3.common.AudioAttributes$Api32$$ExternalSyntheticApiModelOutline0 -> j.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioAttributes$Builder androidx.media3.common.AudioAttributes$Api32$$InternalSyntheticApiModelOutline$8$a81f9bce0bba6ff984cee5e5e6175fe767a4773be5753ee6b14e4b6bd9f9f78b$0.m(android.media.AudioAttributes$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.AudioAttributes$AudioAttributesV21 -> j.b$d:
    android.media.AudioAttributes audioAttributes -> a
    1:1:void <init>(androidx.media3.common.AudioAttributes):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    2:2:void <init>(androidx.media3.common.AudioAttributes,androidx.media3.common.AudioAttributes$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Lj/b$a;)V"}
androidx.media3.common.AudioAttributes$Builder -> j.b$e:
    int contentType -> a
    int flags -> b
    int usage -> c
    int allowedCapturePolicy -> d
    int spatializationBehavior -> e
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.common.AudioAttributes build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/b;"}
    1:1:androidx.media3.common.AudioAttributes$Builder setContentType(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/b$e;"}
androidx.media3.common.AuxEffectInfo -> j.e:
    int effectId -> a
    float sendLevel -> b
    1:1:void <init>(int,float):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.BasePlayer -> j.f:
    androidx.media3.common.Timeline$Window window -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void seekTo(long):0:0 -> G
    1:1:boolean hasNextMediaItem():0:0 -> H
    1:1:void setMediaItem(androidx.media3.common.MediaItem):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:void seekToDefaultPosition():0:0 -> M
    1:1:boolean isCurrentMediaItemLive():0:0 -> S
    void seekTo(int,long,int,boolean) -> T
    1:1:void seekToCurrentItem(long,int):0:0 -> U
    1:1:void seekToDefaultPositionInternal(int,int):0:0 -> V
    1:1:void setMediaItems(java.util.List):0:0 -> W
    1:1:long getContentDuration():0:0 -> b
    1:1:int getNextMediaItemIndex():0:0 -> c
    1:1:void pause():0:0 -> d
    1:1:int getPreviousMediaItemIndex():0:0 -> e
    1:1:int getRepeatModeForNavigation():0:0 -> f
    1:1:void play():0:0 -> k
    1:1:boolean hasPreviousMediaItem():0:0 -> q
    1:1:boolean isCurrentMediaItemDynamic():0:0 -> u
    1:1:boolean isCurrentMediaItemSeekable():0:0 -> y
androidx.media3.common.C -> j.g:
    java.util.UUID UUID_NIL -> a
    java.util.UUID COMMON_PSSH_UUID -> b
    java.util.UUID CLEARKEY_UUID -> c
    java.util.UUID WIDEVINE_UUID -> d
    java.util.UUID PLAYREADY_UUID -> e
    1:1:void <clinit>():0:0 -> <clinit>
androidx.media3.common.ColorInfo -> j.h:
    int colorSpace -> a
    int colorRange -> b
    int colorTransfer -> c
    byte[] hdrStaticInfo -> d
    int lumaBitdepth -> e
    int chromaBitdepth -> f
    int hashCode -> g
    androidx.media3.common.ColorInfo SDR_BT709_LIMITED -> h
    androidx.media3.common.ColorInfo SRGB_BT709_FULL -> i
    java.lang.String FIELD_COLOR_SPACE -> j
    java.lang.String FIELD_COLOR_RANGE -> k
    java.lang.String FIELD_COLOR_TRANSFER -> l
    java.lang.String FIELD_HDR_STATIC_INFO -> m
    java.lang.String FIELD_LUMA_BITDEPTH -> n
    java.lang.String FIELD_CHROMA_BITDEPTH -> o
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int,byte[],int,int):0:0 -> <init>
    2:2:void <init>(int,int,int,byte[],int,int,androidx.media3.common.ColorInfo$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(III[BIILj/h$a;)V"}
    1:1:androidx.media3.common.ColorInfo$Builder buildUpon():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/h$b;"}
    1:1:java.lang.String chromaBitdepthToString(int):0:0 -> b
    1:1:java.lang.String colorRangeToString(int):0:0 -> c
    1:1:java.lang.String colorSpaceToString(int):0:0 -> d
    1:1:java.lang.String colorTransferToString(int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:boolean isBitdepthValid():0:0 -> f
    1:1:boolean isDataSpaceValid():0:0 -> g
    1:1:boolean isEquivalentToAssumedSdrDefault(androidx.media3.common.ColorInfo):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/h;)Z"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isValid():0:0 -> i
    1:1:int isoColorPrimariesToColorSpace(int):0:0 -> j
    1:1:int isoTransferCharacteristicsToColorTransfer(int):0:0 -> k
    1:1:java.lang.String lumaBitdepthToString(int):0:0 -> l
    1:1:java.lang.String toLogString():0:0 -> m
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.common.ColorInfo$1 -> j.h$a:
androidx.media3.common.ColorInfo$Builder -> j.h$b:
    int colorSpace -> a
    int colorRange -> b
    int colorTransfer -> c
    byte[] hdrStaticInfo -> d
    int lumaBitdepth -> e
    int chromaBitdepth -> f
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.common.ColorInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/h;)V"}
    3:3:void <init>(androidx.media3.common.ColorInfo,androidx.media3.common.ColorInfo$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/h;Lj/h$a;)V"}
    1:1:androidx.media3.common.ColorInfo build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/h;"}
    1:1:androidx.media3.common.ColorInfo$Builder setChromaBitdepth(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/h$b;"}
    1:1:androidx.media3.common.ColorInfo$Builder setColorRange(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/h$b;"}
    1:1:androidx.media3.common.ColorInfo$Builder setColorSpace(int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/h$b;"}
    1:1:androidx.media3.common.ColorInfo$Builder setColorTransfer(int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/h$b;"}
    1:1:androidx.media3.common.ColorInfo$Builder setHdrStaticInfo(byte[]):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lj/h$b;"}
    1:1:androidx.media3.common.ColorInfo$Builder setLumaBitdepth(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/h$b;"}
androidx.media3.common.DataReader -> j.i:
    int read(byte[],int,int) -> b
androidx.media3.common.DebugViewProvider -> j.k:
    androidx.media3.common.DebugViewProvider NONE -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.media3.common.DebugViewProvider$$ExternalSyntheticLambda0 -> j.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.common.DebugViewProvider$$InternalSyntheticLambda$9$1b4d7b9f980ca2fdf3517c2fb9f0f9c24f166dac255a62a49ef086634eb304b2$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.DeviceInfo -> j.l:
    int playbackType -> a
    int minVolume -> b
    int maxVolume -> c
    java.lang.String routingControllerId -> d
    androidx.media3.common.DeviceInfo UNKNOWN -> e
    java.lang.String FIELD_PLAYBACK_TYPE -> f
    java.lang.String FIELD_MIN_VOLUME -> g
    java.lang.String FIELD_MAX_VOLUME -> h
    java.lang.String FIELD_ROUTING_CONTROLLER_ID -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.DeviceInfo$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l$b;)V"}
    2:2:void <init>(androidx.media3.common.DeviceInfo$Builder,androidx.media3.common.DeviceInfo$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l$b;Lj/l$a;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.DeviceInfo$1 -> j.l$a:
androidx.media3.common.DeviceInfo$Builder -> j.l$b:
    int playbackType -> a
    int minVolume -> b
    int maxVolume -> c
    java.lang.String routingControllerId -> d
    1:1:void <init>(int):0:0 -> <init>
    1:1:int access$100(androidx.media3.common.DeviceInfo$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l$b;)I"}
    1:1:int access$200(androidx.media3.common.DeviceInfo$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l$b;)I"}
    1:1:int access$300(androidx.media3.common.DeviceInfo$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l$b;)I"}
    1:1:java.lang.String access$400(androidx.media3.common.DeviceInfo$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l$b;)Ljava/lang/String;"}
    1:1:androidx.media3.common.DeviceInfo build():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/l;"}
    1:1:androidx.media3.common.DeviceInfo$Builder setMaxVolume(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/l$b;"}
    1:1:androidx.media3.common.DeviceInfo$Builder setMinVolume(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/l$b;"}
androidx.media3.common.DrmInitData -> j.m:
    androidx.media3.common.DrmInitData$SchemeData[] schemeDatas -> f
    int hashCode -> g
    java.lang.String schemeType -> h
    int schemeDataCount -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.util.List):0:0 -> <init>
    3:3:void <init>(java.lang.String,boolean,androidx.media3.common.DrmInitData$SchemeData[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Z[Lj/m$b;)V"}
    4:4:void <init>(java.lang.String,androidx.media3.common.DrmInitData$SchemeData[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;[Lj/m$b;)V"}
    5:5:void <init>(java.util.List):0:0 -> <init>
    6:6:void <init>(androidx.media3.common.DrmInitData$SchemeData[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/m$b;)V"}
    1:1:int compare(java.lang.Object,java.lang.Object):0:0 -> compare
    1:1:int compare(androidx.media3.common.DrmInitData$SchemeData,androidx.media3.common.DrmInitData$SchemeData):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/m$b;Lj/m$b;)I"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean containsSchemeDataWithUuid(java.util.ArrayList,int,java.util.UUID):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:androidx.media3.common.DrmInitData copyWithSchemeType(java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/m;"}
    1:1:androidx.media3.common.DrmInitData createSessionCreationData(androidx.media3.common.DrmInitData,androidx.media3.common.DrmInitData):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/m;Lj/m;)Lj/m;"}
    1:1:androidx.media3.common.DrmInitData$SchemeData get(int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/m$b;"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:androidx.media3.common.DrmInitData merge(androidx.media3.common.DrmInitData):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/m;)Lj/m;"}
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.common.DrmInitData$1 -> j.m$a:
    void <init>() -> <init>
    1:1:androidx.media3.common.DrmInitData createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lj/m;"}
    1:1:androidx.media3.common.DrmInitData[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lj/m;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.common.DrmInitData$SchemeData -> j.m$b:
    int hashCode -> f
    java.util.UUID uuid -> g
    java.lang.String licenseServerUrl -> h
    java.lang.String mimeType -> i
    byte[] data -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.util.UUID,java.lang.String,java.lang.String,byte[]):0:0 -> <init>
    3:3:void <init>(java.util.UUID,java.lang.String,byte[]):0:0 -> <init>
    1:1:boolean canReplace(androidx.media3.common.DrmInitData$SchemeData):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/m$b;)Z"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:androidx.media3.common.DrmInitData$SchemeData copyWithData(byte[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lj/m$b;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:boolean hasData():0:0 -> f
    1:1:boolean matches(java.util.UUID):0:0 -> g
    1:1:int hashCode():0:0 -> hashCode
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.common.DrmInitData$SchemeData$1 -> j.m$b$a:
    void <init>() -> <init>
    1:1:androidx.media3.common.DrmInitData$SchemeData createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lj/m$b;"}
    1:1:androidx.media3.common.DrmInitData$SchemeData[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lj/m$b;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.common.Effect -> j.n:
androidx.media3.common.FileTypes -> j.o:
    1:1:int inferFileTypeFromMimeType(java.lang.String):0:0 -> a
    1:1:int inferFileTypeFromResponseHeaders(java.util.Map):0:0 -> b
    1:1:int inferFileTypeFromUri(android.net.Uri):0:0 -> c
androidx.media3.common.FlagSet -> j.p:
    android.util.SparseBooleanArray flags -> a
    1:1:void <init>(android.util.SparseBooleanArray):0:0 -> <init>
    2:2:void <init>(android.util.SparseBooleanArray,androidx.media3.common.FlagSet$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/SparseBooleanArray;Lj/p$a;)V"}
    1:1:boolean contains(int):0:0 -> a
    1:1:int get(int):0:0 -> b
    1:1:int size():0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.FlagSet$1 -> j.p$a:
androidx.media3.common.FlagSet$Builder -> j.p$b:
    android.util.SparseBooleanArray flags -> a
    boolean buildCalled -> b
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.common.FlagSet$Builder add(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/p$b;"}
    1:1:androidx.media3.common.FlagSet$Builder addAll(androidx.media3.common.FlagSet):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p;)Lj/p$b;"}
    1:1:androidx.media3.common.FlagSet$Builder addAll(int[]):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([I)Lj/p$b;"}
    1:1:androidx.media3.common.FlagSet$Builder addIf(int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Lj/p$b;"}
    1:1:androidx.media3.common.FlagSet build():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/p;"}
androidx.media3.common.Format -> j.q:
    androidx.media3.common.ColorInfo colorInfo -> A
    int channelCount -> B
    int sampleRate -> C
    int pcmEncoding -> D
    int encoderDelay -> E
    int encoderPadding -> F
    int accessibilityChannel -> G
    int cueReplacementBehavior -> H
    int tileCountHorizontal -> I
    int tileCountVertical -> J
    int cryptoType -> K
    int hashCode -> L
    androidx.media3.common.Format DEFAULT -> M
    java.lang.String FIELD_ID -> N
    java.lang.String FIELD_LABEL -> O
    java.lang.String FIELD_LANGUAGE -> P
    java.lang.String FIELD_SELECTION_FLAGS -> Q
    java.lang.String FIELD_ROLE_FLAGS -> R
    java.lang.String FIELD_AVERAGE_BITRATE -> S
    java.lang.String FIELD_PEAK_BITRATE -> T
    java.lang.String FIELD_CODECS -> U
    java.lang.String FIELD_METADATA -> V
    java.lang.String FIELD_CONTAINER_MIME_TYPE -> W
    java.lang.String FIELD_SAMPLE_MIME_TYPE -> X
    java.lang.String FIELD_MAX_INPUT_SIZE -> Y
    java.lang.String FIELD_INITIALIZATION_DATA -> Z
    java.lang.String id -> a
    java.lang.String FIELD_DRM_INIT_DATA -> a0
    java.lang.String label -> b
    java.lang.String FIELD_SUBSAMPLE_OFFSET_US -> b0
    java.util.List labels -> c
    java.lang.String FIELD_WIDTH -> c0
    java.lang.String language -> d
    java.lang.String FIELD_HEIGHT -> d0
    int selectionFlags -> e
    java.lang.String FIELD_FRAME_RATE -> e0
    int roleFlags -> f
    java.lang.String FIELD_ROTATION_DEGREES -> f0
    int averageBitrate -> g
    java.lang.String FIELD_PIXEL_WIDTH_HEIGHT_RATIO -> g0
    int peakBitrate -> h
    java.lang.String FIELD_PROJECTION_DATA -> h0
    int bitrate -> i
    java.lang.String FIELD_STEREO_MODE -> i0
    java.lang.String codecs -> j
    java.lang.String FIELD_COLOR_INFO -> j0
    androidx.media3.common.Metadata metadata -> k
    java.lang.String FIELD_CHANNEL_COUNT -> k0
    java.lang.Object customData -> l
    java.lang.String FIELD_SAMPLE_RATE -> l0
    java.lang.String containerMimeType -> m
    java.lang.String FIELD_PCM_ENCODING -> m0
    java.lang.String sampleMimeType -> n
    java.lang.String FIELD_ENCODER_DELAY -> n0
    int maxInputSize -> o
    java.lang.String FIELD_ENCODER_PADDING -> o0
    int maxNumReorderSamples -> p
    java.lang.String FIELD_ACCESSIBILITY_CHANNEL -> p0
    java.util.List initializationData -> q
    java.lang.String FIELD_CRYPTO_TYPE -> q0
    androidx.media3.common.DrmInitData drmInitData -> r
    java.lang.String FIELD_TILE_COUNT_HORIZONTAL -> r0
    long subsampleOffsetUs -> s
    java.lang.String FIELD_TILE_COUNT_VERTICAL -> s0
    int width -> t
    java.lang.String FIELD_LABELS -> t0
    int height -> u
    float frameRate -> v
    int rotationDegrees -> w
    float pixelWidthHeightRatio -> x
    byte[] projectionData -> y
    int stereoMode -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.Format$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)V"}
    2:2:void <init>(androidx.media3.common.Format$Builder,androidx.media3.common.Format$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;Lj/q$a;)V"}
    1:1:androidx.media3.common.Format$Builder buildUpon():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q$b;"}
    1:1:androidx.media3.common.Format copyWithCryptoType(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q;"}
    1:1:java.lang.String getDefaultLabel(java.util.List,java.lang.String):0:0 -> c
    1:1:int getPixelCount():0:0 -> d
    1:1:boolean initializationDataEquals(androidx.media3.common.Format):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:boolean isLabelPartOfLabels(androidx.media3.common.Format$Builder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Z"}
    1:1:java.lang.String toLogString(androidx.media3.common.Format):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Ljava/lang/String;"}
    1:1:androidx.media3.common.Format withManifestFormatInfo(androidx.media3.common.Format):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.common.Format$1 -> j.q$a:
androidx.media3.common.Format$Builder -> j.q$b:
    int channelCount -> A
    int sampleRate -> B
    int pcmEncoding -> C
    int encoderDelay -> D
    int encoderPadding -> E
    int accessibilityChannel -> F
    int cueReplacementBehavior -> G
    int tileCountHorizontal -> H
    int tileCountVertical -> I
    int cryptoType -> J
    java.lang.String id -> a
    java.lang.String label -> b
    java.util.List labels -> c
    java.lang.String language -> d
    int selectionFlags -> e
    int roleFlags -> f
    int averageBitrate -> g
    int peakBitrate -> h
    java.lang.String codecs -> i
    androidx.media3.common.Metadata metadata -> j
    java.lang.Object customData -> k
    java.lang.String containerMimeType -> l
    java.lang.String sampleMimeType -> m
    int maxInputSize -> n
    int maxNumReorderSamples -> o
    java.util.List initializationData -> p
    androidx.media3.common.DrmInitData drmInitData -> q
    long subsampleOffsetUs -> r
    int width -> s
    int height -> t
    float frameRate -> u
    int rotationDegrees -> v
    float pixelWidthHeightRatio -> w
    byte[] projectionData -> x
    int stereoMode -> y
    androidx.media3.common.ColorInfo colorInfo -> z
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    3:3:void <init>(androidx.media3.common.Format,androidx.media3.common.Format$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lj/q$a;)V"}
    1:1:int access$3300(androidx.media3.common.Format$Builder):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:int access$3400(androidx.media3.common.Format$Builder):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:int access$3500(androidx.media3.common.Format$Builder):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:int access$3600(androidx.media3.common.Format$Builder):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:java.lang.String access$400(androidx.media3.common.Format$Builder):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Ljava/lang/String;"}
    1:1:int access$500(androidx.media3.common.Format$Builder):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:int access$600(androidx.media3.common.Format$Builder):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:int access$700(androidx.media3.common.Format$Builder):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:int access$800(androidx.media3.common.Format$Builder):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:java.lang.String access$900(androidx.media3.common.Format$Builder):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Ljava/lang/String;"}
    1:1:androidx.media3.common.Format build():0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:androidx.media3.common.Format$Builder setAccessibilityChannel(int):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setAverageBitrate(int):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setChannelCount(int):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setCodecs(java.lang.String):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setColorInfo(androidx.media3.common.ColorInfo):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/h;)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setContainerMimeType(java.lang.String):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setCryptoType(int):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setCueReplacementBehavior(int):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setCustomData(java.lang.Object):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setDrmInitData(androidx.media3.common.DrmInitData):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/m;)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setEncoderDelay(int):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setEncoderPadding(int):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setFrameRate(float):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setHeight(int):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:androidx.media3.common.Format$Builder setId(int):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:java.util.List access$100(androidx.media3.common.Format$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Ljava/util/List;"}
    1:1:androidx.media3.common.Format$Builder setId(java.lang.String):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/q$b;"}
    1:1:androidx.media3.common.Metadata access$1000(androidx.media3.common.Format$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Lj/x;"}
    1:1:androidx.media3.common.Format$Builder setInitializationData(java.util.List):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lj/q$b;"}
    1:1:java.lang.Object access$1100(androidx.media3.common.Format$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Ljava/lang/Object;"}
    1:1:androidx.media3.common.Format$Builder setLabel(java.lang.String):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/q$b;"}
    1:1:java.lang.String access$1200(androidx.media3.common.Format$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Ljava/lang/String;"}
    1:1:androidx.media3.common.Format$Builder setLabels(java.util.List):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lj/q$b;"}
    1:1:java.lang.String access$1300(androidx.media3.common.Format$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Ljava/lang/String;"}
    1:1:androidx.media3.common.Format$Builder setLanguage(java.lang.String):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/q$b;"}
    1:1:int access$1400(androidx.media3.common.Format$Builder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:androidx.media3.common.Format$Builder setMaxInputSize(int):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:int access$1500(androidx.media3.common.Format$Builder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:androidx.media3.common.Format$Builder setMaxNumReorderSamples(int):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:java.util.List access$1600(androidx.media3.common.Format$Builder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Ljava/util/List;"}
    1:1:androidx.media3.common.Format$Builder setMetadata(androidx.media3.common.Metadata):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)Lj/q$b;"}
    1:1:androidx.media3.common.DrmInitData access$1700(androidx.media3.common.Format$Builder):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Lj/m;"}
    1:1:androidx.media3.common.Format$Builder setPcmEncoding(int):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:long access$1800(androidx.media3.common.Format$Builder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)J"}
    1:1:androidx.media3.common.Format$Builder setPeakBitrate(int):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:int access$1900(androidx.media3.common.Format$Builder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:androidx.media3.common.Format$Builder setPixelWidthHeightRatio(float):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lj/q$b;"}
    1:1:java.lang.String access$200(androidx.media3.common.Format$Builder):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Ljava/lang/String;"}
    1:1:androidx.media3.common.Format$Builder setProjectionData(byte[]):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lj/q$b;"}
    1:1:int access$2000(androidx.media3.common.Format$Builder):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:androidx.media3.common.Format$Builder setRoleFlags(int):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:float access$2100(androidx.media3.common.Format$Builder):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)F"}
    1:1:androidx.media3.common.Format$Builder setRotationDegrees(int):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:int access$2200(androidx.media3.common.Format$Builder):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:androidx.media3.common.Format$Builder setSampleMimeType(java.lang.String):0:0 -> o0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/q$b;"}
    1:1:float access$2300(androidx.media3.common.Format$Builder):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)F"}
    1:1:androidx.media3.common.Format$Builder setSampleRate(int):0:0 -> p0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:byte[] access$2400(androidx.media3.common.Format$Builder):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)[B"}
    1:1:androidx.media3.common.Format$Builder setSelectionFlags(int):0:0 -> q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:int access$2500(androidx.media3.common.Format$Builder):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:androidx.media3.common.Format$Builder setStereoMode(int):0:0 -> r0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:androidx.media3.common.ColorInfo access$2600(androidx.media3.common.Format$Builder):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Lj/h;"}
    1:1:androidx.media3.common.Format$Builder setSubsampleOffsetUs(long):0:0 -> s0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lj/q$b;"}
    1:1:int access$2700(androidx.media3.common.Format$Builder):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:androidx.media3.common.Format$Builder setTileCountHorizontal(int):0:0 -> t0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:int access$2800(androidx.media3.common.Format$Builder):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:androidx.media3.common.Format$Builder setTileCountVertical(int):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:int access$2900(androidx.media3.common.Format$Builder):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:androidx.media3.common.Format$Builder setWidth(int):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q$b;"}
    1:1:java.lang.String access$300(androidx.media3.common.Format$Builder):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)Ljava/lang/String;"}
    1:1:int access$3000(androidx.media3.common.Format$Builder):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:int access$3100(androidx.media3.common.Format$Builder):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
    1:1:int access$3200(androidx.media3.common.Format$Builder):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;)I"}
androidx.media3.common.FrameInfo -> j.r:
    androidx.media3.common.ColorInfo colorInfo -> a
    int width -> b
    int height -> c
    float pixelWidthHeightRatio -> d
    long offsetToAddUs -> e
    1:1:void <init>(androidx.media3.common.ColorInfo,int,int,float,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/h;IIFJ)V"}
    2:2:void <init>(androidx.media3.common.ColorInfo,int,int,float,long,androidx.media3.common.FrameInfo$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/h;IIFJLj/r$a;)V"}
androidx.media3.common.FrameInfo$1 -> j.r$a:
androidx.media3.common.FrameInfo$Builder -> j.r$b:
    androidx.media3.common.ColorInfo colorInfo -> a
    int width -> b
    int height -> c
    float pixelWidthHeightRatio -> d
    long offsetToAddUs -> e
    1:1:void <init>(androidx.media3.common.ColorInfo,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/h;II)V"}
    1:1:androidx.media3.common.FrameInfo build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/r;"}
    1:1:androidx.media3.common.FrameInfo$Builder setPixelWidthHeightRatio(float):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lj/r$b;"}
androidx.media3.common.IllegalSeekPositionException -> j.s:
    androidx.media3.common.Timeline timeline -> f
    int windowIndex -> g
    long positionMs -> h
    1:1:void <init>(androidx.media3.common.Timeline,int,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;IJ)V"}
androidx.media3.common.Label -> j.t:
    java.lang.String language -> a
    java.lang.String value -> b
    java.lang.String FIELD_LANGUAGE_INDEX -> c
    java.lang.String FIELD_VALUE_INDEX -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,java.lang.String):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.MediaItem -> j.u:
    java.lang.String mediaId -> a
    androidx.media3.common.MediaItem$LocalConfiguration localConfiguration -> b
    androidx.media3.common.MediaItem$LocalConfiguration playbackProperties -> c
    androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration -> d
    androidx.media3.common.MediaMetadata mediaMetadata -> e
    androidx.media3.common.MediaItem$ClippingConfiguration clippingConfiguration -> f
    androidx.media3.common.MediaItem$ClippingProperties clippingProperties -> g
    androidx.media3.common.MediaItem$RequestMetadata requestMetadata -> h
    androidx.media3.common.MediaItem EMPTY -> i
    java.lang.String FIELD_MEDIA_ID -> j
    java.lang.String FIELD_LIVE_CONFIGURATION -> k
    java.lang.String FIELD_MEDIA_METADATA -> l
    java.lang.String FIELD_CLIPPING_PROPERTIES -> m
    java.lang.String FIELD_REQUEST_METADATA -> n
    java.lang.String FIELD_LOCAL_CONFIGURATION -> o
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,androidx.media3.common.MediaItem$ClippingProperties,androidx.media3.common.MediaItem$LocalConfiguration,androidx.media3.common.MediaItem$LiveConfiguration,androidx.media3.common.MediaMetadata,androidx.media3.common.MediaItem$RequestMetadata):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lj/u$e;Lj/u$h;Lj/u$g;Lj/w;Lj/u$i;)V"}
    2:2:void <init>(java.lang.String,androidx.media3.common.MediaItem$ClippingProperties,androidx.media3.common.MediaItem$LocalConfiguration,androidx.media3.common.MediaItem$LiveConfiguration,androidx.media3.common.MediaMetadata,androidx.media3.common.MediaItem$RequestMetadata,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lj/u$e;Lj/u$h;Lj/u$g;Lj/w;Lj/u$i;Lj/u$a;)V"}
    1:1:androidx.media3.common.MediaItem$Builder buildUpon():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$c;"}
    1:1:androidx.media3.common.MediaItem fromUri(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/u;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.MediaItem$1 -> j.u$a:
androidx.media3.common.MediaItem$AdsConfiguration -> j.u$b:
androidx.media3.common.MediaItem$Builder -> j.u$c:
    java.lang.String mediaId -> a
    android.net.Uri uri -> b
    java.lang.String mimeType -> c
    androidx.media3.common.MediaItem$ClippingConfiguration$Builder clippingConfiguration -> d
    androidx.media3.common.MediaItem$DrmConfiguration$Builder drmConfiguration -> e
    java.util.List streamKeys -> f
    java.lang.String customCacheKey -> g
    com.google.common.collect.ImmutableList subtitleConfigurations -> h
    java.lang.Object tag -> i
    long imageDurationMs -> j
    androidx.media3.common.MediaMetadata mediaMetadata -> k
    androidx.media3.common.MediaItem$LiveConfiguration$Builder liveConfiguration -> l
    androidx.media3.common.MediaItem$RequestMetadata requestMetadata -> m
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.common.MediaItem):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    3:3:void <init>(androidx.media3.common.MediaItem,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Lj/u$a;)V"}
    1:1:androidx.media3.common.MediaItem build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:androidx.media3.common.MediaItem$Builder setLiveConfiguration(androidx.media3.common.MediaItem$LiveConfiguration):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g;)Lj/u$c;"}
    1:1:androidx.media3.common.MediaItem$Builder setMediaId(java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/u$c;"}
    1:1:androidx.media3.common.MediaItem$Builder setMimeType(java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/u$c;"}
    1:1:androidx.media3.common.MediaItem$Builder setSubtitleConfigurations(java.util.List):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lj/u$c;"}
    1:1:androidx.media3.common.MediaItem$Builder setTag(java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lj/u$c;"}
    1:1:androidx.media3.common.MediaItem$Builder setUri(android.net.Uri):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Lj/u$c;"}
    1:1:androidx.media3.common.MediaItem$Builder setUri(java.lang.String):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/u$c;"}
androidx.media3.common.MediaItem$ClippingConfiguration -> j.u$d:
    long startPositionMs -> a
    long startPositionUs -> b
    long endPositionMs -> c
    long endPositionUs -> d
    boolean relativeToLiveWindow -> e
    boolean relativeToDefaultPosition -> f
    boolean startsAtKeyFrame -> g
    androidx.media3.common.MediaItem$ClippingConfiguration UNSET -> h
    java.lang.String FIELD_START_POSITION_MS -> i
    java.lang.String FIELD_END_POSITION_MS -> j
    java.lang.String FIELD_RELATIVE_TO_LIVE_WINDOW -> k
    java.lang.String FIELD_RELATIVE_TO_DEFAULT_POSITION -> l
    java.lang.String FIELD_STARTS_AT_KEY_FRAME -> m
    java.lang.String FIELD_START_POSITION_US -> n
    java.lang.String FIELD_END_POSITION_US -> o
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.MediaItem$ClippingConfiguration$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$d$a;)V"}
    2:2:void <init>(androidx.media3.common.MediaItem$ClippingConfiguration$Builder,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$d$a;Lj/u$a;)V"}
    1:1:androidx.media3.common.MediaItem$ClippingConfiguration$Builder buildUpon():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$d$a;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.MediaItem$ClippingConfiguration$Builder -> j.u$d$a:
    long startPositionUs -> a
    long endPositionUs -> b
    boolean relativeToLiveWindow -> c
    boolean relativeToDefaultPosition -> d
    boolean startsAtKeyFrame -> e
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.common.MediaItem$ClippingConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$d;)V"}
    3:3:void <init>(androidx.media3.common.MediaItem$ClippingConfiguration,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$d;Lj/u$a;)V"}
    1:1:long access$3900(androidx.media3.common.MediaItem$ClippingConfiguration$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$d$a;)J"}
    1:1:long access$4000(androidx.media3.common.MediaItem$ClippingConfiguration$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$d$a;)J"}
    1:1:boolean access$4100(androidx.media3.common.MediaItem$ClippingConfiguration$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$d$a;)Z"}
    1:1:boolean access$4200(androidx.media3.common.MediaItem$ClippingConfiguration$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$d$a;)Z"}
    1:1:boolean access$4300(androidx.media3.common.MediaItem$ClippingConfiguration$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$d$a;)Z"}
    1:1:androidx.media3.common.MediaItem$ClippingConfiguration build():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$d;"}
    1:1:androidx.media3.common.MediaItem$ClippingProperties buildClippingProperties():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$e;"}
androidx.media3.common.MediaItem$ClippingProperties -> j.u$e:
    androidx.media3.common.MediaItem$ClippingProperties UNSET -> p
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.MediaItem$ClippingConfiguration$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$d$a;)V"}
    2:2:void <init>(androidx.media3.common.MediaItem$ClippingConfiguration$Builder,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$d$a;Lj/u$a;)V"}
androidx.media3.common.MediaItem$DrmConfiguration -> j.u$f:
    java.util.UUID scheme -> a
    java.util.UUID uuid -> b
    android.net.Uri licenseUri -> c
    com.google.common.collect.ImmutableMap requestHeaders -> d
    com.google.common.collect.ImmutableMap licenseRequestHeaders -> e
    boolean multiSession -> f
    boolean playClearContentWithoutKey -> g
    boolean forceDefaultLicenseUri -> h
    com.google.common.collect.ImmutableList sessionForClearTypes -> i
    com.google.common.collect.ImmutableList forcedSessionTrackTypes -> j
    byte[] keySetId -> k
    java.lang.String FIELD_SCHEME -> l
    java.lang.String FIELD_LICENSE_URI -> m
    java.lang.String FIELD_LICENSE_REQUEST_HEADERS -> n
    java.lang.String FIELD_MULTI_SESSION -> o
    java.lang.String FIELD_PLAY_CLEAR_CONTENT_WITHOUT_KEY -> p
    java.lang.String FIELD_FORCE_DEFAULT_LICENSE_URI -> q
    java.lang.String FIELD_FORCED_SESSION_TRACK_TYPES -> r
    java.lang.String FIELD_KEY_SET_ID -> s
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.MediaItem$DrmConfiguration$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f$a;)V"}
    2:2:void <init>(androidx.media3.common.MediaItem$DrmConfiguration$Builder,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f$a;Lj/u$a;)V"}
    1:1:byte[] access$600(androidx.media3.common.MediaItem$DrmConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f;)[B"}
    1:1:androidx.media3.common.MediaItem$DrmConfiguration$Builder buildUpon():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$f$a;"}
    1:1:byte[] getKeySetId():0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.MediaItem$DrmConfiguration$Builder -> j.u$f$a:
    java.util.UUID scheme -> a
    android.net.Uri licenseUri -> b
    com.google.common.collect.ImmutableMap licenseRequestHeaders -> c
    boolean multiSession -> d
    boolean playClearContentWithoutKey -> e
    boolean forceDefaultLicenseUri -> f
    com.google.common.collect.ImmutableList forcedSessionTrackTypes -> g
    byte[] keySetId -> h
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$a;)V"}
    3:3:void <init>(androidx.media3.common.MediaItem$DrmConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f;)V"}
    4:4:void <init>(androidx.media3.common.MediaItem$DrmConfiguration,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f;Lj/u$a;)V"}
    1:1:boolean access$1000(androidx.media3.common.MediaItem$DrmConfiguration$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f$a;)Z"}
    1:1:boolean access$1100(androidx.media3.common.MediaItem$DrmConfiguration$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f$a;)Z"}
    1:1:com.google.common.collect.ImmutableList access$1200(androidx.media3.common.MediaItem$DrmConfiguration$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f$a;)Ll2/v;"}
    1:1:byte[] access$1300(androidx.media3.common.MediaItem$DrmConfiguration$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f$a;)[B"}
    1:1:android.net.Uri access$200(androidx.media3.common.MediaItem$DrmConfiguration$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f$a;)Landroid/net/Uri;"}
    1:1:java.util.UUID access$300(androidx.media3.common.MediaItem$DrmConfiguration$Builder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f$a;)Ljava/util/UUID;"}
    1:1:boolean access$800(androidx.media3.common.MediaItem$DrmConfiguration$Builder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f$a;)Z"}
    1:1:com.google.common.collect.ImmutableMap access$900(androidx.media3.common.MediaItem$DrmConfiguration$Builder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f$a;)Ll2/x;"}
    1:1:androidx.media3.common.MediaItem$DrmConfiguration build():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$f;"}
androidx.media3.common.MediaItem$LiveConfiguration -> j.u$g:
    long targetOffsetMs -> a
    long minOffsetMs -> b
    long maxOffsetMs -> c
    float minPlaybackSpeed -> d
    float maxPlaybackSpeed -> e
    androidx.media3.common.MediaItem$LiveConfiguration UNSET -> f
    java.lang.String FIELD_TARGET_OFFSET_MS -> g
    java.lang.String FIELD_MIN_OFFSET_MS -> h
    java.lang.String FIELD_MAX_OFFSET_MS -> i
    java.lang.String FIELD_MIN_PLAYBACK_SPEED -> j
    java.lang.String FIELD_MAX_PLAYBACK_SPEED -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,long,long,float,float):0:0 -> <init>
    2:2:void <init>(androidx.media3.common.MediaItem$LiveConfiguration$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g$a;)V"}
    3:3:void <init>(androidx.media3.common.MediaItem$LiveConfiguration$Builder,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g$a;Lj/u$a;)V"}
    1:1:androidx.media3.common.MediaItem$LiveConfiguration$Builder buildUpon():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$g$a;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.MediaItem$LiveConfiguration$Builder -> j.u$g$a:
    long targetOffsetMs -> a
    long minOffsetMs -> b
    long maxOffsetMs -> c
    float minPlaybackSpeed -> d
    float maxPlaybackSpeed -> e
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.common.MediaItem$LiveConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g;)V"}
    3:3:void <init>(androidx.media3.common.MediaItem$LiveConfiguration,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g;Lj/u$a;)V"}
    1:1:long access$2000(androidx.media3.common.MediaItem$LiveConfiguration$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g$a;)J"}
    1:1:long access$2100(androidx.media3.common.MediaItem$LiveConfiguration$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g$a;)J"}
    1:1:long access$2200(androidx.media3.common.MediaItem$LiveConfiguration$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g$a;)J"}
    1:1:float access$2300(androidx.media3.common.MediaItem$LiveConfiguration$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g$a;)F"}
    1:1:float access$2400(androidx.media3.common.MediaItem$LiveConfiguration$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g$a;)F"}
    1:1:androidx.media3.common.MediaItem$LiveConfiguration build():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$g;"}
    1:1:androidx.media3.common.MediaItem$LiveConfiguration$Builder setMaxOffsetMs(long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lj/u$g$a;"}
    1:1:androidx.media3.common.MediaItem$LiveConfiguration$Builder setMaxPlaybackSpeed(float):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lj/u$g$a;"}
    1:1:androidx.media3.common.MediaItem$LiveConfiguration$Builder setMinOffsetMs(long):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lj/u$g$a;"}
    1:1:androidx.media3.common.MediaItem$LiveConfiguration$Builder setMinPlaybackSpeed(float):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lj/u$g$a;"}
    1:1:androidx.media3.common.MediaItem$LiveConfiguration$Builder setTargetOffsetMs(long):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lj/u$g$a;"}
androidx.media3.common.MediaItem$LocalConfiguration -> j.u$h:
    android.net.Uri uri -> a
    java.lang.String mimeType -> b
    androidx.media3.common.MediaItem$DrmConfiguration drmConfiguration -> c
    java.util.List streamKeys -> d
    java.lang.String customCacheKey -> e
    com.google.common.collect.ImmutableList subtitleConfigurations -> f
    java.util.List subtitles -> g
    java.lang.Object tag -> h
    long imageDurationMs -> i
    java.lang.String FIELD_URI -> j
    java.lang.String FIELD_MIME_TYPE -> k
    java.lang.String FIELD_DRM_CONFIGURATION -> l
    java.lang.String FIELD_ADS_CONFIGURATION -> m
    java.lang.String FIELD_STREAM_KEYS -> n
    java.lang.String FIELD_CUSTOM_CACHE_KEY -> o
    java.lang.String FIELD_SUBTITLE_CONFIGURATION -> p
    java.lang.String FIELD_IMAGE_DURATION_MS -> q
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.net.Uri,java.lang.String,androidx.media3.common.MediaItem$DrmConfiguration,androidx.media3.common.MediaItem$AdsConfiguration,java.util.List,java.lang.String,com.google.common.collect.ImmutableList,java.lang.Object,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/lang/String;Lj/u$f;Lj/u$b;Ljava/util/List;Ljava/lang/String;Ll2/v;Ljava/lang/Object;J)V"}
    2:2:void <init>(android.net.Uri,java.lang.String,androidx.media3.common.MediaItem$DrmConfiguration,androidx.media3.common.MediaItem$AdsConfiguration,java.util.List,java.lang.String,com.google.common.collect.ImmutableList,java.lang.Object,long,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/lang/String;Lj/u$f;Lj/u$b;Ljava/util/List;Ljava/lang/String;Ll2/v;Ljava/lang/Object;JLj/u$a;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.MediaItem$RequestMetadata -> j.u$i:
    android.net.Uri mediaUri -> a
    java.lang.String searchQuery -> b
    android.os.Bundle extras -> c
    androidx.media3.common.MediaItem$RequestMetadata EMPTY -> d
    java.lang.String FIELD_MEDIA_URI -> e
    java.lang.String FIELD_SEARCH_QUERY -> f
    java.lang.String FIELD_EXTRAS -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.MediaItem$RequestMetadata$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$i$a;)V"}
    2:2:void <init>(androidx.media3.common.MediaItem$RequestMetadata$Builder,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$i$a;Lj/u$a;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.MediaItem$RequestMetadata$Builder -> j.u$i$a:
    android.net.Uri mediaUri -> a
    java.lang.String searchQuery -> b
    android.os.Bundle extras -> c
    void <init>() -> <init>
    1:1:android.net.Uri access$4600(androidx.media3.common.MediaItem$RequestMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$i$a;)Landroid/net/Uri;"}
    1:1:java.lang.String access$4700(androidx.media3.common.MediaItem$RequestMetadata$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$i$a;)Ljava/lang/String;"}
    1:1:android.os.Bundle access$4800(androidx.media3.common.MediaItem$RequestMetadata$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$i$a;)Landroid/os/Bundle;"}
    1:1:androidx.media3.common.MediaItem$RequestMetadata build():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$i;"}
androidx.media3.common.MediaItem$Subtitle -> j.u$j:
    1:1:void <init>(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;)V"}
    2:2:void <init>(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;Lj/u$a;)V"}
androidx.media3.common.MediaItem$SubtitleConfiguration -> j.u$k:
    android.net.Uri uri -> a
    java.lang.String mimeType -> b
    java.lang.String language -> c
    int selectionFlags -> d
    int roleFlags -> e
    java.lang.String label -> f
    java.lang.String id -> g
    java.lang.String FIELD_URI -> h
    java.lang.String FIELD_MIME_TYPE -> i
    java.lang.String FIELD_LANGUAGE -> j
    java.lang.String FIELD_SELECTION_FLAGS -> k
    java.lang.String FIELD_ROLE_FLAGS -> l
    java.lang.String FIELD_LABEL -> m
    java.lang.String FIELD_ID -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;)V"}
    2:2:void <init>(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;Lj/u$a;)V"}
    1:1:androidx.media3.common.MediaItem$SubtitleConfiguration$Builder buildUpon():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$k$a;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.MediaItem$SubtitleConfiguration$Builder -> j.u$k$a:
    android.net.Uri uri -> a
    java.lang.String mimeType -> b
    java.lang.String language -> c
    int selectionFlags -> d
    int roleFlags -> e
    java.lang.String label -> f
    java.lang.String id -> g
    1:1:void <init>(androidx.media3.common.MediaItem$SubtitleConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k;)V"}
    2:2:void <init>(androidx.media3.common.MediaItem$SubtitleConfiguration,androidx.media3.common.MediaItem$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k;Lj/u$a;)V"}
    1:1:androidx.media3.common.MediaItem$Subtitle access$1800(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;)Lj/u$j;"}
    1:1:android.net.Uri access$2800(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;)Landroid/net/Uri;"}
    1:1:java.lang.String access$2900(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;)Ljava/lang/String;"}
    1:1:java.lang.String access$3000(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;)Ljava/lang/String;"}
    1:1:int access$3100(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;)I"}
    1:1:int access$3200(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;)I"}
    1:1:java.lang.String access$3300(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;)Ljava/lang/String;"}
    1:1:java.lang.String access$3400(androidx.media3.common.MediaItem$SubtitleConfiguration$Builder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k$a;)Ljava/lang/String;"}
    1:1:androidx.media3.common.MediaItem$Subtitle buildSubtitle():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$j;"}
androidx.media3.common.MediaLibraryInfo -> j.v:
    java.util.HashSet registeredModules -> a
    java.lang.String registeredModulesString -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void registerModule(java.lang.String):0:0 -> a
    1:1:java.lang.String registeredModules():0:0 -> b
androidx.media3.common.MediaMetadata -> j.w:
    java.lang.Integer discNumber -> A
    java.lang.Integer totalDiscCount -> B
    java.lang.CharSequence genre -> C
    java.lang.CharSequence compilation -> D
    java.lang.CharSequence station -> E
    java.lang.Integer mediaType -> F
    android.os.Bundle extras -> G
    androidx.media3.common.MediaMetadata EMPTY -> H
    java.lang.String FIELD_TITLE -> I
    java.lang.String FIELD_ARTIST -> J
    java.lang.String FIELD_ALBUM_TITLE -> K
    java.lang.String FIELD_ALBUM_ARTIST -> L
    java.lang.String FIELD_DISPLAY_TITLE -> M
    java.lang.String FIELD_SUBTITLE -> N
    java.lang.String FIELD_DESCRIPTION -> O
    java.lang.String FIELD_USER_RATING -> P
    java.lang.String FIELD_OVERALL_RATING -> Q
    java.lang.String FIELD_ARTWORK_DATA -> R
    java.lang.String FIELD_ARTWORK_URI -> S
    java.lang.String FIELD_TRACK_NUMBER -> T
    java.lang.String FIELD_TOTAL_TRACK_COUNT -> U
    java.lang.String FIELD_FOLDER_TYPE -> V
    java.lang.String FIELD_IS_PLAYABLE -> W
    java.lang.String FIELD_RECORDING_YEAR -> X
    java.lang.String FIELD_RECORDING_MONTH -> Y
    java.lang.String FIELD_RECORDING_DAY -> Z
    java.lang.CharSequence title -> a
    java.lang.String FIELD_RELEASE_YEAR -> a0
    java.lang.CharSequence artist -> b
    java.lang.String FIELD_RELEASE_MONTH -> b0
    java.lang.CharSequence albumTitle -> c
    java.lang.String FIELD_RELEASE_DAY -> c0
    java.lang.CharSequence albumArtist -> d
    java.lang.String FIELD_WRITER -> d0
    java.lang.CharSequence displayTitle -> e
    java.lang.String FIELD_COMPOSER -> e0
    java.lang.CharSequence subtitle -> f
    java.lang.String FIELD_CONDUCTOR -> f0
    java.lang.CharSequence description -> g
    java.lang.String FIELD_DISC_NUMBER -> g0
    java.lang.Long durationMs -> h
    java.lang.String FIELD_TOTAL_DISC_COUNT -> h0
    byte[] artworkData -> i
    java.lang.String FIELD_GENRE -> i0
    java.lang.Integer artworkDataType -> j
    java.lang.String FIELD_COMPILATION -> j0
    android.net.Uri artworkUri -> k
    java.lang.String FIELD_ARTWORK_DATA_TYPE -> k0
    java.lang.Integer trackNumber -> l
    java.lang.String FIELD_STATION -> l0
    java.lang.Integer totalTrackCount -> m
    java.lang.String FIELD_MEDIA_TYPE -> m0
    java.lang.Integer folderType -> n
    java.lang.String FIELD_IS_BROWSABLE -> n0
    java.lang.Boolean isBrowsable -> o
    java.lang.String FIELD_DURATION_MS -> o0
    java.lang.Boolean isPlayable -> p
    java.lang.String FIELD_EXTRAS -> p0
    java.lang.Integer year -> q
    java.lang.Integer recordingYear -> r
    java.lang.Integer recordingMonth -> s
    java.lang.Integer recordingDay -> t
    java.lang.Integer releaseYear -> u
    java.lang.Integer releaseMonth -> v
    java.lang.Integer releaseDay -> w
    java.lang.CharSequence writer -> x
    java.lang.CharSequence composer -> y
    java.lang.CharSequence conductor -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.MediaMetadata$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    2:2:void <init>(androidx.media3.common.MediaMetadata$Builder,androidx.media3.common.MediaMetadata$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;Lj/w$a;)V"}
    1:1:androidx.media3.common.MediaMetadata$Builder buildUpon():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/w$b;"}
    1:1:int getFolderTypeFromMediaType(int):0:0 -> b
    1:1:int getMediaTypeFromFolderType(int):0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.MediaMetadata$1 -> j.w$a:
androidx.media3.common.MediaMetadata$Builder -> j.w$b:
    java.lang.Integer totalDiscCount -> A
    java.lang.CharSequence genre -> B
    java.lang.CharSequence compilation -> C
    java.lang.CharSequence station -> D
    java.lang.Integer mediaType -> E
    android.os.Bundle extras -> F
    java.lang.CharSequence title -> a
    java.lang.CharSequence artist -> b
    java.lang.CharSequence albumTitle -> c
    java.lang.CharSequence albumArtist -> d
    java.lang.CharSequence displayTitle -> e
    java.lang.CharSequence subtitle -> f
    java.lang.CharSequence description -> g
    java.lang.Long durationMs -> h
    byte[] artworkData -> i
    java.lang.Integer artworkDataType -> j
    android.net.Uri artworkUri -> k
    java.lang.Integer trackNumber -> l
    java.lang.Integer totalTrackCount -> m
    java.lang.Integer folderType -> n
    java.lang.Boolean isBrowsable -> o
    java.lang.Boolean isPlayable -> p
    java.lang.Integer recordingYear -> q
    java.lang.Integer recordingMonth -> r
    java.lang.Integer recordingDay -> s
    java.lang.Integer releaseYear -> t
    java.lang.Integer releaseMonth -> u
    java.lang.Integer releaseDay -> v
    java.lang.CharSequence writer -> w
    java.lang.CharSequence composer -> x
    java.lang.CharSequence conductor -> y
    java.lang.Integer discNumber -> z
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.common.MediaMetadata):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w;)V"}
    2:2:void <init>(androidx.media3.common.MediaMetadata,androidx.media3.common.MediaMetadata$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w;Lj/w$a;)V"}
    1:1:java.lang.CharSequence access$3300(androidx.media3.common.MediaMetadata$Builder):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:android.os.Bundle access$3400(androidx.media3.common.MediaMetadata$Builder):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Landroid/os/Bundle;"}
    1:1:java.lang.CharSequence access$400(androidx.media3.common.MediaMetadata$Builder):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:java.lang.CharSequence access$500(androidx.media3.common.MediaMetadata$Builder):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:java.lang.CharSequence access$600(androidx.media3.common.MediaMetadata$Builder):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:java.lang.CharSequence access$700(androidx.media3.common.MediaMetadata$Builder):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:java.lang.CharSequence access$800(androidx.media3.common.MediaMetadata$Builder):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:java.lang.CharSequence access$900(androidx.media3.common.MediaMetadata$Builder):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:androidx.media3.common.MediaMetadata build():0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/w;"}
    1:1:androidx.media3.common.MediaMetadata$Builder maybeSetArtworkData(byte[],int):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BI)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder populate(androidx.media3.common.MediaMetadata):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder populateFromMetadata(androidx.media3.common.Metadata):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder populateFromMetadata(java.util.List):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setAlbumArtist(java.lang.CharSequence):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setAlbumTitle(java.lang.CharSequence):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setArtist(java.lang.CharSequence):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setArtworkData(byte[],java.lang.Integer):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLjava/lang/Integer;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setArtworkUri(android.net.Uri):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setCompilation(java.lang.CharSequence):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setComposer(java.lang.CharSequence):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setConductor(java.lang.CharSequence):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setDescription(java.lang.CharSequence):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setDiscNumber(java.lang.Integer):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setDisplayTitle(java.lang.CharSequence):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setDurationMs(java.lang.Long):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Long;)Lj/w$b;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setExtras(android.os.Bundle):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Bundle;)Lj/w$b;"}
    1:1:java.lang.Boolean access$100(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Boolean;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setFolderType(java.lang.Integer):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:java.lang.CharSequence access$1000(androidx.media3.common.MediaMetadata$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setGenre(java.lang.CharSequence):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:java.lang.Long access$1100(androidx.media3.common.MediaMetadata$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Long;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setIsBrowsable(java.lang.Boolean):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Boolean;)Lj/w$b;"}
    1:1:androidx.media3.common.Rating access$1200(androidx.media3.common.MediaMetadata$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Lj/g0;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setIsPlayable(java.lang.Boolean):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Boolean;)Lj/w$b;"}
    1:1:androidx.media3.common.Rating access$1300(androidx.media3.common.MediaMetadata$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Lj/g0;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setMediaType(java.lang.Integer):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:byte[] access$1400(androidx.media3.common.MediaMetadata$Builder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)[B"}
    1:1:androidx.media3.common.MediaMetadata$Builder setRecordingDay(java.lang.Integer):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:java.lang.Integer access$1500(androidx.media3.common.MediaMetadata$Builder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setRecordingMonth(java.lang.Integer):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:android.net.Uri access$1600(androidx.media3.common.MediaMetadata$Builder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Landroid/net/Uri;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setRecordingYear(java.lang.Integer):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:java.lang.Integer access$1700(androidx.media3.common.MediaMetadata$Builder):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setReleaseDay(java.lang.Integer):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:java.lang.Integer access$1800(androidx.media3.common.MediaMetadata$Builder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setReleaseMonth(java.lang.Integer):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:java.lang.Boolean access$1900(androidx.media3.common.MediaMetadata$Builder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Boolean;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setReleaseYear(java.lang.Integer):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:java.lang.Integer access$200(androidx.media3.common.MediaMetadata$Builder):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setStation(java.lang.CharSequence):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:java.lang.Integer access$2000(androidx.media3.common.MediaMetadata$Builder):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setSubtitle(java.lang.CharSequence):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:java.lang.Integer access$2100(androidx.media3.common.MediaMetadata$Builder):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setTitle(java.lang.CharSequence):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:java.lang.Integer access$2200(androidx.media3.common.MediaMetadata$Builder):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setTotalDiscCount(java.lang.Integer):0:0 -> o0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:java.lang.Integer access$2300(androidx.media3.common.MediaMetadata$Builder):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setTotalTrackCount(java.lang.Integer):0:0 -> p0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:java.lang.Integer access$2400(androidx.media3.common.MediaMetadata$Builder):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setTrackNumber(java.lang.Integer):0:0 -> q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;)Lj/w$b;"}
    1:1:java.lang.Integer access$2500(androidx.media3.common.MediaMetadata$Builder):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:androidx.media3.common.MediaMetadata$Builder setWriter(java.lang.CharSequence):0:0 -> r0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lj/w$b;"}
    1:1:java.lang.CharSequence access$2600(androidx.media3.common.MediaMetadata$Builder):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:java.lang.CharSequence access$2700(androidx.media3.common.MediaMetadata$Builder):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:java.lang.CharSequence access$2800(androidx.media3.common.MediaMetadata$Builder):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:java.lang.Integer access$2900(androidx.media3.common.MediaMetadata$Builder):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:java.lang.Integer access$300(androidx.media3.common.MediaMetadata$Builder):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:java.lang.Integer access$3000(androidx.media3.common.MediaMetadata$Builder):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/Integer;"}
    1:1:java.lang.CharSequence access$3100(androidx.media3.common.MediaMetadata$Builder):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
    1:1:java.lang.CharSequence access$3200(androidx.media3.common.MediaMetadata$Builder):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)Ljava/lang/CharSequence;"}
androidx.media3.common.Metadata -> j.x:
    androidx.media3.common.Metadata$Entry[] entries -> f
    long presentationTimeUs -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,java.util.List):0:0 -> <init>
    2:2:void <init>(long,androidx.media3.common.Metadata$Entry[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J[Lj/x$b;)V"}
    3:3:void <init>(android.os.Parcel):0:0 -> <init>
    4:4:void <init>(java.util.List):0:0 -> <init>
    5:5:void <init>(androidx.media3.common.Metadata$Entry[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/x$b;)V"}
    1:1:androidx.media3.common.Metadata copyWithAppendedEntries(androidx.media3.common.Metadata$Entry[]):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/x$b;)Lj/x;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:androidx.media3.common.Metadata copyWithAppendedEntriesFrom(androidx.media3.common.Metadata):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)Lj/x;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:androidx.media3.common.Metadata copyWithPresentationTimeUs(long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lj/x;"}
    1:1:androidx.media3.common.Metadata$Entry get(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/x$b;"}
    1:1:int length():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.common.Metadata$1 -> j.x$a:
    void <init>() -> <init>
    1:1:androidx.media3.common.Metadata createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lj/x;"}
    1:1:androidx.media3.common.Metadata[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lj/x;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.common.Metadata$Entry -> j.x$b:
    void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    byte[] getWrappedMetadataBytes() -> b
    androidx.media3.common.Format getWrappedMetadataFormat() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
androidx.media3.common.Metadata$Entry$-CC -> j.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:byte[] $default$getWrappedMetadataBytes(androidx.media3.common.Metadata$Entry):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x$b;)[B"}
    1:1:androidx.media3.common.Format $default$getWrappedMetadataFormat(androidx.media3.common.Metadata$Entry):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x$b;)Lj/q;"}
    1:1:void $default$populateMediaMetadata(androidx.media3.common.Metadata$Entry,androidx.media3.common.MediaMetadata$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x$b;Lj/w$b;)V"}
androidx.media3.common.MimeTypes -> j.z:
    java.util.ArrayList customMimeTypes -> a
    java.util.regex.Pattern MP4A_RFC_6381_CODEC_PATTERN -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:boolean allSamplesAreSyncSamples(java.lang.String,java.lang.String):0:0 -> a
    1:1:boolean containsCodecsCorrespondingToMimeType(java.lang.String,java.lang.String):0:0 -> b
    1:1:java.lang.String getAudioMediaMimeType(java.lang.String):0:0 -> c
    1:1:java.lang.String getCodecsCorrespondingToMimeType(java.lang.String,java.lang.String):0:0 -> d
    1:1:java.lang.String getCustomMimeTypeForCodec(java.lang.String):0:0 -> e
    1:1:int getEncoding(java.lang.String,java.lang.String):0:0 -> f
    1:1:java.lang.String getMediaMimeType(java.lang.String):0:0 -> g
    1:1:java.lang.String getMimeTypeFromMp4ObjectType(int):0:0 -> h
    1:1:androidx.media3.common.MimeTypes$Mp4aObjectType getObjectTypeFromMp4aRFC6381CodecString(java.lang.String):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/z$a;"}
    1:1:java.lang.String getTopLevelType(java.lang.String):0:0 -> j
    1:1:int getTrackType(java.lang.String):0:0 -> k
    1:1:int getTrackTypeForCustomMimeType(java.lang.String):0:0 -> l
    1:1:int getTrackTypeOfCodec(java.lang.String):0:0 -> m
    1:1:java.lang.String getVideoMediaMimeType(java.lang.String):0:0 -> n
    1:1:boolean isAudio(java.lang.String):0:0 -> o
    1:1:boolean isImage(java.lang.String):0:0 -> p
    1:1:boolean isMatroska(java.lang.String):0:0 -> q
    1:1:boolean isText(java.lang.String):0:0 -> r
    1:1:boolean isVideo(java.lang.String):0:0 -> s
    1:1:java.lang.String normalizeMimeType(java.lang.String):0:0 -> t
androidx.media3.common.MimeTypes$Mp4aObjectType -> j.z$a:
    int objectTypeIndication -> a
    int audioObjectTypeIndication -> b
    1:1:void <init>(int,int):0:0 -> <init>
    1:1:int getEncoding():0:0 -> a
androidx.media3.common.ParserException -> j.a0:
    boolean contentIsMalformed -> f
    int dataType -> g
    1:1:void <init>(java.lang.String,java.lang.Throwable,boolean,int):0:0 -> <init>
    1:1:androidx.media3.common.ParserException createForMalformedContainer(java.lang.String,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Throwable;)Lj/a0;"}
    1:1:androidx.media3.common.ParserException createForMalformedDataOfUnknownType(java.lang.String,java.lang.Throwable):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Throwable;)Lj/a0;"}
    1:1:androidx.media3.common.ParserException createForMalformedManifest(java.lang.String,java.lang.Throwable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Throwable;)Lj/a0;"}
    1:1:androidx.media3.common.ParserException createForManifestWithUnsupportedFeature(java.lang.String,java.lang.Throwable):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Throwable;)Lj/a0;"}
    1:1:androidx.media3.common.ParserException createForUnsupportedContainerFeature(java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lj/a0;"}
    1:1:java.lang.String getMessage():0:0 -> getMessage
androidx.media3.common.PlaybackException -> j.b0:
    int errorCode -> f
    long timestampMs -> g
    android.os.Bundle extras -> h
    java.lang.String FIELD_INT_ERROR_CODE -> i
    java.lang.String FIELD_LONG_TIMESTAMP_MS -> j
    java.lang.String FIELD_STRING_MESSAGE -> k
    java.lang.String FIELD_STRING_CAUSE_CLASS_NAME -> l
    java.lang.String FIELD_STRING_CAUSE_MESSAGE -> m
    java.lang.String FIELD_BUNDLE_EXTRAS -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,java.lang.Throwable,int,android.os.Bundle,long):0:0 -> <init>
androidx.media3.common.PlaybackParameters -> j.c0:
    float speed -> a
    float pitch -> b
    int scaledUsPerMs -> c
    androidx.media3.common.PlaybackParameters DEFAULT -> d
    java.lang.String FIELD_SPEED -> e
    java.lang.String FIELD_PITCH -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(float):0:0 -> <init>
    2:2:void <init>(float,float):0:0 -> <init>
    1:1:long getMediaTimeUsForPlayoutTimeMs(long):0:0 -> a
    1:1:androidx.media3.common.PlaybackParameters withSpeed(float):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lj/c0;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.common.Player -> j.d0:
    long getDuration() -> A
    androidx.media3.common.Timeline getCurrentTimeline() -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
    void addListener(androidx.media3.common.Player$Listener) -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;)V"}
    int getPlaybackState() -> D
    androidx.media3.common.Tracks getCurrentTracks() -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/l0;"}
    boolean getShuffleModeEnabled() -> F
    void seekTo(long) -> G
    boolean hasNextMediaItem() -> H
    int getCurrentPeriodIndex() -> I
    androidx.media3.common.VideoSize getVideoSize() -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/p0;"}
    void setMediaItem(androidx.media3.common.MediaItem) -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    float getVolume() -> L
    void seekToDefaultPosition() -> M
    long getCurrentPosition() -> N
    int getCurrentAdGroupIndex() -> O
    void setMediaItems(java.util.List,boolean) -> P
    int getCurrentMediaItemIndex() -> Q
    void setAudioAttributes(androidx.media3.common.AudioAttributes,boolean) -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Z)V"}
    boolean isCurrentMediaItemLive() -> S
    void pause() -> d
    androidx.media3.common.PlaybackParameters getPlaybackParameters() -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/c0;"}
    void setPlaybackParameters(androidx.media3.common.PlaybackParameters) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    void prepare() -> i
    void setVolume(float) -> j
    void play() -> k
    androidx.media3.common.PlaybackException getPlayerError() -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/b0;"}
    void setRepeatMode(int) -> m
    void setPlayWhenReady(boolean) -> n
    void setVideoSurface(android.view.Surface) -> o
    boolean isPlayingAd() -> p
    boolean hasPreviousMediaItem() -> q
    int getCurrentAdIndexInAdGroup() -> r
    long getContentPosition() -> s
    long getTotalBufferedDuration() -> t
    boolean isCurrentMediaItemDynamic() -> u
    int getPlaybackSuppressionReason() -> v
    long getBufferedPosition() -> w
    boolean getPlayWhenReady() -> x
    boolean isCurrentMediaItemSeekable() -> y
    int getRepeatMode() -> z
androidx.media3.common.Player$1 -> j.d0$a:
androidx.media3.common.Player$Commands -> j.d0$b:
    androidx.media3.common.FlagSet flags -> a
    androidx.media3.common.Player$Commands EMPTY -> b
    java.lang.String FIELD_COMMANDS -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.FlagSet):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p;)V"}
    2:2:void <init>(androidx.media3.common.FlagSet,androidx.media3.common.Player$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p;Lj/d0$a;)V"}
    1:1:androidx.media3.common.FlagSet access$000(androidx.media3.common.Player$Commands):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$b;)Lj/p;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.Player$Commands$Builder -> j.d0$b$a:
    androidx.media3.common.FlagSet$Builder flagsBuilder -> a
    int[] SUPPORTED_COMMANDS -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.common.Player$Commands$Builder add(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/d0$b$a;"}
    1:1:androidx.media3.common.Player$Commands$Builder addAll(androidx.media3.common.Player$Commands):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$b;)Lj/d0$b$a;"}
    1:1:androidx.media3.common.Player$Commands$Builder addAll(int[]):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([I)Lj/d0$b$a;"}
    1:1:androidx.media3.common.Player$Commands$Builder addIf(int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Lj/d0$b$a;"}
    1:1:androidx.media3.common.Player$Commands build():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/d0$b;"}
androidx.media3.common.Player$Events -> j.d0$c:
    androidx.media3.common.FlagSet flags -> a
    1:1:void <init>(androidx.media3.common.FlagSet):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.Player$Listener -> j.d0$d:
    void onPlaybackSuppressionReasonChanged(int) -> B
    void onTracksChanged(androidx.media3.common.Tracks) -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l0;)V"}
    void onPlayerStateChanged(boolean,int) -> D
    void onPlayerError(androidx.media3.common.PlaybackException) -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b0;)V"}
    void onPlaybackStateChanged(int) -> G
    void onPlayWhenReadyChanged(boolean,int) -> H
    void onLoadingChanged(boolean) -> K
    void onDeviceInfoChanged(androidx.media3.common.DeviceInfo) -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l;)V"}
    void onPositionDiscontinuity(int) -> M
    void onTimelineChanged(androidx.media3.common.Timeline,int) -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;I)V"}
    void onSurfaceSizeChanged(int,int) -> U
    void onAvailableCommandsChanged(androidx.media3.common.Player$Commands) -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$b;)V"}
    void onRepeatModeChanged(int) -> X
    void onMediaItemTransition(androidx.media3.common.MediaItem,int) -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;I)V"}
    void onIsLoadingChanged(boolean) -> Z
    void onRenderedFirstFrame() -> b0
    void onVideoSizeChanged(androidx.media3.common.VideoSize) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;)V"}
    void onAudioAttributesChanged(androidx.media3.common.AudioAttributes) -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    void onSkipSilenceEnabledChanged(boolean) -> d
    void onEvents(androidx.media3.common.Player,androidx.media3.common.Player$Events) -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Lj/d0$c;)V"}
    void onMediaMetadataChanged(androidx.media3.common.MediaMetadata) -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w;)V"}
    void onMetadata(androidx.media3.common.Metadata) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)V"}
    void onVolumeChanged(float) -> j0
    void onCues(androidx.media3.common.text.CueGroup) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;)V"}
    void onPositionDiscontinuity(androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int) -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$e;Lj/d0$e;I)V"}
    void onPlayerErrorChanged(androidx.media3.common.PlaybackException) -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b0;)V"}
    void onDeviceVolumeChanged(int,boolean) -> o0
    void onIsPlayingChanged(boolean) -> p0
    void onPlaybackParametersChanged(androidx.media3.common.PlaybackParameters) -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    void onCues(java.util.List) -> v
androidx.media3.common.Player$Listener$-CC -> j.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$onVolumeChanged(androidx.media3.common.Player$Listener,float):0:0 -> A
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;F)V"}
    1:1:void $default$onAudioAttributesChanged(androidx.media3.common.Player$Listener,androidx.media3.common.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/b;)V"}
    1:1:void $default$onAvailableCommandsChanged(androidx.media3.common.Player$Listener,androidx.media3.common.Player$Commands):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/d0$b;)V"}
    1:1:void $default$onCues(androidx.media3.common.Player$Listener,java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Ljava/util/List;)V"}
    1:1:void $default$onCues(androidx.media3.common.Player$Listener,androidx.media3.common.text.CueGroup):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Ll/b;)V"}
    1:1:void $default$onDeviceInfoChanged(androidx.media3.common.Player$Listener,androidx.media3.common.DeviceInfo):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/l;)V"}
    1:1:void $default$onDeviceVolumeChanged(androidx.media3.common.Player$Listener,int,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;IZ)V"}
    1:1:void $default$onEvents(androidx.media3.common.Player$Listener,androidx.media3.common.Player,androidx.media3.common.Player$Events):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/d0;Lj/d0$c;)V"}
    1:1:void $default$onIsLoadingChanged(androidx.media3.common.Player$Listener,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Z)V"}
    1:1:void $default$onLoadingChanged(androidx.media3.common.Player$Listener,boolean):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Z)V"}
    1:1:void $default$onMediaItemTransition(androidx.media3.common.Player$Listener,androidx.media3.common.MediaItem,int):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/u;I)V"}
    1:1:void $default$onMediaMetadataChanged(androidx.media3.common.Player$Listener,androidx.media3.common.MediaMetadata):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/w;)V"}
    1:1:void $default$onMetadata(androidx.media3.common.Player$Listener,androidx.media3.common.Metadata):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/x;)V"}
    1:1:void $default$onPlayWhenReadyChanged(androidx.media3.common.Player$Listener,boolean,int):0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;ZI)V"}
    1:1:void $default$onPlaybackParametersChanged(androidx.media3.common.Player$Listener,androidx.media3.common.PlaybackParameters):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/c0;)V"}
    1:1:void $default$onPlaybackSuppressionReasonChanged(androidx.media3.common.Player$Listener,int):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;I)V"}
    1:1:void $default$onPlayerErrorChanged(androidx.media3.common.Player$Listener,androidx.media3.common.PlaybackException):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/b0;)V"}
    1:1:void $default$onPlayerStateChanged(androidx.media3.common.Player$Listener,boolean,int):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;ZI)V"}
    1:1:void $default$onPositionDiscontinuity(androidx.media3.common.Player$Listener,int):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;I)V"}
    1:1:void $default$onPositionDiscontinuity(androidx.media3.common.Player$Listener,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/d0$e;Lj/d0$e;I)V"}
    1:1:void $default$onRenderedFirstFrame(androidx.media3.common.Player$Listener):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;)V"}
    1:1:void $default$onRepeatModeChanged(androidx.media3.common.Player$Listener,int):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;I)V"}
    1:1:void $default$onSkipSilenceEnabledChanged(androidx.media3.common.Player$Listener,boolean):0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Z)V"}
    1:1:void $default$onSurfaceSizeChanged(androidx.media3.common.Player$Listener,int,int):0:0 -> w
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;II)V"}
    1:1:void $default$onTimelineChanged(androidx.media3.common.Player$Listener,androidx.media3.common.Timeline,int):0:0 -> x
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/i0;I)V"}
    1:1:void $default$onTracksChanged(androidx.media3.common.Player$Listener,androidx.media3.common.Tracks):0:0 -> y
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/l0;)V"}
    1:1:void $default$onVideoSizeChanged(androidx.media3.common.Player$Listener,androidx.media3.common.VideoSize):0:0 -> z
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/p0;)V"}
androidx.media3.common.Player$PositionInfo -> j.d0$e:
    java.lang.Object windowUid -> a
    int windowIndex -> b
    int mediaItemIndex -> c
    androidx.media3.common.MediaItem mediaItem -> d
    java.lang.Object periodUid -> e
    int periodIndex -> f
    long positionMs -> g
    long contentPositionMs -> h
    int adGroupIndex -> i
    int adIndexInAdGroup -> j
    java.lang.String FIELD_MEDIA_ITEM_INDEX -> k
    java.lang.String FIELD_MEDIA_ITEM -> l
    java.lang.String FIELD_PERIOD_INDEX -> m
    java.lang.String FIELD_POSITION_MS -> n
    java.lang.String FIELD_CONTENT_POSITION_MS -> o
    java.lang.String FIELD_AD_GROUP_INDEX -> p
    java.lang.String FIELD_AD_INDEX_IN_AD_GROUP -> q
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object,int,androidx.media3.common.MediaItem,java.lang.Object,int,long,long,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILj/u;Ljava/lang/Object;IJJII)V"}
    1:1:boolean equalsForBundling(androidx.media3.common.Player$PositionInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$e;)Z"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.PreviewingVideoGraph -> j.f0:
androidx.media3.common.PreviewingVideoGraph$Factory -> j.f0$a:
    androidx.media3.common.PreviewingVideoGraph create(android.content.Context,androidx.media3.common.ColorInfo,androidx.media3.common.DebugViewProvider,androidx.media3.common.VideoGraph$Listener,java.util.concurrent.Executor,java.util.List,long) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj/h;Lj/k;Lj/o0;Ljava/util/concurrent/Executor;Ljava/util/List;J)Lj/f0;"}
androidx.media3.common.Rating -> j.g0:
androidx.media3.common.StreamKey -> j.h0:
    int periodIndex -> f
    int groupIndex -> g
    int streamIndex -> h
    java.lang.String FIELD_PERIOD_INDEX -> i
    java.lang.String FIELD_GROUP_INDEX -> j
    java.lang.String FIELD_STREAM_INDEX -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
    1:1:int compareTo(androidx.media3.common.StreamKey):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/h0;)I"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.common.StreamKey$1 -> j.h0$a:
    void <init>() -> <init>
    1:1:androidx.media3.common.StreamKey createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lj/h0;"}
    1:1:androidx.media3.common.StreamKey[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lj/h0;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.common.Timeline -> j.i0:
    androidx.media3.common.Timeline EMPTY -> a
    java.lang.String FIELD_WINDOWS -> b
    java.lang.String FIELD_PERIODS -> c
    java.lang.String FIELD_SHUFFLED_WINDOW_INDICES -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int getFirstWindowIndex(boolean):0:0 -> a
    int getIndexOfPeriod(java.lang.Object) -> b
    1:1:int getLastWindowIndex(boolean):0:0 -> c
    1:1:int getNextPeriodIndex(int,androidx.media3.common.Timeline$Period,androidx.media3.common.Timeline$Window,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Lj/i0$c;IZ)I"}
    1:1:int getNextWindowIndex(int,int,boolean):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;)Lj/i0$b;"}
    androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:androidx.media3.common.Timeline$Period getPeriodByUid(java.lang.Object,androidx.media3.common.Timeline$Period):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lj/i0$b;)Lj/i0$b;"}
    1:1:int hashCode():0:0 -> hashCode
    int getPeriodCount() -> i
    1:1:android.util.Pair getPeriodPositionUs(androidx.media3.common.Timeline$Window,androidx.media3.common.Timeline$Period,int,long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0$c;Lj/i0$b;IJ)Landroid/util/Pair;"}
    1:1:android.util.Pair getPeriodPositionUs(androidx.media3.common.Timeline$Window,androidx.media3.common.Timeline$Period,int,long,long):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0$c;Lj/i0$b;IJJ)Landroid/util/Pair;"}
    1:1:int getPreviousWindowIndex(int,int,boolean):0:0 -> l
    java.lang.Object getUidOfPeriod(int) -> m
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;)Lj/i0$c;"}
    androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
    int getWindowCount() -> p
    1:1:boolean isEmpty():0:0 -> q
    1:1:boolean isLastPeriod(int,androidx.media3.common.Timeline$Period,androidx.media3.common.Timeline$Window,int,boolean):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Lj/i0$c;IZ)Z"}
androidx.media3.common.Timeline$1 -> j.i0$a:
    void <init>() -> <init>
    1:1:int getIndexOfPeriod(java.lang.Object):0:0 -> b
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:int getPeriodCount():0:0 -> i
    1:1:java.lang.Object getUidOfPeriod(int):0:0 -> m
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
    1:1:int getWindowCount():0:0 -> p
androidx.media3.common.Timeline$Period -> j.i0$b:
    java.lang.Object id -> a
    java.lang.Object uid -> b
    int windowIndex -> c
    long durationUs -> d
    long positionInWindowUs -> e
    boolean isPlaceholder -> f
    androidx.media3.common.AdPlaybackState adPlaybackState -> g
    java.lang.String FIELD_WINDOW_INDEX -> h
    java.lang.String FIELD_DURATION_US -> i
    java.lang.String FIELD_POSITION_IN_WINDOW_US -> j
    java.lang.String FIELD_PLACEHOLDER -> k
    java.lang.String FIELD_AD_PLAYBACK_STATE -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:int getAdCountInAdGroup(int):0:0 -> a
    1:1:long getAdDurationUs(int,int):0:0 -> b
    1:1:int getAdGroupCount():0:0 -> c
    1:1:int getAdGroupIndexAfterPositionUs(long):0:0 -> d
    1:1:int getAdGroupIndexForPositionUs(long):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:long getAdGroupTimeUs(int):0:0 -> f
    1:1:long getAdResumePositionUs():0:0 -> g
    1:1:int getAdState(int,int):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:long getContentResumeOffsetUs(int):0:0 -> i
    1:1:long getDurationUs():0:0 -> j
    1:1:int getFirstAdIndexToPlay(int):0:0 -> k
    1:1:int getNextAdIndexToPlay(int,int):0:0 -> l
    1:1:long getPositionInWindowMs():0:0 -> m
    1:1:long getPositionInWindowUs():0:0 -> n
    1:1:int getRemovedAdGroupCount():0:0 -> o
    1:1:boolean hasPlayedAdGroup(int):0:0 -> p
    1:1:boolean isLivePostrollPlaceholder(int):0:0 -> q
    1:1:boolean isServerSideInsertedAdGroup(int):0:0 -> r
    1:1:androidx.media3.common.Timeline$Period set(java.lang.Object,java.lang.Object,int,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;IJJ)Lj/i0$b;"}
    1:1:androidx.media3.common.Timeline$Period set(java.lang.Object,java.lang.Object,int,long,long,androidx.media3.common.AdPlaybackState,boolean):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;IJJLj/a;Z)Lj/i0$b;"}
androidx.media3.common.Timeline$Window -> j.i0$c:
    java.lang.String FIELD_IS_PLACEHOLDER -> A
    java.lang.String FIELD_DEFAULT_POSITION_US -> B
    java.lang.String FIELD_DURATION_US -> C
    java.lang.String FIELD_FIRST_PERIOD_INDEX -> D
    java.lang.String FIELD_LAST_PERIOD_INDEX -> E
    java.lang.String FIELD_POSITION_IN_FIRST_PERIOD_US -> F
    java.lang.Object uid -> a
    java.lang.Object tag -> b
    androidx.media3.common.MediaItem mediaItem -> c
    java.lang.Object manifest -> d
    long presentationStartTimeMs -> e
    long windowStartTimeMs -> f
    long elapsedRealtimeEpochOffsetMs -> g
    boolean isSeekable -> h
    boolean isDynamic -> i
    androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration -> j
    boolean isPlaceholder -> k
    long defaultPositionUs -> l
    long durationUs -> m
    int firstPeriodIndex -> n
    int lastPeriodIndex -> o
    long positionInFirstPeriodUs -> p
    java.lang.Object SINGLE_WINDOW_UID -> q
    java.lang.Object FAKE_WINDOW_UID -> r
    androidx.media3.common.MediaItem PLACEHOLDER_MEDIA_ITEM -> s
    java.lang.String FIELD_MEDIA_ITEM -> t
    java.lang.String FIELD_PRESENTATION_START_TIME_MS -> u
    java.lang.String FIELD_WINDOW_START_TIME_MS -> v
    java.lang.String FIELD_ELAPSED_REALTIME_EPOCH_OFFSET_MS -> w
    java.lang.String FIELD_IS_SEEKABLE -> x
    java.lang.String FIELD_IS_DYNAMIC -> y
    java.lang.String FIELD_LIVE_CONFIGURATION -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:long getCurrentUnixTimeMs():0:0 -> a
    1:1:long getDefaultPositionMs():0:0 -> b
    1:1:long getDefaultPositionUs():0:0 -> c
    1:1:long getDurationMs():0:0 -> d
    1:1:long getPositionInFirstPeriodUs():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:boolean isLive():0:0 -> f
    1:1:androidx.media3.common.Timeline$Window set(java.lang.Object,androidx.media3.common.MediaItem,java.lang.Object,long,long,long,boolean,boolean,androidx.media3.common.MediaItem$LiveConfiguration,long,long,int,int,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lj/u;Ljava/lang/Object;JJJZZLj/u$g;JJIIJ)Lj/i0$c;"}
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.TrackGroup -> j.j0:
    int length -> a
    java.lang.String id -> b
    int type -> c
    androidx.media3.common.Format[] formats -> d
    int hashCode -> e
    java.lang.String FIELD_FORMATS -> f
    java.lang.String FIELD_ID -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,androidx.media3.common.Format[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;[Lj/q;)V"}
    2:2:void <init>(androidx.media3.common.Format[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/q;)V"}
    1:1:androidx.media3.common.Format getFormat(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q;"}
    1:1:int indexOf(androidx.media3.common.Format):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:void logErrorMessage(java.lang.String,java.lang.String,java.lang.String,int):0:0 -> c
    1:1:java.lang.String normalizeLanguage(java.lang.String):0:0 -> d
    1:1:int normalizeRoleFlags(int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:void verifyCorrectness():0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.TrackSelectionParameters -> j.k0:
    com.google.common.collect.ImmutableMap overrides -> A
    com.google.common.collect.ImmutableSet disabledTrackTypes -> B
    androidx.media3.common.TrackSelectionParameters DEFAULT_WITHOUT_CONTEXT -> C
    androidx.media3.common.TrackSelectionParameters DEFAULT -> D
    java.lang.String FIELD_PREFERRED_AUDIO_LANGUAGES -> E
    java.lang.String FIELD_PREFERRED_AUDIO_ROLE_FLAGS -> F
    java.lang.String FIELD_PREFERRED_TEXT_LANGUAGES -> G
    java.lang.String FIELD_PREFERRED_TEXT_ROLE_FLAGS -> H
    java.lang.String FIELD_SELECT_UNDETERMINED_TEXT_LANGUAGE -> I
    java.lang.String FIELD_MAX_VIDEO_WIDTH -> J
    java.lang.String FIELD_MAX_VIDEO_HEIGHT -> K
    java.lang.String FIELD_MAX_VIDEO_FRAMERATE -> L
    java.lang.String FIELD_MAX_VIDEO_BITRATE -> M
    java.lang.String FIELD_MIN_VIDEO_WIDTH -> N
    java.lang.String FIELD_MIN_VIDEO_HEIGHT -> O
    java.lang.String FIELD_MIN_VIDEO_FRAMERATE -> P
    java.lang.String FIELD_MIN_VIDEO_BITRATE -> Q
    java.lang.String FIELD_VIEWPORT_WIDTH -> R
    java.lang.String FIELD_VIEWPORT_HEIGHT -> S
    java.lang.String FIELD_VIEWPORT_ORIENTATION_MAY_CHANGE -> T
    java.lang.String FIELD_PREFERRED_VIDEO_MIMETYPES -> U
    java.lang.String FIELD_MAX_AUDIO_CHANNEL_COUNT -> V
    java.lang.String FIELD_MAX_AUDIO_BITRATE -> W
    java.lang.String FIELD_PREFERRED_AUDIO_MIME_TYPES -> X
    java.lang.String FIELD_FORCE_LOWEST_BITRATE -> Y
    java.lang.String FIELD_FORCE_HIGHEST_SUPPORTED_BITRATE -> Z
    int maxVideoWidth -> a
    java.lang.String FIELD_SELECTION_OVERRIDES -> a0
    int maxVideoHeight -> b
    java.lang.String FIELD_DISABLED_TRACK_TYPE -> b0
    int maxVideoFrameRate -> c
    java.lang.String FIELD_PREFERRED_VIDEO_ROLE_FLAGS -> c0
    int maxVideoBitrate -> d
    java.lang.String FIELD_IGNORED_TEXT_SELECTION_FLAGS -> d0
    int minVideoWidth -> e
    java.lang.String FIELD_AUDIO_OFFLOAD_MODE_PREFERENCE -> e0
    int minVideoHeight -> f
    java.lang.String FIELD_IS_GAPLESS_SUPPORT_REQUIRED -> f0
    int minVideoFrameRate -> g
    java.lang.String FIELD_IS_SPEED_CHANGE_SUPPORT_REQUIRED -> g0
    int minVideoBitrate -> h
    java.lang.String FIELD_AUDIO_OFFLOAD_PREFERENCES -> h0
    int viewportWidth -> i
    java.lang.String FIELD_IS_PREFER_IMAGE_OVER_VIDEO_ENABLED -> i0
    int viewportHeight -> j
    boolean viewportOrientationMayChange -> k
    com.google.common.collect.ImmutableList preferredVideoMimeTypes -> l
    int preferredVideoRoleFlags -> m
    com.google.common.collect.ImmutableList preferredAudioLanguages -> n
    int preferredAudioRoleFlags -> o
    int maxAudioChannelCount -> p
    int maxAudioBitrate -> q
    com.google.common.collect.ImmutableList preferredAudioMimeTypes -> r
    androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences audioOffloadPreferences -> s
    com.google.common.collect.ImmutableList preferredTextLanguages -> t
    int preferredTextRoleFlags -> u
    int ignoredTextSelectionFlags -> v
    boolean selectUndeterminedTextLanguage -> w
    boolean isPrioritizeImageOverVideoEnabled -> x
    boolean forceLowestBitrate -> y
    boolean forceHighestSupportedBitrate -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.TrackSelectionParameters$1 -> j.k0$a:
androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences -> j.k0$b:
    int audioOffloadMode -> a
    boolean isGaplessSupportRequired -> b
    boolean isSpeedChangeSupportRequired -> c
    androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences DEFAULT -> d
    java.lang.String FIELD_AUDIO_OFFLOAD_MODE_PREFERENCE -> e
    java.lang.String FIELD_IS_GAPLESS_SUPPORT_REQUIRED -> f
    java.lang.String FIELD_IS_SPEED_CHANGE_SUPPORT_REQUIRED -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$b$a;)V"}
    2:2:void <init>(androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences$Builder,androidx.media3.common.TrackSelectionParameters$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$b$a;Lj/k0$a;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences$Builder -> j.k0$b$a:
    int audioOffloadMode -> a
    boolean isGaplessSupportRequired -> b
    boolean isSpeedChangeSupportRequired -> c
    1:1:void <init>():0:0 -> <init>
    1:1:int access$3200(androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$b$a;)I"}
    1:1:boolean access$3300(androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$b$a;)Z"}
    1:1:boolean access$3400(androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$b$a;)Z"}
    1:1:androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences build():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/k0$b;"}
androidx.media3.common.TrackSelectionParameters$Builder -> j.k0$c:
    java.util.HashMap overrides -> A
    java.util.HashSet disabledTrackTypes -> B
    int maxVideoWidth -> a
    int maxVideoHeight -> b
    int maxVideoFrameRate -> c
    int maxVideoBitrate -> d
    int minVideoWidth -> e
    int minVideoHeight -> f
    int minVideoFrameRate -> g
    int minVideoBitrate -> h
    int viewportWidth -> i
    int viewportHeight -> j
    boolean viewportOrientationMayChange -> k
    com.google.common.collect.ImmutableList preferredVideoMimeTypes -> l
    int preferredVideoRoleFlags -> m
    com.google.common.collect.ImmutableList preferredAudioLanguages -> n
    int preferredAudioRoleFlags -> o
    int maxAudioChannelCount -> p
    int maxAudioBitrate -> q
    com.google.common.collect.ImmutableList preferredAudioMimeTypes -> r
    androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences audioOffloadPreferences -> s
    com.google.common.collect.ImmutableList preferredTextLanguages -> t
    int preferredTextRoleFlags -> u
    int ignoredTextSelectionFlags -> v
    boolean selectUndeterminedTextLanguage -> w
    boolean isPrioritizeImageOverVideoEnabled -> x
    boolean forceLowestBitrate -> y
    boolean forceHighestSupportedBitrate -> z
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(android.content.Context):0:0 -> <init>
    3:3:void <init>(androidx.media3.common.TrackSelectionParameters):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0;)V"}
    1:1:java.util.HashMap access$6100(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Ljava/util/HashMap;"}
    1:1:java.util.HashSet access$6200(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Ljava/util/HashSet;"}
    1:1:androidx.media3.common.TrackSelectionParameters build():0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/k0;"}
    1:1:void init(androidx.media3.common.TrackSelectionParameters):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0;)V"}
    1:1:androidx.media3.common.TrackSelectionParameters$Builder set(androidx.media3.common.TrackSelectionParameters):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0;)Lj/k0$c;"}
    1:1:androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(android.content.Context):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lj/k0$c;"}
    1:1:androidx.media3.common.TrackSelectionParameters$Builder setViewportSize(int,int,boolean):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIZ)Lj/k0$c;"}
    1:1:androidx.media3.common.TrackSelectionParameters$Builder setViewportSizeToPhysicalDisplaySize(android.content.Context,boolean):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)Lj/k0$c;"}
    1:1:int access$3500(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$3600(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$3700(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$3800(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$3900(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$4000(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$4100(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$4200(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$4300(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$4400(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:boolean access$4500(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Z"}
    1:1:com.google.common.collect.ImmutableList access$4600(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Ll2/v;"}
    1:1:int access$4700(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:com.google.common.collect.ImmutableList access$4800(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Ll2/v;"}
    1:1:int access$4900(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$5000(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$5100(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:com.google.common.collect.ImmutableList access$5200(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Ll2/v;"}
    1:1:androidx.media3.common.TrackSelectionParameters$AudioOffloadPreferences access$5300(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Lj/k0$b;"}
    1:1:com.google.common.collect.ImmutableList access$5400(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Ll2/v;"}
    1:1:int access$5500(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:int access$5600(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)I"}
    1:1:boolean access$5700(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Z"}
    1:1:boolean access$5800(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Z"}
    1:1:boolean access$5900(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Z"}
    1:1:boolean access$6000(androidx.media3.common.TrackSelectionParameters$Builder):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0$c;)Z"}
androidx.media3.common.Tracks -> j.l0:
    com.google.common.collect.ImmutableList groups -> a
    androidx.media3.common.Tracks EMPTY -> b
    java.lang.String FIELD_TRACK_GROUPS -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:com.google.common.collect.ImmutableList getGroups():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:boolean isTypeSelected(int):0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.Tracks$Group -> j.l0$a:
    int length -> a
    androidx.media3.common.TrackGroup mediaTrackGroup -> b
    boolean adaptiveSupported -> c
    int[] trackSupport -> d
    boolean[] trackSelected -> e
    java.lang.String FIELD_TRACK_GROUP -> f
    java.lang.String FIELD_TRACK_SUPPORT -> g
    java.lang.String FIELD_TRACK_SELECTED -> h
    java.lang.String FIELD_ADAPTIVE_SUPPORTED -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.TrackGroup,boolean,int[],boolean[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;Z[I[Z)V"}
    1:1:androidx.media3.common.Format getTrackFormat(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q;"}
    1:1:int getType():0:0 -> b
    1:1:boolean isSelected():0:0 -> c
    1:1:boolean isTrackSelected(int):0:0 -> d
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.VideoFrameProcessingException -> j.m0:
    long presentationTimeUs -> f
    1:1:void <init>(java.lang.Throwable,long):0:0 -> <init>
    1:1:androidx.media3.common.VideoFrameProcessingException from(java.lang.Exception):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Exception;)Lj/m0;"}
    1:1:androidx.media3.common.VideoFrameProcessingException from(java.lang.Exception,long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Exception;J)Lj/m0;"}
androidx.media3.common.VideoFrameProcessor -> j.n0:
androidx.media3.common.VideoFrameProcessor$Factory -> j.n0$a:
androidx.media3.common.VideoGraph$Listener -> j.o0:
androidx.media3.common.VideoSize -> j.p0:
    int width -> a
    int height -> b
    int unappliedRotationDegrees -> c
    float pixelWidthHeightRatio -> d
    androidx.media3.common.VideoSize UNKNOWN -> e
    java.lang.String FIELD_WIDTH -> f
    java.lang.String FIELD_HEIGHT -> g
    java.lang.String FIELD_UNAPPLIED_ROTATION_DEGREES -> h
    java.lang.String FIELD_PIXEL_WIDTH_HEIGHT_RATIO -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(int,int,int,float):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.audio.AudioProcessingPipeline -> k.a:
    com.google.common.collect.ImmutableList audioProcessors -> a
    java.util.List activeAudioProcessors -> b
    java.nio.ByteBuffer[] outputBuffers -> c
    androidx.media3.common.audio.AudioProcessor$AudioFormat outputAudioFormat -> d
    androidx.media3.common.audio.AudioProcessor$AudioFormat pendingOutputAudioFormat -> e
    boolean inputEnded -> f
    1:1:void <init>(com.google.common.collect.ImmutableList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/v;)V"}
    1:1:androidx.media3.common.audio.AudioProcessor$AudioFormat configure(androidx.media3.common.audio.AudioProcessor$AudioFormat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/b$a;)Lk/b$a;"}
    1:1:void flush():0:0 -> b
    1:1:int getFinalOutputBufferIndex():0:0 -> c
    1:1:java.nio.ByteBuffer getOutput():0:0 -> d
    1:1:boolean isEnded():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:boolean isOperational():0:0 -> f
    1:1:void processData(java.nio.ByteBuffer):0:0 -> g
    1:1:void queueEndOfStream():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:void queueInput(java.nio.ByteBuffer):0:0 -> i
    1:1:void reset():0:0 -> j
androidx.media3.common.audio.AudioProcessor -> k.b:
    java.nio.ByteBuffer EMPTY_BUFFER -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void reset() -> b
    boolean isEnded() -> c
    boolean isActive() -> d
    java.nio.ByteBuffer getOutput() -> e
    androidx.media3.common.audio.AudioProcessor$AudioFormat configure(androidx.media3.common.audio.AudioProcessor$AudioFormat) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/b$a;)Lk/b$a;"}
    void flush() -> flush
    void queueEndOfStream() -> g
    void queueInput(java.nio.ByteBuffer) -> h
androidx.media3.common.audio.AudioProcessor$AudioFormat -> k.b$a:
    int sampleRate -> a
    int channelCount -> b
    int encoding -> c
    int bytesPerFrame -> d
    androidx.media3.common.audio.AudioProcessor$AudioFormat NOT_SET -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int):0:0 -> <init>
    2:2:void <init>(androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.common.audio.AudioProcessor$UnhandledAudioFormatException -> k.b$b:
    androidx.media3.common.audio.AudioProcessor$AudioFormat inputAudioFormat -> f
    1:1:void <init>(java.lang.String,androidx.media3.common.audio.AudioProcessor$AudioFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lk/b$a;)V"}
    2:2:void <init>(androidx.media3.common.audio.AudioProcessor$AudioFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/b$a;)V"}
androidx.media3.common.audio.AudioProcessorChain -> k.c:
    androidx.media3.common.PlaybackParameters applyPlaybackParameters(androidx.media3.common.PlaybackParameters) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)Lj/c0;"}
    long getMediaDuration(long) -> b
    androidx.media3.common.audio.AudioProcessor[] getAudioProcessors() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lk/b;"}
    long getSkippedOutputFrameCount() -> d
    boolean applySkipSilenceEnabled(boolean) -> e
androidx.media3.common.audio.BaseAudioProcessor -> k.d:
    androidx.media3.common.audio.AudioProcessor$AudioFormat inputAudioFormat -> b
    androidx.media3.common.audio.AudioProcessor$AudioFormat outputAudioFormat -> c
    androidx.media3.common.audio.AudioProcessor$AudioFormat pendingInputAudioFormat -> d
    androidx.media3.common.audio.AudioProcessor$AudioFormat pendingOutputAudioFormat -> e
    java.nio.ByteBuffer buffer -> f
    java.nio.ByteBuffer outputBuffer -> g
    boolean inputEnded -> h
    1:1:void <init>():0:0 -> <init>
    1:1:boolean hasPendingOutput():0:0 -> a
    1:1:void reset():0:0 -> b
    1:1:boolean isEnded():0:0 -> c
    1:1:boolean isActive():0:0 -> d
    1:1:java.nio.ByteBuffer getOutput():0:0 -> e
    1:1:androidx.media3.common.audio.AudioProcessor$AudioFormat configure(androidx.media3.common.audio.AudioProcessor$AudioFormat):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/b$a;)Lk/b$a;"}
    1:1:void flush():0:0 -> flush
    1:1:void queueEndOfStream():0:0 -> g
    androidx.media3.common.audio.AudioProcessor$AudioFormat onConfigure(androidx.media3.common.audio.AudioProcessor$AudioFormat) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/b$a;)Lk/b$a;"}
    1:1:void onFlush():0:0 -> j
    1:1:void onQueueEndOfStream():0:0 -> k
    1:1:void onReset():0:0 -> l
    1:1:java.nio.ByteBuffer replaceOutputBuffer(int):0:0 -> m
androidx.media3.common.audio.Sonic -> k.e:
    int inputSampleRateHz -> a
    int channelCount -> b
    float speed -> c
    float pitch -> d
    float rate -> e
    int minPeriod -> f
    int maxPeriod -> g
    int maxRequiredFrameCount -> h
    short[] downSampleBuffer -> i
    short[] inputBuffer -> j
    int inputFrameCount -> k
    short[] outputBuffer -> l
    int outputFrameCount -> m
    short[] pitchBuffer -> n
    int pitchFrameCount -> o
    int oldRatePosition -> p
    int newRatePosition -> q
    int remainingInputToCopyFrameCount -> r
    int prevPeriod -> s
    int prevMinDiff -> t
    int minDiff -> u
    int maxDiff -> v
    1:1:void <init>(int,int,float,float,int):0:0 -> <init>
    1:1:void adjustRate(float,int):0:0 -> a
    1:1:void changeSpeed(float):0:0 -> b
    1:1:int copyInputToOutput(int):0:0 -> c
    1:1:void copyToOutput(short[],int,int):0:0 -> d
    1:1:void downSampleInput(short[],int,int):0:0 -> e
    1:1:short[] ensureSpaceForAdditionalFrames(short[],int,int):0:0 -> f
    1:1:int findPitchPeriod(short[],int):0:0 -> g
    1:1:int findPitchPeriodInRange(short[],int,int,int):0:0 -> h
    1:1:void flush():0:0 -> i
    1:1:void getOutput(java.nio.ShortBuffer):0:0 -> j
    1:1:int getOutputSize():0:0 -> k
    1:1:int getPendingInputBytes():0:0 -> l
    1:1:int insertPitchPeriod(short[],int,float,int):0:0 -> m
    1:1:short interpolate(short[],int,int,int):0:0 -> n
    1:1:void moveNewSamplesToPitchBuffer(int):0:0 -> o
    1:1:void overlapAdd(int,int,short[],int,short[],int,short[],int):0:0 -> p
    1:1:boolean previousPeriodBetter(int,int):0:0 -> q
    1:1:void processStreamInput():0:0 -> r
    1:1:void queueEndOfStream():0:0 -> s
    1:1:void queueInput(java.nio.ShortBuffer):0:0 -> t
    1:1:void removePitchFrames(int):0:0 -> u
    1:1:void removeProcessedInputFrames(int):0:0 -> v
    1:1:int skipPitchPeriod(short[],int,float,int):0:0 -> w
androidx.media3.common.audio.SonicAudioProcessor -> k.f:
    int pendingOutputSampleRate -> b
    float speed -> c
    float pitch -> d
    androidx.media3.common.audio.AudioProcessor$AudioFormat pendingInputAudioFormat -> e
    androidx.media3.common.audio.AudioProcessor$AudioFormat pendingOutputAudioFormat -> f
    androidx.media3.common.audio.AudioProcessor$AudioFormat inputAudioFormat -> g
    androidx.media3.common.audio.AudioProcessor$AudioFormat outputAudioFormat -> h
    boolean pendingSonicRecreation -> i
    androidx.media3.common.audio.Sonic sonic -> j
    java.nio.ByteBuffer buffer -> k
    java.nio.ShortBuffer shortBuffer -> l
    java.nio.ByteBuffer outputBuffer -> m
    long inputBytes -> n
    long outputBytes -> o
    boolean inputEnded -> p
    1:1:void <init>():0:0 -> <init>
    1:1:long getMediaDuration(long):0:0 -> a
    1:1:void reset():0:0 -> b
    1:1:boolean isEnded():0:0 -> c
    1:1:boolean isActive():0:0 -> d
    1:1:java.nio.ByteBuffer getOutput():0:0 -> e
    1:1:androidx.media3.common.audio.AudioProcessor$AudioFormat configure(androidx.media3.common.audio.AudioProcessor$AudioFormat):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/b$a;)Lk/b$a;"}
    1:1:void flush():0:0 -> flush
    1:1:void queueEndOfStream():0:0 -> g
    1:1:void queueInput(java.nio.ByteBuffer):0:0 -> h
    1:1:void setPitch(float):0:0 -> i
    1:1:void setSpeed(float):0:0 -> j
androidx.media3.common.audio.ToInt16PcmAudioProcessor -> k.g:
    void <init>() -> <init>
    1:1:void queueInput(java.nio.ByteBuffer):0:0 -> h
    1:1:androidx.media3.common.audio.AudioProcessor$AudioFormat onConfigure(androidx.media3.common.audio.AudioProcessor$AudioFormat):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/b$a;)Lk/b$a;"}
androidx.media3.common.text.Cue -> l.a:
    java.lang.String FIELD_LINE_ANCHOR -> A
    java.lang.String FIELD_POSITION -> B
    java.lang.String FIELD_POSITION_ANCHOR -> C
    java.lang.String FIELD_TEXT_SIZE_TYPE -> D
    java.lang.String FIELD_TEXT_SIZE -> E
    java.lang.String FIELD_SIZE -> F
    java.lang.String FIELD_BITMAP_HEIGHT -> G
    java.lang.String FIELD_WINDOW_COLOR -> H
    java.lang.String FIELD_WINDOW_COLOR_SET -> I
    java.lang.String FIELD_VERTICAL_TYPE -> J
    java.lang.String FIELD_SHEAR_DEGREES -> K
    java.lang.CharSequence text -> a
    android.text.Layout$Alignment textAlignment -> b
    android.text.Layout$Alignment multiRowAlignment -> c
    android.graphics.Bitmap bitmap -> d
    float line -> e
    int lineType -> f
    int lineAnchor -> g
    float position -> h
    int positionAnchor -> i
    float size -> j
    float bitmapHeight -> k
    boolean windowColorSet -> l
    int windowColor -> m
    int textSizeType -> n
    float textSize -> o
    int verticalType -> p
    float shearDegrees -> q
    androidx.media3.common.text.Cue EMPTY -> r
    java.lang.String FIELD_TEXT -> s
    java.lang.String FIELD_CUSTOM_SPANS -> t
    java.lang.String FIELD_TEXT_ALIGNMENT -> u
    java.lang.String FIELD_MULTI_ROW_ALIGNMENT -> v
    java.lang.String FIELD_BITMAP_PARCELABLE -> w
    java.lang.String FIELD_BITMAP_BYTES -> x
    java.lang.String FIELD_LINE -> y
    java.lang.String FIELD_LINE_TYPE -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.CharSequence,android.text.Layout$Alignment,android.text.Layout$Alignment,android.graphics.Bitmap,float,int,int,float,int,int,float,float,float,boolean,int,int,float):0:0 -> <init>
    2:2:void <init>(java.lang.CharSequence,android.text.Layout$Alignment,android.text.Layout$Alignment,android.graphics.Bitmap,float,int,int,float,int,int,float,float,float,boolean,int,int,float,androidx.media3.common.text.Cue$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;Landroid/text/Layout$Alignment;Landroid/text/Layout$Alignment;Landroid/graphics/Bitmap;FIIFIIFFFZIIFLl/a$a;)V"}
    1:1:androidx.media3.common.text.Cue$Builder buildUpon():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue fromBundle(android.os.Bundle):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Bundle;)Ll/a;"}
    1:1:android.os.Bundle toBundleWithoutBitmap():0:0 -> c
    1:1:android.os.Bundle toSerializableBundle():0:0 -> d
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.text.Cue$1 -> l.a$a:
androidx.media3.common.text.Cue$Builder -> l.a$b:
    java.lang.CharSequence text -> a
    android.graphics.Bitmap bitmap -> b
    android.text.Layout$Alignment textAlignment -> c
    android.text.Layout$Alignment multiRowAlignment -> d
    float line -> e
    int lineType -> f
    int lineAnchor -> g
    float position -> h
    int positionAnchor -> i
    int textSizeType -> j
    float textSize -> k
    float size -> l
    float bitmapHeight -> m
    boolean windowColorSet -> n
    int windowColor -> o
    int verticalType -> p
    float shearDegrees -> q
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.common.text.Cue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/a;)V"}
    3:3:void <init>(androidx.media3.common.text.Cue,androidx.media3.common.text.Cue$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/a;Ll/a$a;)V"}
    1:1:androidx.media3.common.text.Cue build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/a;"}
    1:1:androidx.media3.common.text.Cue$Builder clearWindowColor():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/a$b;"}
    1:1:int getLineAnchor():0:0 -> c
    1:1:int getPositionAnchor():0:0 -> d
    1:1:java.lang.CharSequence getText():0:0 -> e
    1:1:androidx.media3.common.text.Cue$Builder setBitmap(android.graphics.Bitmap):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Bitmap;)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setBitmapHeight(float):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setLine(float,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FI)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setLineAnchor(int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setMultiRowAlignment(android.text.Layout$Alignment):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/Layout$Alignment;)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setPosition(float):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setPositionAnchor(int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setShearDegrees(float):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setSize(float):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setText(java.lang.CharSequence):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setTextAlignment(android.text.Layout$Alignment):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/Layout$Alignment;)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setTextSize(float,int):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FI)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setVerticalType(int):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll/a$b;"}
    1:1:androidx.media3.common.text.Cue$Builder setWindowColor(int):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll/a$b;"}
androidx.media3.common.text.CueGroup -> l.b:
    com.google.common.collect.ImmutableList cues -> a
    long presentationTimeUs -> b
    androidx.media3.common.text.CueGroup EMPTY_TIME_ZERO -> c
    java.lang.String FIELD_CUES -> d
    java.lang.String FIELD_PRESENTATION_TIME_US -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.List,long):0:0 -> <init>
androidx.media3.common.text.CustomSpanBundler -> l.c:
    java.lang.String FIELD_START_INDEX -> a
    java.lang.String FIELD_END_INDEX -> b
    java.lang.String FIELD_FLAGS -> c
    java.lang.String FIELD_TYPE -> d
    java.lang.String FIELD_PARAMS -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.util.ArrayList bundleCustomSpans(android.text.Spanned):0:0 -> a
    1:1:android.os.Bundle spanToBundle(android.text.Spanned,java.lang.Object,int,android.os.Bundle):0:0 -> b
    1:1:void unbundleAndApplyCustomSpan(android.os.Bundle,android.text.Spannable):0:0 -> c
androidx.media3.common.text.HorizontalTextInVerticalContextSpan -> l.d:
    void <init>() -> <init>
androidx.media3.common.text.RubySpan -> l.e:
    java.lang.String rubyText -> a
    int position -> b
    java.lang.String FIELD_TEXT -> c
    java.lang.String FIELD_POSITION -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.media3.common.text.RubySpan fromBundle(android.os.Bundle):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Bundle;)Ll/e;"}
    1:1:android.os.Bundle toBundle():0:0 -> b
androidx.media3.common.text.SpanUtil -> l.f:
    1:1:void addInheritedRelativeSizeSpan(android.text.Spannable,float,int,int,int):0:0 -> a
    1:1:void addOrReplaceSpan(android.text.Spannable,java.lang.Object,int,int,int):0:0 -> b
    1:1:void removeIfStartEndAndFlagsMatch(android.text.Spannable,java.lang.Object,int,int,int):0:0 -> c
androidx.media3.common.text.TextEmphasisSpan -> l.g:
    int markShape -> a
    int markFill -> b
    int position -> c
    java.lang.String FIELD_MARK_SHAPE -> d
    java.lang.String FIELD_MARK_FILL -> e
    java.lang.String FIELD_POSITION -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int):0:0 -> <init>
    1:1:androidx.media3.common.text.TextEmphasisSpan fromBundle(android.os.Bundle):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Bundle;)Ll/g;"}
    1:1:android.os.Bundle toBundle():0:0 -> b
androidx.media3.common.util.Assertions -> m.a:
    1:1:void checkArgument(boolean):0:0 -> a
    1:1:void checkArgument(boolean,java.lang.Object):0:0 -> b
    1:1:int checkIndex(int,int,int):0:0 -> c
    1:1:java.lang.String checkNotEmpty(java.lang.String):0:0 -> d
    1:1:java.lang.Object checkNotNull(java.lang.Object):0:0 -> e
    1:1:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object):0:0 -> f
    1:1:void checkState(boolean):0:0 -> g
    1:1:void checkState(boolean,java.lang.Object):0:0 -> h
    1:1:java.lang.Object checkStateNotNull(java.lang.Object):0:0 -> i
    1:1:java.lang.Object checkStateNotNull(java.lang.Object,java.lang.Object):0:0 -> j
androidx.media3.common.util.BundleCollectionUtil -> m.b:
    1:1:com.google.common.collect.ImmutableList fromBundleList(com.google.common.base.Function,java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/f;Ljava/util/List;)Ll2/v;"}
    1:1:java.util.ArrayList toBundleArrayList(java.util.Collection,com.google.common.base.Function):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Collection;Lk2/f;)Ljava/util/ArrayList;"}
androidx.media3.common.util.Clock -> m.c:
    androidx.media3.common.util.Clock DEFAULT -> a
    1:1:void <clinit>():0:0 -> <clinit>
    long currentTimeMillis() -> a
    long uptimeMillis() -> b
    void onThreadBlocked() -> c
    long elapsedRealtime() -> d
    long nanoTime() -> e
    androidx.media3.common.util.HandlerWrapper createHandler(android.os.Looper,android.os.Handler$Callback) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Looper;Landroid/os/Handler$Callback;)Lm/k;"}
androidx.media3.common.util.CodecSpecificDataUtil -> m.d:
    byte[] NAL_START_CODE -> a
    java.lang.String[] HEVC_GENERAL_PROFILE_SPACE_STRINGS -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String buildAvcCodecString(int,int,int):0:0 -> a
    1:1:java.util.List buildCea708InitializationData(boolean):0:0 -> b
    1:1:java.lang.String buildHevcCodecString(int,boolean,int,int,int[],int):0:0 -> c
    1:1:byte[] buildNalUnit(byte[],int,int):0:0 -> d
    1:1:int findNalStartCode(byte[],int):0:0 -> e
    1:1:android.util.Pair getVideoResolutionFromMpeg4VideoConfig(byte[]):0:0 -> f
    1:1:boolean isNalStartCode(byte[],int):0:0 -> g
    1:1:android.util.Pair parseAlacAudioSpecificConfig(byte[]):0:0 -> h
    1:1:boolean parseCea708InitializationData(java.util.List):0:0 -> i
    1:1:byte[][] splitNalUnits(byte[]):0:0 -> j
androidx.media3.common.util.ColorParser -> m.e:
    java.util.regex.Pattern RGB_PATTERN -> a
    java.util.regex.Pattern RGBA_PATTERN_INT_ALPHA -> b
    java.util.regex.Pattern RGBA_PATTERN_FLOAT_ALPHA -> c
    java.util.Map COLOR_MAP -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int parseColorInternal(java.lang.String,boolean):0:0 -> a
    1:1:int parseCssColor(java.lang.String):0:0 -> b
    1:1:int parseTtmlColor(java.lang.String):0:0 -> c
androidx.media3.common.util.ConditionVariable -> m.f:
    androidx.media3.common.util.Clock clock -> a
    boolean isOpen -> b
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.common.util.Clock):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c;)V"}
    1:1:void block():0:0 -> a
    1:1:void blockUninterruptible():0:0 -> b
    1:1:boolean close():0:0 -> c
    1:1:boolean isOpen():0:0 -> d
    1:1:boolean open():0:0 -> e
androidx.media3.common.util.Consumer -> m.g:
    void accept(java.lang.Object) -> accept
androidx.media3.common.util.CopyOnWriteMultiset -> m.h:
    java.lang.Object lock -> f
    java.util.Map elementCounts -> g
    java.util.Set elementSet -> h
    java.util.List elements -> i
    1:1:void <init>():0:0 -> <init>
    1:1:void add(java.lang.Object):0:0 -> a
    1:1:int count(java.lang.Object):0:0 -> b
    1:1:java.util.Set elementSet():0:0 -> c
    1:1:void remove(java.lang.Object):0:0 -> d
    1:1:java.util.Iterator iterator():0:0 -> iterator
androidx.media3.common.util.EGLSurfaceTexture -> m.i:
    android.os.Handler handler -> f
    int[] textureIdHolder -> g
    android.opengl.EGLDisplay display -> h
    android.opengl.EGLContext context -> i
    android.opengl.EGLSurface surface -> j
    android.graphics.SurfaceTexture texture -> k
    int[] EGL_CONFIG_ATTRIBUTES -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Handler):0:0 -> <init>
    2:2:void <init>(android.os.Handler,androidx.media3.common.util.EGLSurfaceTexture$TextureImageListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lm/i$a;)V"}
    1:1:android.opengl.EGLConfig chooseEGLConfig(android.opengl.EGLDisplay):0:0 -> a
    1:1:android.opengl.EGLContext createEGLContext(android.opengl.EGLDisplay,android.opengl.EGLConfig,int):0:0 -> b
    1:1:android.opengl.EGLSurface createEGLSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,android.opengl.EGLContext,int):0:0 -> c
    1:1:void dispatchOnFrameAvailable():0:0 -> d
    1:1:void generateTextureIds(int[]):0:0 -> e
    1:1:android.opengl.EGLDisplay getDefaultDisplay():0:0 -> f
    1:1:android.graphics.SurfaceTexture getSurfaceTexture():0:0 -> g
    1:1:void init(int):0:0 -> h
    1:1:void release():0:0 -> i
    1:1:void onFrameAvailable(android.graphics.SurfaceTexture):0:0 -> onFrameAvailable
    1:1:void run():0:0 -> run
androidx.media3.common.util.EGLSurfaceTexture$TextureImageListener -> m.i$a:
androidx.media3.common.util.GlUtil -> m.j:
    int[] EGL_CONFIG_ATTRIBUTES_RGBA_8888 -> a
    int[] EGL_CONFIG_ATTRIBUTES_RGBA_1010102 -> b
    int[] EGL_WINDOW_SURFACE_ATTRIBUTES_BT2020_PQ -> c
    int[] EGL_WINDOW_SURFACE_ATTRIBUTES_BT2020_HLG -> d
    int[] EGL_WINDOW_SURFACE_ATTRIBUTES_NONE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void checkGlError():0:0 -> a
    1:1:void checkGlException(boolean,java.lang.String):0:0 -> b
    1:1:boolean isExtensionSupported(java.lang.String):0:0 -> c
    1:1:boolean isProtectedContentExtensionSupported(android.content.Context):0:0 -> d
    1:1:boolean isSurfacelessContextExtensionSupported():0:0 -> e
androidx.media3.common.util.GlUtil$GlException -> m.j$a:
    1:1:void <init>(java.lang.String):0:0 -> <init>
androidx.media3.common.util.HandlerWrapper -> m.k:
    boolean hasMessages(int) -> a
    androidx.media3.common.util.HandlerWrapper$Message obtainMessage(int,int,int) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(III)Lm/k$a;"}
    boolean sendMessageAtFrontOfQueue(androidx.media3.common.util.HandlerWrapper$Message) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/k$a;)Z"}
    boolean sendEmptyMessageAtTime(int,long) -> d
    void removeMessages(int) -> e
    androidx.media3.common.util.HandlerWrapper$Message obtainMessage(int,java.lang.Object) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)Lm/k$a;"}
    boolean sendEmptyMessage(int) -> g
    void removeCallbacksAndMessages(java.lang.Object) -> h
    android.os.Looper getLooper() -> i
    boolean post(java.lang.Runnable) -> j
    androidx.media3.common.util.HandlerWrapper$Message obtainMessage(int) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lm/k$a;"}
androidx.media3.common.util.HandlerWrapper$Message -> m.k$a:
    void sendToTarget() -> a
androidx.media3.common.util.ListenerSet -> m.n:
    androidx.media3.common.util.Clock clock -> a
    androidx.media3.common.util.HandlerWrapper handler -> b
    androidx.media3.common.util.ListenerSet$IterationFinishedEvent iterationFinishedEvent -> c
    java.util.concurrent.CopyOnWriteArraySet listeners -> d
    java.util.ArrayDeque flushingEvents -> e
    java.util.ArrayDeque queuedEvents -> f
    java.lang.Object releasedLock -> g
    boolean released -> h
    boolean throwsWhenUsingWrongThread -> i
    1:1:void <init>(android.os.Looper,androidx.media3.common.util.Clock,androidx.media3.common.util.ListenerSet$IterationFinishedEvent):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Looper;Lm/c;Lm/n$b;)V"}
    2:2:void <init>(java.util.concurrent.CopyOnWriteArraySet,android.os.Looper,androidx.media3.common.util.Clock,androidx.media3.common.util.ListenerSet$IterationFinishedEvent,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/CopyOnWriteArraySet;Landroid/os/Looper;Lm/c;Lm/n$b;Z)V"}
    1:1:void $r8$lambda$AlaP-gu7Lfe4GahLPmVnd_l2pLA(java.util.concurrent.CopyOnWriteArraySet,int,androidx.media3.common.util.ListenerSet$Event):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/CopyOnWriteArraySet;ILm/n$a;)V"}
    1:1:boolean $r8$lambda$bio3pd12v5B_9b5UeFaPn9XBQ90(androidx.media3.common.util.ListenerSet,android.os.Message):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/n;Landroid/os/Message;)Z"}
    1:1:void add(java.lang.Object):0:0 -> c
    1:1:androidx.media3.common.util.ListenerSet copy(android.os.Looper,androidx.media3.common.util.Clock,androidx.media3.common.util.ListenerSet$IterationFinishedEvent):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Looper;Lm/c;Lm/n$b;)Lm/n;"}
    1:1:androidx.media3.common.util.ListenerSet copy(android.os.Looper,androidx.media3.common.util.ListenerSet$IterationFinishedEvent):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Looper;Lm/n$b;)Lm/n;"}
    1:1:void flushEvents():0:0 -> f
    1:1:boolean handleMessage(android.os.Message):0:0 -> g
    1:1:void lambda$queueEvent$0(java.util.concurrent.CopyOnWriteArraySet,int,androidx.media3.common.util.ListenerSet$Event):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/CopyOnWriteArraySet;ILm/n$a;)V"}
    1:1:void queueEvent(int,androidx.media3.common.util.ListenerSet$Event):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/n$a;)V"}
    1:1:void release():0:0 -> j
    1:1:void sendEvent(int,androidx.media3.common.util.ListenerSet$Event):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/n$a;)V"}
    1:1:void verifyCurrentThread():0:0 -> l
androidx.media3.common.util.ListenerSet$$ExternalSyntheticLambda0 -> m.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.common.util.ListenerSet androidx.media3.common.util.ListenerSet$$InternalSyntheticLambda$8$d82233be56f79619cbe03a89bf866c076d5aee524bc6873c33bbd91a4c2f51c5$0.f$0 -> f
    1:1:void androidx.media3.common.util.ListenerSet$$InternalSyntheticLambda$8$d82233be56f79619cbe03a89bf866c076d5aee524bc6873c33bbd91a4c2f51c5$0.<init>(androidx.media3.common.util.ListenerSet):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/n;)V"}
    1:1:boolean androidx.media3.common.util.ListenerSet$$InternalSyntheticLambda$8$d82233be56f79619cbe03a89bf866c076d5aee524bc6873c33bbd91a4c2f51c5$0.handleMessage(android.os.Message):0:0 -> handleMessage
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.ListenerSet$$ExternalSyntheticLambda1 -> m.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.CopyOnWriteArraySet androidx.media3.common.util.ListenerSet$$InternalSyntheticLambda$8$fb08e933538635b21dc4747d7be9e3e372ee813915616d51fc38e5ec147ee04e$0.f$0 -> f
    int androidx.media3.common.util.ListenerSet$$InternalSyntheticLambda$8$fb08e933538635b21dc4747d7be9e3e372ee813915616d51fc38e5ec147ee04e$0.f$1 -> g
    androidx.media3.common.util.ListenerSet$Event androidx.media3.common.util.ListenerSet$$InternalSyntheticLambda$8$fb08e933538635b21dc4747d7be9e3e372ee813915616d51fc38e5ec147ee04e$0.f$2 -> h
    1:1:void androidx.media3.common.util.ListenerSet$$InternalSyntheticLambda$8$fb08e933538635b21dc4747d7be9e3e372ee813915616d51fc38e5ec147ee04e$0.<init>(java.util.concurrent.CopyOnWriteArraySet,int,androidx.media3.common.util.ListenerSet$Event):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/CopyOnWriteArraySet;ILm/n$a;)V"}
    1:1:void androidx.media3.common.util.ListenerSet$$InternalSyntheticLambda$8$fb08e933538635b21dc4747d7be9e3e372ee813915616d51fc38e5ec147ee04e$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.ListenerSet$Event -> m.n$a:
    void invoke(java.lang.Object) -> b
androidx.media3.common.util.ListenerSet$IterationFinishedEvent -> m.n$b:
    void invoke(java.lang.Object,androidx.media3.common.FlagSet) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lj/p;)V"}
androidx.media3.common.util.ListenerSet$ListenerHolder -> m.n$c:
    java.lang.Object listener -> a
    androidx.media3.common.FlagSet$Builder flagsBuilder -> b
    boolean needsIterationFinishedEvent -> c
    boolean released -> d
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:void invoke(int,androidx.media3.common.util.ListenerSet$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/n$a;)V"}
    1:1:void iterationFinished(androidx.media3.common.util.ListenerSet$IterationFinishedEvent):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/n$b;)V"}
    1:1:void release(androidx.media3.common.util.ListenerSet$IterationFinishedEvent):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/n$b;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.common.util.Log -> m.o:
    java.lang.Object lock -> a
    int logLevel -> b
    boolean logStackTraces -> c
    androidx.media3.common.util.Log$Logger logger -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String appendThrowableString(java.lang.String,java.lang.Throwable):0:0 -> a
    1:1:void d(java.lang.String,java.lang.String):0:0 -> b
    1:1:void e(java.lang.String,java.lang.String):0:0 -> c
    1:1:void e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> d
    1:1:java.lang.String getThrowableString(java.lang.Throwable):0:0 -> e
    1:1:void i(java.lang.String,java.lang.String):0:0 -> f
    1:1:boolean isCausedByUnknownHostException(java.lang.Throwable):0:0 -> g
    1:1:void w(java.lang.String,java.lang.String):0:0 -> h
    1:1:void w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> i
androidx.media3.common.util.Log$Logger -> m.o$a:
    androidx.media3.common.util.Log$Logger DEFAULT -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> c
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> d
androidx.media3.common.util.Log$Logger$1 -> m.o$a$a:
    void <init>() -> <init>
    1:1:void w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> a
    1:1:void d(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> b
    1:1:void i(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> c
    1:1:void e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> d
androidx.media3.common.util.LongArray -> m.p:
    int size -> a
    long[] values -> b
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:void add(long):0:0 -> a
    1:1:long get(int):0:0 -> b
    1:1:int size():0:0 -> c
androidx.media3.common.util.LongArrayQueue -> m.q:
    int headIndex -> a
    int tailIndex -> b
    int size -> c
    long[] data -> d
    int wrapAroundMask -> e
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:void clear():0:0 -> a
    1:1:long element():0:0 -> b
    1:1:boolean isEmpty():0:0 -> c
    1:1:long remove():0:0 -> d
androidx.media3.common.util.MediaFormatUtil -> m.r:
    1:1:void maybeSetByteBuffer(android.media.MediaFormat,java.lang.String,byte[]):0:0 -> a
    1:1:void maybeSetColorInfo(android.media.MediaFormat,androidx.media3.common.ColorInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/MediaFormat;Lj/h;)V"}
    1:1:void maybeSetFloat(android.media.MediaFormat,java.lang.String,float):0:0 -> c
    1:1:void maybeSetInteger(android.media.MediaFormat,java.lang.String,int):0:0 -> d
    1:1:void setCsdBuffers(android.media.MediaFormat,java.util.List):0:0 -> e
androidx.media3.common.util.NetworkTypeObserver -> m.t:
    android.os.Handler mainHandler -> a
    java.util.concurrent.CopyOnWriteArrayList listeners -> b
    java.lang.Object networkTypeLock -> c
    int networkType -> d
    androidx.media3.common.util.NetworkTypeObserver staticInstance -> e
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:void $r8$lambda$DoEVJeYUKRUR6jupXFdxPNaPJ8k(androidx.media3.common.util.NetworkTypeObserver,androidx.media3.common.util.NetworkTypeObserver$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/t;Lm/t$c;)V"}
    1:1:int access$100(android.content.Context):0:0 -> b
    1:1:void access$200(androidx.media3.common.util.NetworkTypeObserver,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/t;I)V"}
    1:1:androidx.media3.common.util.NetworkTypeObserver getInstance(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lm/t;"}
    1:1:int getMobileNetworkType(android.net.NetworkInfo):0:0 -> e
    1:1:int getNetworkType():0:0 -> f
    1:1:int getNetworkTypeFromConnectivityManager(android.content.Context):0:0 -> g
    1:1:void lambda$register$0(androidx.media3.common.util.NetworkTypeObserver$Listener):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/t$c;)V"}
    1:1:void register(androidx.media3.common.util.NetworkTypeObserver$Listener):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/t$c;)V"}
    1:1:void removeClearedReferences():0:0 -> j
    1:1:void updateNetworkType(int):0:0 -> k
androidx.media3.common.util.NetworkTypeObserver$$ExternalSyntheticLambda0 -> m.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.common.util.NetworkTypeObserver androidx.media3.common.util.NetworkTypeObserver$$InternalSyntheticLambda$10$15275a1e8bc95771243a486ec6f7d9909896810f67c9b8a594a2a5c912ce6475$0.f$0 -> f
    androidx.media3.common.util.NetworkTypeObserver$Listener androidx.media3.common.util.NetworkTypeObserver$$InternalSyntheticLambda$10$15275a1e8bc95771243a486ec6f7d9909896810f67c9b8a594a2a5c912ce6475$0.f$1 -> g
    1:1:void androidx.media3.common.util.NetworkTypeObserver$$InternalSyntheticLambda$10$15275a1e8bc95771243a486ec6f7d9909896810f67c9b8a594a2a5c912ce6475$0.<init>(androidx.media3.common.util.NetworkTypeObserver,androidx.media3.common.util.NetworkTypeObserver$Listener):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/t;Lm/t$c;)V"}
    1:1:void androidx.media3.common.util.NetworkTypeObserver$$InternalSyntheticLambda$10$15275a1e8bc95771243a486ec6f7d9909896810f67c9b8a594a2a5c912ce6475$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.NetworkTypeObserver$1 -> m.t$a:
androidx.media3.common.util.NetworkTypeObserver$Api31 -> m.t$b:
    1:1:void disambiguate4gAnd5gNsa(android.content.Context,androidx.media3.common.util.NetworkTypeObserver):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lm/t;)V"}
androidx.media3.common.util.NetworkTypeObserver$Api31$$ExternalSyntheticApiModelOutline0 -> m.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.concurrent.Executor androidx.media3.common.util.NetworkTypeObserver$Api31$$InternalSyntheticApiModelOutline$10$263a275bd9ce748aadf6ab081193159efecdef1e2a3b0e4616dde51b73205936$0.m(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.NetworkTypeObserver$Api31$$ExternalSyntheticApiModelOutline1 -> m.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.common.util.NetworkTypeObserver$Api31$$InternalSyntheticApiModelOutline$10$263a275bd9ce748aadf6ab081193159efecdef1e2a3b0e4616dde51b73205936$1.m(android.telephony.TelephonyManager,java.util.concurrent.Executor,android.telephony.TelephonyCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.NetworkTypeObserver$Api31$$ExternalSyntheticApiModelOutline2 -> m.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.common.util.NetworkTypeObserver$Api31$$InternalSyntheticApiModelOutline$10$263a275bd9ce748aadf6ab081193159efecdef1e2a3b0e4616dde51b73205936$2.m(android.telephony.TelephonyManager,android.telephony.TelephonyCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.NetworkTypeObserver$Api31$DisplayInfoCallback -> m.t$b$a:
    androidx.media3.common.util.NetworkTypeObserver instance -> a
    1:1:void <init>(androidx.media3.common.util.NetworkTypeObserver):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/t;)V"}
    1:1:void onDisplayInfoChanged(android.telephony.TelephonyDisplayInfo):0:0 -> onDisplayInfoChanged
androidx.media3.common.util.NetworkTypeObserver$Api31$DisplayInfoCallback$$ExternalSyntheticApiModelOutline0 -> m.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.common.util.NetworkTypeObserver$Api31$DisplayInfoCallback$$InternalSyntheticApiModelOutline$11$50648bdd3fcc712f74164fdf18b15b959f863ca49a4f8225b8bdd09e8d218411$0.m(android.telephony.TelephonyDisplayInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.NetworkTypeObserver$Listener -> m.t$c:
    void onNetworkTypeChanged(int) -> a
androidx.media3.common.util.NetworkTypeObserver$Receiver -> m.t$d:
    androidx.media3.common.util.NetworkTypeObserver this$0 -> a
    1:1:void <init>(androidx.media3.common.util.NetworkTypeObserver):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/t;)V"}
    2:2:void <init>(androidx.media3.common.util.NetworkTypeObserver,androidx.media3.common.util.NetworkTypeObserver$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/t;Lm/t$a;)V"}
    1:1:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
androidx.media3.common.util.ParsableBitArray -> m.y:
    byte[] data -> a
    int byteOffset -> b
    int bitOffset -> c
    int byteLimit -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(byte[]):0:0 -> <init>
    3:3:void <init>(byte[],int):0:0 -> <init>
    1:1:void assertValidOffset():0:0 -> a
    1:1:int bitsLeft():0:0 -> b
    1:1:void byteAlign():0:0 -> c
    1:1:int getBytePosition():0:0 -> d
    1:1:int getPosition():0:0 -> e
    1:1:void putInt(int,int):0:0 -> f
    1:1:boolean readBit():0:0 -> g
    1:1:int readBits(int):0:0 -> h
    1:1:void readBits(byte[],int,int):0:0 -> i
    1:1:long readBitsToLong(int):0:0 -> j
    1:1:void readBytes(byte[],int,int):0:0 -> k
    1:1:java.lang.String readBytesAsString(int,java.nio.charset.Charset):0:0 -> l
    1:1:void reset(androidx.media3.common.util.ParsableByteArray):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void reset(byte[]):0:0 -> n
    1:1:void reset(byte[],int):0:0 -> o
    1:1:void setPosition(int):0:0 -> p
    1:1:void skipBit():0:0 -> q
    1:1:void skipBits(int):0:0 -> r
    1:1:void skipBytes(int):0:0 -> s
androidx.media3.common.util.ParsableByteArray -> m.z:
    byte[] data -> a
    int position -> b
    int limit -> c
    char[] CR_AND_LF -> d
    char[] LF -> e
    com.google.common.collect.ImmutableSet SUPPORTED_CHARSETS_FOR_READLINE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    3:3:void <init>(byte[]):0:0 -> <init>
    4:4:void <init>(byte[],int):0:0 -> <init>
    1:1:java.lang.String readNullTerminatedString():0:0 -> A
    1:1:java.lang.String readNullTerminatedString(int):0:0 -> B
    1:1:short readShort():0:0 -> C
    1:1:java.lang.String readString(int):0:0 -> D
    1:1:java.lang.String readString(int,java.nio.charset.Charset):0:0 -> E
    1:1:int readSynchSafeInt():0:0 -> F
    1:1:int readUnsignedByte():0:0 -> G
    1:1:int readUnsignedFixedPoint1616():0:0 -> H
    1:1:long readUnsignedInt():0:0 -> I
    1:1:int readUnsignedInt24():0:0 -> J
    1:1:int readUnsignedIntToInt():0:0 -> K
    1:1:long readUnsignedLongToLong():0:0 -> L
    1:1:int readUnsignedShort():0:0 -> M
    1:1:long readUtf8EncodedLong():0:0 -> N
    1:1:java.nio.charset.Charset readUtfCharsetFromBom():0:0 -> O
    1:1:void reset(int):0:0 -> P
    1:1:void reset(byte[]):0:0 -> Q
    1:1:void reset(byte[],int):0:0 -> R
    1:1:void setLimit(int):0:0 -> S
    1:1:void setPosition(int):0:0 -> T
    1:1:void skipBytes(int):0:0 -> U
    1:1:void skipLineTerminator(java.nio.charset.Charset):0:0 -> V
    1:1:int bytesLeft():0:0 -> a
    1:1:int capacity():0:0 -> b
    1:1:void ensureCapacity(int):0:0 -> c
    1:1:int findNextLineTerminator(java.nio.charset.Charset):0:0 -> d
    1:1:byte[] getData():0:0 -> e
    1:1:int getPosition():0:0 -> f
    1:1:int limit():0:0 -> g
    1:1:char peekChar(java.nio.charset.Charset):0:0 -> h
    1:1:int peekCharacterAndSize(java.nio.charset.Charset):0:0 -> i
    1:1:int peekUnsignedByte():0:0 -> j
    1:1:void readBytes(androidx.media3.common.util.ParsableBitArray,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;I)V"}
    1:1:void readBytes(byte[],int,int):0:0 -> l
    1:1:char readCharacterIfInList(java.nio.charset.Charset,char[]):0:0 -> m
    1:1:java.lang.String readDelimiterTerminatedString(char):0:0 -> n
    1:1:double readDouble():0:0 -> o
    1:1:int readInt():0:0 -> p
    1:1:int readInt24():0:0 -> q
    1:1:java.lang.String readLine():0:0 -> r
    1:1:java.lang.String readLine(java.nio.charset.Charset):0:0 -> s
    1:1:int readLittleEndianInt():0:0 -> t
    1:1:long readLittleEndianLong():0:0 -> u
    1:1:short readLittleEndianShort():0:0 -> v
    1:1:long readLittleEndianUnsignedInt():0:0 -> w
    1:1:int readLittleEndianUnsignedIntToInt():0:0 -> x
    1:1:int readLittleEndianUnsignedShort():0:0 -> y
    1:1:long readLong():0:0 -> z
androidx.media3.common.util.Size -> m.a0:
    int width -> a
    int height -> b
    androidx.media3.common.util.Size UNKNOWN -> c
    androidx.media3.common.util.Size ZERO -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int):0:0 -> <init>
    1:1:int getHeight():0:0 -> a
    1:1:int getWidth():0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.common.util.SystemClock -> m.b0:
    void <init>() -> <init>
    1:1:long currentTimeMillis():0:0 -> a
    1:1:long uptimeMillis():0:0 -> b
    1:1:void onThreadBlocked():0:0 -> c
    1:1:long elapsedRealtime():0:0 -> d
    1:1:long nanoTime():0:0 -> e
    1:1:androidx.media3.common.util.HandlerWrapper createHandler(android.os.Looper,android.os.Handler$Callback):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Looper;Landroid/os/Handler$Callback;)Lm/k;"}
androidx.media3.common.util.SystemHandlerWrapper -> m.c0:
    android.os.Handler handler -> a
    java.util.List messagePool -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Handler):0:0 -> <init>
    1:1:boolean hasMessages(int):0:0 -> a
    1:1:androidx.media3.common.util.HandlerWrapper$Message obtainMessage(int,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(III)Lm/k$a;"}
    1:1:boolean sendMessageAtFrontOfQueue(androidx.media3.common.util.HandlerWrapper$Message):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/k$a;)Z"}
    1:1:boolean sendEmptyMessageAtTime(int,long):0:0 -> d
    1:1:void removeMessages(int):0:0 -> e
    1:1:androidx.media3.common.util.HandlerWrapper$Message obtainMessage(int,java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)Lm/k$a;"}
    1:1:boolean sendEmptyMessage(int):0:0 -> g
    1:1:void removeCallbacksAndMessages(java.lang.Object):0:0 -> h
    1:1:android.os.Looper getLooper():0:0 -> i
    1:1:boolean post(java.lang.Runnable):0:0 -> j
    1:1:androidx.media3.common.util.HandlerWrapper$Message obtainMessage(int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lm/k$a;"}
    1:1:void access$100(androidx.media3.common.util.SystemHandlerWrapper$SystemMessage):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c0$b;)V"}
    1:1:androidx.media3.common.util.SystemHandlerWrapper$SystemMessage obtainSystemMessage():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/c0$b;"}
    1:1:void recycleMessage(androidx.media3.common.util.SystemHandlerWrapper$SystemMessage):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c0$b;)V"}
androidx.media3.common.util.SystemHandlerWrapper$1 -> m.c0$a:
androidx.media3.common.util.SystemHandlerWrapper$SystemMessage -> m.c0$b:
    android.os.Message message -> a
    androidx.media3.common.util.SystemHandlerWrapper handler -> b
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.common.util.SystemHandlerWrapper$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c0$a;)V"}
    1:1:void sendToTarget():0:0 -> a
    1:1:void recycle():0:0 -> b
    1:1:boolean sendAtFrontOfQueue(android.os.Handler):0:0 -> c
    1:1:androidx.media3.common.util.SystemHandlerWrapper$SystemMessage setMessage(android.os.Message,androidx.media3.common.util.SystemHandlerWrapper):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Message;Lm/c0;)Lm/c0$b;"}
androidx.media3.common.util.TimedValueQueue -> m.d0:
    long[] timestamps -> a
    java.lang.Object[] values -> b
    int first -> c
    int size -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:void add(long,java.lang.Object):0:0 -> a
    1:1:void addUnchecked(long,java.lang.Object):0:0 -> b
    1:1:void clear():0:0 -> c
    1:1:void clearBufferOnTimeDiscontinuity(long):0:0 -> d
    1:1:void doubleCapacityIfFull():0:0 -> e
    1:1:java.lang.Object[] newArray(int):0:0 -> f
    1:1:java.lang.Object poll(long,boolean):0:0 -> g
    1:1:java.lang.Object pollFirst():0:0 -> h
    1:1:java.lang.Object pollFloor(long):0:0 -> i
    1:1:java.lang.Object popFirst():0:0 -> j
    1:1:int size():0:0 -> k
androidx.media3.common.util.TimestampAdjuster -> m.e0:
    long firstSampleTimestampUs -> a
    long timestampOffsetUs -> b
    long lastUnadjustedTimestampUs -> c
    java.lang.ThreadLocal nextSampleTimestampUs -> d
    1:1:void <init>(long):0:0 -> <init>
    1:1:long adjustSampleTimestamp(long):0:0 -> a
    1:1:long adjustTsTimestamp(long):0:0 -> b
    1:1:long adjustTsTimestampGreaterThanPreviousTimestamp(long):0:0 -> c
    1:1:long getFirstSampleTimestampUs():0:0 -> d
    1:1:long getLastAdjustedTimestampUs():0:0 -> e
    1:1:long getTimestampOffsetUs():0:0 -> f
    1:1:boolean isInitialized():0:0 -> g
    1:1:long ptsToUs(long):0:0 -> h
    1:1:void reset(long):0:0 -> i
    1:1:void sharedInitializeOrWait(boolean,long,long):0:0 -> j
    1:1:long usToNonWrappedPts(long):0:0 -> k
    1:1:long usToWrappedPts(long):0:0 -> l
androidx.media3.common.util.TraceUtil -> m.f0:
    1:1:void beginSection(java.lang.String):0:0 -> a
    1:1:void endSection():0:0 -> b
androidx.media3.common.util.UriUtil -> m.g0:
    1:1:java.lang.String getRelativePath(android.net.Uri,android.net.Uri):0:0 -> a
    1:1:int[] getUriIndices(java.lang.String):0:0 -> b
    1:1:boolean isAbsolute(java.lang.String):0:0 -> c
    1:1:java.lang.String removeDotSegments(java.lang.StringBuilder,int,int):0:0 -> d
    1:1:java.lang.String resolve(java.lang.String,java.lang.String):0:0 -> e
    1:1:android.net.Uri resolveToUri(java.lang.String,java.lang.String):0:0 -> f
androidx.media3.common.util.Util -> m.p0:
    int SDK_INT -> a
    java.lang.String DEVICE -> b
    java.lang.String MANUFACTURER -> c
    java.lang.String MODEL -> d
    java.lang.String DEVICE_DEBUG_INFO -> e
    byte[] EMPTY_BYTE_ARRAY -> f
    long[] EMPTY_LONG_ARRAY -> g
    java.util.regex.Pattern XS_DATE_TIME_PATTERN -> h
    java.util.regex.Pattern XS_DURATION_PATTERN -> i
    java.util.regex.Pattern ESCAPED_CHARACTER_PATTERN -> j
    java.util.regex.Pattern ISM_PATH_PATTERN -> k
    java.util.HashMap languageTagReplacementMap -> l
    java.lang.String[] additionalIsoLanguageReplacements -> m
    java.lang.String[] isoLegacyTagReplacements -> n
    int[] CRC32_BYTES_MSBF -> o
    int[] CRC16_BYTES_MSBF -> p
    int[] CRC8_BYTES_MSBF -> q
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:android.os.Handler createHandlerForCurrentLooper():0:0 -> A
    1:1:boolean isEncodingHighResolutionPcm(int):0:0 -> A0
    1:1:android.os.Handler createHandlerForCurrentLooper(android.os.Handler$Callback):0:0 -> B
    1:1:boolean isEncodingLinearPcm(int):0:0 -> B0
    1:1:android.os.Handler createHandlerForCurrentOrMainLooper():0:0 -> C
    1:1:boolean isFrameDropAllowedOnSurfaceInput(android.content.Context):0:0 -> C0
    1:1:android.os.Handler createHandlerForCurrentOrMainLooper(android.os.Handler$Callback):0:0 -> D
    1:1:boolean isLinebreak(int):0:0 -> D0
    1:1:java.util.HashMap createIsoLanguageReplacementMap():0:0 -> E
    1:1:boolean isLocalFileUri(android.net.Uri):0:0 -> E0
    1:1:long durationUsToSampleCount(long,int):0:0 -> F
    1:1:boolean isTv(android.content.Context):0:0 -> F0
    1:1:android.net.Uri fixSmoothStreamingIsmManifestUri(android.net.Uri):0:0 -> G
    1:1:boolean isWear(android.content.Context):0:0 -> G0
    1:1:java.lang.String formatInvariant(java.lang.String,java.lang.Object[]):0:0 -> H
    1:1:java.lang.Thread lambda$newSingleThreadExecutor$3(java.lang.String,java.lang.Runnable):0:0 -> H0
    1:1:java.lang.String fromUtf8Bytes(byte[]):0:0 -> I
    1:1:int linearSearch(int[],int):0:0 -> I0
    1:1:java.lang.String fromUtf8Bytes(byte[],int,int):0:0 -> J
    1:1:java.lang.String maybeReplaceLegacyLanguageTags(java.lang.String):0:0 -> J0
    1:1:int generateAudioSessionIdV21(android.content.Context):0:0 -> K
    1:1:long msToUs(long):0:0 -> K0
    1:1:int getApiLevelThatAudioFormatIntroducedAudioEncoding(int):0:0 -> L
    1:1:java.util.concurrent.ExecutorService newSingleThreadExecutor(java.lang.String):0:0 -> L0
    1:1:android.media.AudioFormat getAudioFormat(int,int,int):0:0 -> M
    1:1:java.lang.String normalizeLanguageCode(java.lang.String):0:0 -> M0
    1:1:int getAudioTrackChannelConfig(int):0:0 -> N
    1:1:java.lang.Object[] nullSafeArrayAppend(java.lang.Object[],java.lang.Object):0:0 -> N0
    1:1:androidx.media3.common.Player$Commands getAvailableCommands(androidx.media3.common.Player,androidx.media3.common.Player$Commands):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Lj/d0$b;)Lj/d0$b;"}
    1:1:java.lang.Object[] nullSafeArrayConcatenation(java.lang.Object[],java.lang.Object[]):0:0 -> O0
    1:1:int getBigEndianInt(java.nio.ByteBuffer,int):0:0 -> P
    1:1:java.lang.Object[] nullSafeArrayCopy(java.lang.Object[],int):0:0 -> P0
    1:1:byte[] getBytesFromHexString(java.lang.String):0:0 -> Q
    1:1:java.lang.Object[] nullSafeArrayCopyOfRange(java.lang.Object[],int,int):0:0 -> Q0
    1:1:int getCodecCountOfType(java.lang.String,int):0:0 -> R
    1:1:long parseXsDateTime(java.lang.String):0:0 -> R0
    1:1:java.lang.String getCodecsOfType(java.lang.String,int):0:0 -> S
    1:1:long parseXsDuration(java.lang.String):0:0 -> S0
    1:1:java.lang.String getCountryCode(android.content.Context):0:0 -> T
    1:1:boolean postOrRun(android.os.Handler,java.lang.Runnable):0:0 -> T0
    1:1:android.graphics.Point getCurrentDisplayModeSize(android.content.Context):0:0 -> U
    1:1:boolean readBoolean(android.os.Parcel):0:0 -> U0
    1:1:android.graphics.Point getCurrentDisplayModeSize(android.content.Context,android.view.Display):0:0 -> V
    1:1:void removeRange(java.util.List,int,int):0:0 -> V0
    1:1:android.os.Looper getCurrentOrMainLooper():0:0 -> W
    1:1:long sampleCountToDurationUs(long,int):0:0 -> W0
    1:1:void getDisplaySizeV23(android.view.Display,android.graphics.Point):0:0 -> X
    1:1:long scaleLargeTimestamp(long,long,long):0:0 -> X0
    1:1:int getErrorCodeForMediaDrmErrorCode(int):0:0 -> Y
    1:1:long[] scaleLargeTimestamps(java.util.List,long,long):0:0 -> Y0
    1:1:int getErrorCodeFromPlatformDiagnosticsInfo(java.lang.String):0:0 -> Z
    1:1:void scaleLargeTimestampsInPlace(long[],long,long):0:0 -> Z0
    1:1:java.lang.Thread $r8$lambda$vGFXxBexJg5ui1y9zD7JGfdkxhg(java.lang.String,java.lang.Runnable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String getFormatSupportString(int):0:0 -> a0
    1:1:long scaleLargeValue(long,long,long,java.math.RoundingMode):0:0 -> a1
    1:1:long addWithOverflowDefault(long,long,long):0:0 -> b
    1:1:java.lang.String getLocaleLanguageTag(java.util.Locale):0:0 -> b0
    1:1:long scaleLargeValueFallback(long,long,long,java.math.RoundingMode):0:0 -> b1
    1:1:boolean areEqual(java.lang.Object,java.lang.Object):0:0 -> c
    1:1:java.lang.String getLocaleLanguageTagV21(java.util.Locale):0:0 -> c0
    1:1:long[] scaleLargeValues(java.util.List,long,long,java.math.RoundingMode):0:0 -> c1
    1:1:int binarySearchCeil(long[],long,boolean,boolean):0:0 -> d
    1:1:int getMaxPendingFramesCountForMediaCodecDecoders(android.content.Context):0:0 -> d0
    1:1:void scaleLargeValuesInPlace(long[],long,long,java.math.RoundingMode):0:0 -> d1
    1:1:int binarySearchFloor(java.util.List,java.lang.Comparable,boolean,boolean):0:0 -> e
    1:1:long getMediaDurationForPlayoutDuration(long,float):0:0 -> e0
    1:1:java.lang.String[] split(java.lang.String,java.lang.String):0:0 -> e1
    1:1:int binarySearchFloor(androidx.media3.common.util.LongArray,long,boolean,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/p;JZZ)I"}
    1:1:long getNowUnixTimeMs(long):0:0 -> f0
    1:1:java.lang.String[] splitAtFirst(java.lang.String,java.lang.String):0:0 -> f1
    1:1:int binarySearchFloor(int[],int,boolean,boolean):0:0 -> g
    1:1:int getPcmEncoding(int):0:0 -> g0
    1:1:java.lang.String[] splitCodecs(java.lang.String):0:0 -> g1
    1:1:int binarySearchFloor(long[],long,boolean,boolean):0:0 -> h
    1:1:androidx.media3.common.Format getPcmFormat(int,int,int):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(III)Lj/q;"}
    1:1:long subtractWithOverflowDefault(long,long,long):0:0 -> h1
    1:1:java.lang.Object castNonNull(java.lang.Object):0:0 -> i
    1:1:int getPcmFrameSize(int,int):0:0 -> i0
    1:1:java.lang.String toHexString(byte[]):0:0 -> i1
    1:1:java.lang.Object[] castNonNullTypeArray(java.lang.Object[]):0:0 -> j
    1:1:long getPlayoutDurationForMediaDuration(long,float):0:0 -> j0
    1:1:long toLong(int,int):0:0 -> j1
    1:1:int ceilDivide(int,int):0:0 -> k
    1:1:java.util.List getRoleFlagStrings(int):0:0 -> k0
    1:1:long toUnsignedLong(int):0:0 -> k1
    1:1:long ceilDivide(long,long):0:0 -> l
    1:1:java.util.List getSelectionFlagStrings(int):0:0 -> l0
    1:1:long usToMs(long):0:0 -> l1
    1:1:void closeQuietly(java.io.Closeable):0:0 -> m
    1:1:int getStreamTypeForAudioUsage(int):0:0 -> m0
    1:1:void writeBoolean(android.os.Parcel,boolean):0:0 -> m1
    1:1:int compareLong(long,long):0:0 -> n
    1:1:java.lang.String[] getSystemLanguageCodes():0:0 -> n0
    1:1:float constrainValue(float,float,float):0:0 -> o
    1:1:java.lang.String[] getSystemLocales():0:0 -> o0
    1:1:int constrainValue(int,int,int):0:0 -> p
    1:1:java.lang.String[] getSystemLocalesV24(android.content.res.Configuration):0:0 -> p0
    1:1:long constrainValue(long,long,long):0:0 -> q
    1:1:java.lang.String getSystemProperty(java.lang.String):0:0 -> q0
    1:1:boolean contains(android.util.SparseArray,int):0:0 -> r
    1:1:java.lang.String getTrackTypeString(int):0:0 -> r0
    1:1:boolean contains(java.lang.Object[],java.lang.Object):0:0 -> s
    1:1:byte[] getUtf8Bytes(java.lang.String):0:0 -> s0
    1:1:boolean contentEquals(android.util.SparseArray,android.util.SparseArray):0:0 -> t
    1:1:int inferContentType(android.net.Uri):0:0 -> t0
    1:1:int contentHashCode(android.util.SparseArray):0:0 -> u
    1:1:int inferContentTypeForExtension(java.lang.String):0:0 -> u0
    1:1:int crc16(byte[],int,int,int):0:0 -> v
    1:1:int inferContentTypeForUriAndMimeType(android.net.Uri,java.lang.String):0:0 -> v0
    1:1:int crc16UpdateFourBits(int,int):0:0 -> w
    1:1:boolean inflate(androidx.media3.common.util.ParsableByteArray,androidx.media3.common.util.ParsableByteArray,java.util.zip.Inflater):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Lm/z;Ljava/util/zip/Inflater;)Z"}
    1:1:int crc32(byte[],int,int,int):0:0 -> x
    1:1:java.lang.String intToStringMaxRadix(int):0:0 -> x0
    1:1:int crc8(byte[],int,int,int):0:0 -> y
    1:1:boolean isAutomotive(android.content.Context):0:0 -> y0
    1:1:android.os.Handler createHandler(android.os.Looper,android.os.Handler$Callback):0:0 -> z
    1:1:boolean isBitmapFactorySupportedMimeType(java.lang.String):0:0 -> z0
androidx.media3.common.util.Util$$ExternalSyntheticApiModelOutline0 -> m.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.LocaleList androidx.media3.common.util.Util$$InternalSyntheticApiModelOutline$12$3c3b48d4f03298f0ee8f5d295def1b6c7afe750c4ec26c0e08fe785e65160fd6$0.m(android.content.res.Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.Util$$ExternalSyntheticApiModelOutline1 -> m.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String androidx.media3.common.util.Util$$InternalSyntheticApiModelOutline$12$3c3b48d4f03298f0ee8f5d295def1b6c7afe750c4ec26c0e08fe785e65160fd6$1.m(android.os.LocaleList):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.Util$$ExternalSyntheticApiModelOutline2 -> m.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.common.util.Util$$InternalSyntheticApiModelOutline$8$31e659555c743f5b7614ffc8072544c04b67ef0d798623a2a0736ec14a0bd521$0.m(android.util.SparseArray,android.util.SparseArray):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.Util$$ExternalSyntheticApiModelOutline3 -> m.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.common.util.Util$$InternalSyntheticApiModelOutline$8$c63bc4a97cc7c3f70c99a5b3d222a3e6b8651f2d9bd804c1932c7a72af780464$0.m(android.util.SparseArray):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.Util$$ExternalSyntheticApiModelOutline4 -> m.l0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.Display$Mode androidx.media3.common.util.Util$$InternalSyntheticApiModelOutline$9$3c0bfd18c820ca5472681fddcae0a9d4f354f76ffd682884a2b4d952f2f7d659$0.m(android.view.Display):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.Util$$ExternalSyntheticApiModelOutline5 -> m.m0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.common.util.Util$$InternalSyntheticApiModelOutline$9$3c0bfd18c820ca5472681fddcae0a9d4f354f76ffd682884a2b4d952f2f7d659$1.m(android.view.Display$Mode):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.Util$$ExternalSyntheticApiModelOutline6 -> m.n0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.common.util.Util$$InternalSyntheticApiModelOutline$9$3c0bfd18c820ca5472681fddcae0a9d4f354f76ffd682884a2b4d952f2f7d659$2.m(android.view.Display$Mode):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.Util$$ExternalSyntheticLambda7 -> m.o0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.String androidx.media3.common.util.Util$$InternalSyntheticLambda$9$c0b440ca9a87e28c76effcecd72ec240397ac7a1a9e8ee558c5d1b0b88c05eb6$0.f$0 -> a
    1:1:void androidx.media3.common.util.Util$$InternalSyntheticLambda$9$c0b440ca9a87e28c76effcecd72ec240397ac7a1a9e8ee558c5d1b0b88c05eb6$0.<init>(java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Thread androidx.media3.common.util.Util$$InternalSyntheticLambda$9$c0b440ca9a87e28c76effcecd72ec240397ac7a1a9e8ee558c5d1b0b88c05eb6$0.newThread(java.lang.Runnable):0:0 -> newThread
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.common.util.XmlPullParserUtil -> m.q0:
    1:1:java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> a
    1:1:java.lang.String getAttributeValueIgnorePrefix(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> b
    1:1:boolean isEndTag(org.xmlpull.v1.XmlPullParser):0:0 -> c
    1:1:boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> d
    1:1:boolean isStartTag(org.xmlpull.v1.XmlPullParser):0:0 -> e
    1:1:boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> f
    1:1:boolean isStartTagIgnorePrefix(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> g
    1:1:java.lang.String stripPrefix(java.lang.String):0:0 -> h
androidx.media3.container.MdtaMetadataEntry -> n.a:
    java.lang.String key -> f
    byte[] value -> g
    int localeIndicator -> h
    int typeIndicator -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(android.os.Parcel,androidx.media3.container.MdtaMetadataEntry$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Ln/a$a;)V"}
    3:3:void <init>(java.lang.String,byte[],int,int):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.container.MdtaMetadataEntry$1 -> n.a$a:
    void <init>() -> <init>
    1:1:androidx.media3.container.MdtaMetadataEntry createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ln/a;"}
    1:1:androidx.media3.container.MdtaMetadataEntry[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ln/a;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.container.Mp4LocationData -> n.b:
    float latitude -> f
    float longitude -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(float,float):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    3:3:void <init>(android.os.Parcel,androidx.media3.container.Mp4LocationData$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Ln/b$a;)V"}
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.container.Mp4LocationData$1 -> n.b$a:
    void <init>() -> <init>
    1:1:androidx.media3.container.Mp4LocationData createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ln/b;"}
    1:1:androidx.media3.container.Mp4LocationData[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ln/b;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.container.Mp4TimestampData -> n.c:
    long creationTimestampSeconds -> f
    long modificationTimestampSeconds -> g
    long timescale -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,long,long):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    3:3:void <init>(android.os.Parcel,androidx.media3.container.Mp4TimestampData$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Ln/c$a;)V"}
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.container.Mp4TimestampData$1 -> n.c$a:
    void <init>() -> <init>
    1:1:androidx.media3.container.Mp4TimestampData createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ln/c;"}
    1:1:androidx.media3.container.Mp4TimestampData[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ln/c;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.container.NalUnitUtil -> n.d:
    byte[] NAL_START_CODE -> a
    float[] ASPECT_RATIO_IDC_VALUES -> b
    java.lang.Object scratchEscapePositionsLock -> c
    int[] scratchEscapePositions -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void clearPrefixFlags(boolean[]):0:0 -> a
    1:1:void discardToSps(java.nio.ByteBuffer):0:0 -> b
    1:1:int findNalUnit(byte[],int,int,boolean[]):0:0 -> c
    1:1:int findNextUnescapeIndex(byte[],int,int):0:0 -> d
    1:1:int getH265NalUnitType(byte[],int):0:0 -> e
    1:1:int getNalUnitType(byte[],int):0:0 -> f
    1:1:boolean isNalUnitSei(java.lang.String,byte):0:0 -> g
    1:1:androidx.media3.container.NalUnitUtil$H265SpsData parseH265SpsNalUnit(byte[],int,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ln/d$a;"}
    1:1:androidx.media3.container.NalUnitUtil$H265SpsData parseH265SpsNalUnitPayload(byte[],int,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ln/d$a;"}
    1:1:androidx.media3.container.NalUnitUtil$PpsData parsePpsNalUnit(byte[],int,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ln/d$b;"}
    1:1:androidx.media3.container.NalUnitUtil$PpsData parsePpsNalUnitPayload(byte[],int,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ln/d$b;"}
    1:1:androidx.media3.container.NalUnitUtil$SpsData parseSpsNalUnit(byte[],int,int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ln/d$c;"}
    1:1:androidx.media3.container.NalUnitUtil$SpsData parseSpsNalUnitPayload(byte[],int,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ln/d$c;"}
    1:1:void skipH265ScalingList(androidx.media3.container.ParsableNalUnitBitArray):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln/e;)V"}
    1:1:void skipHrdParameters(androidx.media3.container.ParsableNalUnitBitArray):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln/e;)V"}
    1:1:void skipScalingList(androidx.media3.container.ParsableNalUnitBitArray,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln/e;I)V"}
    1:1:void skipShortTermReferencePictureSets(androidx.media3.container.ParsableNalUnitBitArray):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln/e;)V"}
    1:1:int unescapeStream(byte[],int):0:0 -> r
androidx.media3.container.NalUnitUtil$H265SpsData -> n.d$a:
    int generalProfileSpace -> a
    boolean generalTierFlag -> b
    int generalProfileIdc -> c
    int generalProfileCompatibilityFlags -> d
    int chromaFormatIdc -> e
    int bitDepthLumaMinus8 -> f
    int bitDepthChromaMinus8 -> g
    int[] constraintBytes -> h
    int generalLevelIdc -> i
    int seqParameterSetId -> j
    int width -> k
    int height -> l
    float pixelWidthHeightRatio -> m
    int maxNumReorderPics -> n
    int colorSpace -> o
    int colorRange -> p
    int colorTransfer -> q
    1:1:void <init>(int,boolean,int,int,int,int,int,int[],int,int,int,int,float,int,int,int,int):0:0 -> <init>
androidx.media3.container.NalUnitUtil$PpsData -> n.d$b:
    int picParameterSetId -> a
    int seqParameterSetId -> b
    boolean bottomFieldPicOrderInFramePresentFlag -> c
    1:1:void <init>(int,int,boolean):0:0 -> <init>
androidx.media3.container.NalUnitUtil$SpsData -> n.d$c:
    int profileIdc -> a
    int constraintsFlagsAndReservedZero2Bits -> b
    int levelIdc -> c
    int seqParameterSetId -> d
    int maxNumRefFrames -> e
    int width -> f
    int height -> g
    float pixelWidthHeightRatio -> h
    int bitDepthLumaMinus8 -> i
    int bitDepthChromaMinus8 -> j
    boolean separateColorPlaneFlag -> k
    boolean frameMbsOnlyFlag -> l
    int frameNumLength -> m
    int picOrderCountType -> n
    int picOrderCntLsbLength -> o
    boolean deltaPicOrderAlwaysZeroFlag -> p
    int colorSpace -> q
    int colorRange -> r
    int colorTransfer -> s
    int maxNumReorderFrames -> t
    1:1:void <init>(int,int,int,int,int,int,int,float,int,int,boolean,boolean,int,int,int,boolean,int,int,int,int):0:0 -> <init>
androidx.media3.container.ParsableNalUnitBitArray -> n.e:
    byte[] data -> a
    int byteLimit -> b
    int byteOffset -> c
    int bitOffset -> d
    1:1:void <init>(byte[],int,int):0:0 -> <init>
    1:1:void assertValidOffset():0:0 -> a
    1:1:boolean canReadBits(int):0:0 -> b
    1:1:boolean canReadExpGolombCodedNum():0:0 -> c
    1:1:boolean readBit():0:0 -> d
    1:1:int readBits(int):0:0 -> e
    1:1:int readExpGolombCodeNum():0:0 -> f
    1:1:int readSignedExpGolombCodedInt():0:0 -> g
    1:1:int readUnsignedExpGolombCodedInt():0:0 -> h
    1:1:void reset(byte[],int,int):0:0 -> i
    1:1:boolean shouldSkipByte(int):0:0 -> j
    1:1:void skipBit():0:0 -> k
    1:1:void skipBits(int):0:0 -> l
androidx.media3.datasource.AssetDataSource -> o.a:
    android.content.res.AssetManager assetManager -> e
    android.net.Uri uri -> f
    java.io.InputStream inputStream -> g
    long bytesRemaining -> h
    boolean opened -> i
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:void close():0:0 -> close
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
androidx.media3.datasource.AssetDataSource$AssetDataSourceException -> o.a$a:
    1:1:void <init>(java.lang.Throwable,int):0:0 -> <init>
androidx.media3.datasource.BaseDataSource -> o.b:
    boolean isNetwork -> a
    java.util.ArrayList listeners -> b
    int listenerCount -> c
    androidx.media3.datasource.DataSpec dataSpec -> d
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:void addTransferListener(androidx.media3.datasource.TransferListener):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:java.util.Map getResponseHeaders():0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void bytesTransferred(int):0:0 -> w
    1:1:void transferEnded():0:0 -> x
    1:1:void transferInitializing(androidx.media3.datasource.DataSpec):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)V"}
    1:1:void transferStarted(androidx.media3.datasource.DataSpec):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)V"}
androidx.media3.datasource.BitmapUtil -> o.c:
    1:1:android.graphics.Bitmap decode(byte[],int,android.graphics.BitmapFactory$Options):0:0 -> a
androidx.media3.datasource.ContentDataSource -> o.d:
    android.content.ContentResolver resolver -> e
    android.net.Uri uri -> f
    android.content.res.AssetFileDescriptor assetFileDescriptor -> g
    java.io.FileInputStream inputStream -> h
    long bytesRemaining -> i
    boolean opened -> j
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:void close():0:0 -> close
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
androidx.media3.datasource.ContentDataSource$ContentDataSourceException -> o.d$a:
    1:1:void <init>(java.io.IOException,int):0:0 -> <init>
androidx.media3.datasource.DataSchemeDataSource -> o.e:
    androidx.media3.datasource.DataSpec dataSpec -> e
    byte[] data -> f
    int readPosition -> g
    int bytesRemaining -> h
    1:1:void <init>():0:0 -> <init>
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:void close():0:0 -> close
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
androidx.media3.datasource.DataSource -> o.g:
    void close() -> close
    long open(androidx.media3.datasource.DataSpec) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    android.net.Uri getUri() -> m
    void addTransferListener(androidx.media3.datasource.TransferListener) -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    java.util.Map getResponseHeaders() -> s
androidx.media3.datasource.DataSource$-CC -> o.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:5:java.util.Map androidx.media3.datasource.DataSource.getResponseHeaders():0:0 -> a
    1:5:java.util.Map $default$getResponseHeaders(androidx.media3.datasource.DataSource):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)Ljava/util/Map;"}
androidx.media3.datasource.DataSource$Factory -> o.g$a:
    androidx.media3.datasource.DataSource createDataSource() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
androidx.media3.datasource.DataSourceException -> o.h:
    int reason -> f
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(java.lang.String,int):0:0 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable,int):0:0 -> <init>
    4:4:void <init>(java.lang.Throwable,int):0:0 -> <init>
    1:1:boolean isCausedByPositionOutOfRange(java.io.IOException):0:0 -> a
androidx.media3.datasource.DataSourceInputStream -> o.i:
    androidx.media3.datasource.DataSource dataSource -> f
    androidx.media3.datasource.DataSpec dataSpec -> g
    byte[] singleByteArray -> h
    boolean opened -> i
    boolean closed -> j
    long totalBytesRead -> k
    1:1:void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;)V"}
    1:1:void checkOpened():0:0 -> a
    1:1:void open():0:0 -> b
    1:1:void close():0:0 -> close
    1:1:int read():0:0 -> read
    2:2:int read(byte[]):0:0 -> read
    3:3:int read(byte[],int,int):0:0 -> read
androidx.media3.datasource.DataSourceUtil -> o.j:
    1:1:void closeQuietly(androidx.media3.datasource.DataSource):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
androidx.media3.datasource.DataSpec -> o.k:
    android.net.Uri uri -> a
    long uriPositionOffset -> b
    int httpMethod -> c
    byte[] httpBody -> d
    java.util.Map httpRequestHeaders -> e
    long absoluteStreamPosition -> f
    long position -> g
    long length -> h
    java.lang.String key -> i
    int flags -> j
    java.lang.Object customData -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.net.Uri):0:0 -> <init>
    2:2:void <init>(android.net.Uri,long,int,byte[],java.util.Map,long,long,java.lang.String,int,java.lang.Object):0:0 -> <init>
    3:3:void <init>(android.net.Uri,long,int,byte[],java.util.Map,long,long,java.lang.String,int,java.lang.Object,androidx.media3.datasource.DataSpec$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;JI[BLjava/util/Map;JJLjava/lang/String;ILjava/lang/Object;Lo/k$a;)V"}
    4:4:void <init>(android.net.Uri,long,long):0:0 -> <init>
    5:5:void <init>(android.net.Uri,long,long,java.lang.String):0:0 -> <init>
    1:1:androidx.media3.datasource.DataSpec$Builder buildUpon():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/k$b;"}
    1:1:java.lang.String getHttpMethodString():0:0 -> b
    1:1:java.lang.String getStringForHttpMethod(int):0:0 -> c
    1:1:boolean isFlagSet(int):0:0 -> d
    1:1:androidx.media3.datasource.DataSpec subrange(long):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo/k;"}
    1:1:androidx.media3.datasource.DataSpec subrange(long,long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJ)Lo/k;"}
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.datasource.DataSpec$1 -> o.k$a:
androidx.media3.datasource.DataSpec$Builder -> o.k$b:
    android.net.Uri uri -> a
    long uriPositionOffset -> b
    int httpMethod -> c
    byte[] httpBody -> d
    java.util.Map httpRequestHeaders -> e
    long position -> f
    long length -> g
    java.lang.String key -> h
    int flags -> i
    java.lang.Object customData -> j
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.datasource.DataSpec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)V"}
    3:3:void <init>(androidx.media3.datasource.DataSpec,androidx.media3.datasource.DataSpec$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Lo/k$a;)V"}
    1:1:androidx.media3.datasource.DataSpec build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/k;"}
    1:1:androidx.media3.datasource.DataSpec$Builder setFlags(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lo/k$b;"}
    1:1:androidx.media3.datasource.DataSpec$Builder setHttpBody(byte[]):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lo/k$b;"}
    1:1:androidx.media3.datasource.DataSpec$Builder setHttpMethod(int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lo/k$b;"}
    1:1:androidx.media3.datasource.DataSpec$Builder setHttpRequestHeaders(java.util.Map):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;)Lo/k$b;"}
    1:1:androidx.media3.datasource.DataSpec$Builder setKey(java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lo/k$b;"}
    1:1:androidx.media3.datasource.DataSpec$Builder setLength(long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo/k$b;"}
    1:1:androidx.media3.datasource.DataSpec$Builder setPosition(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo/k$b;"}
    1:1:androidx.media3.datasource.DataSpec$Builder setUri(android.net.Uri):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Lo/k$b;"}
    1:1:androidx.media3.datasource.DataSpec$Builder setUri(java.lang.String):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lo/k$b;"}
androidx.media3.datasource.DefaultDataSource -> o.l:
    android.content.Context context -> a
    java.util.List transferListeners -> b
    androidx.media3.datasource.DataSource baseDataSource -> c
    androidx.media3.datasource.DataSource fileDataSource -> d
    androidx.media3.datasource.DataSource assetDataSource -> e
    androidx.media3.datasource.DataSource contentDataSource -> f
    androidx.media3.datasource.DataSource rtmpDataSource -> g
    androidx.media3.datasource.DataSource udpDataSource -> h
    androidx.media3.datasource.DataSource dataSchemeDataSource -> i
    androidx.media3.datasource.DataSource rawResourceDataSource -> j
    androidx.media3.datasource.DataSource dataSource -> k
    1:1:void <init>(android.content.Context,androidx.media3.datasource.DataSource):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lo/g;)V"}
    1:1:androidx.media3.datasource.DataSource getRawResourceDataSource():0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:androidx.media3.datasource.DataSource getRtmpDataSource():0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:androidx.media3.datasource.DataSource getUdpDataSource():0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:void maybeAddListenerToDataSource(androidx.media3.datasource.DataSource,androidx.media3.datasource.TransferListener):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/y;)V"}
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:void close():0:0 -> close
    1:1:void addListenersToDataSource(androidx.media3.datasource.DataSource):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
    1:1:void addTransferListener(androidx.media3.datasource.TransferListener):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:java.util.Map getResponseHeaders():0:0 -> s
    1:1:androidx.media3.datasource.DataSource getAssetDataSource():0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:androidx.media3.datasource.DataSource getContentDataSource():0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:androidx.media3.datasource.DataSource getDataSchemeDataSource():0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:androidx.media3.datasource.DataSource getFileDataSource():0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
androidx.media3.datasource.DefaultDataSource$Factory -> o.l$a:
    android.content.Context context -> a
    androidx.media3.datasource.DataSource$Factory baseDataSourceFactory -> b
    androidx.media3.datasource.TransferListener transferListener -> c
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lo/g$a;)V"}
    1:1:androidx.media3.datasource.DataSource createDataSource():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:androidx.media3.datasource.DefaultDataSource createDataSource():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/l;"}
androidx.media3.datasource.DefaultHttpDataSource -> o.m:
    boolean allowCrossProtocolRedirects -> e
    boolean crossProtocolRedirectsForceOriginal -> f
    int connectTimeoutMillis -> g
    int readTimeoutMillis -> h
    java.lang.String userAgent -> i
    androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties -> j
    androidx.media3.datasource.HttpDataSource$RequestProperties requestProperties -> k
    com.google.common.base.Predicate contentTypePredicate -> l
    boolean keepPostFor302Redirects -> m
    androidx.media3.datasource.DataSpec dataSpec -> n
    java.net.HttpURLConnection connection -> o
    java.io.InputStream inputStream -> p
    boolean opened -> q
    int responseCode -> r
    long bytesToRead -> s
    long bytesRead -> t
    1:1:void <init>(java.lang.String,int,int,boolean,boolean,androidx.media3.datasource.HttpDataSource$RequestProperties,com.google.common.base.Predicate,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;IIZZLo/u;Lk2/n;Z)V"}
    2:2:void <init>(java.lang.String,int,int,boolean,boolean,androidx.media3.datasource.HttpDataSource$RequestProperties,com.google.common.base.Predicate,boolean,androidx.media3.datasource.DefaultHttpDataSource$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;IIZZLo/u;Lk2/n;ZLo/m$a;)V"}
    1:1:void closeConnectionQuietly():0:0 -> A
    1:1:java.net.URL handleRedirect(java.net.URL,java.lang.String,androidx.media3.datasource.DataSpec):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/net/URL;Ljava/lang/String;Lo/k;)Ljava/net/URL;"}
    1:1:boolean isCompressed(java.net.HttpURLConnection):0:0 -> C
    1:1:java.net.HttpURLConnection makeConnection(java.net.URL,int,byte[],long,long,boolean,boolean,java.util.Map):0:0 -> D
    1:1:java.net.HttpURLConnection makeConnection(androidx.media3.datasource.DataSpec):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)Ljava/net/HttpURLConnection;"}
    1:1:void maybeTerminateInputStream(java.net.HttpURLConnection,long):0:0 -> F
    1:1:java.net.HttpURLConnection openConnection(java.net.URL):0:0 -> G
    1:1:int readInternal(byte[],int,int):0:0 -> H
    1:1:void skipFully(long,androidx.media3.datasource.DataSpec):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLo/k;)V"}
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:void close():0:0 -> close
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
    1:1:java.util.Map getResponseHeaders():0:0 -> s
androidx.media3.datasource.DefaultHttpDataSource$1 -> o.m$a:
androidx.media3.datasource.DefaultHttpDataSource$Factory -> o.m$b:
    androidx.media3.datasource.HttpDataSource$RequestProperties defaultRequestProperties -> a
    androidx.media3.datasource.TransferListener transferListener -> b
    com.google.common.base.Predicate contentTypePredicate -> c
    java.lang.String userAgent -> d
    int connectTimeoutMs -> e
    int readTimeoutMs -> f
    boolean allowCrossProtocolRedirects -> g
    boolean crossProtocolRedirectsForceOriginal -> h
    boolean keepPostFor302Redirects -> i
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.datasource.DataSource createDataSource():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/g;"}
    1:1:androidx.media3.datasource.DefaultHttpDataSource createDataSource():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/m;"}
    1:1:androidx.media3.datasource.DefaultHttpDataSource$Factory setAllowCrossProtocolRedirects(boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo/m$b;"}
    1:1:androidx.media3.datasource.DefaultHttpDataSource$Factory setDefaultRequestProperties(java.util.Map):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;)Lo/m$b;"}
    1:1:androidx.media3.datasource.DefaultHttpDataSource$Factory setUserAgent(java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lo/m$b;"}
androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap -> o.m$c:
    java.util.Map headers -> f
    1:1:void <init>(java.util.Map):0:0 -> <init>
    1:1:java.lang.Object delegate():0:0 -> a
    1:1:java.util.Map delegate():0:0 -> b
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean containsValue(java.lang.Object):0:0 -> containsValue
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:boolean $r8$lambda$OCGG4l_SoxYf5QGPmkS4QPPvZQU(java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean $r8$lambda$mke1Onkl_RPxZuOZnnL4bQZRoaQ(java.util.Map$Entry):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:java.util.List get(java.lang.Object):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean lambda$entrySet$1(java.util.Map$Entry):0:0 -> i
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:boolean lambda$keySet$0(java.lang.String):0:0 -> j
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:int size():0:0 -> size
androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap$$ExternalSyntheticLambda0 -> o.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap$$InternalSyntheticLambda$9$a938604ac5ca33eb4872e7562afa7cd2aa3ad1542d3e45e574e4ef06e913c093$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap$$InternalSyntheticLambda$9$a938604ac5ca33eb4872e7562afa7cd2aa3ad1542d3e45e574e4ef06e913c093$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap$$ExternalSyntheticLambda1 -> o.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap$$InternalSyntheticLambda$9$db37b170ba6ae89a0a9fbeae77fd746069c3a1692d8fe249916397ed0abaed64$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.datasource.DefaultHttpDataSource$NullFilteringHeadersMap$$InternalSyntheticLambda$9$db37b170ba6ae89a0a9fbeae77fd746069c3a1692d8fe249916397ed0abaed64$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.datasource.FileDataSource -> o.p:
    java.io.RandomAccessFile file -> e
    android.net.Uri uri -> f
    long bytesRemaining -> g
    boolean opened -> h
    1:1:void <init>():0:0 -> <init>
    1:1:java.io.RandomAccessFile openLocalFile(android.net.Uri):0:0 -> A
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:void close():0:0 -> close
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
androidx.media3.datasource.FileDataSource$Api21 -> o.p$a:
    1:1:boolean access$000(java.lang.Throwable):0:0 -> a
    1:1:boolean isPermissionError(java.lang.Throwable):0:0 -> b
androidx.media3.datasource.FileDataSource$FileDataSourceException -> o.p$b:
    1:1:void <init>(java.lang.String,java.lang.Throwable,int):0:0 -> <init>
    2:2:void <init>(java.lang.Throwable,int):0:0 -> <init>
androidx.media3.datasource.HttpDataSource$CleartextNotPermittedException -> o.q:
    1:1:void <init>(java.io.IOException,androidx.media3.datasource.DataSpec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/IOException;Lo/k;)V"}
androidx.media3.datasource.HttpDataSource$HttpDataSourceException -> o.r:
    androidx.media3.datasource.DataSpec dataSpec -> g
    int type -> h
    1:1:void <init>(java.io.IOException,androidx.media3.datasource.DataSpec,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/IOException;Lo/k;II)V"}
    2:2:void <init>(java.lang.String,java.io.IOException,androidx.media3.datasource.DataSpec,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/io/IOException;Lo/k;II)V"}
    3:3:void <init>(java.lang.String,androidx.media3.datasource.DataSpec,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lo/k;II)V"}
    4:4:void <init>(androidx.media3.datasource.DataSpec,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;II)V"}
    1:1:int assignErrorCode(int,int):0:0 -> b
    1:1:androidx.media3.datasource.HttpDataSource$HttpDataSourceException createForIOException(java.io.IOException,androidx.media3.datasource.DataSpec,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/IOException;Lo/k;I)Lo/r;"}
androidx.media3.datasource.HttpDataSource$InvalidContentTypeException -> o.s:
    java.lang.String contentType -> i
    1:1:void <init>(java.lang.String,androidx.media3.datasource.DataSpec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lo/k;)V"}
androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException -> o.t:
    int responseCode -> i
    java.lang.String responseMessage -> j
    java.util.Map headerFields -> k
    byte[] responseBody -> l
    1:1:void <init>(int,java.lang.String,java.io.IOException,java.util.Map,androidx.media3.datasource.DataSpec,byte[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Ljava/io/IOException;Ljava/util/Map;Lo/k;[B)V"}
androidx.media3.datasource.HttpDataSource$RequestProperties -> o.u:
    java.util.Map requestProperties -> a
    java.util.Map requestPropertiesSnapshot -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void clearAndSet(java.util.Map):0:0 -> a
    1:1:java.util.Map getSnapshot():0:0 -> b
androidx.media3.datasource.HttpUtil -> o.v:
    java.util.regex.Pattern CONTENT_RANGE_WITH_START_AND_END -> a
    java.util.regex.Pattern CONTENT_RANGE_WITH_SIZE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String buildRangeRequestHeader(long,long):0:0 -> a
    1:1:long getContentLength(java.lang.String,java.lang.String):0:0 -> b
    1:1:long getDocumentSize(java.lang.String):0:0 -> c
androidx.media3.datasource.RawResourceDataSource -> o.w:
    android.content.Context applicationContext -> e
    androidx.media3.datasource.DataSpec dataSpec -> f
    android.content.res.AssetFileDescriptor assetFileDescriptor -> g
    java.io.InputStream inputStream -> h
    long bytesRemaining -> i
    boolean opened -> j
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.content.Context,androidx.media3.datasource.DataSpec):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lo/k;)Landroid/content/res/AssetFileDescriptor;"}
    1:1:int parseResourceId(java.lang.String):0:0 -> B
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:android.net.Uri buildRawResourceUri(int):0:0 -> buildRawResourceUri
    1:1:void close():0:0 -> close
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
androidx.media3.datasource.RawResourceDataSource$RawResourceDataSourceException -> o.w$a:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.Throwable,int):0:0 -> <init>
androidx.media3.datasource.StatsDataSource -> o.x:
    androidx.media3.datasource.DataSource dataSource -> a
    long bytesRead -> b
    android.net.Uri lastOpenedUri -> c
    java.util.Map lastResponseHeaders -> d
    1:1:void <init>(androidx.media3.datasource.DataSource):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;)V"}
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:void close():0:0 -> close
    1:1:long getBytesRead():0:0 -> h
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
    1:1:void addTransferListener(androidx.media3.datasource.TransferListener):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:java.util.Map getResponseHeaders():0:0 -> s
    1:1:android.net.Uri getLastOpenedUri():0:0 -> w
    1:1:java.util.Map getLastResponseHeaders():0:0 -> x
    1:1:void resetBytesRead():0:0 -> y
androidx.media3.datasource.TransferListener -> o.y:
    void onTransferInitializing(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Z)V"}
    void onTransferStart(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Z)V"}
    void onTransferEnd(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Z)V"}
    void onBytesTransferred(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean,int) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;ZI)V"}
androidx.media3.datasource.UdpDataSource -> o.z:
    int socketTimeoutMillis -> e
    byte[] packetBuffer -> f
    java.net.DatagramPacket packet -> g
    android.net.Uri uri -> h
    java.net.DatagramSocket socket -> i
    java.net.MulticastSocket multicastSocket -> j
    java.net.InetAddress address -> k
    boolean opened -> l
    int packetRemaining -> m
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    3:3:void <init>(int,int):0:0 -> <init>
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:void close():0:0 -> close
    1:1:int getLocalPort():0:0 -> j
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
androidx.media3.datasource.UdpDataSource$UdpDataSourceException -> o.z$a:
    1:1:void <init>(java.lang.Throwable,int):0:0 -> <init>
androidx.media3.decoder.Buffer -> p.a:
    int flags -> f
    void <init>() -> <init>
    1:1:void addFlag(int):0:0 -> e
    1:1:void clear():0:0 -> f
    1:1:boolean getFlag(int):0:0 -> g
    1:1:boolean hasSupplementalData():0:0 -> h
    1:1:boolean isEndOfStream():0:0 -> i
    1:1:boolean isFirstSample():0:0 -> j
    1:1:boolean isKeyFrame():0:0 -> k
    1:1:boolean isLastSample():0:0 -> l
    1:1:void setFlags(int):0:0 -> m
androidx.media3.decoder.CryptoConfig -> p.b:
androidx.media3.decoder.CryptoInfo -> p.c:
    byte[] iv -> a
    byte[] key -> b
    int mode -> c
    int[] numBytesOfClearData -> d
    int[] numBytesOfEncryptedData -> e
    int numSubSamples -> f
    int encryptedBlocks -> g
    int clearBlocks -> h
    android.media.MediaCodec$CryptoInfo frameworkCryptoInfo -> i
    androidx.media3.decoder.CryptoInfo$PatternHolderV24 patternHolder -> j
    1:1:void <init>():0:0 -> <init>
    1:1:android.media.MediaCodec$CryptoInfo getFrameworkCryptoInfo():0:0 -> a
    1:1:void increaseClearDataFirstSubSampleBy(int):0:0 -> b
    1:1:void set(int,int[],int[],byte[],byte[],int,int,int):0:0 -> c
androidx.media3.decoder.CryptoInfo$1 -> p.c$a:
androidx.media3.decoder.CryptoInfo$PatternHolderV24 -> p.c$b:
    android.media.MediaCodec$CryptoInfo frameworkCryptoInfo -> a
    android.media.MediaCodec$CryptoInfo$Pattern pattern -> b
    1:1:void <init>(android.media.MediaCodec$CryptoInfo):0:0 -> <init>
    2:2:void <init>(android.media.MediaCodec$CryptoInfo,androidx.media3.decoder.CryptoInfo$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/MediaCodec$CryptoInfo;Lp/c$a;)V"}
    1:1:void access$100(androidx.media3.decoder.CryptoInfo$PatternHolderV24,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/c$b;II)V"}
    1:1:void set(int,int):0:0 -> b
androidx.media3.decoder.CryptoInfo$PatternHolderV24$$ExternalSyntheticApiModelOutline0 -> p.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.decoder.CryptoInfo$PatternHolderV24$$InternalSyntheticApiModelOutline$10$736ba06837eb5f8a10ee790850de43bf3500fc862e85bb466eaa50eb198ae044$0.m(android.media.MediaCodec$CryptoInfo$Pattern,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.decoder.CryptoInfo$PatternHolderV24$$ExternalSyntheticApiModelOutline1 -> p.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.decoder.CryptoInfo$PatternHolderV24$$InternalSyntheticApiModelOutline$10$736ba06837eb5f8a10ee790850de43bf3500fc862e85bb466eaa50eb198ae044$1.m(android.media.MediaCodec$CryptoInfo,android.media.MediaCodec$CryptoInfo$Pattern):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.decoder.CryptoInfo$PatternHolderV24$$ExternalSyntheticApiModelOutline2 -> p.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.MediaCodec$CryptoInfo$Pattern androidx.media3.decoder.CryptoInfo$PatternHolderV24$$InternalSyntheticApiModelOutline$15$3766e8b8de93bb3bcbd6b1f8b6e48d4f82c82e2f0a9595aab13577ee8ee9220a$0.m(int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.decoder.Decoder -> p.g:
    java.lang.Object dequeueOutputBuffer() -> a
    void queueInputBuffer(java.lang.Object) -> c
    java.lang.Object dequeueInputBuffer() -> e
    void setOutputStartTimeUs(long) -> f
    void flush() -> flush
    void release() -> release
androidx.media3.decoder.DecoderException -> p.h:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
    3:3:void <init>(java.lang.Throwable):0:0 -> <init>
androidx.media3.decoder.DecoderInputBuffer -> p.i:
    androidx.media3.common.Format format -> g
    androidx.media3.decoder.CryptoInfo cryptoInfo -> h
    java.nio.ByteBuffer data -> i
    boolean waitingForKeys -> j
    long timeUs -> k
    java.nio.ByteBuffer supplementalData -> l
    int bufferReplacementMode -> m
    int paddingSize -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(int,int):0:0 -> <init>
    1:1:void clear():0:0 -> f
    1:1:java.nio.ByteBuffer createReplacementByteBuffer(int):0:0 -> n
    1:1:void ensureSpaceForWrite(int):0:0 -> o
    1:1:void flip():0:0 -> p
    1:1:boolean isEncrypted():0:0 -> q
    1:1:androidx.media3.decoder.DecoderInputBuffer newNoDataInstance():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/i;"}
    1:1:void resetSupplementalData(int):0:0 -> s
androidx.media3.decoder.DecoderInputBuffer$InsufficientCapacityException -> p.i$a:
    int currentCapacity -> f
    int requiredCapacity -> g
    1:1:void <init>(int,int):0:0 -> <init>
androidx.media3.decoder.DecoderOutputBuffer -> p.j:
    long timeUs -> g
    int skippedOutputBufferCount -> h
    boolean shouldBeSkipped -> i
    void <init>() -> <init>
    1:1:void clear():0:0 -> f
    void release() -> n
androidx.media3.decoder.DecoderOutputBuffer$Owner -> p.j$a:
    void releaseOutputBuffer(androidx.media3.decoder.DecoderOutputBuffer) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/j;)V"}
androidx.media3.decoder.SimpleDecoder -> p.k:
    java.lang.Thread decodeThread -> a
    java.lang.Object lock -> b
    java.util.ArrayDeque queuedInputBuffers -> c
    java.util.ArrayDeque queuedOutputBuffers -> d
    androidx.media3.decoder.DecoderInputBuffer[] availableInputBuffers -> e
    androidx.media3.decoder.DecoderOutputBuffer[] availableOutputBuffers -> f
    int availableInputBufferCount -> g
    int availableOutputBufferCount -> h
    androidx.media3.decoder.DecoderInputBuffer dequeuedInputBuffer -> i
    androidx.media3.decoder.DecoderException exception -> j
    boolean flushed -> k
    boolean released -> l
    int skippedOutputBufferCount -> m
    long outputStartTimeUs -> n
    1:1:void <init>(androidx.media3.decoder.DecoderInputBuffer[],androidx.media3.decoder.DecoderOutputBuffer[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lp/i;[Lp/j;)V"}
    1:1:java.lang.Object dequeueOutputBuffer():0:0 -> a
    1:1:void queueInputBuffer(java.lang.Object):0:0 -> c
    1:1:void queueInputBuffer(androidx.media3.decoder.DecoderInputBuffer):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)V"}
    1:1:java.lang.Object dequeueInputBuffer():0:0 -> e
    1:1:void setOutputStartTimeUs(long):0:0 -> f
    1:1:void flush():0:0 -> flush
    1:1:void access$000(androidx.media3.decoder.SimpleDecoder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/k;)V"}
    1:1:boolean canDecodeBuffer():0:0 -> h
    androidx.media3.decoder.DecoderInputBuffer createInputBuffer() -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/i;"}
    androidx.media3.decoder.DecoderOutputBuffer createOutputBuffer() -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/j;"}
    androidx.media3.decoder.DecoderException createUnexpectedDecodeException(java.lang.Throwable) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;)Lp/h;"}
    androidx.media3.decoder.DecoderException decode(androidx.media3.decoder.DecoderInputBuffer,androidx.media3.decoder.DecoderOutputBuffer,boolean) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;Lp/j;Z)Lp/h;"}
    1:1:boolean decode():0:0 -> m
    1:1:androidx.media3.decoder.DecoderInputBuffer dequeueInputBuffer():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/i;"}
    1:1:androidx.media3.decoder.DecoderOutputBuffer dequeueOutputBuffer():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/j;"}
    1:1:boolean isAtLeastOutputStartTimeUs(long):0:0 -> p
    1:1:void maybeNotifyDecodeLoop():0:0 -> q
    1:1:void maybeThrowException():0:0 -> r
    1:1:void release():0:0 -> release
    1:1:void releaseInputBufferInternal(androidx.media3.decoder.DecoderInputBuffer):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)V"}
    1:1:void releaseOutputBuffer(androidx.media3.decoder.DecoderOutputBuffer):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/j;)V"}
    1:1:void releaseOutputBufferInternal(androidx.media3.decoder.DecoderOutputBuffer):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/j;)V"}
    1:1:void run():0:0 -> v
    1:1:void setInitialInputBufferSize(int):0:0 -> w
androidx.media3.decoder.SimpleDecoder$1 -> p.k$a:
    androidx.media3.decoder.SimpleDecoder this$0 -> f
    1:1:void <init>(androidx.media3.decoder.SimpleDecoder,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/k;Ljava/lang/String;)V"}
    1:1:void run():0:0 -> run
androidx.media3.exoplayer.AbstractConcatenatedTimeline -> q.a:
    int childCount -> e
    androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder -> f
    boolean isAtomic -> g
    1:1:void <init>(boolean,androidx.media3.exoplayer.source.ShuffleOrder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLg0/d1;)V"}
    int getFirstWindowIndexByChildIndex(int) -> A
    1:1:int getNextChildIndex(int,boolean):0:0 -> B
    1:1:int getPreviousChildIndex(int,boolean):0:0 -> C
    androidx.media3.common.Timeline getTimelineByChildIndex(int) -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/i0;"}
    1:1:int getFirstWindowIndex(boolean):0:0 -> a
    1:1:int getIndexOfPeriod(java.lang.Object):0:0 -> b
    1:1:int getLastWindowIndex(boolean):0:0 -> c
    1:1:int getNextWindowIndex(int,int,boolean):0:0 -> e
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:androidx.media3.common.Timeline$Period getPeriodByUid(java.lang.Object,androidx.media3.common.Timeline$Period):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lj/i0$b;)Lj/i0$b;"}
    1:1:int getPreviousWindowIndex(int,int,boolean):0:0 -> l
    1:1:java.lang.Object getUidOfPeriod(int):0:0 -> m
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
    int getChildIndexByChildUid(java.lang.Object) -> s
    int getChildIndexByPeriodIndex(int) -> t
    int getChildIndexByWindowIndex(int) -> u
    1:1:java.lang.Object getChildPeriodUidFromConcatenatedUid(java.lang.Object):0:0 -> v
    1:1:java.lang.Object getChildTimelineUidFromConcatenatedUid(java.lang.Object):0:0 -> w
    java.lang.Object getChildUidByChildIndex(int) -> x
    1:1:java.lang.Object getConcatenatedUid(java.lang.Object,java.lang.Object):0:0 -> y
    int getFirstPeriodIndexByChildIndex(int) -> z
androidx.media3.exoplayer.AudioBecomingNoisyManager -> q.b:
    android.content.Context context -> a
    androidx.media3.exoplayer.AudioBecomingNoisyManager$AudioBecomingNoisyReceiver receiver -> b
    boolean receiverRegistered -> c
    1:1:void <init>(android.content.Context,android.os.Handler,androidx.media3.exoplayer.AudioBecomingNoisyManager$EventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/os/Handler;Lq/b$b;)V"}
    1:1:boolean access$000(androidx.media3.exoplayer.AudioBecomingNoisyManager):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/b;)Z"}
    1:1:void setEnabled(boolean):0:0 -> b
androidx.media3.exoplayer.AudioBecomingNoisyManager$AudioBecomingNoisyReceiver -> q.b$a:
    androidx.media3.exoplayer.AudioBecomingNoisyManager$EventListener listener -> f
    android.os.Handler eventHandler -> g
    androidx.media3.exoplayer.AudioBecomingNoisyManager this$0 -> h
    1:1:void <init>(androidx.media3.exoplayer.AudioBecomingNoisyManager,android.os.Handler,androidx.media3.exoplayer.AudioBecomingNoisyManager$EventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/b;Landroid/os/Handler;Lq/b$b;)V"}
    1:1:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    1:1:void run():0:0 -> run
androidx.media3.exoplayer.AudioBecomingNoisyManager$EventListener -> q.b$b:
    void onAudioBecomingNoisy() -> E
androidx.media3.exoplayer.AudioFocusManager -> q.m:
    android.media.AudioManager audioManager -> a
    androidx.media3.exoplayer.AudioFocusManager$AudioFocusListener focusListener -> b
    androidx.media3.exoplayer.AudioFocusManager$PlayerControl playerControl -> c
    androidx.media3.common.AudioAttributes audioAttributes -> d
    int audioFocusState -> e
    int focusGainToRequest -> f
    float volumeMultiplier -> g
    android.media.AudioFocusRequest audioFocusRequest -> h
    boolean rebuildAudioFocusRequest -> i
    1:1:void <init>(android.content.Context,android.os.Handler,androidx.media3.exoplayer.AudioFocusManager$PlayerControl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/os/Handler;Lq/m$b;)V"}
    1:1:void abandonAudioFocusDefault():0:0 -> a
    1:1:void abandonAudioFocusIfHeld():0:0 -> b
    1:1:void abandonAudioFocusV26():0:0 -> c
    1:1:void access$000(androidx.media3.exoplayer.AudioFocusManager,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/m;I)V"}
    1:1:int convertAudioAttributesToFocusGain(androidx.media3.common.AudioAttributes):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)I"}
    1:1:void executePlayerCommand(int):0:0 -> f
    1:1:float getVolumeMultiplier():0:0 -> g
    1:1:void handlePlatformAudioFocusChange(int):0:0 -> h
    1:1:void release():0:0 -> i
    1:1:int requestAudioFocus():0:0 -> j
    1:1:int requestAudioFocusDefault():0:0 -> k
    1:1:int requestAudioFocusV26():0:0 -> l
    1:1:void setAudioAttributes(androidx.media3.common.AudioAttributes):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:1:void setAudioFocusState(int):0:0 -> n
    1:1:boolean shouldHandleAudioFocus(int):0:0 -> o
    1:1:int updateAudioFocus(boolean,int):0:0 -> p
    1:1:boolean willPauseWhenDucked():0:0 -> q
androidx.media3.exoplayer.AudioFocusManager$$ExternalSyntheticApiModelOutline0 -> q.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioFocusRequest$Builder androidx.media3.exoplayer.AudioFocusManager$$InternalSyntheticApiModelOutline$15$4bd87fc4e5590343bed1441d24b739821e13cfab7d62eb611f20076919f182b5$0.m(android.media.AudioFocusRequest):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.AudioFocusManager$$ExternalSyntheticApiModelOutline1 -> q.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioFocusRequest$Builder androidx.media3.exoplayer.AudioFocusManager$$InternalSyntheticApiModelOutline$15$4bd87fc4e5590343bed1441d24b739821e13cfab7d62eb611f20076919f182b5$1.m(int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.AudioFocusManager$$ExternalSyntheticApiModelOutline2 -> q.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.AudioFocusManager$$InternalSyntheticApiModelOutline$15$4bd87fc4e5590343bed1441d24b739821e13cfab7d62eb611f20076919f182b5$2.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.AudioFocusManager$$ExternalSyntheticApiModelOutline3 -> q.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioFocusRequest$Builder androidx.media3.exoplayer.AudioFocusManager$$InternalSyntheticApiModelOutline$8$4bd87fc4e5590343bed1441d24b739821e13cfab7d62eb611f20076919f182b5$0.m(android.media.AudioFocusRequest$Builder,android.media.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.AudioFocusManager$$ExternalSyntheticApiModelOutline4 -> q.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioFocusRequest$Builder androidx.media3.exoplayer.AudioFocusManager$$InternalSyntheticApiModelOutline$8$4bd87fc4e5590343bed1441d24b739821e13cfab7d62eb611f20076919f182b5$1.m(android.media.AudioFocusRequest$Builder,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.AudioFocusManager$$ExternalSyntheticApiModelOutline5 -> q.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioFocusRequest$Builder androidx.media3.exoplayer.AudioFocusManager$$InternalSyntheticApiModelOutline$8$4bd87fc4e5590343bed1441d24b739821e13cfab7d62eb611f20076919f182b5$2.m(android.media.AudioFocusRequest$Builder,android.media.AudioManager$OnAudioFocusChangeListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.AudioFocusManager$$ExternalSyntheticApiModelOutline6 -> q.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioFocusRequest androidx.media3.exoplayer.AudioFocusManager$$InternalSyntheticApiModelOutline$8$4bd87fc4e5590343bed1441d24b739821e13cfab7d62eb611f20076919f182b5$3.m(android.media.AudioFocusRequest$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.AudioFocusManager$$ExternalSyntheticApiModelOutline7 -> q.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.AudioFocusManager$$InternalSyntheticApiModelOutline$8$4bd87fc4e5590343bed1441d24b739821e13cfab7d62eb611f20076919f182b5$4.m(android.media.AudioManager,android.media.AudioFocusRequest):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.AudioFocusManager$$ExternalSyntheticApiModelOutline8 -> q.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.AudioFocusManager$$InternalSyntheticApiModelOutline$8$4c941c34bc926a70504be59e91d58d96ef78e6097101b0a4c39de1ab2a896485$0.m(android.media.AudioManager,android.media.AudioFocusRequest):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.AudioFocusManager$AudioFocusListener -> q.m$a:
    android.os.Handler eventHandler -> a
    androidx.media3.exoplayer.AudioFocusManager this$0 -> b
    1:1:void <init>(androidx.media3.exoplayer.AudioFocusManager,android.os.Handler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/m;Landroid/os/Handler;)V"}
    1:1:void $r8$lambda$BaCeQokcAVwJODQkpfnfS1hqkF0(androidx.media3.exoplayer.AudioFocusManager$AudioFocusListener,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/m$a;I)V"}
    1:1:void lambda$onAudioFocusChange$0(int):0:0 -> b
    1:1:void onAudioFocusChange(int):0:0 -> onAudioFocusChange
androidx.media3.exoplayer.AudioFocusManager$AudioFocusListener$$ExternalSyntheticLambda0 -> q.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.AudioFocusManager$AudioFocusListener androidx.media3.exoplayer.AudioFocusManager$AudioFocusListener$$InternalSyntheticLambda$8$59f94f4c04462ad65f26684af4c7b9e48f704c4e7a9234af5a2b08f36fae38cb$0.f$0 -> f
    int androidx.media3.exoplayer.AudioFocusManager$AudioFocusListener$$InternalSyntheticLambda$8$59f94f4c04462ad65f26684af4c7b9e48f704c4e7a9234af5a2b08f36fae38cb$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.AudioFocusManager$AudioFocusListener$$InternalSyntheticLambda$8$59f94f4c04462ad65f26684af4c7b9e48f704c4e7a9234af5a2b08f36fae38cb$0.<init>(androidx.media3.exoplayer.AudioFocusManager$AudioFocusListener,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/m$a;I)V"}
    1:1:void androidx.media3.exoplayer.AudioFocusManager$AudioFocusListener$$InternalSyntheticLambda$8$59f94f4c04462ad65f26684af4c7b9e48f704c4e7a9234af5a2b08f36fae38cb$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.AudioFocusManager$PlayerControl -> q.m$b:
    void executePlayerCommand(int) -> A
    void setVolumeMultiplier(float) -> F
androidx.media3.exoplayer.BaseRenderer -> q.n:
    java.lang.Object lock -> f
    int trackType -> g
    androidx.media3.exoplayer.FormatHolder formatHolder -> h
    androidx.media3.exoplayer.RendererConfiguration configuration -> i
    int index -> j
    androidx.media3.exoplayer.analytics.PlayerId playerId -> k
    androidx.media3.common.util.Clock clock -> l
    int state -> m
    androidx.media3.exoplayer.source.SampleStream stream -> n
    androidx.media3.common.Format[] streamFormats -> o
    long streamOffsetUs -> p
    long lastResetPositionUs -> q
    long readingPositionUs -> r
    boolean streamIsFinal -> s
    boolean throwRendererExceptionIsExecuting -> t
    androidx.media3.common.Timeline timeline -> u
    androidx.media3.exoplayer.RendererCapabilities$Listener rendererCapabilitiesListener -> v
    1:1:void <init>(int):0:0 -> <init>
    1:1:void resetPosition(long):0:0 -> A
    1:1:long getDurationToProgressUs(long,long):0:0 -> B
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean isCurrentStreamFinal():0:0 -> C
    1:1:androidx.media3.exoplayer.MediaClock getMediaClock():0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/z1;"}
    1:1:int supportsMixedMimeTypeAdaptation():0:0 -> F
    1:1:void setListener(androidx.media3.exoplayer.RendererCapabilities$Listener):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/z2$a;)V"}
    1:1:void handleMessage(int,java.lang.Object):0:0 -> H
    1:1:androidx.media3.exoplayer.RendererCapabilities getCapabilities():0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/z2;"}
    1:1:androidx.media3.exoplayer.source.SampleStream getStream():0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/b1;"}
    1:1:void setPlaybackSpeed(float,float):0:0 -> L
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.exoplayer.ExoPlaybackException createRendererException(java.lang.Throwable,androidx.media3.common.Format,int):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Lj/q;I)Lq/u;"}
    1:1:androidx.media3.exoplayer.ExoPlaybackException createRendererException(java.lang.Throwable,androidx.media3.common.Format,boolean,int):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Lj/q;ZI)Lq/u;"}
    1:1:androidx.media3.common.util.Clock getClock():0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/c;"}
    1:1:androidx.media3.exoplayer.RendererConfiguration getConfiguration():0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/a3;"}
    1:1:androidx.media3.exoplayer.FormatHolder getFormatHolder():0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/u1;"}
    1:1:int getIndex():0:0 -> R
    1:1:long getLastResetPositionUs():0:0 -> S
    1:1:androidx.media3.exoplayer.analytics.PlayerId getPlayerId():0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr/w3;"}
    1:1:androidx.media3.common.Format[] getStreamFormats():0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lj/q;"}
    1:1:boolean isSourceReady():0:0 -> V
    void onDisabled() -> W
    1:1:void onEnabled(boolean,boolean):0:0 -> X
    1:1:void onInit():0:0 -> Y
    void onPositionReset(long,boolean) -> Z
    1:1:void onRelease():0:0 -> a0
    1:1:void reset():0:0 -> b
    1:1:void onRendererCapabilitiesChanged():0:0 -> b0
    1:1:void onReset():0:0 -> c0
    1:1:int getState():0:0 -> d
    1:1:void onStarted():0:0 -> d0
    1:1:void onStopped():0:0 -> e0
    1:1:void start():0:0 -> f
    1:1:void onStreamChanged(androidx.media3.common.Format[],long,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/q;JJLg0/f0$b;)V"}
    1:1:void onTimelineChanged(androidx.media3.common.Timeline):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
    1:1:int readSource(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
    1:1:void enableMayRenderStartOfStream():0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void resetPosition(long,boolean):0:0 -> i0
    1:1:void stop():0:0 -> j
    1:1:int skipSource(long):0:0 -> j0
    1:1:int getTrackType():0:0 -> k
    1:1:void disable():0:0 -> m
    1:1:void init(int,androidx.media3.exoplayer.analytics.PlayerId,androidx.media3.common.util.Clock):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILr/w3;Lm/c;)V"}
    1:1:void setCurrentStreamFinal():0:0 -> r
    1:1:void release():0:0 -> release
    1:1:void replaceStream(androidx.media3.common.Format[],androidx.media3.exoplayer.source.SampleStream,long,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/q;Lg0/b1;JJLg0/f0$b;)V"}
    1:1:void clearListener():0:0 -> t
    1:1:void setTimeline(androidx.media3.common.Timeline):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
    1:1:void maybeThrowStreamError():0:0 -> v
    1:1:long getReadingPositionUs():0:0 -> w
    1:1:boolean hasReadStreamToEnd():0:0 -> x
    1:1:void enable(androidx.media3.exoplayer.RendererConfiguration,androidx.media3.common.Format[],androidx.media3.exoplayer.source.SampleStream,long,boolean,boolean,long,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/a3;[Lj/q;Lg0/b1;JZZJJLg0/f0$b;)V"}
androidx.media3.exoplayer.DecoderCounters -> q.o:
    int decoderInitCount -> a
    int decoderReleaseCount -> b
    int queuedInputBufferCount -> c
    int skippedInputBufferCount -> d
    int renderedOutputBufferCount -> e
    int skippedOutputBufferCount -> f
    int droppedBufferCount -> g
    int droppedInputBufferCount -> h
    int maxConsecutiveDroppedBufferCount -> i
    int droppedToKeyframeCount -> j
    long totalVideoFrameProcessingOffsetUs -> k
    int videoFrameProcessingOffsetCount -> l
    void <init>() -> <init>
    1:1:void addVideoFrameProcessingOffset(long):0:0 -> a
    1:1:void addVideoFrameProcessingOffsets(long,int):0:0 -> b
    1:1:void ensureUpdated():0:0 -> c
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.exoplayer.DecoderReuseEvaluation -> q.p:
    java.lang.String decoderName -> a
    androidx.media3.common.Format oldFormat -> b
    androidx.media3.common.Format newFormat -> c
    int result -> d
    int discardReasons -> e
    1:1:void <init>(java.lang.String,androidx.media3.common.Format,androidx.media3.common.Format,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lj/q;Lj/q;II)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.DefaultLivePlaybackSpeedControl -> q.q:
    float fallbackMinPlaybackSpeed -> a
    float fallbackMaxPlaybackSpeed -> b
    long minUpdateIntervalMs -> c
    float proportionalControlFactor -> d
    long maxLiveOffsetErrorUsForUnitSpeed -> e
    long targetLiveOffsetRebufferDeltaUs -> f
    float minPossibleLiveOffsetSmoothingFactor -> g
    long mediaConfigurationTargetLiveOffsetUs -> h
    long targetLiveOffsetOverrideUs -> i
    long idealTargetLiveOffsetUs -> j
    long minTargetLiveOffsetUs -> k
    long maxTargetLiveOffsetUs -> l
    long currentTargetLiveOffsetUs -> m
    float maxPlaybackSpeed -> n
    float minPlaybackSpeed -> o
    float adjustedPlaybackSpeed -> p
    long lastPlaybackSpeedUpdateMs -> q
    long smoothedMinPossibleLiveOffsetUs -> r
    long smoothedMinPossibleLiveOffsetDeviationUs -> s
    1:1:void <init>(float,float,long,float,long,long,float):0:0 -> <init>
    2:2:void <init>(float,float,long,float,long,long,float,androidx.media3.exoplayer.DefaultLivePlaybackSpeedControl$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FFJFJJFLq/q$a;)V"}
    1:1:void notifyRebuffer():0:0 -> a
    1:1:void setLiveConfiguration(androidx.media3.common.MediaItem$LiveConfiguration):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g;)V"}
    1:1:float getAdjustedPlaybackSpeed(long,long):0:0 -> c
    1:1:void setTargetLiveOffsetOverrideUs(long):0:0 -> d
    1:1:long getTargetLiveOffsetUs():0:0 -> e
    1:1:void adjustTargetLiveOffsetUs(long):0:0 -> f
    1:1:void maybeResetTargetLiveOffsetUs():0:0 -> g
    1:1:long smooth(long,long,float):0:0 -> h
    1:1:void updateSmoothedMinPossibleLiveOffsetUs(long,long):0:0 -> i
androidx.media3.exoplayer.DefaultLivePlaybackSpeedControl$1 -> q.q$a:
androidx.media3.exoplayer.DefaultLivePlaybackSpeedControl$Builder -> q.q$b:
    float fallbackMinPlaybackSpeed -> a
    float fallbackMaxPlaybackSpeed -> b
    long minUpdateIntervalMs -> c
    float proportionalControlFactorUs -> d
    long maxLiveOffsetErrorUsForUnitSpeed -> e
    long targetLiveOffsetIncrementOnRebufferUs -> f
    float minPossibleLiveOffsetSmoothingFactor -> g
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.exoplayer.DefaultLivePlaybackSpeedControl build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/q;"}
androidx.media3.exoplayer.DefaultLoadControl -> q.r:
    androidx.media3.exoplayer.upstream.DefaultAllocator allocator -> a
    long minBufferUs -> b
    long maxBufferUs -> c
    long bufferForPlaybackUs -> d
    long bufferForPlaybackAfterRebufferUs -> e
    int targetBufferBytesOverwrite -> f
    boolean prioritizeTimeOverSizeThresholds -> g
    long backBufferDurationUs -> h
    boolean retainBackBufferFromKeyframe -> i
    java.util.HashMap loadingStates -> j
    long threadId -> k
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.exoplayer.upstream.DefaultAllocator,int,int,int,int,int,boolean,int,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/h;IIIIIZIZ)V"}
    1:1:long getBackBufferDurationUs(androidx.media3.exoplayer.analytics.PlayerId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)J"}
    1:1:boolean retainBackBufferFromKeyframe(androidx.media3.exoplayer.analytics.PlayerId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)Z"}
    1:1:void onStopped(androidx.media3.exoplayer.analytics.PlayerId):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)V"}
    1:1:void onPrepared(androidx.media3.exoplayer.analytics.PlayerId):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)V"}
    1:1:androidx.media3.exoplayer.upstream.Allocator getAllocator():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/b;"}
    1:1:boolean shouldContinueLoading(androidx.media3.exoplayer.LoadControl$Parameters):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w1$a;)Z"}
    1:1:void onReleased(androidx.media3.exoplayer.analytics.PlayerId):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)V"}
    1:1:void onTracksSelected(androidx.media3.exoplayer.analytics.PlayerId,androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.Renderer[],androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.trackselection.ExoTrackSelection[]):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;Lj/i0;Lg0/f0$b;[Lq/x2;Lg0/l1;[Lj0/y;)V"}
    1:1:boolean shouldStartPlayback(androidx.media3.exoplayer.LoadControl$Parameters):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w1$a;)Z"}
    1:1:void assertGreaterOrEqual(int,int,java.lang.String,java.lang.String):0:0 -> j
    1:1:int calculateTargetBufferBytes(androidx.media3.exoplayer.Renderer[],androidx.media3.exoplayer.trackselection.ExoTrackSelection[]):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lq/x2;[Lj0/y;)I"}
    1:1:int calculateTotalTargetBufferBytes():0:0 -> l
    1:1:int getDefaultBufferSize(int):0:0 -> m
    1:1:void removePlayer(androidx.media3.exoplayer.analytics.PlayerId):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)V"}
    1:1:void resetPlayerLoadingState(androidx.media3.exoplayer.analytics.PlayerId):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)V"}
    1:1:void updateAllocator():0:0 -> p
androidx.media3.exoplayer.DefaultLoadControl$1 -> q.r$a:
androidx.media3.exoplayer.DefaultLoadControl$PlayerLoadingState -> q.r$b:
    boolean isLoading -> a
    int targetBufferBytes -> b
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.exoplayer.DefaultLoadControl$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/r$a;)V"}
androidx.media3.exoplayer.DefaultMediaClock -> q.s:
    androidx.media3.exoplayer.StandaloneMediaClock standaloneClock -> f
    androidx.media3.exoplayer.DefaultMediaClock$PlaybackParametersListener listener -> g
    androidx.media3.exoplayer.Renderer rendererClockSource -> h
    androidx.media3.exoplayer.MediaClock rendererClock -> i
    boolean isUsingStandaloneClock -> j
    boolean standaloneClockIsStarted -> k
    1:1:void <init>(androidx.media3.exoplayer.DefaultMediaClock$PlaybackParametersListener,androidx.media3.common.util.Clock):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s$a;Lm/c;)V"}
    1:1:boolean hasSkippedSilenceSinceLastCall():0:0 -> E
    1:1:long getPositionUs():0:0 -> K
    1:1:void onRendererDisabled(androidx.media3.exoplayer.Renderer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)V"}
    1:1:void onRendererEnabled(androidx.media3.exoplayer.Renderer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)V"}
    1:1:void resetPosition(long):0:0 -> c
    1:1:boolean shouldUseStandaloneClock(boolean):0:0 -> d
    1:1:void start():0:0 -> e
    1:1:void stop():0:0 -> f
    1:1:androidx.media3.common.PlaybackParameters getPlaybackParameters():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/c0;"}
    1:1:void setPlaybackParameters(androidx.media3.common.PlaybackParameters):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    1:1:long syncAndGetPositionUs(boolean):0:0 -> i
    1:1:void syncClocks(boolean):0:0 -> j
androidx.media3.exoplayer.DefaultMediaClock$PlaybackParametersListener -> q.s$a:
    void onPlaybackParametersChanged(androidx.media3.common.PlaybackParameters) -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
androidx.media3.exoplayer.DefaultRenderersFactory -> q.t:
    android.content.Context context -> a
    androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory codecAdapterFactory -> b
    int extensionRendererMode -> c
    long allowedVideoJoiningTimeMs -> d
    boolean enableDecoderFallback -> e
    androidx.media3.exoplayer.mediacodec.MediaCodecSelector mediaCodecSelector -> f
    boolean enableFloatOutput -> g
    boolean enableAudioTrackPlaybackParams -> h
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:androidx.media3.exoplayer.Renderer[] createRenderers(android.os.Handler,androidx.media3.exoplayer.video.VideoRendererEventListener,androidx.media3.exoplayer.audio.AudioRendererEventListener,androidx.media3.exoplayer.text.TextOutput,androidx.media3.exoplayer.metadata.MetadataOutput):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lm0/e0;Ls/z;Li0/h;La0/b;)[Lq/x2;"}
    1:1:void buildAudioRenderers(android.content.Context,int,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,boolean,androidx.media3.exoplayer.audio.AudioSink,android.os.Handler,androidx.media3.exoplayer.audio.AudioRendererEventListener,java.util.ArrayList):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;ILz/e0;ZLs/b0;Landroid/os/Handler;Ls/z;Ljava/util/ArrayList;)V"}
    1:1:androidx.media3.exoplayer.audio.AudioSink buildAudioSink(android.content.Context,boolean,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;ZZ)Ls/b0;"}
    1:1:void buildCameraMotionRenderers(android.content.Context,int,java.util.ArrayList):0:0 -> d
    1:1:void buildImageRenderers(java.util.ArrayList):0:0 -> e
    1:1:void buildMetadataRenderers(android.content.Context,androidx.media3.exoplayer.metadata.MetadataOutput,android.os.Looper,int,java.util.ArrayList):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;La0/b;Landroid/os/Looper;ILjava/util/ArrayList;)V"}
    1:1:void buildMiscellaneousRenderers(android.content.Context,android.os.Handler,int,java.util.ArrayList):0:0 -> g
    1:1:void buildTextRenderers(android.content.Context,androidx.media3.exoplayer.text.TextOutput,android.os.Looper,int,java.util.ArrayList):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Li0/h;Landroid/os/Looper;ILjava/util/ArrayList;)V"}
    1:1:void buildVideoRenderers(android.content.Context,int,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,boolean,android.os.Handler,androidx.media3.exoplayer.video.VideoRendererEventListener,long,java.util.ArrayList):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;ILz/e0;ZLandroid/os/Handler;Lm0/e0;JLjava/util/ArrayList;)V"}
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory getCodecAdapterFactory():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz/p$b;"}
androidx.media3.exoplayer.ExoPlaybackException -> q.u:
    java.lang.String FIELD_IS_RECOVERABLE -> A
    int type -> o
    java.lang.String rendererName -> p
    int rendererIndex -> q
    androidx.media3.common.Format rendererFormat -> r
    int rendererFormatSupport -> s
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId -> t
    boolean isRecoverable -> u
    java.lang.String FIELD_TYPE -> v
    java.lang.String FIELD_RENDERER_NAME -> w
    java.lang.String FIELD_RENDERER_INDEX -> x
    java.lang.String FIELD_RENDERER_FORMAT -> y
    java.lang.String FIELD_RENDERER_FORMAT_SUPPORT -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,java.lang.Throwable,int):0:0 -> <init>
    2:2:void <init>(int,java.lang.Throwable,java.lang.String,int,java.lang.String,int,androidx.media3.common.Format,int,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Throwable;Ljava/lang/String;ILjava/lang/String;ILj/q;IZ)V"}
    3:3:void <init>(java.lang.String,java.lang.Throwable,int,int,java.lang.String,int,androidx.media3.common.Format,int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Throwable;IILjava/lang/String;ILj/q;ILg0/f0$b;JZ)V"}
    1:1:androidx.media3.exoplayer.ExoPlaybackException copyWithMediaPeriodId(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;)Lq/u;"}
    1:1:androidx.media3.exoplayer.ExoPlaybackException createForRenderer(java.lang.Throwable,java.lang.String,int,androidx.media3.common.Format,int,boolean,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Ljava/lang/String;ILj/q;IZI)Lq/u;"}
    1:1:androidx.media3.exoplayer.ExoPlaybackException createForSource(java.io.IOException,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/IOException;I)Lq/u;"}
    1:1:androidx.media3.exoplayer.ExoPlaybackException createForUnexpected(java.lang.RuntimeException,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/RuntimeException;I)Lq/u;"}
    1:1:java.lang.String deriveMessage(int,java.lang.String,java.lang.String,int,androidx.media3.common.Format,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Ljava/lang/String;ILj/q;I)Ljava/lang/String;"}
androidx.media3.exoplayer.ExoPlayer -> q.w:
    androidx.media3.common.Format getVideoFormat() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    void release() -> release
androidx.media3.exoplayer.ExoPlayer$AudioOffloadListener -> q.w$a:
    void onOffloadedPlayback(boolean) -> B
    void onSleepingForOffloadChanged(boolean) -> D
androidx.media3.exoplayer.ExoPlayer$AudioOffloadListener$-CC -> q.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$onOffloadedPlayback(androidx.media3.exoplayer.ExoPlayer$AudioOffloadListener,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w$a;Z)V"}
androidx.media3.exoplayer.ExoPlayer$Builder -> q.w$b:
    long detachSurfaceTimeoutMs -> A
    boolean pauseAtEndOfMediaItems -> B
    boolean usePlatformDiagnostics -> C
    android.os.Looper playbackLooper -> D
    boolean buildCalled -> E
    boolean suppressPlaybackOnUnsuitableOutput -> F
    java.lang.String playerName -> G
    boolean dynamicSchedulingEnabled -> H
    android.content.Context context -> a
    androidx.media3.common.util.Clock clock -> b
    long foregroundModeTimeoutMs -> c
    com.google.common.base.Supplier renderersFactorySupplier -> d
    com.google.common.base.Supplier mediaSourceFactorySupplier -> e
    com.google.common.base.Supplier trackSelectorSupplier -> f
    com.google.common.base.Supplier loadControlSupplier -> g
    com.google.common.base.Supplier bandwidthMeterSupplier -> h
    com.google.common.base.Function analyticsCollectorFunction -> i
    android.os.Looper looper -> j
    int priority -> k
    androidx.media3.common.AudioAttributes audioAttributes -> l
    boolean handleAudioFocus -> m
    int wakeMode -> n
    boolean handleAudioBecomingNoisy -> o
    boolean skipSilenceEnabled -> p
    boolean deviceVolumeControlEnabled -> q
    int videoScalingMode -> r
    int videoChangeFrameRateStrategy -> s
    boolean useLazyPreparation -> t
    androidx.media3.exoplayer.SeekParameters seekParameters -> u
    long seekBackIncrementMs -> v
    long seekForwardIncrementMs -> w
    long maxSeekToPreviousPositionMs -> x
    androidx.media3.exoplayer.LivePlaybackSpeedControl livePlaybackSpeedControl -> y
    long releaseTimeoutMs -> z
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,com.google.common.base.Supplier,com.google.common.base.Supplier):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lk2/r;Lk2/r;)V"}
    3:3:void <init>(android.content.Context,com.google.common.base.Supplier,com.google.common.base.Supplier,com.google.common.base.Supplier,com.google.common.base.Supplier,com.google.common.base.Supplier,com.google.common.base.Function):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lk2/r;Lk2/r;Lk2/r;Lk2/r;Lk2/r;Lk2/f;)V"}
    1:1:androidx.media3.exoplayer.upstream.BandwidthMeter $r8$lambda$FplZJNis2C-ck82WaYRNg8j54tA(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lk0/e;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory $r8$lambda$PFgrmzXy8dtRca-zfooecXIZLiM(androidx.media3.exoplayer.source.MediaSource$Factory):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.trackselection.TrackSelector $r8$lambda$PLv_OFGgiO4MKR7PBORW2kAfOy8(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lj0/d0;"}
    1:1:androidx.media3.exoplayer.RenderersFactory $r8$lambda$QvEX3RKuVPOj8Pp5skI5c5Ngil0(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lq/b3;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory $r8$lambda$fJ-qpiSddTSXEgow5IqIfdxTQPk(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.ExoPlayer build():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/w;"}
    1:1:androidx.media3.exoplayer.RenderersFactory lambda$new$0(android.content.Context):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lq/b3;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory lambda$new$1(android.content.Context):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.trackselection.TrackSelector lambda$new$14(android.content.Context):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lj0/d0;"}
    1:1:androidx.media3.exoplayer.upstream.BandwidthMeter lambda$new$15(android.content.Context):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lk0/e;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory lambda$setMediaSourceFactory$17(androidx.media3.exoplayer.source.MediaSource$Factory):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.ExoPlayer$Builder setMediaSourceFactory(androidx.media3.exoplayer.source.MediaSource$Factory):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$a;)Lq/w$b;"}
androidx.media3.exoplayer.ExoPlayer$Builder$$ExternalSyntheticLambda0 -> q.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$7$27efe9bcaf1fe6181b428b59c87ea8700ab3f5b25b317eda334a11736263db59$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$7$27efe9bcaf1fe6181b428b59c87ea8700ab3f5b25b317eda334a11736263db59$0.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$7$27efe9bcaf1fe6181b428b59c87ea8700ab3f5b25b317eda334a11736263db59$0.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayer$Builder$$ExternalSyntheticLambda1 -> q.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$7$27efe9bcaf1fe6181b428b59c87ea8700ab3f5b25b317eda334a11736263db59$1.f$0 -> f
    1:1:void androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$7$27efe9bcaf1fe6181b428b59c87ea8700ab3f5b25b317eda334a11736263db59$1.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$7$27efe9bcaf1fe6181b428b59c87ea8700ab3f5b25b317eda334a11736263db59$1.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayer$Builder$$ExternalSyntheticLambda2 -> q.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.MediaSource$Factory androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$7$7fecf69d96333089568ea82e639f9f5dad2ddca9caffed540c20cf12b8eaf087$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$7$7fecf69d96333089568ea82e639f9f5dad2ddca9caffed540c20cf12b8eaf087$0.<init>(androidx.media3.exoplayer.source.MediaSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$a;)V"}
    1:1:java.lang.Object androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$7$7fecf69d96333089568ea82e639f9f5dad2ddca9caffed540c20cf12b8eaf087$0.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayer$Builder$$ExternalSyntheticLambda3 -> q.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$8$d705988dad74fadd6859b565d79d2dcc813f78f10ce16f80e095c4a996bc1ba3$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$8$d705988dad74fadd6859b565d79d2dcc813f78f10ce16f80e095c4a996bc1ba3$0.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$8$d705988dad74fadd6859b565d79d2dcc813f78f10ce16f80e095c4a996bc1ba3$0.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayer$Builder$$ExternalSyntheticLambda4 -> q.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$8$d705988dad74fadd6859b565d79d2dcc813f78f10ce16f80e095c4a996bc1ba3$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$8$d705988dad74fadd6859b565d79d2dcc813f78f10ce16f80e095c4a996bc1ba3$1.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayer$Builder$$ExternalSyntheticLambda5 -> q.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$8$d705988dad74fadd6859b565d79d2dcc813f78f10ce16f80e095c4a996bc1ba3$2.f$0 -> f
    1:1:void androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$8$d705988dad74fadd6859b565d79d2dcc813f78f10ce16f80e095c4a996bc1ba3$2.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$8$d705988dad74fadd6859b565d79d2dcc813f78f10ce16f80e095c4a996bc1ba3$2.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayer$Builder$$ExternalSyntheticLambda6 -> q.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$8$d705988dad74fadd6859b565d79d2dcc813f78f10ce16f80e095c4a996bc1ba3$3.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.ExoPlayer$Builder$$InternalSyntheticLambda$8$d705988dad74fadd6859b565d79d2dcc813f78f10ce16f80e095c4a996bc1ba3$3.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayer$PreloadConfiguration -> q.w$c:
    long targetPreloadDurationUs -> a
    androidx.media3.exoplayer.ExoPlayer$PreloadConfiguration DEFAULT -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long):0:0 -> <init>
androidx.media3.exoplayer.ExoPlayerImpl -> q.c1:
    androidx.media3.exoplayer.AudioBecomingNoisyManager audioBecomingNoisyManager -> A
    androidx.media3.exoplayer.AudioFocusManager audioFocusManager -> B
    androidx.media3.exoplayer.StreamVolumeManager streamVolumeManager -> C
    androidx.media3.exoplayer.WakeLockManager wakeLockManager -> D
    androidx.media3.exoplayer.WifiLockManager wifiLockManager -> E
    long detachSurfaceTimeoutMs -> F
    android.media.AudioManager audioManager -> G
    boolean suppressPlaybackOnUnsuitableOutput -> H
    int repeatMode -> I
    boolean shuffleModeEnabled -> J
    int pendingOperationAcks -> K
    int pendingDiscontinuityReason -> L
    boolean pendingDiscontinuity -> M
    androidx.media3.exoplayer.SeekParameters seekParameters -> N
    androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder -> O
    androidx.media3.exoplayer.ExoPlayer$PreloadConfiguration preloadConfiguration -> P
    boolean pauseAtEndOfMediaItems -> Q
    androidx.media3.common.Player$Commands availableCommands -> R
    androidx.media3.common.MediaMetadata mediaMetadata -> S
    androidx.media3.common.MediaMetadata playlistMetadata -> T
    androidx.media3.common.Format videoFormat -> U
    androidx.media3.common.Format audioFormat -> V
    android.media.AudioTrack keepSessionIdAudioTrack -> W
    java.lang.Object videoOutput -> X
    android.view.Surface ownedSurface -> Y
    android.view.SurfaceHolder surfaceHolder -> Z
    boolean surfaceHolderSurfaceIsVideoOutput -> a0
    androidx.media3.exoplayer.trackselection.TrackSelectorResult emptyTrackSelectorResult -> b
    android.view.TextureView textureView -> b0
    androidx.media3.common.Player$Commands permanentAvailableCommands -> c
    int videoScalingMode -> c0
    androidx.media3.common.util.ConditionVariable constructorFinished -> d
    int videoChangeFrameRateStrategy -> d0
    android.content.Context applicationContext -> e
    androidx.media3.common.util.Size surfaceSize -> e0
    androidx.media3.common.Player wrappingPlayer -> f
    androidx.media3.exoplayer.DecoderCounters videoDecoderCounters -> f0
    androidx.media3.exoplayer.Renderer[] renderers -> g
    androidx.media3.exoplayer.DecoderCounters audioDecoderCounters -> g0
    androidx.media3.exoplayer.trackselection.TrackSelector trackSelector -> h
    int audioSessionId -> h0
    androidx.media3.common.util.HandlerWrapper playbackInfoUpdateHandler -> i
    androidx.media3.common.AudioAttributes audioAttributes -> i0
    androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdateListener playbackInfoUpdateListener -> j
    float volume -> j0
    androidx.media3.exoplayer.ExoPlayerImplInternal internalPlayer -> k
    boolean skipSilenceEnabled -> k0
    androidx.media3.common.util.ListenerSet listeners -> l
    androidx.media3.common.text.CueGroup currentCueGroup -> l0
    java.util.concurrent.CopyOnWriteArraySet audioOffloadListeners -> m
    boolean throwsWhenUsingWrongThread -> m0
    androidx.media3.common.Timeline$Period period -> n
    boolean hasNotifiedFullWrongThreadWarning -> n0
    java.util.List mediaSourceHolderSnapshots -> o
    int priority -> o0
    boolean useLazyPreparation -> p
    boolean isPriorityTaskManagerRegistered -> p0
    androidx.media3.exoplayer.source.MediaSource$Factory mediaSourceFactory -> q
    boolean playerReleased -> q0
    androidx.media3.exoplayer.analytics.AnalyticsCollector analyticsCollector -> r
    androidx.media3.common.DeviceInfo deviceInfo -> r0
    android.os.Looper applicationLooper -> s
    androidx.media3.common.VideoSize videoSize -> s0
    androidx.media3.exoplayer.upstream.BandwidthMeter bandwidthMeter -> t
    androidx.media3.common.MediaMetadata staticAndDynamicMediaMetadata -> t0
    long seekBackIncrementMs -> u
    androidx.media3.exoplayer.PlaybackInfo playbackInfo -> u0
    long seekForwardIncrementMs -> v
    int maskingWindowIndex -> v0
    long maxSeekToPreviousPositionMs -> w
    int maskingPeriodIndex -> w0
    androidx.media3.common.util.Clock clock -> x
    long maskingWindowPositionMs -> x0
    androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener componentListener -> y
    androidx.media3.exoplayer.ExoPlayerImpl$FrameMetadataListener frameMetadataListener -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.exoplayer.ExoPlayer$Builder,androidx.media3.common.Player):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w$b;Lj/d0;)V"}
    1:1:long getDuration():0:0 -> A
    1:1:androidx.media3.common.MediaMetadata access$1402(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.common.MediaMetadata):0:0 -> A0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lj/w;)Lj/w;"}
    1:1:void lambda$new$2(androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate):0:0 -> A1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$e;)V"}
    1:1:androidx.media3.common.Timeline getCurrentTimeline():0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
    1:1:androidx.media3.common.MediaMetadata access$1500(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> B0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Lj/w;"}
    1:1:void lambda$release$5(androidx.media3.common.Player$Listener):0:0 -> B1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;)V"}
    1:1:void addListener(androidx.media3.common.Player$Listener):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;)V"}
    1:1:androidx.media3.common.MediaMetadata access$1600(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> C0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Lj/w;"}
    1:1:void lambda$setAudioAttributes$8(androidx.media3.common.AudioAttributes,androidx.media3.common.Player$Listener):0:0 -> C1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Lj/d0$d;)V"}
    1:1:int getPlaybackState():0:0 -> D
    1:1:androidx.media3.common.MediaMetadata access$1602(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.common.MediaMetadata):0:0 -> D0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lj/w;)Lj/w;"}
    1:1:void lambda$setRepeatMode$3(int,androidx.media3.common.Player$Listener):0:0 -> D1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/d0$d;)V"}
    1:1:androidx.media3.common.Tracks getCurrentTracks():0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/l0;"}
    1:1:boolean access$1700(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> E0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Z"}
    1:1:void lambda$setVolume$10(float,androidx.media3.common.Player$Listener):0:0 -> E1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FLj/d0$d;)V"}
    1:1:boolean getShuffleModeEnabled():0:0 -> F
    1:1:void access$1800(androidx.media3.exoplayer.ExoPlayerImpl,java.lang.Object):0:0 -> F0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Ljava/lang/Object;)V"}
    1:1:void lambda$updateAvailableCommands$26(androidx.media3.common.Player$Listener):0:0 -> F1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;)V"}
    1:1:void access$1900(androidx.media3.exoplayer.ExoPlayerImpl,int,int):0:0 -> G0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;II)V"}
    1:1:void lambda$updatePlaybackInfo$12(androidx.media3.exoplayer.PlaybackInfo,int,androidx.media3.common.Player$Listener):0:0 -> G1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;ILj/d0$d;)V"}
    1:1:void access$2000(androidx.media3.exoplayer.ExoPlayerImpl,android.graphics.SurfaceTexture):0:0 -> H0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Landroid/graphics/SurfaceTexture;)V"}
    1:1:void lambda$updatePlaybackInfo$13(int,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$Listener):0:0 -> H1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/d0$e;Lj/d0$e;Lj/d0$d;)V"}
    1:1:int getCurrentPeriodIndex():0:0 -> I
    1:1:void access$2100(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> I0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)V"}
    1:1:void lambda$updatePlaybackInfo$14(androidx.media3.common.MediaItem,int,androidx.media3.common.Player$Listener):0:0 -> I1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;ILj/d0$d;)V"}
    1:1:androidx.media3.common.VideoSize getVideoSize():0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/p0;"}
    1:1:int access$2200(int):0:0 -> J0
    1:1:void lambda$updatePlaybackInfo$15(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> J1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:void access$2300(androidx.media3.exoplayer.ExoPlayerImpl,boolean,int,int):0:0 -> K0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;ZII)V"}
    1:1:void lambda$updatePlaybackInfo$16(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> K1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:float getVolume():0:0 -> L
    1:1:androidx.media3.exoplayer.StreamVolumeManager access$2400(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> L0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Lq/g3;"}
    1:1:void lambda$updatePlaybackInfo$17(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> L1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:androidx.media3.common.DeviceInfo access$2500(androidx.media3.exoplayer.StreamVolumeManager):0:0 -> M0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g3;)Lj/l;"}
    1:1:void lambda$updatePlaybackInfo$18(androidx.media3.common.MediaMetadata,androidx.media3.common.Player$Listener):0:0 -> M1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w;Lj/d0$d;)V"}
    1:1:long getCurrentPosition():0:0 -> N
    1:1:androidx.media3.common.DeviceInfo access$2600(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> N0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Lj/l;"}
    1:1:void lambda$updatePlaybackInfo$19(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> N1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:int getCurrentAdGroupIndex():0:0 -> O
    1:1:androidx.media3.common.DeviceInfo access$2602(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.common.DeviceInfo):0:0 -> O0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lj/l;)Lj/l;"}
    1:1:void lambda$updatePlaybackInfo$20(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> O1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:void setMediaItems(java.util.List,boolean):0:0 -> P
    1:1:void access$2700(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> P0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)V"}
    1:1:void lambda$updatePlaybackInfo$21(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> P1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:int getCurrentMediaItemIndex():0:0 -> Q
    1:1:boolean access$2800(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> Q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Z"}
    1:1:void lambda$updatePlaybackInfo$22(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> Q1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:void setAudioAttributes(androidx.media3.common.AudioAttributes,boolean):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Z)V"}
    1:1:androidx.media3.exoplayer.PlaybackInfo access$2900(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> R0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Lq/t2;"}
    1:1:void lambda$updatePlaybackInfo$23(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> R1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:void access$3000(androidx.media3.exoplayer.ExoPlayerImpl,boolean,int,int):0:0 -> S0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;ZII)V"}
    1:1:void lambda$updatePlaybackInfo$24(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> S1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:void seekTo(int,long,int,boolean):0:0 -> T
    1:1:androidx.media3.exoplayer.DecoderCounters access$402(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.exoplayer.DecoderCounters):0:0 -> T0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lq/o;)Lq/o;"}
    1:1:void lambda$updatePlaybackInfo$25(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> T1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:androidx.media3.exoplayer.analytics.AnalyticsCollector access$500(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> U0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Lr/a;"}
    1:1:androidx.media3.exoplayer.PlaybackInfo maskTimelineAndPosition(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Timeline,android.util.Pair):0:0 -> U1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/i0;Landroid/util/Pair;)Lq/t2;"}
    1:1:androidx.media3.common.Format access$602(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.common.Format):0:0 -> V0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lj/q;)Lj/q;"}
    1:1:android.util.Pair maskWindowPositionMsOrGetPeriodPositionUs(androidx.media3.common.Timeline,int,long):0:0 -> V1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;IJ)Landroid/util/Pair;"}
    1:1:androidx.media3.common.VideoSize access$702(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.common.VideoSize):0:0 -> W0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lj/p0;)Lj/p0;"}
    1:1:void maybeNotifySurfaceSizeChanged(int,int):0:0 -> W1
    1:1:void $r8$lambda$1TvoPpCPERVyfeVEfIMgdS8JN0M(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> X
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:androidx.media3.common.util.ListenerSet access$800(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> X0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Lm/n;"}
    1:1:long periodPositionUsToWindowPositionUs(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long):0:0 -> X1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lg0/f0$b;J)J"}
    1:1:void $r8$lambda$7I_gY10BWejtKHmPIAZGlAOOtT4(float,androidx.media3.common.Player$Listener):0:0 -> Y
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FLj/d0$d;)V"}
    1:1:java.lang.Object access$900(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> Y0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Ljava/lang/Object;"}
    1:1:void removeMediaSourceHolders(int,int):0:0 -> Y1
    1:1:void $r8$lambda$CSagcWR518nve-7HGd4j84Eln0I(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> Z
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:void addAnalyticsListener(androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> Z0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;)V"}
    1:1:void removeSurfaceCallbacks():0:0 -> Z1
    1:1:androidx.media3.common.Format getVideoFormat():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:void $r8$lambda$FzP_uAD2Exp-PCe-zE6OTWkSs6g(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> a0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:void addAudioOffloadListener(androidx.media3.exoplayer.ExoPlayer$AudioOffloadListener):0:0 -> a1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w$a;)V"}
    1:1:void sendRendererMessage(int,int,java.lang.Object):0:0 -> a2
    1:1:void $r8$lambda$JtzxNRDnWahnXIvwxzcFksVgOkU(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.common.Player$Listener,androidx.media3.common.FlagSet):0:0 -> b0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lj/d0$d;Lj/p;)V"}
    1:1:java.util.List addMediaSourceHolders(int,java.util.List):0:0 -> b1
    1:1:void sendRendererMessage(int,java.lang.Object):0:0 -> b2
    1:1:void $r8$lambda$Kk09jzs0OKewoiSfI3wTI0zS6O4(androidx.media3.common.AudioAttributes,androidx.media3.common.Player$Listener):0:0 -> c0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Lj/d0$d;)V"}
    1:1:androidx.media3.common.MediaMetadata buildUpdatedMediaMetadata():0:0 -> c1
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/w;"}
    1:1:void sendVolumeToRenderers():0:0 -> c2
    1:1:void $r8$lambda$QSwjsxwgyvWcD1gZXb2ADxHS1dk(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> d0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:int computePlaybackSuppressionReason(boolean,int):0:0 -> d1
    1:1:void setMediaSources(java.util.List,boolean):0:0 -> d2
    1:1:void $r8$lambda$RdHOwSevgWOesJTqoj_B8_sKZHE(androidx.media3.common.Player$Listener):0:0 -> e0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;)V"}
    1:1:androidx.media3.common.DeviceInfo createDeviceInfo(androidx.media3.exoplayer.StreamVolumeManager):0:0 -> e1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g3;)Lj/l;"}
    1:1:void setMediaSourcesInternal(java.util.List,int,long,boolean):0:0 -> e2
    1:1:void $r8$lambda$X91ds8LwUw7lRJDqEgoEXqmvWE8(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> f0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:androidx.media3.common.Timeline createMaskingTimeline():0:0 -> f1
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
    1:1:void setSurfaceTextureInternal(android.graphics.SurfaceTexture):0:0 -> f2
    1:1:androidx.media3.common.PlaybackParameters getPlaybackParameters():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/c0;"}
    1:1:void $r8$lambda$Y-XVwAHjc_sf_sli_3EXo0nAzQ0(int,int,androidx.media3.common.Player$Listener):0:0 -> g0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILj/d0$d;)V"}
    1:1:java.util.List createMediaSources(java.util.List):0:0 -> g1
    1:1:void setVideoOutputInternal(java.lang.Object):0:0 -> g2
    1:1:void setPlaybackParameters(androidx.media3.common.PlaybackParameters):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    1:1:void $r8$lambda$bbmuYezF3TmfPB20EHpdWi7cK04(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> h0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:androidx.media3.exoplayer.PlayerMessage createMessageInternal(androidx.media3.exoplayer.PlayerMessage$Target):0:0 -> h1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u2$b;)Lq/u2;"}
    1:1:void stopInternal(androidx.media3.exoplayer.ExoPlaybackException):0:0 -> h2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u;)V"}
    1:1:void prepare():0:0 -> i
    1:1:void $r8$lambda$bwulE-vyKBgETB2zRiLMz8Ej3Qg(androidx.media3.common.MediaItem,int,androidx.media3.common.Player$Listener):0:0 -> i0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;ILj/d0$d;)V"}
    1:1:android.util.Pair evaluateMediaItemTransitionReason(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.exoplayer.PlaybackInfo,boolean,int,boolean,boolean):0:0 -> i1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lq/t2;ZIZZ)Landroid/util/Pair;"}
    1:1:void updateAvailableCommands():0:0 -> i2
    1:1:void setVolume(float):0:0 -> j
    1:1:void $r8$lambda$cwo2ufifWDOBLIt-YFnBWUBZTzg(int,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$Listener):0:0 -> j0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/d0$e;Lj/d0$e;Lj/d0$d;)V"}
    1:1:android.os.Looper getApplicationLooper():0:0 -> j1
    1:1:void updatePlayWhenReady(boolean,int,int):0:0 -> j2
    1:1:void $r8$lambda$e0BGMLEOXTDkp8yEVQ-sXVd12k8(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate):0:0 -> k0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lq/s1$e;)V"}
    1:1:long getContentBufferedPosition():0:0 -> k1
    1:1:void updatePlaybackInfo(androidx.media3.exoplayer.PlaybackInfo,int,boolean,int,long,int,boolean):0:0 -> k2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;IZIJIZ)V"}
    1:1:androidx.media3.common.PlaybackException getPlayerError():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/b0;"}
    1:1:void $r8$lambda$i3bl-1fERIIztc8n5dya3TDeIf4(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate):0:0 -> l0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lq/s1$e;)V"}
    1:1:long getContentPositionInternal(androidx.media3.exoplayer.PlaybackInfo):0:0 -> l1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)J"}
    1:1:void updatePlaybackInfoForPlayWhenReadyAndSuppressionReasonStates(boolean,int,int):0:0 -> l2
    1:1:void setRepeatMode(int):0:0 -> m
    1:1:void $r8$lambda$leLOgzElQeL2Ei6vpJFWdxGhXsQ(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> m0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:long getCurrentPositionUsInternal(androidx.media3.exoplayer.PlaybackInfo):0:0 -> m1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)J"}
    1:1:void updatePriorityTaskManagerForIsLoadingChange(boolean):0:0 -> m2
    1:1:void setPlayWhenReady(boolean):0:0 -> n
    1:1:void $r8$lambda$lnGWi1e34JQJKIe5fUD5dxQDjDA(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> n0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:int getCurrentWindowIndexInternal(androidx.media3.exoplayer.PlaybackInfo):0:0 -> n1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)I"}
    1:1:void updateWakeAndWifiLock():0:0 -> n2
    1:1:void setVideoSurface(android.view.Surface):0:0 -> o
    1:1:void $r8$lambda$mBWHIf6BYwnT6-4kHHP2KwzkdA4(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.common.Player$Listener):0:0 -> o0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lj/d0$d;)V"}
    1:1:int getPlayWhenReadyChangeReason(int):0:0 -> o1
    1:1:void verifyApplicationThread():0:0 -> o2
    1:1:boolean isPlayingAd():0:0 -> p
    1:1:void $r8$lambda$r18SR2w5iVX7yvgLvV2tia7_aPk(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> p0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:androidx.media3.exoplayer.ExoPlaybackException getPlayerError():0:0 -> p1
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/u;"}
    1:1:void $r8$lambda$rKJhn9DMHLLUg99atp8SVreYVZ8(androidx.media3.exoplayer.PlaybackInfo,int,androidx.media3.common.Player$Listener):0:0 -> q0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;ILj/d0$d;)V"}
    1:1:androidx.media3.common.Player$PositionInfo getPositionInfo(long):0:0 -> q1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lj/d0$e;"}
    1:1:int getCurrentAdIndexInAdGroup():0:0 -> r
    1:1:void $r8$lambda$sextyk-RX5SFfmcYjQUS7_ZafIw(androidx.media3.common.MediaMetadata,androidx.media3.common.Player$Listener):0:0 -> r0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w;Lj/d0$d;)V"}
    1:1:androidx.media3.common.Player$PositionInfo getPreviousPositionInfo(int,androidx.media3.exoplayer.PlaybackInfo,int):0:0 -> r1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILq/t2;I)Lj/d0$e;"}
    1:1:void release():0:0 -> release
    1:1:long getContentPosition():0:0 -> s
    1:1:void $r8$lambda$veaAw3S7V1BMpRoAybRiYEKRlY8(int,androidx.media3.common.Player$Listener):0:0 -> s0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/d0$d;)V"}
    1:1:long getRequestedContentPositionUs(androidx.media3.exoplayer.PlaybackInfo):0:0 -> s1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)J"}
    1:1:long getTotalBufferedDuration():0:0 -> t
    1:1:void $r8$lambda$wvVXY4j0wLG6McjNd5sKrfXhRnU(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Player$Listener):0:0 -> t0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/d0$d;)V"}
    1:1:void handlePlaybackInfo(androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate):0:0 -> t1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$e;)V"}
    1:1:androidx.media3.exoplayer.DecoderCounters access$1002(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.exoplayer.DecoderCounters):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lq/o;)Lq/o;"}
    1:1:boolean hasSupportedAudioOutput():0:0 -> u1
    1:1:int getPlaybackSuppressionReason():0:0 -> v
    1:1:androidx.media3.common.Format access$1102(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.common.Format):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lj/q;)Lj/q;"}
    1:1:int initializeKeepSessionIdAudioTrack(int):0:0 -> v1
    1:1:long getBufferedPosition():0:0 -> w
    1:1:boolean access$1200(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Z"}
    1:1:boolean isSleepingForOffload():0:0 -> w1
    1:1:boolean getPlayWhenReady():0:0 -> x
    1:1:boolean access$1202(androidx.media3.exoplayer.ExoPlayerImpl,boolean):0:0 -> x0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Z)Z"}
    1:1:void lambda$maybeNotifySurfaceSizeChanged$27(int,int,androidx.media3.common.Player$Listener):0:0 -> x1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILj/d0$d;)V"}
    1:1:androidx.media3.common.text.CueGroup access$1302(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.common.text.CueGroup):0:0 -> y0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Ll/b;)Ll/b;"}
    1:1:void lambda$new$0(androidx.media3.common.Player$Listener,androidx.media3.common.FlagSet):0:0 -> y1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;Lj/p;)V"}
    1:1:int getRepeatMode():0:0 -> z
    1:1:androidx.media3.common.MediaMetadata access$1400(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> z0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)Lj/w;"}
    1:1:void lambda$new$1(androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate):0:0 -> z1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$e;)V"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticApiModelOutline0 -> q.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioDeviceInfo[] androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticApiModelOutline$7$af488bc638dd3c246a719afa22de10dfafdf7d35230f1ba6b351e78c9e83e936$0.m(android.media.AudioManager,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda1 -> q.p0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.common.AudioAttributes androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$5407c6eb6cfd776cb79fc3c5ae4ad48d0ae93a49656983340adf7d2b9145b988$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$5407c6eb6cfd776cb79fc3c5ae4ad48d0ae93a49656983340adf7d2b9145b988$0.<init>(androidx.media3.common.AudioAttributes):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$5407c6eb6cfd776cb79fc3c5ae4ad48d0ae93a49656983340adf7d2b9145b988$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda10 -> q.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$1.f$0 -> a
    androidx.media3.common.Player$PositionInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$1.f$1 -> b
    androidx.media3.common.Player$PositionInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$1.f$2 -> c
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$1.<init>(int,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/d0$e;Lj/d0$e;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$1.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda11 -> q.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.common.MediaItem androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$2.f$0 -> a
    int androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$2.f$1 -> b
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$2.<init>(androidx.media3.common.MediaItem,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;I)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$2.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda12 -> q.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.PlaybackInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$3.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$3.<init>(androidx.media3.exoplayer.PlaybackInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$3.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda13 -> q.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.PlaybackInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$4.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$4.<init>(androidx.media3.exoplayer.PlaybackInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$4.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda14 -> q.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.PlaybackInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$5.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$5.<init>(androidx.media3.exoplayer.PlaybackInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$5.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda15 -> q.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.common.MediaMetadata androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$6.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$6.<init>(androidx.media3.common.MediaMetadata):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$6.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda16 -> q.l0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.PlaybackInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$7.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$7.<init>(androidx.media3.exoplayer.PlaybackInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$7.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda17 -> q.m0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.PlaybackInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$8.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$8.<init>(androidx.media3.exoplayer.PlaybackInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$8.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda18 -> q.n0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.PlaybackInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$9.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$9.<init>(androidx.media3.exoplayer.PlaybackInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$9.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda19 -> q.o0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$b3373b23d8ffe4a0b9d3fe9ecb916b673190c23ff42daf52121fda7df0956e1f$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$b3373b23d8ffe4a0b9d3fe9ecb916b673190c23ff42daf52121fda7df0956e1f$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda2 -> q.u0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.ExoPlayerImpl androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$81c579eb5f031eff9bbb0d0ec65ed0ddf45d48887d8184a9723381622ff024e6$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$81c579eb5f031eff9bbb0d0ec65ed0ddf45d48887d8184a9723381622ff024e6$0.<init>(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$81c579eb5f031eff9bbb0d0ec65ed0ddf45d48887d8184a9723381622ff024e6$0.invoke(java.lang.Object,androidx.media3.common.FlagSet):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lj/p;)V"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda20 -> q.q0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$dc34d166ffaaf9a67aa99317bf100f1531f91877196cce3ceacbe39da0a16dff$0.f$0 -> a
    int androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$dc34d166ffaaf9a67aa99317bf100f1531f91877196cce3ceacbe39da0a16dff$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$dc34d166ffaaf9a67aa99317bf100f1531f91877196cce3ceacbe39da0a16dff$0.<init>(int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$dc34d166ffaaf9a67aa99317bf100f1531f91877196cce3ceacbe39da0a16dff$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda21 -> q.r0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    float androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$fc1ce679aee9611738f7257170dceb27d9addec22cd8f9e219d4e010e888181a$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$fc1ce679aee9611738f7257170dceb27d9addec22cd8f9e219d4e010e888181a$0.<init>(float):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$fc1ce679aee9611738f7257170dceb27d9addec22cd8f9e219d4e010e888181a$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda22 -> q.s0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.ExoPlayerImpl androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$8$538338e84c990100c04a3767ed4ba34653c6d197fdba8123e157cd1127288d5c$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$8$538338e84c990100c04a3767ed4ba34653c6d197fdba8123e157cd1127288d5c$0.<init>(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$8$538338e84c990100c04a3767ed4ba34653c6d197fdba8123e157cd1127288d5c$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda23 -> q.t0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.ExoPlayerImpl androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$8$9b44d06ae69ea1e9cca306d20b7d5b8c4fbcd5f836538df6f8ab02c2df2c567b$0.f$0 -> f
    androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$8$9b44d06ae69ea1e9cca306d20b7d5b8c4fbcd5f836538df6f8ab02c2df2c567b$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$8$9b44d06ae69ea1e9cca306d20b7d5b8c4fbcd5f836538df6f8ab02c2df2c567b$0.<init>(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lq/s1$e;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$8$9b44d06ae69ea1e9cca306d20b7d5b8c4fbcd5f836538df6f8ab02c2df2c567b$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda3 -> q.v0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.ExoPlayerImpl androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$81c579eb5f031eff9bbb0d0ec65ed0ddf45d48887d8184a9723381622ff024e6$1.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$81c579eb5f031eff9bbb0d0ec65ed0ddf45d48887d8184a9723381622ff024e6$1.<init>(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$81c579eb5f031eff9bbb0d0ec65ed0ddf45d48887d8184a9723381622ff024e6$1.onPlaybackInfoUpdate(androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$e;)V"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda4 -> q.w0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$8dd8e5676f0f3661416038cff3b2ea2962902825de5d620ca78047e72d9a92bf$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$8dd8e5676f0f3661416038cff3b2ea2962902825de5d620ca78047e72d9a92bf$0.<init>(int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$8dd8e5676f0f3661416038cff3b2ea2962902825de5d620ca78047e72d9a92bf$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda5 -> q.x0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.PlaybackInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$0.f$0 -> a
    int androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$0.<init>(androidx.media3.exoplayer.PlaybackInfo,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;I)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda6 -> q.y0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.PlaybackInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$10.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$10.<init>(androidx.media3.exoplayer.PlaybackInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$10.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda7 -> q.z0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.PlaybackInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$11.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$11.<init>(androidx.media3.exoplayer.PlaybackInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$11.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda8 -> q.a1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.PlaybackInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$12.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$12.<init>(androidx.media3.exoplayer.PlaybackInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$12.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$$ExternalSyntheticLambda9 -> q.b1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.PlaybackInfo androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$13.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$13.<init>(androidx.media3.exoplayer.PlaybackInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$$InternalSyntheticLambda$7$98442e3d99a91220baca2ae6b06f5a0a3bbfeb1170e948fdf32308f24c261d48$13.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$1 -> q.c1$a:
androidx.media3.exoplayer.ExoPlayerImpl$Api23 -> q.c1$b:
    1:1:boolean isSuitableAudioOutputPresentInAudioDeviceInfoList(android.content.Context,android.media.AudioDeviceInfo[]):0:0 -> a
    1:1:void registerAudioDeviceCallback(android.media.AudioManager,android.media.AudioDeviceCallback,android.os.Handler):0:0 -> b
androidx.media3.exoplayer.ExoPlayerImpl$Api23$$ExternalSyntheticApiModelOutline0 -> q.d1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.ExoPlayerImpl$Api23$$InternalSyntheticApiModelOutline$8$1d75d7f76ae4f1330cf6f4dbf7acc8fb15f29865dbf8ada7224a3ec88a85e25f$0.m(android.media.AudioDeviceInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$Api23$$ExternalSyntheticApiModelOutline1 -> q.e1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$Api23$$InternalSyntheticApiModelOutline$8$5a2c3825eeea93ab17482236dda297ae5a1b3626dec76549a6c28b809e80e70e$0.m(android.media.AudioManager,android.media.AudioDeviceCallback,android.os.Handler):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$Api31 -> q.c1$c:
    1:1:androidx.media3.exoplayer.analytics.PlayerId registerMediaMetricsListener(android.content.Context,androidx.media3.exoplayer.ExoPlayerImpl,boolean,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lq/c1;ZLjava/lang/String;)Lr/w3;"}
androidx.media3.exoplayer.ExoPlayerImpl$Api31$$ExternalSyntheticApiModelOutline0 -> q.f1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.LogSessionId androidx.media3.exoplayer.ExoPlayerImpl$Api31$$InternalSyntheticApiModelOutline$8$15c77eb1237364e7f1f476ad250c6b4fc9f193b1831f241191edbf9f0ec01f76$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener -> q.c1$d:
    androidx.media3.exoplayer.ExoPlayerImpl this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)V"}
    2:2:void <init>(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.exoplayer.ExoPlayerImpl$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lq/c1$a;)V"}
    1:1:void executePlayerCommand(int):0:0 -> A
    1:1:void onOffloadedPlayback(boolean):0:0 -> B
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onStreamVolumeChanged(int,boolean):0:0 -> C
    1:1:void onSleepingForOffloadChanged(boolean):0:0 -> D
    1:1:void onAudioBecomingNoisy():0:0 -> E
    1:1:void setVolumeMultiplier(float):0:0 -> F
    1:1:void $r8$lambda$6RoYPS2RjQXQKdQbaFwBHq6Dckg(androidx.media3.common.text.CueGroup,androidx.media3.common.Player$Listener):0:0 -> G
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;Lj/d0$d;)V"}
    1:1:void $r8$lambda$7SNwB2NiVTPw6IjP2rZvpI9o654(int,boolean,androidx.media3.common.Player$Listener):0:0 -> H
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZLj/d0$d;)V"}
    1:1:void $r8$lambda$8q1034cZ8bSyTNGEo49IxuBI-HA(androidx.media3.common.Metadata,androidx.media3.common.Player$Listener):0:0 -> I
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;Lj/d0$d;)V"}
    1:1:void $r8$lambda$F34wIGuGne-wRti3b8M5WuR1D7E(androidx.media3.common.DeviceInfo,androidx.media3.common.Player$Listener):0:0 -> J
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l;Lj/d0$d;)V"}
    1:1:void $r8$lambda$LNG-IfNCo8g0tQFyug2OwdRpCKk(androidx.media3.common.VideoSize,androidx.media3.common.Player$Listener):0:0 -> K
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;Lj/d0$d;)V"}
    1:1:void $r8$lambda$N9OkdVvwQdfhK-PAguoMS4yK2Y8(boolean,androidx.media3.common.Player$Listener):0:0 -> L
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLj/d0$d;)V"}
    1:1:void $r8$lambda$d9rjPyBiT3gYbFoDG21KWSiwb8Q(androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener,androidx.media3.common.Player$Listener):0:0 -> M
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1$d;Lj/d0$d;)V"}
    1:1:void $r8$lambda$h9sTA13Q2BBa3Vi88sUes2EUbxk(java.util.List,androidx.media3.common.Player$Listener):0:0 -> N
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lj/d0$d;)V"}
    1:1:void lambda$onCues$2(java.util.List,androidx.media3.common.Player$Listener):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lj/d0$d;)V"}
    1:1:void lambda$onCues$3(androidx.media3.common.text.CueGroup,androidx.media3.common.Player$Listener):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;Lj/d0$d;)V"}
    1:1:void lambda$onMetadata$4(androidx.media3.common.Player$Listener):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$d;)V"}
    1:1:void lambda$onMetadata$5(androidx.media3.common.Metadata,androidx.media3.common.Player$Listener):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;Lj/d0$d;)V"}
    1:1:void lambda$onSkipSilenceEnabledChanged$1(boolean,androidx.media3.common.Player$Listener):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLj/d0$d;)V"}
    1:1:void lambda$onStreamTypeChanged$6(androidx.media3.common.DeviceInfo,androidx.media3.common.Player$Listener):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l;Lj/d0$d;)V"}
    1:1:void lambda$onStreamVolumeChanged$7(int,boolean,androidx.media3.common.Player$Listener):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZLj/d0$d;)V"}
    1:1:void lambda$onVideoSizeChanged$0(androidx.media3.common.VideoSize,androidx.media3.common.Player$Listener):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;Lj/d0$d;)V"}
    1:1:void onAudioTrackInitialized(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    1:1:void onAudioTrackReleased(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    1:1:void onVideoSizeChanged(androidx.media3.common.VideoSize):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;)V"}
    1:1:void onSkipSilenceEnabledChanged(boolean):0:0 -> d
    1:1:void onAudioSinkError(java.lang.Exception):0:0 -> e
    1:1:void onVideoCodecError(java.lang.Exception):0:0 -> f
    1:1:void onVideoDecoderReleased(java.lang.String):0:0 -> g
    1:1:void onAudioEnabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void onAudioDisabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void onMetadata(androidx.media3.common.Metadata):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)V"}
    1:1:void onVideoDisabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void onCues(androidx.media3.common.text.CueGroup):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;)V"}
    1:1:void onRenderedFirstFrame(java.lang.Object,long):0:0 -> m
    1:1:void onAudioDecoderReleased(java.lang.String):0:0 -> n
    1:1:void onAudioDecoderInitialized(java.lang.String,long,long):0:0 -> o
    1:1:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int):0:0 -> onSurfaceTextureAvailable
    1:1:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture):0:0 -> onSurfaceTextureDestroyed
    1:1:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int):0:0 -> onSurfaceTextureSizeChanged
    1:1:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture):0:0 -> onSurfaceTextureUpdated
    1:1:void onVideoDecoderInitialized(java.lang.String,long,long):0:0 -> p
    1:1:void onAudioInputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    1:1:void onStreamTypeChanged(int):0:0 -> r
    1:1:void onAudioUnderrun(int,long,long):0:0 -> s
    1:1:void surfaceChanged(android.view.SurfaceHolder,int,int,int):0:0 -> surfaceChanged
    1:1:void surfaceCreated(android.view.SurfaceHolder):0:0 -> surfaceCreated
    1:1:void surfaceDestroyed(android.view.SurfaceHolder):0:0 -> surfaceDestroyed
    1:1:void onVideoInputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    1:1:void onDroppedFrames(int,long):0:0 -> u
    1:1:void onCues(java.util.List):0:0 -> v
    1:1:void onAudioPositionAdvancing(long):0:0 -> w
    1:1:void onVideoFrameProcessingOffset(long,int):0:0 -> x
    1:1:void onVideoEnabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void onAudioCodecError(java.lang.Exception):0:0 -> z
androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$ExternalSyntheticLambda0 -> q.g1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    boolean androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$10$dd2c086a286ac33e8e69e1ac796bd3e922e54441cf6d368aa18ba4e7d2145493$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$10$dd2c086a286ac33e8e69e1ac796bd3e922e54441cf6d368aa18ba4e7d2145493$0.<init>(boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$10$dd2c086a286ac33e8e69e1ac796bd3e922e54441cf6d368aa18ba4e7d2145493$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$ExternalSyntheticLambda1 -> q.h1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.List androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$09d5f0fa2ffe83e4d352909da8c9e566756a5c8db1db8f64aed68669043c9911$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$09d5f0fa2ffe83e4d352909da8c9e566756a5c8db1db8f64aed68669043c9911$0.<init>(java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$09d5f0fa2ffe83e4d352909da8c9e566756a5c8db1db8f64aed68669043c9911$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$ExternalSyntheticLambda2 -> q.i1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$4bdecc11e0bce783d0580d720bae6723d130138ea6fbe42c910d3fe95e29057f$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$4bdecc11e0bce783d0580d720bae6723d130138ea6fbe42c910d3fe95e29057f$0.<init>(androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1$d;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$4bdecc11e0bce783d0580d720bae6723d130138ea6fbe42c910d3fe95e29057f$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$ExternalSyntheticLambda3 -> q.j1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.common.Metadata androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$4bdecc11e0bce783d0580d720bae6723d130138ea6fbe42c910d3fe95e29057f$1.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$4bdecc11e0bce783d0580d720bae6723d130138ea6fbe42c910d3fe95e29057f$1.<init>(androidx.media3.common.Metadata):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$4bdecc11e0bce783d0580d720bae6723d130138ea6fbe42c910d3fe95e29057f$1.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$ExternalSyntheticLambda4 -> q.k1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$774014b42e58ea5c90a70538dabbaeec18e2ce2adda38de9a5d3650e1a5c54da$0.f$0 -> a
    boolean androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$774014b42e58ea5c90a70538dabbaeec18e2ce2adda38de9a5d3650e1a5c54da$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$774014b42e58ea5c90a70538dabbaeec18e2ce2adda38de9a5d3650e1a5c54da$0.<init>(int,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$774014b42e58ea5c90a70538dabbaeec18e2ce2adda38de9a5d3650e1a5c54da$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$ExternalSyntheticLambda5 -> q.l1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.common.text.CueGroup androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$a102f03914264d4990ba3382ae456124fd175f40301240bf84cceb4dcabc62ba$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$a102f03914264d4990ba3382ae456124fd175f40301240bf84cceb4dcabc62ba$0.<init>(androidx.media3.common.text.CueGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$a102f03914264d4990ba3382ae456124fd175f40301240bf84cceb4dcabc62ba$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$ExternalSyntheticLambda6 -> q.m1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.common.DeviceInfo androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$da06b2f362f8d895d40d84820eba281b323a393edc9cd41573fba68bebfa663f$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$da06b2f362f8d895d40d84820eba281b323a393edc9cd41573fba68bebfa663f$0.<init>(androidx.media3.common.DeviceInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$8$da06b2f362f8d895d40d84820eba281b323a393edc9cd41573fba68bebfa663f$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$ExternalSyntheticLambda7 -> q.n1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$9$4612e48f25bb9e6f80318c5cbe60078ac8caf159446ae1aacef23893fe0f097c$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$9$4612e48f25bb9e6f80318c5cbe60078ac8caf159446ae1aacef23893fe0f097c$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$ExternalSyntheticLambda8 -> q.o1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.common.VideoSize androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$9$e3fbaf77c6a195e3b6a7533a651e41f31690b2083de94269e58e40fe28fcbd96$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$9$e3fbaf77c6a195e3b6a7533a651e41f31690b2083de94269e58e40fe28fcbd96$0.<init>(androidx.media3.common.VideoSize):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImpl$ComponentListener$$InternalSyntheticLambda$9$e3fbaf77c6a195e3b6a7533a651e41f31690b2083de94269e58e40fe28fcbd96$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImpl$FrameMetadataListener -> q.c1$e:
    androidx.media3.exoplayer.video.VideoFrameMetadataListener videoFrameMetadataListener -> f
    androidx.media3.exoplayer.video.spherical.CameraMotionListener cameraMotionListener -> g
    androidx.media3.exoplayer.video.VideoFrameMetadataListener internalVideoFrameMetadataListener -> h
    androidx.media3.exoplayer.video.spherical.CameraMotionListener internalCameraMotionListener -> i
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.exoplayer.ExoPlayerImpl$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1$a;)V"}
    1:1:void handleMessage(int,java.lang.Object):0:0 -> H
    1:1:void onVideoFrameAboutToBeRendered(long,long,androidx.media3.common.Format,android.media.MediaFormat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJLj/q;Landroid/media/MediaFormat;)V"}
    1:1:void onCameraMotionReset():0:0 -> g
    1:1:void onCameraMotion(long,float[]):0:0 -> h
androidx.media3.exoplayer.ExoPlayerImpl$MediaSourceHolderSnapshot -> q.c1$f:
    java.lang.Object uid -> a
    androidx.media3.exoplayer.source.MediaSource mediaSource -> b
    androidx.media3.common.Timeline timeline -> c
    1:1:void <init>(java.lang.Object,androidx.media3.exoplayer.source.MaskingMediaSource):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lg0/a0;)V"}
    1:1:java.lang.Object getUid():0:0 -> a
    1:1:androidx.media3.common.Timeline getTimeline():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
    1:1:void updateTimeline(androidx.media3.common.Timeline):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
androidx.media3.exoplayer.ExoPlayerImpl$NoSuitableOutputPlaybackSuppressionAudioDeviceCallback -> q.c1$g:
    androidx.media3.exoplayer.ExoPlayerImpl this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.ExoPlayerImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;)V"}
    2:2:void <init>(androidx.media3.exoplayer.ExoPlayerImpl,androidx.media3.exoplayer.ExoPlayerImpl$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c1;Lq/c1$a;)V"}
    1:1:void onAudioDevicesAdded(android.media.AudioDeviceInfo[]):0:0 -> onAudioDevicesAdded
    1:1:void onAudioDevicesRemoved(android.media.AudioDeviceInfo[]):0:0 -> onAudioDevicesRemoved
androidx.media3.exoplayer.ExoPlayerImplInternal -> q.s1:
    long releaseTimeoutMs -> A
    androidx.media3.exoplayer.analytics.PlayerId playerId -> B
    boolean dynamicSchedulingEnabled -> C
    androidx.media3.exoplayer.SeekParameters seekParameters -> D
    androidx.media3.exoplayer.PlaybackInfo playbackInfo -> E
    androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate playbackInfoUpdate -> F
    boolean released -> G
    boolean pauseAtEndOfWindow -> H
    boolean pendingPauseAtEndOfPeriod -> I
    boolean isRebuffering -> J
    long lastRebufferRealtimeMs -> K
    boolean shouldContinueLoading -> L
    int repeatMode -> M
    boolean shuffleModeEnabled -> N
    boolean foregroundMode -> O
    boolean requestForRendererSleep -> P
    boolean offloadSchedulingEnabled -> Q
    int enabledRendererCount -> R
    androidx.media3.exoplayer.ExoPlayerImplInternal$SeekPosition pendingInitialSeekPosition -> S
    long rendererPositionUs -> T
    long rendererPositionElapsedRealtimeUs -> U
    int nextPendingMessageIndexHint -> V
    boolean deliverPendingMessageAtStartPositionRequired -> W
    androidx.media3.exoplayer.ExoPlaybackException pendingRecoverableRendererError -> X
    long setForegroundModeTimeoutMs -> Y
    long playbackMaybeBecameStuckAtMs -> Z
    androidx.media3.exoplayer.ExoPlayer$PreloadConfiguration preloadConfiguration -> a0
    androidx.media3.common.Timeline lastPreloadPoolInvalidationTimeline -> b0
    long BUFFERING_MAXIMUM_INTERVAL_MS -> c0
    androidx.media3.exoplayer.Renderer[] renderers -> f
    java.util.Set renderersToReset -> g
    androidx.media3.exoplayer.RendererCapabilities[] rendererCapabilities -> h
    androidx.media3.exoplayer.trackselection.TrackSelector trackSelector -> i
    androidx.media3.exoplayer.trackselection.TrackSelectorResult emptyTrackSelectorResult -> j
    androidx.media3.exoplayer.LoadControl loadControl -> k
    androidx.media3.exoplayer.upstream.BandwidthMeter bandwidthMeter -> l
    androidx.media3.common.util.HandlerWrapper handler -> m
    android.os.HandlerThread internalPlaybackThread -> n
    android.os.Looper playbackLooper -> o
    androidx.media3.common.Timeline$Window window -> p
    androidx.media3.common.Timeline$Period period -> q
    long backBufferDurationUs -> r
    boolean retainBackBufferFromKeyframe -> s
    androidx.media3.exoplayer.DefaultMediaClock mediaClock -> t
    java.util.ArrayList pendingMessages -> u
    androidx.media3.common.util.Clock clock -> v
    androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdateListener playbackInfoUpdateListener -> w
    androidx.media3.exoplayer.MediaPeriodQueue queue -> x
    androidx.media3.exoplayer.MediaSourceList mediaSourceList -> y
    androidx.media3.exoplayer.LivePlaybackSpeedControl livePlaybackSpeedControl -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.exoplayer.Renderer[],androidx.media3.exoplayer.trackselection.TrackSelector,androidx.media3.exoplayer.trackselection.TrackSelectorResult,androidx.media3.exoplayer.LoadControl,androidx.media3.exoplayer.upstream.BandwidthMeter,int,boolean,androidx.media3.exoplayer.analytics.AnalyticsCollector,androidx.media3.exoplayer.SeekParameters,androidx.media3.exoplayer.LivePlaybackSpeedControl,long,boolean,boolean,android.os.Looper,androidx.media3.common.util.Clock,androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdateListener,androidx.media3.exoplayer.analytics.PlayerId,android.os.Looper,androidx.media3.exoplayer.ExoPlayer$PreloadConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lq/x2;Lj0/d0;Lj0/e0;Lq/w1;Lk0/e;IZLr/a;Lq/c3;Lq/v1;JZZLandroid/os/Looper;Lm/c;Lq/s1$f;Lr/w3;Landroid/os/Looper;Lq/w$c;)V"}
    1:1:void ensureStopped(androidx.media3.exoplayer.Renderer):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)V"}
    1:1:void resetInternal(boolean,boolean,boolean,boolean):0:0 -> A0
    1:1:void updateRebufferingState(boolean,boolean):0:0 -> A1
    1:1:void experimentalSetForegroundModeTimeoutMs(long):0:0 -> B
    1:1:void resetPendingPauseAtEndOfPeriod():0:0 -> B0
    1:1:void updateTrackSelectionPlaybackSpeed(float):0:0 -> B1
    1:1:com.google.common.collect.ImmutableList extractMetadataFromTrackSelectionArray(androidx.media3.exoplayer.trackselection.ExoTrackSelection[]):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;)Ll2/v;"}
    1:1:void resetRendererPosition(long):0:0 -> C0
    1:1:void waitUninterruptibly(com.google.common.base.Supplier,long):0:0 -> C1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/r;J)V"}
    1:1:long getCurrentLiveOffsetUs():0:0 -> D
    1:1:void resolvePendingMessageEndOfStreamPosition(androidx.media3.common.Timeline,androidx.media3.exoplayer.ExoPlayerImplInternal$PendingMessageInfo,androidx.media3.common.Timeline$Window,androidx.media3.common.Timeline$Period):0:0 -> D0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lq/s1$d;Lj/i0$c;Lj/i0$b;)V"}
    1:1:androidx.media3.common.Format[] getFormats(androidx.media3.exoplayer.trackselection.ExoTrackSelection):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;)[Lj/q;"}
    1:1:boolean resolvePendingMessagePosition(androidx.media3.exoplayer.ExoPlayerImplInternal$PendingMessageInfo,androidx.media3.common.Timeline,androidx.media3.common.Timeline,int,boolean,androidx.media3.common.Timeline$Window,androidx.media3.common.Timeline$Period):0:0 -> E0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$d;Lj/i0;Lj/i0;IZLj/i0$c;Lj/i0$b;)Z"}
    1:1:long getLiveOffsetUs(androidx.media3.common.Timeline,java.lang.Object,long):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/lang/Object;J)J"}
    1:1:void resolvePendingMessagePositions(androidx.media3.common.Timeline,androidx.media3.common.Timeline):0:0 -> F0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lj/i0;)V"}
    1:1:long getMaxRendererReadPositionUs():0:0 -> G
    1:1:androidx.media3.exoplayer.ExoPlayerImplInternal$PositionUpdateForPlaylistChange resolvePositionForPlaylistChange(androidx.media3.common.Timeline,androidx.media3.exoplayer.PlaybackInfo,androidx.media3.exoplayer.ExoPlayerImplInternal$SeekPosition,androidx.media3.exoplayer.MediaPeriodQueue,int,boolean,androidx.media3.common.Timeline$Window,androidx.media3.common.Timeline$Period):0:0 -> G0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lq/t2;Lq/s1$h;Lq/d2;IZLj/i0$c;Lj/i0$b;)Lq/s1$g;"}
    1:1:android.util.Pair getPlaceholderFirstMediaPeriodPositionUs(androidx.media3.common.Timeline):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)Landroid/util/Pair;"}
    1:1:android.util.Pair resolveSeekPositionUs(androidx.media3.common.Timeline,androidx.media3.exoplayer.ExoPlayerImplInternal$SeekPosition,boolean,int,boolean,androidx.media3.common.Timeline$Window,androidx.media3.common.Timeline$Period):0:0 -> H0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lq/s1$h;ZIZLj/i0$c;Lj/i0$b;)Landroid/util/Pair;"}
    1:1:android.os.Looper getPlaybackLooper():0:0 -> I
    1:1:int resolveSubsequentPeriod(androidx.media3.common.Timeline$Window,androidx.media3.common.Timeline$Period,int,boolean,java.lang.Object,androidx.media3.common.Timeline,androidx.media3.common.Timeline):0:0 -> I0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0$c;Lj/i0$b;IZLjava/lang/Object;Lj/i0;Lj/i0;)I"}
    1:1:long getTotalBufferedDurationUs():0:0 -> J
    1:1:void scheduleNextWork(long):0:0 -> J0
    1:1:long getTotalBufferedDurationUs(long):0:0 -> K
    1:1:void seekTo(androidx.media3.common.Timeline,int,long):0:0 -> K0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;IJ)V"}
    1:1:void handleContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void seekToCurrentPosition(boolean):0:0 -> L0
    1:1:void handleIoException(java.io.IOException,int):0:0 -> M
    1:1:void seekToInternal(androidx.media3.exoplayer.ExoPlayerImplInternal$SeekPosition):0:0 -> M0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$h;)V"}
    1:1:void handleLoadingMediaPeriodChanged(boolean):0:0 -> N
    1:1:long seekToPeriodPosition(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,boolean):0:0 -> N0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;JZ)J"}
    1:1:void handleMediaSourceListInfoRefreshed(androidx.media3.common.Timeline,boolean):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Z)V"}
    1:1:long seekToPeriodPosition(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,boolean,boolean):0:0 -> O0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;JZZ)J"}
    1:1:void handlePeriodPrepared(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void sendMessageInternal(androidx.media3.exoplayer.PlayerMessage):0:0 -> P0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u2;)V"}
    1:1:void handlePlaybackParameters(androidx.media3.common.PlaybackParameters,float,boolean,boolean):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;FZZ)V"}
    1:1:void sendMessageToTarget(androidx.media3.exoplayer.PlayerMessage):0:0 -> Q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u2;)V"}
    1:1:void handlePlaybackParameters(androidx.media3.common.PlaybackParameters,boolean):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;Z)V"}
    1:1:void sendMessageToTargetThread(androidx.media3.exoplayer.PlayerMessage):0:0 -> R0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u2;)V"}
    1:1:androidx.media3.exoplayer.PlaybackInfo handlePositionDiscontinuity(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,long,long,boolean,int):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;JJJZI)Lq/t2;"}
    1:1:void setAllRendererStreamsFinal(long):0:0 -> S0
    1:1:boolean hasReachedServerSideInsertedAdsTransition(androidx.media3.exoplayer.Renderer,androidx.media3.exoplayer.MediaPeriodHolder):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;Lq/a2;)Z"}
    1:1:void setCurrentStreamFinal(androidx.media3.exoplayer.Renderer,long):0:0 -> T0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;J)V"}
    1:1:boolean hasReadingPeriodFinishedReading():0:0 -> U
    1:1:void setForegroundModeInternal(boolean,java.util.concurrent.atomic.AtomicBoolean):0:0 -> U0
    1:1:boolean isIgnorableServerSideAdInsertionPeriodChange(boolean,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline$Period,long):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLg0/f0$b;JLg0/f0$b;Lj/i0$b;J)Z"}
    1:1:void setMediaClockPlaybackParameters(androidx.media3.common.PlaybackParameters):0:0 -> V0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    1:1:boolean isLoadingPossible():0:0 -> W
    1:1:void setMediaItemsInternal(androidx.media3.exoplayer.ExoPlayerImplInternal$MediaSourceListUpdateMessage):0:0 -> W0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$b;)V"}
    1:1:boolean isRendererEnabled(androidx.media3.exoplayer.Renderer):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)Z"}
    1:1:void setMediaSources(java.util.List,int,long,androidx.media3.exoplayer.source.ShuffleOrder):0:0 -> X0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;IJLg0/d1;)V"}
    1:1:boolean isTimelineReady():0:0 -> Y
    1:1:void setOffloadSchedulingEnabled(boolean):0:0 -> Y0
    1:1:boolean isUsingPlaceholderPeriod(androidx.media3.exoplayer.PlaybackInfo,androidx.media3.common.Timeline$Period):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;Lj/i0$b;)Z"}
    1:1:void setPauseAtEndOfWindowInternal(boolean):0:0 -> Z0
    1:1:void onRendererCapabilitiesChanged(androidx.media3.exoplayer.Renderer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)V"}
    1:1:java.lang.Boolean lambda$release$0():0:0 -> a0
    1:1:void setPlayWhenReady(boolean,int,int):0:0 -> a1
    1:1:void sendMessage(androidx.media3.exoplayer.PlayerMessage):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u2;)V"}
    1:1:void lambda$sendMessageToTargetThread$1(androidx.media3.exoplayer.PlayerMessage):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u2;)V"}
    1:1:void setPlayWhenReadyInternal(boolean,int,boolean,int):0:0 -> b1
    1:1:void onPlaylistUpdateRequested():0:0 -> c
    1:1:void maybeContinueLoading():0:0 -> c0
    1:1:void setPlaybackParameters(androidx.media3.common.PlaybackParameters):0:0 -> c1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    1:1:void onPrepared(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void maybeNotifyPlaybackInfoChanged():0:0 -> d0
    1:1:void setPlaybackParametersInternal(androidx.media3.common.PlaybackParameters):0:0 -> d1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c1;)V"}
    1:1:void maybeTriggerPendingMessages(long,long):0:0 -> e0
    1:1:void setPreloadConfigurationInternal(androidx.media3.exoplayer.ExoPlayer$PreloadConfiguration):0:0 -> e1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w$c;)V"}
    1:1:boolean maybeUpdateLoadingPeriod():0:0 -> f0
    1:1:void setRepeatMode(int):0:0 -> f1
    1:1:void onTrackSelectionsInvalidated():0:0 -> g
    1:1:void maybeUpdateOffloadScheduling():0:0 -> g0
    1:1:void setRepeatModeInternal(int):0:0 -> g1
    1:1:void $r8$lambda$HZFAdGHXC2kJ7Yz1xVfjyqfbGiM(androidx.media3.exoplayer.ExoPlayerImplInternal,androidx.media3.exoplayer.PlayerMessage):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1;Lq/u2;)V"}
    1:1:void maybeUpdatePlayingPeriod():0:0 -> h0
    1:1:void setSeekParametersInternal(androidx.media3.exoplayer.SeekParameters):0:0 -> h1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/c3;)V"}
    1:1:boolean handleMessage(android.os.Message):0:0 -> handleMessage
    1:1:androidx.media3.exoplayer.MediaPeriodHolder $r8$lambda$Q_mTqzTEUCCwhxg2JdBYkaXguSE(androidx.media3.exoplayer.ExoPlayerImplInternal,androidx.media3.exoplayer.MediaPeriodInfo,long):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1;Lq/b2;J)Lq/a2;"}
    1:1:void maybeUpdatePreloadPeriods(boolean):0:0 -> i0
    1:1:void setShuffleModeEnabledInternal(boolean):0:0 -> i1
    1:1:java.lang.Boolean $r8$lambda$dvBGXcoovERWfCYpa7AvEqVetGc(androidx.media3.exoplayer.ExoPlayerImplInternal):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1;)Ljava/lang/Boolean;"}
    1:1:void maybeUpdateReadingPeriod():0:0 -> j0
    1:1:void setShuffleOrderInternal(androidx.media3.exoplayer.source.ShuffleOrder):0:0 -> j1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/d1;)V"}
    1:1:boolean access$602(androidx.media3.exoplayer.ExoPlayerImplInternal,boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1;Z)Z"}
    1:1:void maybeUpdateReadingRenderers():0:0 -> k0
    1:1:void setState(int):0:0 -> k1
    1:1:boolean access$700(androidx.media3.exoplayer.ExoPlayerImplInternal):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1;)Z"}
    1:1:void mediaSourceListUpdateRequestedInternal():0:0 -> l0
    1:1:boolean shouldAdvancePlayingPeriod():0:0 -> l1
    1:1:boolean access$800(androidx.media3.exoplayer.ExoPlayerImplInternal):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1;)Z"}
    1:1:void moveMediaItemsInternal(androidx.media3.exoplayer.ExoPlayerImplInternal$MoveMediaItemsMessage):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$c;)V"}
    1:1:boolean shouldContinueLoading():0:0 -> m1
    1:1:void notifyTrackSelectionDiscontinuity():0:0 -> n0
    1:1:boolean shouldPlayWhenReady():0:0 -> n1
    1:1:androidx.media3.common.util.HandlerWrapper access$900(androidx.media3.exoplayer.ExoPlayerImplInternal):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1;)Lm/k;"}
    1:1:void notifyTrackSelectionPlayWhenReadyChanged(boolean):0:0 -> o0
    1:1:boolean shouldTransitionToReadyState(boolean):0:0 -> o1
    1:1:void addMediaItemsInternal(androidx.media3.exoplayer.ExoPlayerImplInternal$MediaSourceListUpdateMessage,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$b;I)V"}
    1:1:void notifyTrackSelectionRebuffer():0:0 -> p0
    1:1:boolean shouldUseLivePlaybackSpeedControl(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> p1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lg0/f0$b;)Z"}
    1:1:void allowRenderersToRenderStartOfStreams():0:0 -> q
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void startRenderers():0:0 -> q1
    1:1:void onPlaybackParametersChanged(androidx.media3.common.PlaybackParameters):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    1:1:void prepare():0:0 -> r0
    1:1:void stop():0:0 -> r1
    1:1:void attemptRendererErrorRecovery():0:0 -> s
    1:1:void prepareInternal():0:0 -> s0
    1:1:void stopInternal(boolean,boolean):0:0 -> s1
    1:1:androidx.media3.exoplayer.MediaPeriodHolder createMediaPeriodHolder(androidx.media3.exoplayer.MediaPeriodInfo,long):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/b2;J)Lq/a2;"}
    1:1:boolean release():0:0 -> t0
    1:1:void stopRenderers():0:0 -> t1
    1:1:void deliverMessage(androidx.media3.exoplayer.PlayerMessage):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u2;)V"}
    1:1:void releaseInternal():0:0 -> u0
    1:1:void updateIsLoading():0:0 -> u1
    1:1:void disableRenderer(androidx.media3.exoplayer.Renderer):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)V"}
    1:1:void releaseRenderers():0:0 -> v0
    1:1:void updateLoadControlTrackSelection(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.trackselection.TrackSelectorResult):0:0 -> v1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lg0/l1;Lj0/e0;)V"}
    1:1:void doSomeWork():0:0 -> w
    1:1:void removeMediaItemsInternal(int,int,androidx.media3.exoplayer.source.ShuffleOrder):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILg0/d1;)V"}
    1:1:void updateMediaSourcesWithMediaItemsInternal(int,int,java.util.List):0:0 -> w1
    1:1:void enableRenderer(int,boolean,long):0:0 -> x
    1:1:boolean replaceStreamsOrDisableRendererForTransition():0:0 -> x0
    1:1:void updatePeriods():0:0 -> x1
    1:1:void enableRenderers():0:0 -> y
    1:1:void reselectTracksInternal():0:0 -> y0
    1:1:void updatePlaybackPositions():0:0 -> y1
    1:1:void enableRenderers(boolean[],long):0:0 -> z
    1:1:void reselectTracksInternalAndSeek():0:0 -> z0
    1:1:void updatePlaybackSpeedSettingsForNewPeriod(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,boolean):0:0 -> z1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lg0/f0$b;Lj/i0;Lg0/f0$b;JZ)V"}
androidx.media3.exoplayer.ExoPlayerImplInternal$$ExternalSyntheticLambda0 -> q.p1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.ExoPlayerImplInternal androidx.media3.exoplayer.ExoPlayerImplInternal$$InternalSyntheticLambda$8$89af8759f52b6a9c6611a48b0920eb44f419d994f45c4bf4583ceae198f5b237$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.ExoPlayerImplInternal$$InternalSyntheticLambda$8$89af8759f52b6a9c6611a48b0920eb44f419d994f45c4bf4583ceae198f5b237$0.<init>(androidx.media3.exoplayer.ExoPlayerImplInternal):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1;)V"}
    1:1:java.lang.Object androidx.media3.exoplayer.ExoPlayerImplInternal$$InternalSyntheticLambda$8$89af8759f52b6a9c6611a48b0920eb44f419d994f45c4bf4583ceae198f5b237$0.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImplInternal$$ExternalSyntheticLambda1 -> q.q1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.ExoPlayerImplInternal androidx.media3.exoplayer.ExoPlayerImplInternal$$InternalSyntheticLambda$8$b091fa11a2de6600194cb5a771307fa4899ee630be991abe2c704a3c0037b774$0.f$0 -> f
    androidx.media3.exoplayer.PlayerMessage androidx.media3.exoplayer.ExoPlayerImplInternal$$InternalSyntheticLambda$8$b091fa11a2de6600194cb5a771307fa4899ee630be991abe2c704a3c0037b774$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.ExoPlayerImplInternal$$InternalSyntheticLambda$8$b091fa11a2de6600194cb5a771307fa4899ee630be991abe2c704a3c0037b774$0.<init>(androidx.media3.exoplayer.ExoPlayerImplInternal,androidx.media3.exoplayer.PlayerMessage):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1;Lq/u2;)V"}
    1:1:void androidx.media3.exoplayer.ExoPlayerImplInternal$$InternalSyntheticLambda$8$b091fa11a2de6600194cb5a771307fa4899ee630be991abe2c704a3c0037b774$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.ExoPlayerImplInternal$$ExternalSyntheticLambda2 -> q.r1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.ExoPlayerImplInternal androidx.media3.exoplayer.ExoPlayerImplInternal$$InternalSyntheticLambda$8$f777839ddc7aa59a94471e13d0a7f6f1b8a5bd0fa65d64d9994c1b15932a69d0$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.ExoPlayerImplInternal$$InternalSyntheticLambda$8$f777839ddc7aa59a94471e13d0a7f6f1b8a5bd0fa65d64d9994c1b15932a69d0$0.<init>(androidx.media3.exoplayer.ExoPlayerImplInternal):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1;)V"}
    1:1:androidx.media3.exoplayer.MediaPeriodHolder androidx.media3.exoplayer.ExoPlayerImplInternal$$InternalSyntheticLambda$8$f777839ddc7aa59a94471e13d0a7f6f1b8a5bd0fa65d64d9994c1b15932a69d0$0.create(androidx.media3.exoplayer.MediaPeriodInfo,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/b2;J)Lq/a2;"}
androidx.media3.exoplayer.ExoPlayerImplInternal$1 -> q.s1$a:
    androidx.media3.exoplayer.ExoPlayerImplInternal this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.ExoPlayerImplInternal):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1;)V"}
    1:1:void onSleep():0:0 -> a
    1:1:void onWakeup():0:0 -> b
androidx.media3.exoplayer.ExoPlayerImplInternal$MediaSourceListUpdateMessage -> q.s1$b:
    java.util.List mediaSourceHolders -> a
    androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder -> b
    int windowIndex -> c
    long positionUs -> d
    1:1:void <init>(java.util.List,androidx.media3.exoplayer.source.ShuffleOrder,int,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lg0/d1;IJ)V"}
    2:2:void <init>(java.util.List,androidx.media3.exoplayer.source.ShuffleOrder,int,long,androidx.media3.exoplayer.ExoPlayerImplInternal$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lg0/d1;IJLq/s1$a;)V"}
    1:1:int access$200(androidx.media3.exoplayer.ExoPlayerImplInternal$MediaSourceListUpdateMessage):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$b;)I"}
    1:1:java.util.List access$300(androidx.media3.exoplayer.ExoPlayerImplInternal$MediaSourceListUpdateMessage):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$b;)Ljava/util/List;"}
    1:1:androidx.media3.exoplayer.source.ShuffleOrder access$400(androidx.media3.exoplayer.ExoPlayerImplInternal$MediaSourceListUpdateMessage):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$b;)Lg0/d1;"}
    1:1:long access$500(androidx.media3.exoplayer.ExoPlayerImplInternal$MediaSourceListUpdateMessage):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$b;)J"}
androidx.media3.exoplayer.ExoPlayerImplInternal$MoveMediaItemsMessage -> q.s1$c:
androidx.media3.exoplayer.ExoPlayerImplInternal$PendingMessageInfo -> q.s1$d:
    androidx.media3.exoplayer.PlayerMessage message -> f
    int resolvedPeriodIndex -> g
    long resolvedPeriodTimeUs -> h
    java.lang.Object resolvedPeriodUid -> i
    1:1:void <init>(androidx.media3.exoplayer.PlayerMessage):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u2;)V"}
    1:1:int compareTo(androidx.media3.exoplayer.ExoPlayerImplInternal$PendingMessageInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$d;)I"}
    1:1:void setResolvedPosition(int,long,java.lang.Object):0:0 -> b
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate -> q.s1$e:
    boolean hasPendingChange -> a
    androidx.media3.exoplayer.PlaybackInfo playbackInfo -> b
    int operationAcks -> c
    boolean positionDiscontinuity -> d
    int discontinuityReason -> e
    1:1:void <init>(androidx.media3.exoplayer.PlaybackInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:boolean access$100(androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$e;)Z"}
    1:1:void incrementPendingOperationAcks(int):0:0 -> b
    1:1:void setPlaybackInfo(androidx.media3.exoplayer.PlaybackInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)V"}
    1:1:void setPositionDiscontinuity(int):0:0 -> d
androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdateListener -> q.s1$f:
    void onPlaybackInfoUpdate(androidx.media3.exoplayer.ExoPlayerImplInternal$PlaybackInfoUpdate) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s1$e;)V"}
androidx.media3.exoplayer.ExoPlayerImplInternal$PositionUpdateForPlaylistChange -> q.s1$g:
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId periodId -> a
    long periodPositionUs -> b
    long requestedContentPositionUs -> c
    boolean forceBufferingState -> d
    boolean endPlayback -> e
    boolean setTargetLiveOffset -> f
    1:1:void <init>(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,long,boolean,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;JJZZZ)V"}
androidx.media3.exoplayer.ExoPlayerImplInternal$SeekPosition -> q.s1$h:
    androidx.media3.common.Timeline timeline -> a
    int windowIndex -> b
    long windowPositionUs -> c
    1:1:void <init>(androidx.media3.common.Timeline,int,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;IJ)V"}
androidx.media3.exoplayer.ExoTimeoutException -> q.t1:
    int timeoutOperation -> f
    1:1:void <init>(int):0:0 -> <init>
    1:1:java.lang.String getErrorMessage(int):0:0 -> a
androidx.media3.exoplayer.FormatHolder -> q.u1:
    androidx.media3.exoplayer.drm.DrmSession drmSession -> a
    androidx.media3.common.Format format -> b
    void <init>() -> <init>
    1:1:void clear():0:0 -> a
androidx.media3.exoplayer.LivePlaybackSpeedControl -> q.v1:
    void notifyRebuffer() -> a
    void setLiveConfiguration(androidx.media3.common.MediaItem$LiveConfiguration) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$g;)V"}
    float getAdjustedPlaybackSpeed(long,long) -> c
    void setTargetLiveOffsetOverrideUs(long) -> d
    long getTargetLiveOffsetUs() -> e
androidx.media3.exoplayer.LoadControl -> q.w1:
    long getBackBufferDurationUs(androidx.media3.exoplayer.analytics.PlayerId) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)J"}
    boolean retainBackBufferFromKeyframe(androidx.media3.exoplayer.analytics.PlayerId) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)Z"}
    void onStopped(androidx.media3.exoplayer.analytics.PlayerId) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)V"}
    void onPrepared(androidx.media3.exoplayer.analytics.PlayerId) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)V"}
    androidx.media3.exoplayer.upstream.Allocator getAllocator() -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/b;"}
    boolean shouldContinueLoading(androidx.media3.exoplayer.LoadControl$Parameters) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w1$a;)Z"}
    void onReleased(androidx.media3.exoplayer.analytics.PlayerId) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)V"}
    void onTracksSelected(androidx.media3.exoplayer.analytics.PlayerId,androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.Renderer[],androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.trackselection.ExoTrackSelection[]) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;Lj/i0;Lg0/f0$b;[Lq/x2;Lg0/l1;[Lj0/y;)V"}
    boolean shouldStartPlayback(androidx.media3.exoplayer.LoadControl$Parameters) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w1$a;)Z"}
androidx.media3.exoplayer.LoadControl$Parameters -> q.w1$a:
    androidx.media3.exoplayer.analytics.PlayerId playerId -> a
    androidx.media3.common.Timeline timeline -> b
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId -> c
    long playbackPositionUs -> d
    long bufferedDurationUs -> e
    float playbackSpeed -> f
    boolean playWhenReady -> g
    boolean rebuffering -> h
    long targetLiveOffsetUs -> i
    1:1:void <init>(androidx.media3.exoplayer.analytics.PlayerId,androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,long,float,boolean,boolean,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;Lj/i0;Lg0/f0$b;JJFZZJ)V"}
androidx.media3.exoplayer.LoadingInfo -> q.x1:
    long playbackPositionUs -> a
    float playbackSpeed -> b
    long lastRebufferRealtimeMs -> c
    1:1:void <init>(androidx.media3.exoplayer.LoadingInfo$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1$b;)V"}
    2:2:void <init>(androidx.media3.exoplayer.LoadingInfo$Builder,androidx.media3.exoplayer.LoadingInfo$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1$b;Lq/x1$a;)V"}
    1:1:androidx.media3.exoplayer.LoadingInfo$Builder buildUpon():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/x1$b;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.LoadingInfo$1 -> q.x1$a:
androidx.media3.exoplayer.LoadingInfo$Builder -> q.x1$b:
    long playbackPositionUs -> a
    float playbackSpeed -> b
    long lastRebufferRealtimeMs -> c
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.exoplayer.LoadingInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)V"}
    3:3:void <init>(androidx.media3.exoplayer.LoadingInfo,androidx.media3.exoplayer.LoadingInfo$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;Lq/x1$a;)V"}
    1:1:long access$100(androidx.media3.exoplayer.LoadingInfo$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1$b;)J"}
    1:1:float access$200(androidx.media3.exoplayer.LoadingInfo$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1$b;)F"}
    1:1:long access$300(androidx.media3.exoplayer.LoadingInfo$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1$b;)J"}
    1:1:androidx.media3.exoplayer.LoadingInfo build():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/x1;"}
    1:1:androidx.media3.exoplayer.LoadingInfo$Builder setLastRebufferRealtimeMs(long):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lq/x1$b;"}
    1:1:androidx.media3.exoplayer.LoadingInfo$Builder setPlaybackPositionUs(long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lq/x1$b;"}
    1:1:androidx.media3.exoplayer.LoadingInfo$Builder setPlaybackSpeed(float):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lq/x1$b;"}
androidx.media3.exoplayer.MediaClock -> q.z1:
    boolean hasSkippedSilenceSinceLastCall() -> E
    long getPositionUs() -> K
    androidx.media3.common.PlaybackParameters getPlaybackParameters() -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/c0;"}
    void setPlaybackParameters(androidx.media3.common.PlaybackParameters) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
androidx.media3.exoplayer.MediaClock$-CC -> q.y1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean $default$hasSkippedSilenceSinceLastCall(androidx.media3.exoplayer.MediaClock):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/z1;)Z"}
androidx.media3.exoplayer.MediaPeriodHolder -> q.a2:
    androidx.media3.exoplayer.source.MediaPeriod mediaPeriod -> a
    java.lang.Object uid -> b
    androidx.media3.exoplayer.source.SampleStream[] sampleStreams -> c
    boolean prepared -> d
    boolean hasEnabledTracks -> e
    androidx.media3.exoplayer.MediaPeriodInfo info -> f
    boolean allRenderersInCorrectState -> g
    boolean[] mayRetainStreamFlags -> h
    androidx.media3.exoplayer.RendererCapabilities[] rendererCapabilities -> i
    androidx.media3.exoplayer.trackselection.TrackSelector trackSelector -> j
    androidx.media3.exoplayer.MediaSourceList mediaSourceList -> k
    androidx.media3.exoplayer.MediaPeriodHolder next -> l
    androidx.media3.exoplayer.source.TrackGroupArray trackGroups -> m
    androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult -> n
    long rendererPositionOffsetUs -> o
    1:1:void <init>(androidx.media3.exoplayer.RendererCapabilities[],long,androidx.media3.exoplayer.trackselection.TrackSelector,androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.MediaSourceList,androidx.media3.exoplayer.MediaPeriodInfo,androidx.media3.exoplayer.trackselection.TrackSelectorResult):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lq/z2;JLj0/d0;Lk0/b;Lq/s2;Lq/b2;Lj0/e0;)V"}
    1:1:long toPeriodTime(long):0:0 -> A
    1:1:long toRendererTime(long):0:0 -> B
    1:1:void updateClipping():0:0 -> C
    1:1:long applyTrackSelection(androidx.media3.exoplayer.trackselection.TrackSelectorResult,long,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/e0;JZ)J"}
    1:1:long applyTrackSelection(androidx.media3.exoplayer.trackselection.TrackSelectorResult,long,boolean,boolean[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/e0;JZ[Z)J"}
    1:1:void associateNoSampleRenderersWithEmptySampleStream(androidx.media3.exoplayer.source.SampleStream[]):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg0/b1;)V"}
    1:1:boolean canBeUsedForMediaPeriodInfo(androidx.media3.exoplayer.MediaPeriodInfo):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/b2;)Z"}
    1:1:void continueLoading(long,float,long):0:0 -> e
    1:1:androidx.media3.exoplayer.source.MediaPeriod createMediaPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.MediaSourceList,androidx.media3.exoplayer.upstream.Allocator,long,long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lq/s2;Lk0/b;JJ)Lg0/c0;"}
    1:1:void disableTrackSelectionsInResult():0:0 -> g
    1:1:void disassociateNoSampleRenderersWithEmptySampleStream(androidx.media3.exoplayer.source.SampleStream[]):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg0/b1;)V"}
    1:1:void enableTrackSelectionsInResult():0:0 -> i
    1:1:long getBufferedPositionUs():0:0 -> j
    1:1:androidx.media3.exoplayer.MediaPeriodHolder getNext():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/a2;"}
    1:1:long getNextLoadPositionUs():0:0 -> l
    1:1:long getRendererOffset():0:0 -> m
    1:1:long getStartPositionRendererTime():0:0 -> n
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:androidx.media3.exoplayer.trackselection.TrackSelectorResult getTrackSelectorResult():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/e0;"}
    1:1:void handlePrepared(float,androidx.media3.common.Timeline):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FLj/i0;)V"}
    1:1:boolean hasLoadingError():0:0 -> r
    1:1:boolean isFullyBuffered():0:0 -> s
    1:1:boolean isLoadingMediaPeriod():0:0 -> t
    1:1:void reevaluateBuffer(long):0:0 -> u
    1:1:void release():0:0 -> v
    1:1:void releaseMediaPeriod(androidx.media3.exoplayer.MediaSourceList,androidx.media3.exoplayer.source.MediaPeriod):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2;Lg0/c0;)V"}
    1:1:androidx.media3.exoplayer.trackselection.TrackSelectorResult selectTracks(float,androidx.media3.common.Timeline):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FLj/i0;)Lj0/e0;"}
    1:1:void setNext(androidx.media3.exoplayer.MediaPeriodHolder):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/a2;)V"}
    1:1:void setRendererOffset(long):0:0 -> z
androidx.media3.exoplayer.MediaPeriodHolder$Factory -> q.a2$a:
    androidx.media3.exoplayer.MediaPeriodHolder create(androidx.media3.exoplayer.MediaPeriodInfo,long) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/b2;J)Lq/a2;"}
androidx.media3.exoplayer.MediaPeriodInfo -> q.b2:
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId id -> a
    long startPositionUs -> b
    long requestedContentPositionUs -> c
    long endPositionUs -> d
    long durationUs -> e
    boolean isFollowedByTransitionToSameStream -> f
    boolean isLastInTimelinePeriod -> g
    boolean isLastInTimelineWindow -> h
    boolean isFinal -> i
    1:1:void <init>(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,long,long,long,boolean,boolean,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;JJJJZZZZ)V"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo copyWithRequestedContentPositionUs(long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lq/b2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo copyWithStartPositionUs(long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lq/b2;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.MediaPeriodQueue -> q.d2:
    androidx.media3.common.Timeline$Period period -> a
    androidx.media3.common.Timeline$Window window -> b
    androidx.media3.exoplayer.analytics.AnalyticsCollector analyticsCollector -> c
    androidx.media3.common.util.HandlerWrapper analyticsCollectorHandler -> d
    androidx.media3.exoplayer.MediaPeriodHolder$Factory mediaPeriodHolderFactory -> e
    long nextWindowSequenceNumber -> f
    int repeatMode -> g
    boolean shuffleModeEnabled -> h
    androidx.media3.exoplayer.MediaPeriodHolder playing -> i
    androidx.media3.exoplayer.MediaPeriodHolder reading -> j
    androidx.media3.exoplayer.MediaPeriodHolder loading -> k
    int length -> l
    java.lang.Object oldFrontPeriodUid -> m
    long oldFrontPeriodWindowSequenceNumber -> n
    androidx.media3.exoplayer.ExoPlayer$PreloadConfiguration preloadConfiguration -> o
    java.util.List preloadPriorityList -> p
    1:1:void <init>(androidx.media3.exoplayer.analytics.AnalyticsCollector,androidx.media3.common.util.HandlerWrapper,androidx.media3.exoplayer.MediaPeriodHolder$Factory,androidx.media3.exoplayer.ExoPlayer$PreloadConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/a;Lm/k;Lq/a2$a;Lq/w$c;)V"}
    1:1:boolean isLastInWindow(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lg0/f0$b;)Z"}
    1:1:boolean isLoading(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)Z"}
    1:1:boolean isSkippableAdPeriod(androidx.media3.common.Timeline$Period):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0$b;)Z"}
    1:1:void lambda$notifyQueueUpdate$0(com.google.common.collect.ImmutableList$Builder,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/v$a;Lg0/f0$b;)V"}
    1:1:void notifyQueueUpdate():0:0 -> E
    1:1:void reevaluateBuffer(long):0:0 -> F
    1:1:void releaseAndResetPreloadPriorityList(java.util.List):0:0 -> G
    1:1:void releasePreloadPool():0:0 -> H
    1:1:boolean removeAfter(androidx.media3.exoplayer.MediaPeriodHolder):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/a2;)Z"}
    1:1:androidx.media3.exoplayer.MediaPeriodHolder removePreloadedMediaPeriodHolder(androidx.media3.exoplayer.MediaPeriodInfo):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/b2;)Lq/a2;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId resolveMediaPeriodIdForAds(androidx.media3.common.Timeline,java.lang.Object,long,long,androidx.media3.common.Timeline$Window,androidx.media3.common.Timeline$Period):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/lang/Object;JJLj/i0$c;Lj/i0$b;)Lg0/f0$b;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId resolveMediaPeriodIdForAdsAfterPeriodPositionChange(androidx.media3.common.Timeline,java.lang.Object,long):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/lang/Object;J)Lg0/f0$b;"}
    1:1:long resolvePeriodUidToWindowSequenceNumber(androidx.media3.common.Timeline,java.lang.Object):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/lang/Object;)J"}
    1:1:long resolvePeriodUidToWindowSequenceNumberInPreloadPeriods(java.lang.Object):0:0 -> N
    1:1:boolean shouldLoadNextMediaPeriod():0:0 -> O
    1:1:boolean updateForPlaybackModeChange(androidx.media3.common.Timeline):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)Z"}
    1:1:void updatePreloadConfiguration(androidx.media3.common.Timeline,androidx.media3.exoplayer.ExoPlayer$PreloadConfiguration):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lq/w$c;)V"}
    1:1:boolean updateQueuedPeriods(androidx.media3.common.Timeline,long,long):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;JJ)Z"}
    1:1:boolean updateRepeatMode(androidx.media3.common.Timeline,int):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;I)Z"}
    1:1:boolean updateShuffleModeEnabled(androidx.media3.common.Timeline,boolean):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Z)Z"}
    1:1:void $r8$lambda$go7ljeSfFJWu6_RBzR1nBOUcfkg(androidx.media3.exoplayer.MediaPeriodQueue,com.google.common.collect.ImmutableList$Builder,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/d2;Ll2/v$a;Lg0/f0$b;)V"}
    1:1:androidx.media3.exoplayer.MediaPeriodHolder advancePlayingPeriod():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/a2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodHolder advanceReadingPeriod():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/a2;"}
    1:1:boolean areDurationsCompatible(long,long):0:0 -> d
    1:1:boolean canKeepMediaPeriodHolder(androidx.media3.exoplayer.MediaPeriodInfo,androidx.media3.exoplayer.MediaPeriodInfo):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/b2;Lq/b2;)Z"}
    1:1:void clear():0:0 -> f
    1:1:androidx.media3.exoplayer.MediaPeriodHolder enqueueNextMediaPeriodHolder(androidx.media3.exoplayer.MediaPeriodInfo):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/b2;)Lq/a2;"}
    1:1:android.util.Pair getDefaultPeriodPositionOfNextWindow(androidx.media3.common.Timeline,java.lang.Object,long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/lang/Object;J)Landroid/util/Pair;"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo getFirstMediaPeriodInfo(androidx.media3.exoplayer.PlaybackInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/t2;)Lq/b2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo getFirstMediaPeriodInfoOfNextPeriod(androidx.media3.common.Timeline,androidx.media3.exoplayer.MediaPeriodHolder,long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lq/a2;J)Lq/b2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo getFollowingMediaPeriodInfo(androidx.media3.common.Timeline,androidx.media3.exoplayer.MediaPeriodHolder,long):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lq/a2;J)Lq/b2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo getFollowingMediaPeriodInfoOfCurrentPeriod(androidx.media3.common.Timeline,androidx.media3.exoplayer.MediaPeriodHolder,long):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lq/a2;J)Lq/b2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodHolder getLoadingPeriod():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/a2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo getMediaPeriodInfo(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,long):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lg0/f0$b;JJ)Lq/b2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo getMediaPeriodInfoForAd(androidx.media3.common.Timeline,java.lang.Object,int,int,long,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/lang/Object;IIJJ)Lq/b2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo getMediaPeriodInfoForContent(androidx.media3.common.Timeline,java.lang.Object,long,long,long):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/lang/Object;JJJ)Lq/b2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo getMediaPeriodInfoForPeriodPosition(androidx.media3.common.Timeline,java.lang.Object,long,long):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/lang/Object;JJ)Lq/b2;"}
    1:1:long getMinStartPositionAfterAdGroupUs(androidx.media3.common.Timeline,java.lang.Object,int):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/lang/Object;I)J"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo getNextMediaPeriodInfo(long,androidx.media3.exoplayer.PlaybackInfo):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/t2;)Lq/b2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodHolder getPlayingPeriod():0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/a2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodHolder getReadingPeriod():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/a2;"}
    1:1:androidx.media3.exoplayer.MediaPeriodInfo getUpdatedMediaPeriodInfo(androidx.media3.common.Timeline,androidx.media3.exoplayer.MediaPeriodInfo):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lq/b2;)Lq/b2;"}
    1:1:boolean hasServerSideInsertedAds(java.lang.Object,androidx.media3.common.Timeline):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lj/i0;)Z"}
    1:1:void invalidatePreloadPool(androidx.media3.common.Timeline):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
    1:1:boolean isLastInPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;)Z"}
    1:1:boolean isLastInTimeline(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,boolean):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lg0/f0$b;Z)Z"}
androidx.media3.exoplayer.MediaPeriodQueue$$ExternalSyntheticLambda0 -> q.c2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaPeriodQueue androidx.media3.exoplayer.MediaPeriodQueue$$InternalSyntheticLambda$9$a49b864e1d0346b95a0d28e5fe523b6fa2b499290ee5571dd5e7ed0679fe49dd$0.f$0 -> f
    com.google.common.collect.ImmutableList$Builder androidx.media3.exoplayer.MediaPeriodQueue$$InternalSyntheticLambda$9$a49b864e1d0346b95a0d28e5fe523b6fa2b499290ee5571dd5e7ed0679fe49dd$0.f$1 -> g
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId androidx.media3.exoplayer.MediaPeriodQueue$$InternalSyntheticLambda$9$a49b864e1d0346b95a0d28e5fe523b6fa2b499290ee5571dd5e7ed0679fe49dd$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.MediaPeriodQueue$$InternalSyntheticLambda$9$a49b864e1d0346b95a0d28e5fe523b6fa2b499290ee5571dd5e7ed0679fe49dd$0.<init>(androidx.media3.exoplayer.MediaPeriodQueue,com.google.common.collect.ImmutableList$Builder,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/d2;Ll2/v$a;Lg0/f0$b;)V"}
    1:1:void androidx.media3.exoplayer.MediaPeriodQueue$$InternalSyntheticLambda$9$a49b864e1d0346b95a0d28e5fe523b6fa2b499290ee5571dd5e7ed0679fe49dd$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceInfoHolder -> q.e2:
    java.lang.Object getUid() -> a
    androidx.media3.common.Timeline getTimeline() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
androidx.media3.exoplayer.MediaSourceList -> q.s2:
    androidx.media3.exoplayer.analytics.PlayerId playerId -> a
    java.util.List mediaSourceHolders -> b
    java.util.IdentityHashMap mediaSourceByMediaPeriod -> c
    java.util.Map mediaSourceByUid -> d
    androidx.media3.exoplayer.MediaSourceList$MediaSourceListInfoRefreshListener mediaSourceListInfoListener -> e
    java.util.HashMap childSources -> f
    java.util.Set enabledMediaSourceHolders -> g
    androidx.media3.exoplayer.analytics.AnalyticsCollector eventListener -> h
    androidx.media3.common.util.HandlerWrapper eventHandler -> i
    androidx.media3.exoplayer.source.ShuffleOrder shuffleOrder -> j
    boolean isPrepared -> k
    androidx.media3.datasource.TransferListener mediaTransferListener -> l
    1:1:void <init>(androidx.media3.exoplayer.MediaSourceList$MediaSourceListInfoRefreshListener,androidx.media3.exoplayer.analytics.AnalyticsCollector,androidx.media3.common.util.HandlerWrapper,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$d;Lr/a;Lm/k;Lr/w3;)V"}
    1:1:androidx.media3.common.Timeline removeMediaSourceRange(int,int,androidx.media3.exoplayer.source.ShuffleOrder):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILg0/d1;)Lj/i0;"}
    1:1:void removeMediaSourcesInternal(int,int):0:0 -> B
    1:1:androidx.media3.common.Timeline setMediaSources(java.util.List,androidx.media3.exoplayer.source.ShuffleOrder):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lg0/d1;)Lj/i0;"}
    1:1:androidx.media3.common.Timeline setShuffleOrder(androidx.media3.exoplayer.source.ShuffleOrder):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/d1;)Lj/i0;"}
    1:1:androidx.media3.common.Timeline updateMediaSourcesWithMediaItems(int,int,java.util.List):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILjava/util/List;)Lj/i0;"}
    1:1:void $r8$lambda$G4ygZCvH_KL8drKO2yCkkLJUVnM(androidx.media3.exoplayer.MediaSourceList,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2;Lg0/f0;Lj/i0;)V"}
    1:1:androidx.media3.common.util.HandlerWrapper access$000(androidx.media3.exoplayer.MediaSourceList):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2;)Lm/k;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId access$100(androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$c;Lg0/f0$b;)Lg0/f0$b;"}
    1:1:int access$200(androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$c;I)I"}
    1:1:androidx.media3.exoplayer.analytics.AnalyticsCollector access$300(androidx.media3.exoplayer.MediaSourceList):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2;)Lr/a;"}
    1:1:androidx.media3.common.Timeline addMediaSources(int,java.util.List,androidx.media3.exoplayer.source.ShuffleOrder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/util/List;Lg0/d1;)Lj/i0;"}
    1:1:void correctOffsets(int,int):0:0 -> g
    1:1:androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    1:1:androidx.media3.common.Timeline createTimeline():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
    1:1:void disableChildSource(androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$c;)V"}
    1:1:void disableUnusedMediaSources():0:0 -> k
    1:1:void enableMediaSource(androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$c;)V"}
    1:1:java.lang.Object getChildPeriodUid(java.lang.Object):0:0 -> m
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$c;Lg0/f0$b;)Lg0/f0$b;"}
    1:1:java.lang.Object getMediaSourceHolderUid(java.lang.Object):0:0 -> o
    1:1:java.lang.Object getPeriodUid(androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder,java.lang.Object):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$c;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:1:androidx.media3.exoplayer.source.ShuffleOrder getShuffleOrder():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/d1;"}
    1:1:int getSize():0:0 -> r
    1:1:int getWindowIndexForChildWindowIndex(androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder,int):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$c;I)I"}
    1:1:boolean isPrepared():0:0 -> t
    1:1:void lambda$prepareChildSource$0(androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;Lj/i0;)V"}
    1:1:void maybeReleaseChildSource(androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$c;)V"}
    1:1:void prepare(androidx.media3.datasource.TransferListener):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:void prepareChildSource(androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$c;)V"}
    1:1:void release():0:0 -> y
    1:1:void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
androidx.media3.exoplayer.MediaSourceList$$ExternalSyntheticLambda0 -> q.f2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList androidx.media3.exoplayer.MediaSourceList$$InternalSyntheticLambda$9$3622604129f13df5c38ad619bd5cc6e9f73956b9c9291ec521fdec4e98e4d9b0$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.MediaSourceList$$InternalSyntheticLambda$9$3622604129f13df5c38ad619bd5cc6e9f73956b9c9291ec521fdec4e98e4d9b0$0.<init>(androidx.media3.exoplayer.MediaSourceList):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2;)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$$InternalSyntheticLambda$9$3622604129f13df5c38ad619bd5cc6e9f73956b9c9291ec521fdec4e98e4d9b0$0.onSourceInfoRefreshed(androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;Lj/i0;)V"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener -> q.s2$a:
    androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder id -> a
    androidx.media3.exoplayer.MediaSourceList this$0 -> b
    1:1:void <init>(androidx.media3.exoplayer.MediaSourceList,androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2;Lq/s2$c;)V"}
    1:1:void $r8$lambda$dxCl0knAyBz4aYMAW0xISzoXAUA(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,int):0:0 -> B
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;I)V"}
    1:1:void $r8$lambda$eCXP3RQ-1Osj-OAT-BrnIoV9Ir0(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> C
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/y;Lg0/b0;)V"}
    1:1:void $r8$lambda$giyz4oBiapZ9beYoVOjviIziblo(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,java.lang.Exception):0:0 -> D
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Ljava/lang/Exception;)V"}
    1:1:void $r8$lambda$kI9zioTe2pw1suPmGmW2nJ3SBnc(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair):0:0 -> E
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;)V"}
    1:1:void onLoadStarted(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
    1:1:void $r8$lambda$lyPW5Djv_x72_ROmFXMiemvwu1c(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair):0:0 -> G
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;)V"}
    1:1:void $r8$lambda$nurNLzrj150oxSCidnkt2SwsPxY(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> H
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/y;Lg0/b0;)V"}
    1:1:void onUpstreamDiscarded(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/b0;)V"}
    1:1:void onDownstreamFormatChanged(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/b0;)V"}
    1:1:android.util.Pair getEventParameters(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)Landroid/util/Pair;"}
    1:1:void lambda$onDownstreamFormatChanged$5(android.util.Pair,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/Pair;Lg0/b0;)V"}
    1:1:void lambda$onDrmKeysLoaded$7(android.util.Pair):0:0 -> M
    1:1:void lambda$onDrmKeysRemoved$10(android.util.Pair):0:0 -> N
    1:1:void onDrmKeysLoaded(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void onDrmSessionReleased(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void lambda$onDrmKeysRestored$9(android.util.Pair):0:0 -> Q
    1:1:void onDrmSessionManagerError(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,java.lang.Exception):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Ljava/lang/Exception;)V"}
    1:1:void lambda$onDrmSessionAcquired$6(android.util.Pair,int):0:0 -> U
    1:1:void onDrmKeysRemoved(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void lambda$onDrmSessionManagerError$8(android.util.Pair,java.lang.Exception):0:0 -> W
    1:1:void lambda$onDrmSessionReleased$11(android.util.Pair):0:0 -> X
    1:1:void lambda$onLoadCanceled$2(android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/Pair;Lg0/y;Lg0/b0;)V"}
    1:1:void lambda$onLoadCompleted$1(android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/Pair;Lg0/y;Lg0/b0;)V"}
    1:1:void onLoadCompleted(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
    1:1:void lambda$onLoadError$3(android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/Pair;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    1:1:void $r8$lambda$-2QMLHuMro0NTEPuVDFoNE5mKkM(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/b0;)V"}
    1:1:void lambda$onLoadStarted$0(android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/Pair;Lg0/y;Lg0/b0;)V"}
    1:1:void $r8$lambda$8QMnkMdRbJo35UQEc9llzA9ojgY(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/b0;)V"}
    1:1:void lambda$onUpstreamDiscarded$4(android.util.Pair,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/Pair;Lg0/b0;)V"}
    1:1:void onDrmKeysRestored(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void onLoadError(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    1:1:void onDrmSessionAcquired(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> i0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void $r8$lambda$DtKHjXQ6AeAxS6o3CBjfz67bo6M(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/y;Lg0/b0;)V"}
    1:1:void onLoadCanceled(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
    1:1:void $r8$lambda$OmMnAwyTvCHhEseM7Dt_I9SdSYE(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;)V"}
    1:1:void onDrmSessionAcquired(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,int):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;I)V"}
    1:1:void $r8$lambda$QF3jLZGkn8lYHSmdlPJJGuUiWQU(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;)V"}
    1:1:void $r8$lambda$bgYC0Uk-bpJzeaApyeEUKrKIfL0(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda0 -> q.g2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$0aad7ad8fde2ad0a85430002c16bb0cf24dab68e166c1801108853e3098be995$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$0aad7ad8fde2ad0a85430002c16bb0cf24dab68e166c1801108853e3098be995$0.f$1 -> g
    java.lang.Exception androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$0aad7ad8fde2ad0a85430002c16bb0cf24dab68e166c1801108853e3098be995$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$0aad7ad8fde2ad0a85430002c16bb0cf24dab68e166c1801108853e3098be995$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,java.lang.Exception):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Ljava/lang/Exception;)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$0aad7ad8fde2ad0a85430002c16bb0cf24dab68e166c1801108853e3098be995$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda1 -> q.j2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$17128bdee07592933cd0c908db8f736626ddf51e9eb429e5141a816bb0a8ea8a$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$17128bdee07592933cd0c908db8f736626ddf51e9eb429e5141a816bb0a8ea8a$0.f$1 -> g
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$17128bdee07592933cd0c908db8f736626ddf51e9eb429e5141a816bb0a8ea8a$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$17128bdee07592933cd0c908db8f736626ddf51e9eb429e5141a816bb0a8ea8a$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$17128bdee07592933cd0c908db8f736626ddf51e9eb429e5141a816bb0a8ea8a$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda10 -> q.h2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$57ef79391fb4abe5c3fb581b27da5c6095dd0c47c903dd64a734f2c985445562$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$57ef79391fb4abe5c3fb581b27da5c6095dd0c47c903dd64a734f2c985445562$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$57ef79391fb4abe5c3fb581b27da5c6095dd0c47c903dd64a734f2c985445562$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$57ef79391fb4abe5c3fb581b27da5c6095dd0c47c903dd64a734f2c985445562$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda11 -> q.i2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$872afa9fb58a4f75b297e13174e93a8a441d9563697dc8851ef9f93a74d8ffbb$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$872afa9fb58a4f75b297e13174e93a8a441d9563697dc8851ef9f93a74d8ffbb$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$872afa9fb58a4f75b297e13174e93a8a441d9563697dc8851ef9f93a74d8ffbb$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$872afa9fb58a4f75b297e13174e93a8a441d9563697dc8851ef9f93a74d8ffbb$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda2 -> q.k2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$34f5393968d7ecc8622403aa8300247721937b09ac0d8910b2f206cb3269ac87$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$34f5393968d7ecc8622403aa8300247721937b09ac0d8910b2f206cb3269ac87$0.f$1 -> g
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$34f5393968d7ecc8622403aa8300247721937b09ac0d8910b2f206cb3269ac87$0.f$2 -> h
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$34f5393968d7ecc8622403aa8300247721937b09ac0d8910b2f206cb3269ac87$0.f$3 -> i
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$34f5393968d7ecc8622403aa8300247721937b09ac0d8910b2f206cb3269ac87$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/y;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$34f5393968d7ecc8622403aa8300247721937b09ac0d8910b2f206cb3269ac87$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda3 -> q.l2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$4987b541f0685702482eb2f90c064e6f2e475986ef0ed64378c45dcbd9d57701$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$4987b541f0685702482eb2f90c064e6f2e475986ef0ed64378c45dcbd9d57701$0.f$1 -> g
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$4987b541f0685702482eb2f90c064e6f2e475986ef0ed64378c45dcbd9d57701$0.f$2 -> h
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$4987b541f0685702482eb2f90c064e6f2e475986ef0ed64378c45dcbd9d57701$0.f$3 -> i
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$4987b541f0685702482eb2f90c064e6f2e475986ef0ed64378c45dcbd9d57701$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/y;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$4987b541f0685702482eb2f90c064e6f2e475986ef0ed64378c45dcbd9d57701$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda4 -> q.m2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$4d522902d2f791c6f96efc4e6cb30f5c6232b66045859ea63b799f09512fa95b$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$4d522902d2f791c6f96efc4e6cb30f5c6232b66045859ea63b799f09512fa95b$0.f$1 -> g
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$4d522902d2f791c6f96efc4e6cb30f5c6232b66045859ea63b799f09512fa95b$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$4d522902d2f791c6f96efc4e6cb30f5c6232b66045859ea63b799f09512fa95b$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$4d522902d2f791c6f96efc4e6cb30f5c6232b66045859ea63b799f09512fa95b$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda5 -> q.n2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$940072c8fada2936eb871ea17b42d8a7659db763bbb295f5d8b4adce936156ee$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$940072c8fada2936eb871ea17b42d8a7659db763bbb295f5d8b4adce936156ee$0.f$1 -> g
    int androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$940072c8fada2936eb871ea17b42d8a7659db763bbb295f5d8b4adce936156ee$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$940072c8fada2936eb871ea17b42d8a7659db763bbb295f5d8b4adce936156ee$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;I)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$940072c8fada2936eb871ea17b42d8a7659db763bbb295f5d8b4adce936156ee$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda6 -> q.o2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$e77188699a919d3ddde5a25b9bbc04812eaee23d8826b035d5265d6d417c3d98$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$e77188699a919d3ddde5a25b9bbc04812eaee23d8826b035d5265d6d417c3d98$0.f$1 -> g
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$e77188699a919d3ddde5a25b9bbc04812eaee23d8826b035d5265d6d417c3d98$0.f$2 -> h
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$e77188699a919d3ddde5a25b9bbc04812eaee23d8826b035d5265d6d417c3d98$0.f$3 -> i
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$e77188699a919d3ddde5a25b9bbc04812eaee23d8826b035d5265d6d417c3d98$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/y;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$e77188699a919d3ddde5a25b9bbc04812eaee23d8826b035d5265d6d417c3d98$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda7 -> q.p2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$ebfa689a42679f28f1b85835c107a47c59492e0f4699b3364e7e9675980914f6$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$ebfa689a42679f28f1b85835c107a47c59492e0f4699b3364e7e9675980914f6$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$ebfa689a42679f28f1b85835c107a47c59492e0f4699b3364e7e9675980914f6$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$ebfa689a42679f28f1b85835c107a47c59492e0f4699b3364e7e9675980914f6$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda8 -> q.q2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$f6cdd2c98ce1717368cdefbdeb1eaa46ec9662cab485f9cdf9b799680f2b0a60$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$f6cdd2c98ce1717368cdefbdeb1eaa46ec9662cab485f9cdf9b799680f2b0a60$0.f$1 -> g
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$f6cdd2c98ce1717368cdefbdeb1eaa46ec9662cab485f9cdf9b799680f2b0a60$0.f$2 -> h
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$f6cdd2c98ce1717368cdefbdeb1eaa46ec9662cab485f9cdf9b799680f2b0a60$0.f$3 -> i
    java.io.IOException androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$f6cdd2c98ce1717368cdefbdeb1eaa46ec9662cab485f9cdf9b799680f2b0a60$0.f$4 -> j
    boolean androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$f6cdd2c98ce1717368cdefbdeb1eaa46ec9662cab485f9cdf9b799680f2b0a60$0.f$5 -> k
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$f6cdd2c98ce1717368cdefbdeb1eaa46ec9662cab485f9cdf9b799680f2b0a60$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$10$f6cdd2c98ce1717368cdefbdeb1eaa46ec9662cab485f9cdf9b799680f2b0a60$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$ExternalSyntheticLambda9 -> q.r2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$057b637d69f2b95abce2e17155fc1ec3d69a365a443c59da36b5cebb1a819fff$0.f$0 -> f
    android.util.Pair androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$057b637d69f2b95abce2e17155fc1ec3d69a365a443c59da36b5cebb1a819fff$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$057b637d69f2b95abce2e17155fc1ec3d69a365a443c59da36b5cebb1a819fff$0.<init>(androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener,android.util.Pair):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/s2$a;Landroid/util/Pair;)V"}
    1:1:void androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener$$InternalSyntheticLambda$11$057b637d69f2b95abce2e17155fc1ec3d69a365a443c59da36b5cebb1a819fff$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.MediaSourceList$MediaSourceAndListener -> q.s2$b:
    androidx.media3.exoplayer.source.MediaSource mediaSource -> a
    androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller caller -> b
    androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener eventListener -> c
    1:1:void <init>(androidx.media3.exoplayer.source.MediaSource,androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller,androidx.media3.exoplayer.MediaSourceList$ForwardingEventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;Lg0/f0$c;Lq/s2$a;)V"}
androidx.media3.exoplayer.MediaSourceList$MediaSourceHolder -> q.s2$c:
    androidx.media3.exoplayer.source.MaskingMediaSource mediaSource -> a
    java.lang.Object uid -> b
    java.util.List activeMediaPeriodIds -> c
    int firstWindowIndexInChild -> d
    boolean isRemoved -> e
    1:1:void <init>(androidx.media3.exoplayer.source.MediaSource,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;Z)V"}
    1:1:java.lang.Object getUid():0:0 -> a
    1:1:androidx.media3.common.Timeline getTimeline():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
    1:1:void reset(int):0:0 -> c
androidx.media3.exoplayer.MediaSourceList$MediaSourceListInfoRefreshListener -> q.s2$d:
    void onPlaylistUpdateRequested() -> c
androidx.media3.exoplayer.PlaybackInfo -> q.t2:
    androidx.media3.common.Timeline timeline -> a
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId periodId -> b
    long requestedContentPositionUs -> c
    long discontinuityStartPositionUs -> d
    int playbackState -> e
    androidx.media3.exoplayer.ExoPlaybackException playbackError -> f
    boolean isLoading -> g
    androidx.media3.exoplayer.source.TrackGroupArray trackGroups -> h
    androidx.media3.exoplayer.trackselection.TrackSelectorResult trackSelectorResult -> i
    java.util.List staticMetadata -> j
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId loadingMediaPeriodId -> k
    boolean playWhenReady -> l
    int playWhenReadyChangeReason -> m
    int playbackSuppressionReason -> n
    androidx.media3.common.PlaybackParameters playbackParameters -> o
    boolean sleepingForOffload -> p
    long bufferedPositionUs -> q
    long totalBufferedDurationUs -> r
    long positionUs -> s
    long positionUpdateTimeMs -> t
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId PLACEHOLDER_MEDIA_PERIOD_ID -> u
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,long,int,androidx.media3.exoplayer.ExoPlaybackException,boolean,androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.trackselection.TrackSelectorResult,java.util.List,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,boolean,int,int,androidx.media3.common.PlaybackParameters,long,long,long,long,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lg0/f0$b;JJILq/u;ZLg0/l1;Lj0/e0;Ljava/util/List;Lg0/f0$b;ZIILj/c0;JJJJZ)V"}
    1:1:androidx.media3.exoplayer.PlaybackInfo copyWithEstimatedPosition():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/t2;"}
    1:1:androidx.media3.exoplayer.PlaybackInfo copyWithIsLoading(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lq/t2;"}
    1:1:androidx.media3.exoplayer.PlaybackInfo copyWithLoadingMediaPeriodId(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;)Lq/t2;"}
    1:1:androidx.media3.exoplayer.PlaybackInfo copyWithNewPosition(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,long,long,long,androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.trackselection.TrackSelectorResult,java.util.List):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;JJJJLg0/l1;Lj0/e0;Ljava/util/List;)Lq/t2;"}
    1:1:androidx.media3.exoplayer.PlaybackInfo copyWithPlayWhenReady(boolean,int,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZII)Lq/t2;"}
    1:1:androidx.media3.exoplayer.PlaybackInfo copyWithPlaybackError(androidx.media3.exoplayer.ExoPlaybackException):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u;)Lq/t2;"}
    1:1:androidx.media3.exoplayer.PlaybackInfo copyWithPlaybackParameters(androidx.media3.common.PlaybackParameters):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)Lq/t2;"}
    1:1:androidx.media3.exoplayer.PlaybackInfo copyWithPlaybackState(int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lq/t2;"}
    1:1:androidx.media3.exoplayer.PlaybackInfo copyWithSleepingForOffload(boolean):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lq/t2;"}
    1:1:androidx.media3.exoplayer.PlaybackInfo copyWithTimeline(androidx.media3.common.Timeline):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)Lq/t2;"}
    1:1:androidx.media3.exoplayer.PlaybackInfo createDummy(androidx.media3.exoplayer.trackselection.TrackSelectorResult):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/e0;)Lq/t2;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getDummyPeriodForEmptyTimeline():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/f0$b;"}
    1:1:long getEstimatedPositionUs():0:0 -> m
    1:1:boolean isPlaying():0:0 -> n
    1:1:void updatePositionUs(long):0:0 -> o
androidx.media3.exoplayer.PlayerMessage -> q.u2:
    androidx.media3.exoplayer.PlayerMessage$Target target -> a
    androidx.media3.exoplayer.PlayerMessage$Sender sender -> b
    androidx.media3.common.util.Clock clock -> c
    androidx.media3.common.Timeline timeline -> d
    int type -> e
    java.lang.Object payload -> f
    android.os.Looper looper -> g
    int mediaItemIndex -> h
    long positionMs -> i
    boolean deleteAfterDelivery -> j
    boolean isSent -> k
    boolean isDelivered -> l
    boolean isProcessed -> m
    boolean isCanceled -> n
    1:1:void <init>(androidx.media3.exoplayer.PlayerMessage$Sender,androidx.media3.exoplayer.PlayerMessage$Target,androidx.media3.common.Timeline,int,androidx.media3.common.util.Clock,android.os.Looper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u2$a;Lq/u2$b;Lj/i0;ILm/c;Landroid/os/Looper;)V"}
    1:1:boolean blockUntilDelivered(long):0:0 -> a
    1:1:boolean getDeleteAfterDelivery():0:0 -> b
    1:1:android.os.Looper getLooper():0:0 -> c
    1:1:int getMediaItemIndex():0:0 -> d
    1:1:java.lang.Object getPayload():0:0 -> e
    1:1:long getPositionMs():0:0 -> f
    1:1:androidx.media3.exoplayer.PlayerMessage$Target getTarget():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/u2$b;"}
    1:1:androidx.media3.common.Timeline getTimeline():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
    1:1:int getType():0:0 -> i
    1:1:boolean isCanceled():0:0 -> j
    1:1:void markAsProcessed(boolean):0:0 -> k
    1:1:androidx.media3.exoplayer.PlayerMessage send():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/u2;"}
    1:1:androidx.media3.exoplayer.PlayerMessage setPayload(java.lang.Object):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lq/u2;"}
    1:1:androidx.media3.exoplayer.PlayerMessage setType(int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lq/u2;"}
androidx.media3.exoplayer.PlayerMessage$Sender -> q.u2$a:
    void sendMessage(androidx.media3.exoplayer.PlayerMessage) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u2;)V"}
androidx.media3.exoplayer.PlayerMessage$Target -> q.u2$b:
    void handleMessage(int,java.lang.Object) -> H
androidx.media3.exoplayer.PlaylistTimeline -> q.v2:
    int windowCount -> h
    int periodCount -> i
    int[] firstPeriodInChildIndices -> j
    int[] firstWindowInChildIndices -> k
    androidx.media3.common.Timeline[] timelines -> l
    java.lang.Object[] uids -> m
    java.util.HashMap childIndexByUid -> n
    1:1:void <init>(java.util.Collection,androidx.media3.exoplayer.source.ShuffleOrder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Collection;Lg0/d1;)V"}
    2:2:void <init>(androidx.media3.common.Timeline[],java.lang.Object[],androidx.media3.exoplayer.source.ShuffleOrder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/i0;[Ljava/lang/Object;Lg0/d1;)V"}
    1:1:int getFirstWindowIndexByChildIndex(int):0:0 -> A
    1:1:androidx.media3.common.Timeline getTimelineByChildIndex(int):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/i0;"}
    1:1:androidx.media3.exoplayer.PlaylistTimeline copyWithPlaceholderTimeline(androidx.media3.exoplayer.source.ShuffleOrder):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/d1;)Lq/v2;"}
    1:1:java.util.List getChildTimelines():0:0 -> F
    1:1:androidx.media3.common.Timeline[] getTimelines(java.util.Collection):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Collection;)[Lj/i0;"}
    1:1:java.lang.Object[] getUids(java.util.Collection):0:0 -> H
    1:1:int getPeriodCount():0:0 -> i
    1:1:int getWindowCount():0:0 -> p
    1:1:int getChildIndexByChildUid(java.lang.Object):0:0 -> s
    1:1:int getChildIndexByPeriodIndex(int):0:0 -> t
    1:1:int getChildIndexByWindowIndex(int):0:0 -> u
    1:1:java.lang.Object getChildUidByChildIndex(int):0:0 -> x
    1:1:int getFirstPeriodIndexByChildIndex(int):0:0 -> z
androidx.media3.exoplayer.PlaylistTimeline$1 -> q.v2$a:
    androidx.media3.common.Timeline$Window window -> f
    androidx.media3.exoplayer.PlaylistTimeline this$0 -> g
    1:1:void <init>(androidx.media3.exoplayer.PlaylistTimeline,androidx.media3.common.Timeline):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/v2;Lj/i0;)V"}
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
androidx.media3.exoplayer.Renderer -> q.x2:
    void resetPosition(long) -> A
    long getDurationToProgressUs(long,long) -> B
    boolean isCurrentStreamFinal() -> C
    androidx.media3.exoplayer.MediaClock getMediaClock() -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/z1;"}
    androidx.media3.exoplayer.RendererCapabilities getCapabilities() -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/z2;"}
    androidx.media3.exoplayer.source.SampleStream getStream() -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/b1;"}
    void setPlaybackSpeed(float,float) -> L
    void reset() -> b
    boolean isEnded() -> c
    int getState() -> d
    boolean isReady() -> e
    void start() -> f
    void enableMayRenderStartOfStream() -> i
    void stop() -> j
    int getTrackType() -> k
    void render(long,long) -> l
    void disable() -> m
    java.lang.String getName() -> n
    void init(int,androidx.media3.exoplayer.analytics.PlayerId,androidx.media3.common.util.Clock) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILr/w3;Lm/c;)V"}
    void setCurrentStreamFinal() -> r
    void release() -> release
    void replaceStream(androidx.media3.common.Format[],androidx.media3.exoplayer.source.SampleStream,long,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/q;Lg0/b1;JJLg0/f0$b;)V"}
    void setTimeline(androidx.media3.common.Timeline) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
    void maybeThrowStreamError() -> v
    long getReadingPositionUs() -> w
    boolean hasReadStreamToEnd() -> x
    void enable(androidx.media3.exoplayer.RendererConfiguration,androidx.media3.common.Format[],androidx.media3.exoplayer.source.SampleStream,long,boolean,boolean,long,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/a3;[Lj/q;Lg0/b1;JZZJJLg0/f0$b;)V"}
androidx.media3.exoplayer.Renderer$-CC -> q.w2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$enableMayRenderStartOfStream(androidx.media3.exoplayer.Renderer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)V"}
    1:1:long $default$getDurationToProgressUs(androidx.media3.exoplayer.Renderer,long,long):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;JJ)J"}
    1:1:void $default$setPlaybackSpeed(androidx.media3.exoplayer.Renderer,float,float):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;FF)V"}
androidx.media3.exoplayer.Renderer$WakeupListener -> q.x2$a:
    void onSleep() -> a
    void onWakeup() -> b
androidx.media3.exoplayer.RendererCapabilities -> q.z2:
    int supportsMixedMimeTypeAdaptation() -> F
    void setListener(androidx.media3.exoplayer.RendererCapabilities$Listener) -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/z2$a;)V"}
    int supportsFormat(androidx.media3.common.Format) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    int getTrackType() -> k
    java.lang.String getName() -> n
    void clearListener() -> t
androidx.media3.exoplayer.RendererCapabilities$-CC -> q.y2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    2:6:int androidx.media3.exoplayer.RendererCapabilities.create(int):0:0 -> a
    2:6:int create(int):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    8:12:int androidx.media3.exoplayer.RendererCapabilities.create(int,int,int,int):0:0 -> b
    8:12:int create(int,int,int,int):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.RendererCapabilities.create(int,int,int,int,int):0:0 -> c
    1:1:int create(int,int,int,int,int):0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int create(int,int,int,int,int,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getAdaptiveSupport(int):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getAudioOffloadSupport(int):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getDecoderSupport(int):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getFormatSupport(int):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getHardwareAccelerationSupport(int):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getTunnelingSupport(int):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:17:boolean androidx.media3.exoplayer.RendererCapabilities.isFormatSupported(int,boolean):0:0 -> k
    1:17:boolean isFormatSupported(int,boolean):0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.RendererCapabilities$Listener -> q.z2$a:
    void onRendererCapabilitiesChanged(androidx.media3.exoplayer.Renderer) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)V"}
androidx.media3.exoplayer.RendererConfiguration -> q.a3:
    int offloadModePreferred -> a
    boolean tunneling -> b
    androidx.media3.exoplayer.RendererConfiguration DEFAULT -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,boolean):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.RenderersFactory -> q.b3:
    androidx.media3.exoplayer.Renderer[] createRenderers(android.os.Handler,androidx.media3.exoplayer.video.VideoRendererEventListener,androidx.media3.exoplayer.audio.AudioRendererEventListener,androidx.media3.exoplayer.text.TextOutput,androidx.media3.exoplayer.metadata.MetadataOutput) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lm0/e0;Ls/z;Li0/h;La0/b;)[Lq/x2;"}
androidx.media3.exoplayer.SeekParameters -> q.c3:
    long toleranceBeforeUs -> a
    long toleranceAfterUs -> b
    androidx.media3.exoplayer.SeekParameters EXACT -> c
    androidx.media3.exoplayer.SeekParameters CLOSEST_SYNC -> d
    androidx.media3.exoplayer.SeekParameters PREVIOUS_SYNC -> e
    androidx.media3.exoplayer.SeekParameters NEXT_SYNC -> f
    androidx.media3.exoplayer.SeekParameters DEFAULT -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,long):0:0 -> <init>
    1:1:long resolveSeekPositionUs(long,long,long):0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.StandaloneMediaClock -> q.d3:
    androidx.media3.common.util.Clock clock -> f
    boolean started -> g
    long baseUs -> h
    long baseElapsedMs -> i
    androidx.media3.common.PlaybackParameters playbackParameters -> j
    1:1:void <init>(androidx.media3.common.util.Clock):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c;)V"}
    1:1:boolean hasSkippedSilenceSinceLastCall():0:0 -> E
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:long getPositionUs():0:0 -> K
    1:1:void resetPosition(long):0:0 -> a
    1:1:void start():0:0 -> b
    1:1:void stop():0:0 -> c
    1:1:androidx.media3.common.PlaybackParameters getPlaybackParameters():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/c0;"}
    1:1:void setPlaybackParameters(androidx.media3.common.PlaybackParameters):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
androidx.media3.exoplayer.StreamVolumeManager -> q.g3:
    android.content.Context applicationContext -> a
    android.os.Handler eventHandler -> b
    androidx.media3.exoplayer.StreamVolumeManager$Listener listener -> c
    android.media.AudioManager audioManager -> d
    androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver receiver -> e
    int streamType -> f
    int volume -> g
    boolean muted -> h
    1:1:void <init>(android.content.Context,android.os.Handler,androidx.media3.exoplayer.StreamVolumeManager$Listener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/os/Handler;Lq/g3$b;)V"}
    1:1:android.os.Handler access$100(androidx.media3.exoplayer.StreamVolumeManager):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g3;)Landroid/os/Handler;"}
    1:1:void access$200(androidx.media3.exoplayer.StreamVolumeManager):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g3;)V"}
    1:1:int getMaxVolume():0:0 -> c
    1:1:int getMinVolume():0:0 -> d
    1:1:boolean getMutedFromManager(android.media.AudioManager,int):0:0 -> e
    1:1:int getVolumeFromManager(android.media.AudioManager,int):0:0 -> f
    1:1:void release():0:0 -> g
    1:1:void setStreamType(int):0:0 -> h
    1:1:void updateVolumeAndNotifyIfChanged():0:0 -> i
androidx.media3.exoplayer.StreamVolumeManager$$ExternalSyntheticApiModelOutline0 -> q.e3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.StreamVolumeManager$$InternalSyntheticApiModelOutline$8$07f3a6ccc452fd9f4915ecbb94a6ac11286948ea51ef9176b23370d8b332618a$0.m(android.media.AudioManager,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.StreamVolumeManager$$ExternalSyntheticApiModelOutline1 -> q.f3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.StreamVolumeManager$$InternalSyntheticApiModelOutline$8$d89cf9c9ef66fdfc6c9b83e766fdfac2ca7cab11874e7a78dd6abd65ebb14003$0.m(android.media.AudioManager,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.StreamVolumeManager$1 -> q.g3$a:
androidx.media3.exoplayer.StreamVolumeManager$Listener -> q.g3$b:
    void onStreamVolumeChanged(int,boolean) -> C
    void onStreamTypeChanged(int) -> r
androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver -> q.g3$c:
    androidx.media3.exoplayer.StreamVolumeManager this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.StreamVolumeManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g3;)V"}
    2:2:void <init>(androidx.media3.exoplayer.StreamVolumeManager,androidx.media3.exoplayer.StreamVolumeManager$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g3;Lq/g3$a;)V"}
    1:1:void $r8$lambda$JqsBkYzRm6OkmNv9Y3Rgyb66Hno(androidx.media3.exoplayer.StreamVolumeManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g3;)V"}
    1:1:void lambda$onReceive$0(androidx.media3.exoplayer.StreamVolumeManager):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g3;)V"}
    1:1:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver$$ExternalSyntheticLambda0 -> q.h3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.StreamVolumeManager androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver$$InternalSyntheticLambda$8$8d3b9fa695b5648412ff0efbff1c09263bbb8ca00cb51f4ab36df6796d09f45a$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver$$InternalSyntheticLambda$8$8d3b9fa695b5648412ff0efbff1c09263bbb8ca00cb51f4ab36df6796d09f45a$0.<init>(androidx.media3.exoplayer.StreamVolumeManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/g3;)V"}
    1:1:void androidx.media3.exoplayer.StreamVolumeManager$VolumeChangeReceiver$$InternalSyntheticLambda$8$8d3b9fa695b5648412ff0efbff1c09263bbb8ca00cb51f4ab36df6796d09f45a$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.WakeLockManager -> q.i3:
    android.content.Context applicationContext -> a
    android.os.PowerManager$WakeLock wakeLock -> b
    boolean enabled -> c
    boolean stayAwake -> d
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:void setEnabled(boolean):0:0 -> a
    1:1:void setStayAwake(boolean):0:0 -> b
    1:1:void updateWakeLock():0:0 -> c
androidx.media3.exoplayer.WifiLockManager -> q.j3:
    android.content.Context applicationContext -> a
    android.net.wifi.WifiManager$WifiLock wifiLock -> b
    boolean enabled -> c
    boolean stayAwake -> d
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:void setEnabled(boolean):0:0 -> a
    1:1:void setStayAwake(boolean):0:0 -> b
    1:1:void updateWifiLock():0:0 -> c
androidx.media3.exoplayer.analytics.AnalyticsCollector -> r.a:
    void addListener(androidx.media3.exoplayer.analytics.AnalyticsListener) -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;)V"}
    void notifySeekStarted() -> R
    void updateMediaPeriodQueueInfo(java.util.List,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lg0/f0$b;)V"}
    void onAudioTrackInitialized(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    void onAudioTrackReleased(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    void onAudioSinkError(java.lang.Exception) -> e
    void setPlayer(androidx.media3.common.Player,android.os.Looper) -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Landroid/os/Looper;)V"}
    void onVideoCodecError(java.lang.Exception) -> f
    void onVideoDecoderReleased(java.lang.String) -> g
    void onAudioEnabled(androidx.media3.exoplayer.DecoderCounters) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    void onAudioDisabled(androidx.media3.exoplayer.DecoderCounters) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    void onVideoDisabled(androidx.media3.exoplayer.DecoderCounters) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    void onRenderedFirstFrame(java.lang.Object,long) -> m
    void onAudioDecoderReleased(java.lang.String) -> n
    void onAudioDecoderInitialized(java.lang.String,long,long) -> o
    void onVideoDecoderInitialized(java.lang.String,long,long) -> p
    void onAudioInputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation) -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    void release() -> release
    void onAudioUnderrun(int,long,long) -> s
    void onVideoInputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation) -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    void onDroppedFrames(int,long) -> u
    void onAudioPositionAdvancing(long) -> w
    void onVideoFrameProcessingOffset(long,int) -> x
    void onVideoEnabled(androidx.media3.exoplayer.DecoderCounters) -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    void onAudioCodecError(java.lang.Exception) -> z
androidx.media3.exoplayer.analytics.AnalyticsListener -> r.c:
    void onCues(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.util.List) -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/util/List;)V"}
    void onPlayWhenReadyChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int) -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZI)V"}
    void onIsLoadingChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean) -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Z)V"}
    void onDrmKeysRestored(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    void onAudioTrackReleased(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig) -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ls/b0$a;)V"}
    void onAudioDecoderReleased(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String) -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;)V"}
    void onCues(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.text.CueGroup) -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ll/b;)V"}
    void onMetadata(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Metadata) -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/x;)V"}
    void onMediaMetadataChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaMetadata) -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/w;)V"}
    void onLoadCanceled(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData) -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;)V"}
    void onDroppedVideoFrames(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long) -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJ)V"}
    void onVideoSizeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.VideoSize) -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/p0;)V"}
    void onPlaybackParametersChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackParameters) -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/c0;)V"}
    void onPositionDiscontinuity(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int) -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    void onDrmKeysLoaded(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    void onPlaybackStateChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int) -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    void onLoadError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean) -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    void onVideoCodecError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception) -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    void onLoadingChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean) -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Z)V"}
    void onDeviceVolumeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,boolean) -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IZ)V"}
    void onEvents(androidx.media3.common.Player,androidx.media3.exoplayer.analytics.AnalyticsListener$Events) -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Lr/c$b;)V"}
    void onDeviceInfoChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.DeviceInfo) -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/l;)V"}
    void onTimelineChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int) -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    void onPlayerError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackException) -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b0;)V"}
    void onAudioTrackInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig) -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ls/b0$a;)V"}
    void onPlaybackSuppressionReasonChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int) -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    void onVideoDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;JJ)V"}
    void onTracksChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Tracks) -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/l0;)V"}
    void onRenderedFirstFrame(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Object,long) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Object;J)V"}
    void onAvailableCommandsChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Player$Commands) -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/d0$b;)V"}
    void onDownstreamFormatChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.MediaLoadData) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/b0;)V"}
    void onDrmSessionManagerError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception) -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    void onVideoInputFormatChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/q;Lq/p;)V"}
    void onSurfaceSizeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,int) -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;II)V"}
    void onAudioDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;J)V"}
    void onPlayerErrorChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackException) -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b0;)V"}
    void onAudioAttributesChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.AudioAttributes) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b;)V"}
    void onLoadCompleted(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;)V"}
    void onVolumeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,float) -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;F)V"}
    void onRepeatModeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    void onPlayerReleased(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    void onVideoEnabled(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    void onAudioDisabled(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters) -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    void onAudioCodecError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    void onVideoDisabled(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters) -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    void onVideoDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;J)V"}
    void onMediaItemTransition(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaItem,int) -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/u;I)V"}
    void onBandwidthEstimate(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,long) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJJ)V"}
    void onDrmSessionReleased(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    void onIsPlayingChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean) -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Z)V"}
    void onAudioUnderrun(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,long) -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJJ)V"}
    void onVideoSizeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,int,int,float) -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IIIF)V"}
    void onAudioPositionAdvancing(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long) -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;J)V"}
    void onDrmSessionAcquired(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    void onLoadStarted(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData) -> o0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;)V"}
    void onVideoFrameProcessingOffset(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long,int) -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;JI)V"}
    void onAudioEnabled(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters) -> p0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    void onSeekStarted(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) -> q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    void onAudioSinkError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception) -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    void onUpstreamDiscarded(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.MediaLoadData) -> r0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/b0;)V"}
    void onAudioInputFormatChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation) -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/q;Lq/p;)V"}
    void onSkipSilenceEnabledChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean) -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Z)V"}
    void onPositionDiscontinuity(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int) -> t0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/d0$e;Lj/d0$e;I)V"}
    void onAudioDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;JJ)V"}
    void onPlayerStateChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int) -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZI)V"}
    void onVideoDecoderReleased(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String) -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;)V"}
    void onDrmKeysRemoved(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    void onDrmSessionAcquired(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int) -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
androidx.media3.exoplayer.analytics.AnalyticsListener$-CC -> r.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$onIsLoadingChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean):0:0 -> A
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Z)V"}
    1:1:void $default$onIsPlayingChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean):0:0 -> B
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Z)V"}
    1:1:void $default$onLoadCanceled(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> C
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lg0/y;Lg0/b0;)V"}
    1:1:void $default$onLoadCompleted(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> D
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lg0/y;Lg0/b0;)V"}
    1:1:void $default$onLoadStarted(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> E
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lg0/y;Lg0/b0;)V"}
    1:1:void $default$onLoadingChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean):0:0 -> F
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Z)V"}
    1:1:void $default$onMediaItemTransition(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaItem,int):0:0 -> G
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lj/u;I)V"}
    1:1:void $default$onMediaMetadataChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaMetadata):0:0 -> H
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lj/w;)V"}
    1:1:void $default$onMetadata(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Metadata):0:0 -> I
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lj/x;)V"}
    1:1:void $default$onPlayWhenReadyChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int):0:0 -> J
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;ZI)V"}
    1:1:void $default$onPlaybackParametersChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackParameters):0:0 -> K
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lj/c0;)V"}
    1:1:void $default$onPlaybackStateChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> L
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;I)V"}
    1:1:void $default$onPlaybackSuppressionReasonChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> M
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;I)V"}
    1:1:void $default$onPlayerErrorChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackException):0:0 -> N
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lj/b0;)V"}
    1:1:void $default$onPlayerReleased(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> O
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;)V"}
    1:1:void $default$onPlayerStateChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int):0:0 -> P
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;ZI)V"}
    1:1:void $default$onPositionDiscontinuity(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> Q
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;I)V"}
    1:1:void $default$onRenderedFirstFrame(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Object,long):0:0 -> R
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/lang/Object;J)V"}
    1:1:void $default$onRepeatModeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> S
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;I)V"}
    1:1:void $default$onSeekStarted(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> T
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;)V"}
    1:1:void $default$onSkipSilenceEnabledChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean):0:0 -> U
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Z)V"}
    1:1:void $default$onSurfaceSizeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,int):0:0 -> V
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;II)V"}
    1:1:void $default$onTimelineChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> W
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;I)V"}
    1:1:void $default$onTracksChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Tracks):0:0 -> X
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lj/l0;)V"}
    1:1:void $default$onUpstreamDiscarded(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> Y
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lg0/b0;)V"}
    1:1:void $default$onVideoCodecError(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> Z
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:void $default$onAudioAttributesChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lj/b;)V"}
    1:1:void $default$onVideoDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long):0:0 -> a0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/lang/String;J)V"}
    1:1:void $default$onAudioCodecError(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:void $default$onVideoDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long):0:0 -> b0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/lang/String;JJ)V"}
    1:1:void $default$onAudioDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/lang/String;J)V"}
    1:1:void $default$onVideoDecoderReleased(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String):0:0 -> c0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/lang/String;)V"}
    1:1:void $default$onAudioDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/lang/String;JJ)V"}
    1:1:void $default$onVideoEnabled(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters):0:0 -> d0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lq/o;)V"}
    1:1:void $default$onAudioDecoderReleased(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/lang/String;)V"}
    1:1:void $default$onVideoFrameProcessingOffset(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long,int):0:0 -> e0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;JI)V"}
    1:1:void $default$onAudioDisabled(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lq/o;)V"}
    1:1:void $default$onVideoInputFormatChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> f0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lj/q;Lq/p;)V"}
    1:1:void $default$onAudioEnabled(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lq/o;)V"}
    1:1:void $default$onVideoSizeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,int,int,float):0:0 -> g0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;IIIF)V"}
    1:1:void $default$onAudioInputFormatChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lj/q;Lq/p;)V"}
    1:1:void $default$onVolumeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,float):0:0 -> h0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;F)V"}
    1:1:void $default$onAudioPositionAdvancing(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;J)V"}
    1:1:void $default$onAudioSinkError(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:void $default$onAudioTrackInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ls/b0$a;)V"}
    1:1:void $default$onAudioTrackReleased(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ls/b0$a;)V"}
    1:1:void $default$onAudioUnderrun(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,long):0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;IJJ)V"}
    1:1:void $default$onAvailableCommandsChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Player$Commands):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lj/d0$b;)V"}
    1:1:void $default$onCues(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.util.List):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/util/List;)V"}
    1:1:void $default$onCues(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.text.CueGroup):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ll/b;)V"}
    1:1:void $default$onDeviceInfoChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.DeviceInfo):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Lj/l;)V"}
    1:1:void $default$onDeviceVolumeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,boolean):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;IZ)V"}
    1:1:void $default$onDrmKeysLoaded(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;)V"}
    1:1:void $default$onDrmKeysRemoved(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;)V"}
    1:1:void $default$onDrmKeysRestored(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;)V"}
    1:1:void $default$onDrmSessionAcquired(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;)V"}
    1:1:void $default$onDrmSessionAcquired(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> w
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;I)V"}
    1:1:void $default$onDrmSessionManagerError(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> x
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:void $default$onDrmSessionReleased(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> y
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;)V"}
    1:1:void $default$onDroppedVideoFrames(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long):0:0 -> z
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lr/c$a;IJ)V"}
androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime -> r.c$a:
    long realtimeMs -> a
    androidx.media3.common.Timeline timeline -> b
    int windowIndex -> c
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId -> d
    long eventPlaybackPositionMs -> e
    androidx.media3.common.Timeline currentTimeline -> f
    int currentWindowIndex -> g
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId currentMediaPeriodId -> h
    long currentPlaybackPositionMs -> i
    long totalBufferedDurationMs -> j
    1:1:void <init>(long,androidx.media3.common.Timeline,int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,androidx.media3.common.Timeline,int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLj/i0;ILg0/f0$b;JLj/i0;ILg0/f0$b;JJ)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.analytics.AnalyticsListener$Events -> r.c$b:
    androidx.media3.common.FlagSet flags -> a
    android.util.SparseArray eventTimes -> b
    1:1:void <init>(androidx.media3.common.FlagSet,android.util.SparseArray):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p;Landroid/util/SparseArray;)V"}
    1:1:boolean contains(int):0:0 -> a
    1:1:int get(int):0:0 -> b
    1:1:androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime getEventTime(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lr/c$a;"}
    1:1:int size():0:0 -> d
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector -> r.p1:
    androidx.media3.common.util.Clock clock -> a
    androidx.media3.common.Timeline$Period period -> b
    androidx.media3.common.Timeline$Window window -> c
    androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$MediaPeriodQueueTracker mediaPeriodQueueTracker -> d
    android.util.SparseArray eventTimes -> e
    androidx.media3.common.util.ListenerSet listeners -> f
    androidx.media3.common.Player player -> g
    androidx.media3.common.util.HandlerWrapper handler -> h
    boolean isSeeking -> i
    1:1:void <init>(androidx.media3.common.util.Clock):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c;)V"}
    1:1:void addListener(androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;)V"}
    1:1:void $r8$lambda$DN4l2kv51WFx7GoN5Fyqar44Kyg(androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector):0:0 -> A0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/p1;)V"}
    1:1:void $r8$lambda$x_D8Y9XZ1E2ydSzZQ_tB0dz3wPU(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaItem,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> A1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/u;ILr/c;)V"}
    1:1:void lambda$onPlayerErrorChanged$44(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackException,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> A2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b0;Lr/c;)V"}
    1:1:void onPlaybackSuppressionReasonChanged(int):0:0 -> B
    1:1:void $r8$lambda$G38eBXrOfkD0FcDHMAALaFe7HwQ(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> B0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZLr/c;)V"}
    1:1:void $r8$lambda$ymjnd_mkpKUtsVJM3siMR11Lpoc(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> B1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void lambda$onPlayerStateChanged$36(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> B2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZILr/c;)V"}
    1:1:void onTracksChanged(androidx.media3.common.Tracks):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l0;)V"}
    1:1:void $r8$lambda$GfSiTdrfs7tfkWCeZke4imWmXVk(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Metadata,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> C0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/x;Lr/c;)V"}
    1:1:androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime generateCurrentPlayerMediaPeriodEventTime():0:0 -> C1
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr/c$a;"}
    1:1:void lambda$onPositionDiscontinuity$45(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> C2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILj/d0$e;Lj/d0$e;Lr/c;)V"}
    1:1:void onPlayerStateChanged(boolean,int):0:0 -> D
    1:1:void $r8$lambda$H2dtjazF2slLPJbSR6nq34LSFDQ(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> D0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZLr/c;)V"}
    1:1:androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime generateEventTime(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> D1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;)Lr/c$a;"}
    1:1:void lambda$onRenderedFirstFrame$21(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Object,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> D2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Object;JLr/c;)V"}
    1:1:void onPlayerError(androidx.media3.common.PlaybackException):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b0;)V"}
    1:1:void $r8$lambda$JK0dKYuZWi1RIVqvOWSv8GQxox8(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> E0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;Lr/c;)V"}
    1:1:androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime generateEventTime(androidx.media3.common.Timeline,int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> E1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;ILg0/f0$b;)Lr/c$a;"}
    1:1:void lambda$onRepeatModeChanged$41(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> E2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILr/c;)V"}
    1:1:void onLoadStarted(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
    1:1:void $r8$lambda$KNW4FZTr-mlMgoIFA19ZobbG-8I(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> F0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;Ljava/io/IOException;ZLr/c;)V"}
    1:1:androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime generateLoadingMediaPeriodEventTime():0:0 -> F1
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr/c$a;"}
    1:1:void lambda$onSkipSilenceEnabledChanged$55(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> F2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZLr/c;)V"}
    1:1:void onPlaybackStateChanged(int):0:0 -> G
    1:1:void $r8$lambda$KP4STy1iw9YBS3c1mCcDJ-EuaDo(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaMetadata,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> G0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/w;Lr/c;)V"}
    1:1:androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime generateMediaPeriodEventTime(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> G1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)Lr/c$a;"}
    1:1:void lambda$onSurfaceSizeChanged$24(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> G2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IILr/c;)V"}
    1:1:void onPlayWhenReadyChanged(boolean,int):0:0 -> H
    1:1:void $r8$lambda$LBT2G0l0hhTQVqStyAx1zmT_HmQ(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> H0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;Lr/c;)V"}
    1:1:androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime generatePlayingMediaPeriodEventTime():0:0 -> H1
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr/c$a;"}
    1:1:void lambda$onTimelineChanged$31(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> H2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILr/c;)V"}
    1:1:void onUpstreamDiscarded(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/b0;)V"}
    1:1:void $r8$lambda$M7cnmq9vjZ_VhFG8ZyRsYrV4CEc(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> I0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/q;Lq/p;Lr/c;)V"}
    1:1:androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime generateReadingMediaPeriodEventTime():0:0 -> I1
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr/c$a;"}
    1:1:void lambda$onTracksChanged$33(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Tracks,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> I2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/l0;Lr/c;)V"}
    1:1:void onDownstreamFormatChanged(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/b0;)V"}
    1:1:void $r8$lambda$MM8iK__5R2sCoaz_2K1YllJkD0Q(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> J0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;Lr/c;)V"}
    1:1:androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime getEventTimeForErrorEvent(androidx.media3.common.PlaybackException):0:0 -> J1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b0;)Lr/c$a;"}
    1:1:void lambda$onUpstreamDiscarded$29(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.MediaLoadData,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> J2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/b0;Lr/c;)V"}
    1:1:void onLoadingChanged(boolean):0:0 -> K
    1:1:void $r8$lambda$MOiJ4uHgB5AbK_8dmx_JluqwD3U(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> K0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void lambda$new$0(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.common.FlagSet):0:0 -> K1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lj/p;)V"}
    1:1:void lambda$onVideoCodecError$23(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> K2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;Lr/c;)V"}
    1:1:void onDeviceInfoChanged(androidx.media3.common.DeviceInfo):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l;)V"}
    1:1:void $r8$lambda$MTmv4RwiUdhIRcyHPmlRAt-llVc(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> L0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void lambda$notifySeekStarted$2(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> L1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void lambda$onVideoDecoderInitialized$16(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> L2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;JJLr/c;)V"}
    1:1:void onPositionDiscontinuity(int):0:0 -> M
    1:1:void $r8$lambda$N4TSa4dgMC3vzOo8LOc1sAeJ-ws(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> M0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ls/b0$a;Lr/c;)V"}
    1:1:void lambda$onAudioAttributesChanged$57(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.AudioAttributes,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> M1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b;Lr/c;)V"}
    1:1:void lambda$onVideoDecoderReleased$19(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> M2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;Lr/c;)V"}
    1:1:void onBandwidthSample(int,long,long):0:0 -> N
    1:1:void $r8$lambda$OIOR_2HU1OQsiW1DDGFfLTSpqoI(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> N0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/q;Lq/p;Lr/c;)V"}
    1:1:void lambda$onAudioCodecError$11(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> N1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;Lr/c;)V"}
    1:1:void lambda$onVideoDisabled$20(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> N2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;Lr/c;)V"}
    1:1:void onDrmKeysLoaded(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void $r8$lambda$P_8gt_H3bGH3eBC8G7l88va5jsQ(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> O0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;JLr/c;)V"}
    1:1:void lambda$onAudioDecoderInitialized$4(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> O1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;JJLr/c;)V"}
    1:1:void lambda$onVideoEnabled$15(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> O2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;Lr/c;)V"}
    1:1:void onDrmSessionReleased(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void $r8$lambda$QSHhwCEgOknH_1HQ-jm05DORxX4(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> P0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZILr/c;)V"}
    1:1:void lambda$onAudioDecoderReleased$8(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> P1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;Lr/c;)V"}
    1:1:void lambda$onVideoFrameProcessingOffset$22(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> P2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;JILr/c;)V"}
    1:1:void onTimelineChanged(androidx.media3.common.Timeline,int):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;I)V"}
    1:1:void $r8$lambda$RMcjNDWhV71py70vgH2rTrOLe8w(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Object,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> Q0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Object;JLr/c;)V"}
    1:1:void lambda$onAudioDisabled$9(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> Q1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;Lr/c;)V"}
    1:1:void lambda$onVideoInputFormatChanged$17(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> Q2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/q;Lq/p;Lr/c;)V"}
    1:1:void notifySeekStarted():0:0 -> R
    1:1:void $r8$lambda$SKR4mWFPXFPOqy3rRCFw6ruQzEQ(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> R0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILr/c;)V"}
    1:1:void lambda$onAudioEnabled$3(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> R1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;Lr/c;)V"}
    1:1:void lambda$onVideoSizeChanged$58(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.VideoSize,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> R2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/p0;Lr/c;)V"}
    1:1:void updateMediaPeriodQueueInfo(java.util.List,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lg0/f0$b;)V"}
    1:1:void $r8$lambda$SRDPS7YbAP65r9Vd10QkvkYInDM(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> S0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void lambda$onAudioInputFormatChanged$5(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> S1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/q;Lq/p;Lr/c;)V"}
    1:1:void lambda$onVolumeChanged$14(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,float,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> S2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;FLr/c;)V"}
    1:1:void onDrmSessionManagerError(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,java.lang.Exception):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Ljava/lang/Exception;)V"}
    1:1:void $r8$lambda$VSQFVRLIbgTU6F8XDwNDzEHhm1U(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> T0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;JILr/c;)V"}
    1:1:void lambda$onAudioPositionAdvancing$6(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> T1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;JLr/c;)V"}
    1:1:void lambda$releaseInternal$69(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> T2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void onSurfaceSizeChanged(int,int):0:0 -> U
    1:1:void $r8$lambda$Whs-bI-DzYrfZDK20T-2vjFFTVQ(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> U0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;Lr/c;)V"}
    1:1:void lambda$onAudioSinkError$10(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> U1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;Lr/c;)V"}
    1:1:void lambda$setPlayer$1(androidx.media3.common.Player,androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.common.FlagSet):0:0 -> U2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Lr/c;Lj/p;)V"}
    1:1:void onDrmKeysRemoved(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void $r8$lambda$Wn7Kj6J2pz8seUT0mHb8XX_FVUg(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Player$Commands,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> V0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/d0$b;Lr/c;)V"}
    1:1:void lambda$onAudioTrackInitialized$12(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> V1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ls/b0$a;Lr/c;)V"}
    1:1:void releaseInternal():0:0 -> V2
    1:1:void onAvailableCommandsChanged(androidx.media3.common.Player$Commands):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$b;)V"}
    1:1:void $r8$lambda$YuC2Ly-h4fMWxvKiW_fYh5op6pg(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> W0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void lambda$onAudioTrackReleased$13(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> W1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ls/b0$a;Lr/c;)V"}
    1:1:void sendEvent(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.common.util.ListenerSet$Event):0:0 -> W2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILm/n$a;)V"}
    1:1:void onRepeatModeChanged(int):0:0 -> X
    1:1:void $r8$lambda$Yv1w1LDw_UtUxk1H-RE8jeBHpb4(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackException,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> X0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b0;Lr/c;)V"}
    1:1:void lambda$onAudioUnderrun$7(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> X1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJJLr/c;)V"}
    1:1:void onMediaItemTransition(androidx.media3.common.MediaItem,int):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;I)V"}
    1:1:void $r8$lambda$caE-9yGutQDNH6HqwLsO4GL9LUI(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> Y0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;Lr/c;)V"}
    1:1:void lambda$onAvailableCommandsChanged$35(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Player$Commands,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> Y1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/d0$b;Lr/c;)V"}
    1:1:void onIsLoadingChanged(boolean):0:0 -> Z
    1:1:void $r8$lambda$e3sX7VdRqazTBQ_4LGpxDWdWzqw(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,float,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> Z0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;FLr/c;)V"}
    1:1:void lambda$onBandwidthSample$62(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> Z1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJJLr/c;)V"}
    1:1:void onAudioTrackInitialized(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    1:1:void onLoadCompleted(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
    1:1:void $r8$lambda$ePy0AIO8UW-xy9MiygZkuaitgYQ(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> a1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJJLr/c;)V"}
    1:1:void lambda$onCues$53(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.util.List,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> a2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/util/List;Lr/c;)V"}
    1:1:void onAudioTrackReleased(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    1:1:void onRenderedFirstFrame():0:0 -> b0
    1:1:void $r8$lambda$ecMzXdxeJlo2LM29WxbOtQ-jo-I(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> b1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;JJLr/c;)V"}
    1:1:void lambda$onCues$54(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.text.CueGroup,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> b2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ll/b;Lr/c;)V"}
    1:1:void onVideoSizeChanged(androidx.media3.common.VideoSize):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;)V"}
    1:1:void onAudioAttributesChanged(androidx.media3.common.AudioAttributes):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:1:void $r8$lambda$esR6S7LSO23QzfDEScNDaglgofc(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackException,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> c1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b0;Lr/c;)V"}
    1:1:void lambda$onDeviceInfoChanged$60(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.DeviceInfo,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> c2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/l;Lr/c;)V"}
    1:1:void onSkipSilenceEnabledChanged(boolean):0:0 -> d
    1:1:void onEvents(androidx.media3.common.Player,androidx.media3.common.Player$Events):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Lj/d0$c;)V"}
    1:1:void $r8$lambda$fe1wI71l3GEmbpri5y-wcyELxew(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> d1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IILr/c;)V"}
    1:1:void lambda$onDeviceVolumeChanged$61(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,boolean,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> d2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IZLr/c;)V"}
    1:1:void onAudioSinkError(java.lang.Exception):0:0 -> e
    1:1:void setPlayer(androidx.media3.common.Player,android.os.Looper):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Landroid/os/Looper;)V"}
    1:1:void $r8$lambda$gMY6pqt3whmB6oXT18-zHhJ3WnY(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackParameters,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> e1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/c0;Lr/c;)V"}
    1:1:void lambda$onDownstreamFormatChanged$30(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.MediaLoadData,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> e2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/b0;Lr/c;)V"}
    1:1:void onVideoCodecError(java.lang.Exception):0:0 -> f
    1:1:void onMediaMetadataChanged(androidx.media3.common.MediaMetadata):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w;)V"}
    1:1:void $r8$lambda$gYeGBDL8mGlOwfmo-ERq8sCUy4w(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,boolean,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> f1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IZLr/c;)V"}
    1:1:void lambda$onDrmKeysLoaded$64(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> f2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void onVideoDecoderReleased(java.lang.String):0:0 -> g
    1:1:void onDrmKeysRestored(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void $r8$lambda$iPE5NUhiFilQzLDxPHPzfUW0vhw(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> g1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;Lr/c;)V"}
    1:1:void lambda$onDrmKeysRemoved$67(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> g2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void onAudioEnabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void onLoadError(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    1:1:void $r8$lambda$iozXNSs895uhwtOh_I8uPakTVXE(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> h1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;Lr/c;)V"}
    1:1:void lambda$onDrmKeysRestored$66(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> h2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void onAudioDisabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void onDrmSessionAcquired(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> i0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void $r8$lambda$jkdNgF6pLu9A9h86YXT1MXSbNQs(androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector,androidx.media3.common.Player,androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.common.FlagSet):0:0 -> i1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/p1;Lj/d0;Lr/c;Lj/p;)V"}
    1:1:void lambda$onDrmSessionAcquired$63(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> i2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILr/c;)V"}
    1:1:void onMetadata(androidx.media3.common.Metadata):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)V"}
    1:1:void onVolumeChanged(float):0:0 -> j0
    1:1:void $r8$lambda$jmx17ekEvtkYprtE01JBju09vZs(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> j1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZILr/c;)V"}
    1:1:void lambda$onDrmSessionManagerError$65(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> j2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;Lr/c;)V"}
    1:1:void onVideoDisabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void onLoadCanceled(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
    1:1:void $r8$lambda$mnfcOXvIrBOrbwBVv9DfOkDe5wE(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.text.CueGroup,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> k1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ll/b;Lr/c;)V"}
    1:1:void lambda$onDrmSessionReleased$68(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> k2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void onCues(androidx.media3.common.text.CueGroup):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;)V"}
    1:1:void onPositionDiscontinuity(androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$e;Lj/d0$e;I)V"}
    1:1:void $r8$lambda$mqDnpMHD6xy2qvDZQr8vL0cvn-o(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> l1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILr/c;)V"}
    1:1:void lambda$onDroppedFrames$18(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> l2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJLr/c;)V"}
    1:1:void onRenderedFirstFrame(java.lang.Object,long):0:0 -> m
    1:1:void onDrmSessionAcquired(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,int):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;I)V"}
    1:1:void $r8$lambda$mur-GcdtvI9QK_ZBKLhFySAYf3Q(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> m1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;Lr/c;)V"}
    1:1:void lambda$onIsLoadingChanged$34(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> m2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZLr/c;)V"}
    1:1:void onAudioDecoderReleased(java.lang.String):0:0 -> n
    1:1:void onPlayerErrorChanged(androidx.media3.common.PlaybackException):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b0;)V"}
    1:1:void $r8$lambda$n10C5ekNSwjJPL5UFm6CgaV5Hk4(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> n1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;Lr/c;)V"}
    1:1:void lambda$onIsPlayingChanged$40(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> n2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZLr/c;)V"}
    1:1:void onAudioDecoderInitialized(java.lang.String,long,long):0:0 -> o
    1:1:void onDeviceVolumeChanged(int,boolean):0:0 -> o0
    1:1:void $r8$lambda$nexuoDUlL5uelG3kTBV406MnbMc(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> o1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;Lr/c;)V"}
    1:1:void lambda$onLoadCanceled$27(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> o2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;Lr/c;)V"}
    1:1:void onVideoDecoderInitialized(java.lang.String,long,long):0:0 -> p
    1:1:void onIsPlayingChanged(boolean):0:0 -> p0
    1:1:void $r8$lambda$oaO2f3wBUAAiDUMhEne8VZJaurc(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> p1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;JJLr/c;)V"}
    1:1:void lambda$onLoadCompleted$26(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> p2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;Lr/c;)V"}
    1:1:void onAudioInputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    1:1:void $r8$lambda$1EoUjVFnvEhNTsPIl5tc9izQwO8(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> q0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILr/c;)V"}
    1:1:void $r8$lambda$pVvLCbTKHI_A5w8U3G7W71BL9Gg(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> q1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;Lr/c;)V"}
    1:1:void lambda$onLoadError$28(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> q2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;Ljava/io/IOException;ZLr/c;)V"}
    1:1:void onPlaybackParametersChanged(androidx.media3.common.PlaybackParameters):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    1:1:void $r8$lambda$1vC1NC_utLWQ0nPAv-3PaBoij9M(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> r0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZLr/c;)V"}
    1:1:void $r8$lambda$qJ_yzpSp9FZibk-5XJTtUp2_8N0(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> r1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILr/c;)V"}
    1:1:void lambda$onLoadStarted$25(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> r2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;Lr/c;)V"}
    1:1:void release():0:0 -> release
    1:1:void onAudioUnderrun(int,long,long):0:0 -> s
    1:1:void $r8$lambda$5TzZRXeMyZkB20qngVaXOSkeS4w(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> s0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJLr/c;)V"}
    1:1:void $r8$lambda$sGolLeq9t66qzdTT2dT-to4LkZE(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.AudioAttributes,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> s1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b;Lr/c;)V"}
    1:1:void lambda$onMediaItemTransition$32(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaItem,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> s2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/u;ILr/c;)V"}
    1:1:void onVideoInputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    1:1:void $r8$lambda$7DpE4Hhpw-xA0IQ7AW-HcXICr_4(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.MediaLoadData,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> t0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/b0;Lr/c;)V"}
    1:1:void $r8$lambda$t21mlWmkR4ZbnyZtmdbNGVk8yic(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.MediaLoadData,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> t1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/b0;Lr/c;)V"}
    1:1:void lambda$onMediaMetadataChanged$50(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaMetadata,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> t2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/w;Lr/c;)V"}
    1:1:void onDroppedFrames(int,long):0:0 -> u
    1:1:void $r8$lambda$83LJFCdOUh1T4qMPSpwXASYXDRI(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> u0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lr/c;)V"}
    1:1:void $r8$lambda$uQteAKQZefjExR4ze2rntu0irrk(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.DeviceInfo,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> u1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/l;Lr/c;)V"}
    1:1:void lambda$onMetadata$52(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Metadata,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> u2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/x;Lr/c;)V"}
    1:1:void onCues(java.util.List):0:0 -> v
    1:1:void $r8$lambda$8V-r8Q-HWb9PY8iW2WtbtA0N0pE(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> v0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILj/d0$e;Lj/d0$e;Lr/c;)V"}
    1:1:void $r8$lambda$vwQiI3JEAbZc_6111rnEQWKbs0g(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> v1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILr/c;)V"}
    1:1:void lambda$onPlayWhenReadyChanged$38(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> v2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZILr/c;)V"}
    1:1:void onAudioPositionAdvancing(long):0:0 -> w
    1:1:void $r8$lambda$8X4d45_SB9KEi7hQpX8R-v9zyF8(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> w0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;Lr/c;)V"}
    1:1:void $r8$lambda$wHuh4_ypVXvbXlUtJGA_EzpljGU(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,long,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> w1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJJLr/c;)V"}
    1:1:void lambda$onPlaybackParametersChanged$46(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackParameters,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> w2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/c0;Lr/c;)V"}
    1:1:void onVideoFrameProcessingOffset(long,int):0:0 -> x
    1:1:void $r8$lambda$9JLByTz9piwjmoY3tAXhJJ8JZPY(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Tracks,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> x0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/l0;Lr/c;)V"}
    1:1:void $r8$lambda$wWD8sy0ciw-8fmgjib_pA6h0jKY(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> x1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;Lr/c;)V"}
    1:1:void lambda$onPlaybackStateChanged$37(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> x2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILr/c;)V"}
    1:1:void onVideoEnabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void $r8$lambda$ALQm_UWsXdtjRXtQLYRc2jrCXq0(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.util.List,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> y0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/util/List;Lr/c;)V"}
    1:1:void $r8$lambda$x-3C3jThIjL9gxjUR_x_My12Vhw(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> y1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ls/b0$a;Lr/c;)V"}
    1:1:void lambda$onPlaybackSuppressionReasonChanged$39(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> y2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILr/c;)V"}
    1:1:void onAudioCodecError(java.lang.Exception):0:0 -> z
    1:1:void $r8$lambda$Aq4xAC3-yY6TSXZZHCxd1Ub2svo(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.VideoSize,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> z0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/p0;Lr/c;)V"}
    1:1:void $r8$lambda$xS255Y209rskhp1Q-Ht84USC0KU(androidx.media3.exoplayer.analytics.AnalyticsListener,androidx.media3.common.FlagSet):0:0 -> z1
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c;Lj/p;)V"}
    1:1:void lambda$onPlayerError$43(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackException,androidx.media3.exoplayer.analytics.AnalyticsListener):0:0 -> z2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b0;Lr/c;)V"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda0 -> r.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$026887a47f03a15bda3de2a39a3f6f084fa0c89fd6f11581c7e66f2907a39232$0.f$0 -> a
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$026887a47f03a15bda3de2a39a3f6f084fa0c89fd6f11581c7e66f2907a39232$0.f$1 -> b
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$026887a47f03a15bda3de2a39a3f6f084fa0c89fd6f11581c7e66f2907a39232$0.f$2 -> c
    java.io.IOException androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$026887a47f03a15bda3de2a39a3f6f084fa0c89fd6f11581c7e66f2907a39232$0.f$3 -> d
    boolean androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$026887a47f03a15bda3de2a39a3f6f084fa0c89fd6f11581c7e66f2907a39232$0.f$4 -> e
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$026887a47f03a15bda3de2a39a3f6f084fa0c89fd6f11581c7e66f2907a39232$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$026887a47f03a15bda3de2a39a3f6f084fa0c89fd6f11581c7e66f2907a39232$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda1 -> r.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$0d7cc6a6948b8680c94270e2a59da117c125b4cda6b15ca31d96b00242bbd88b$0.f$0 -> a
    java.lang.Exception androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$0d7cc6a6948b8680c94270e2a59da117c125b4cda6b15ca31d96b00242bbd88b$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$0d7cc6a6948b8680c94270e2a59da117c125b4cda6b15ca31d96b00242bbd88b$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$0d7cc6a6948b8680c94270e2a59da117c125b4cda6b15ca31d96b00242bbd88b$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda10 -> r.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$ecce454b950dce3d877e99d861504f21516d8d0dd0139eaae2d03c99940d6da3$0.f$0 -> a
    androidx.media3.common.VideoSize androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$ecce454b950dce3d877e99d861504f21516d8d0dd0139eaae2d03c99940d6da3$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$ecce454b950dce3d877e99d861504f21516d8d0dd0139eaae2d03c99940d6da3$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.VideoSize):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/p0;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$ecce454b950dce3d877e99d861504f21516d8d0dd0139eaae2d03c99940d6da3$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda11 -> r.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$f21d588f7897177947a52f95b1ac8ded1670f5dd45b8a079ce9fd1f56adc1e27$0.f$0 -> a
    java.lang.Object androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$f21d588f7897177947a52f95b1ac8ded1670f5dd45b8a079ce9fd1f56adc1e27$0.f$1 -> b
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$f21d588f7897177947a52f95b1ac8ded1670f5dd45b8a079ce9fd1f56adc1e27$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$f21d588f7897177947a52f95b1ac8ded1670f5dd45b8a079ce9fd1f56adc1e27$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Object,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Object;J)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$f21d588f7897177947a52f95b1ac8ded1670f5dd45b8a079ce9fd1f56adc1e27$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda12 -> r.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$006d968ce8a3bcf80b73051b4ff6df3b90ee710845c8b0e6e7f5bae7df6781aa$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$006d968ce8a3bcf80b73051b4ff6df3b90ee710845c8b0e6e7f5bae7df6781aa$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$006d968ce8a3bcf80b73051b4ff6df3b90ee710845c8b0e6e7f5bae7df6781aa$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda13 -> r.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$0764472004439aa2bda267311e61af0166a7258a9559649cfe7bd8d89e9ad70b$0.f$0 -> a
    androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$0764472004439aa2bda267311e61af0166a7258a9559649cfe7bd8d89e9ad70b$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$0764472004439aa2bda267311e61af0166a7258a9559649cfe7bd8d89e9ad70b$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ls/b0$a;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$0764472004439aa2bda267311e61af0166a7258a9559649cfe7bd8d89e9ad70b$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda14 -> r.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$2f79880f4d4f526dfabecd29bd47a9a3eb94839251b831c408a056eafb05a751$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$2f79880f4d4f526dfabecd29bd47a9a3eb94839251b831c408a056eafb05a751$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$2f79880f4d4f526dfabecd29bd47a9a3eb94839251b831c408a056eafb05a751$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda15 -> r.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$55d0ab34f95a5529f1ad4f9fc1941f0eaa6423b616997b0c366e3318db454e99$0.f$0 -> a
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$55d0ab34f95a5529f1ad4f9fc1941f0eaa6423b616997b0c366e3318db454e99$0.f$1 -> b
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$55d0ab34f95a5529f1ad4f9fc1941f0eaa6423b616997b0c366e3318db454e99$0.f$2 -> c
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$55d0ab34f95a5529f1ad4f9fc1941f0eaa6423b616997b0c366e3318db454e99$0.f$3 -> d
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$55d0ab34f95a5529f1ad4f9fc1941f0eaa6423b616997b0c366e3318db454e99$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJJ)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$55d0ab34f95a5529f1ad4f9fc1941f0eaa6423b616997b0c366e3318db454e99$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda16 -> r.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$8b4bd80a2a06077b2824e891b316a65ff6d7e43d539e28c29e3f1bb032a6b86d$0.f$0 -> a
    androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$8b4bd80a2a06077b2824e891b316a65ff6d7e43d539e28c29e3f1bb032a6b86d$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$8b4bd80a2a06077b2824e891b316a65ff6d7e43d539e28c29e3f1bb032a6b86d$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ls/b0$a;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$8b4bd80a2a06077b2824e891b316a65ff6d7e43d539e28c29e3f1bb032a6b86d$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda17 -> r.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$9ef8c9d7fcca71c8c485e6828c9eca45fd4b9745c6d188f8137e8c8ebd0f3e19$0.f$0 -> a
    boolean androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$9ef8c9d7fcca71c8c485e6828c9eca45fd4b9745c6d188f8137e8c8ebd0f3e19$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$9ef8c9d7fcca71c8c485e6828c9eca45fd4b9745c6d188f8137e8c8ebd0f3e19$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Z)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$9ef8c9d7fcca71c8c485e6828c9eca45fd4b9745c6d188f8137e8c8ebd0f3e19$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda18 -> r.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$c7815c9e54b16959245ce8b67fd2dcb1cc3a4df393a0567c6f11413a4cdf1dd5$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$c7815c9e54b16959245ce8b67fd2dcb1cc3a4df393a0567c6f11413a4cdf1dd5$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$11$c7815c9e54b16959245ce8b67fd2dcb1cc3a4df393a0567c6f11413a4cdf1dd5$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda19 -> r.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$01c874b1e2f42bebcddcfac1e3bf71eea3f729d381347628ff8f1c404486c137$0.f$0 -> a
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$01c874b1e2f42bebcddcfac1e3bf71eea3f729d381347628ff8f1c404486c137$0.f$1 -> b
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$01c874b1e2f42bebcddcfac1e3bf71eea3f729d381347628ff8f1c404486c137$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$01c874b1e2f42bebcddcfac1e3bf71eea3f729d381347628ff8f1c404486c137$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;JI)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$01c874b1e2f42bebcddcfac1e3bf71eea3f729d381347628ff8f1c404486c137$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda2 -> r.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$1493e5537d3cd67673a35704e96fec2b96cbb44b0dd15adff1f2358d5216f3e2$0.f$0 -> a
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$1493e5537d3cd67673a35704e96fec2b96cbb44b0dd15adff1f2358d5216f3e2$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$1493e5537d3cd67673a35704e96fec2b96cbb44b0dd15adff1f2358d5216f3e2$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$1493e5537d3cd67673a35704e96fec2b96cbb44b0dd15adff1f2358d5216f3e2$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda20 -> r.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$085d562098ef70301230954b506228f1b71b1713d2b8189cf92aa73e7f1734e5$0.f$0 -> a
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$085d562098ef70301230954b506228f1b71b1713d2b8189cf92aa73e7f1734e5$0.f$1 -> b
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$085d562098ef70301230954b506228f1b71b1713d2b8189cf92aa73e7f1734e5$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$085d562098ef70301230954b506228f1b71b1713d2b8189cf92aa73e7f1734e5$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$085d562098ef70301230954b506228f1b71b1713d2b8189cf92aa73e7f1734e5$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda21 -> r.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$0b68f8ef50e7f5d2944fc849df3c49747207aff6851449653ee23b3aa56f7590$0.f$0 -> a
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$0b68f8ef50e7f5d2944fc849df3c49747207aff6851449653ee23b3aa56f7590$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$0b68f8ef50e7f5d2944fc849df3c49747207aff6851449653ee23b3aa56f7590$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$0b68f8ef50e7f5d2944fc849df3c49747207aff6851449653ee23b3aa56f7590$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda22 -> r.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$0bf5c22a4e1aca41ae87488ead6e702784f7435e5902823cd01b1a021c19b0ed$0.f$0 -> a
    boolean androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$0bf5c22a4e1aca41ae87488ead6e702784f7435e5902823cd01b1a021c19b0ed$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$0bf5c22a4e1aca41ae87488ead6e702784f7435e5902823cd01b1a021c19b0ed$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Z)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$0bf5c22a4e1aca41ae87488ead6e702784f7435e5902823cd01b1a021c19b0ed$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda23 -> r.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$11c5ac432a747fa62139417e66c8120b47459bf1533268279c6a46223f964ea9$0.f$0 -> a
    java.lang.String androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$11c5ac432a747fa62139417e66c8120b47459bf1533268279c6a46223f964ea9$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$11c5ac432a747fa62139417e66c8120b47459bf1533268279c6a46223f964ea9$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$11c5ac432a747fa62139417e66c8120b47459bf1533268279c6a46223f964ea9$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda24 -> r.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$1dbeee875f62eec87f8abf725a2cf94cac455c2590b4a052e933d43889412910$0.f$0 -> a
    boolean androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$1dbeee875f62eec87f8abf725a2cf94cac455c2590b4a052e933d43889412910$0.f$1 -> b
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$1dbeee875f62eec87f8abf725a2cf94cac455c2590b4a052e933d43889412910$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$1dbeee875f62eec87f8abf725a2cf94cac455c2590b4a052e933d43889412910$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZI)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$1dbeee875f62eec87f8abf725a2cf94cac455c2590b4a052e933d43889412910$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda25 -> r.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$1f4b2f2ec0e70f7875dcdb7779e40454334ff42a15766b0e041e2698b98abdc1$0.f$0 -> a
    androidx.media3.common.Format androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$1f4b2f2ec0e70f7875dcdb7779e40454334ff42a15766b0e041e2698b98abdc1$0.f$1 -> b
    androidx.media3.exoplayer.DecoderReuseEvaluation androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$1f4b2f2ec0e70f7875dcdb7779e40454334ff42a15766b0e041e2698b98abdc1$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$1f4b2f2ec0e70f7875dcdb7779e40454334ff42a15766b0e041e2698b98abdc1$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/q;Lq/p;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$1f4b2f2ec0e70f7875dcdb7779e40454334ff42a15766b0e041e2698b98abdc1$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda26 -> r.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$20d3576c9eb24f0f5622e48c5bea57a3f1a6b6c12f0e51d2b8faba1583e569e6$0.f$0 -> a
    java.lang.String androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$20d3576c9eb24f0f5622e48c5bea57a3f1a6b6c12f0e51d2b8faba1583e569e6$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$20d3576c9eb24f0f5622e48c5bea57a3f1a6b6c12f0e51d2b8faba1583e569e6$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$20d3576c9eb24f0f5622e48c5bea57a3f1a6b6c12f0e51d2b8faba1583e569e6$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda27 -> r.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$26785d82fefa081fcc8e953711cd4999fda653f19ea39bbc360ae3289588b3e2$0.f$0 -> a
    float androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$26785d82fefa081fcc8e953711cd4999fda653f19ea39bbc360ae3289588b3e2$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$26785d82fefa081fcc8e953711cd4999fda653f19ea39bbc360ae3289588b3e2$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,float):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;F)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$26785d82fefa081fcc8e953711cd4999fda653f19ea39bbc360ae3289588b3e2$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda28 -> r.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$29e56f792d9377ed8a555e320cc7e9432bdcf9c47ae2cf52ede4a2d43026ad56$0.f$0 -> a
    androidx.media3.common.PlaybackParameters androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$29e56f792d9377ed8a555e320cc7e9432bdcf9c47ae2cf52ede4a2d43026ad56$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$29e56f792d9377ed8a555e320cc7e9432bdcf9c47ae2cf52ede4a2d43026ad56$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackParameters):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/c0;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$29e56f792d9377ed8a555e320cc7e9432bdcf9c47ae2cf52ede4a2d43026ad56$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda29 -> r.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$344ae327ac496cdf7ddb3bfe3e019f815ceca648d9725e0d92172fae9104ceb0$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$344ae327ac496cdf7ddb3bfe3e019f815ceca648d9725e0d92172fae9104ceb0$0.invoke(java.lang.Object,androidx.media3.common.FlagSet):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lj/p;)V"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda3 -> r.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$23a8cb9e4c671ac8c59df4459fb788302b2f809fabb464bd3154e3f28c94cf7e$0.f$0 -> a
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$23a8cb9e4c671ac8c59df4459fb788302b2f809fabb464bd3154e3f28c94cf7e$0.f$1 -> b
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$23a8cb9e4c671ac8c59df4459fb788302b2f809fabb464bd3154e3f28c94cf7e$0.f$2 -> c
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$23a8cb9e4c671ac8c59df4459fb788302b2f809fabb464bd3154e3f28c94cf7e$0.f$3 -> d
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$23a8cb9e4c671ac8c59df4459fb788302b2f809fabb464bd3154e3f28c94cf7e$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJJ)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$23a8cb9e4c671ac8c59df4459fb788302b2f809fabb464bd3154e3f28c94cf7e$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda30 -> r.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$4e180ac9294f4e2bfd7723fe842b23117a127016ef51dd531a8f07d6b42e77b4$0.f$0 -> a
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$4e180ac9294f4e2bfd7723fe842b23117a127016ef51dd531a8f07d6b42e77b4$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$4e180ac9294f4e2bfd7723fe842b23117a127016ef51dd531a8f07d6b42e77b4$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$4e180ac9294f4e2bfd7723fe842b23117a127016ef51dd531a8f07d6b42e77b4$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda31 -> r.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5127b70b5398a73ed6af0323fa178e7609a3aab9371f0212cf34c8efc1857d3a$0.f$0 -> a
    java.lang.Exception androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5127b70b5398a73ed6af0323fa178e7609a3aab9371f0212cf34c8efc1857d3a$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5127b70b5398a73ed6af0323fa178e7609a3aab9371f0212cf34c8efc1857d3a$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5127b70b5398a73ed6af0323fa178e7609a3aab9371f0212cf34c8efc1857d3a$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda32 -> r.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$587f5a1605f5b7e0375786cc97054cec52fdb2479cb7392384e5de5dd79572e3$0.f$0 -> a
    java.lang.Exception androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$587f5a1605f5b7e0375786cc97054cec52fdb2479cb7392384e5de5dd79572e3$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$587f5a1605f5b7e0375786cc97054cec52fdb2479cb7392384e5de5dd79572e3$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$587f5a1605f5b7e0375786cc97054cec52fdb2479cb7392384e5de5dd79572e3$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda33 -> r.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5c917a8a6ecdd63f680de68aa31f48790ab2df733fb8c84beb017500413d1f4a$0.f$0 -> a
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5c917a8a6ecdd63f680de68aa31f48790ab2df733fb8c84beb017500413d1f4a$0.f$1 -> b
    androidx.media3.common.Player$PositionInfo androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5c917a8a6ecdd63f680de68aa31f48790ab2df733fb8c84beb017500413d1f4a$0.f$2 -> c
    androidx.media3.common.Player$PositionInfo androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5c917a8a6ecdd63f680de68aa31f48790ab2df733fb8c84beb017500413d1f4a$0.f$3 -> d
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5c917a8a6ecdd63f680de68aa31f48790ab2df733fb8c84beb017500413d1f4a$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ILj/d0$e;Lj/d0$e;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5c917a8a6ecdd63f680de68aa31f48790ab2df733fb8c84beb017500413d1f4a$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda34 -> r.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5ca9d3ac53398daf1a1026f14b1210c75f87e5e9f66a56f1b4575a8734d2c2d5$0.f$0 -> a
    androidx.media3.common.Player$Commands androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5ca9d3ac53398daf1a1026f14b1210c75f87e5e9f66a56f1b4575a8734d2c2d5$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5ca9d3ac53398daf1a1026f14b1210c75f87e5e9f66a56f1b4575a8734d2c2d5$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Player$Commands):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/d0$b;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5ca9d3ac53398daf1a1026f14b1210c75f87e5e9f66a56f1b4575a8734d2c2d5$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda35 -> r.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5f6ad746467c97fc96097b2d028148cf238ec1071b526f764d4df6edebe5674a$0.f$0 -> a
    androidx.media3.common.DeviceInfo androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5f6ad746467c97fc96097b2d028148cf238ec1071b526f764d4df6edebe5674a$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5f6ad746467c97fc96097b2d028148cf238ec1071b526f764d4df6edebe5674a$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.DeviceInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/l;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$5f6ad746467c97fc96097b2d028148cf238ec1071b526f764d4df6edebe5674a$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda36 -> r.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$67bf44ab75197314b7a648ff7ade11a98a83c4407e93c13b3066035a3e34f3ec$0.f$0 -> a
    androidx.media3.common.Tracks androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$67bf44ab75197314b7a648ff7ade11a98a83c4407e93c13b3066035a3e34f3ec$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$67bf44ab75197314b7a648ff7ade11a98a83c4407e93c13b3066035a3e34f3ec$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Tracks):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/l0;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$67bf44ab75197314b7a648ff7ade11a98a83c4407e93c13b3066035a3e34f3ec$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda37 -> r.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$6a9961b13ed67affe8e943241f84650e1199b9592907f6d1dac738bd4bf08728$0.f$0 -> a
    java.lang.Exception androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$6a9961b13ed67affe8e943241f84650e1199b9592907f6d1dac738bd4bf08728$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$6a9961b13ed67affe8e943241f84650e1199b9592907f6d1dac738bd4bf08728$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$6a9961b13ed67affe8e943241f84650e1199b9592907f6d1dac738bd4bf08728$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda38 -> r.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$6fe2ec555872be3d0ee9c32d32f897ca06f4f770d54a228a9e61b97bab5cf151$0.f$0 -> a
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$6fe2ec555872be3d0ee9c32d32f897ca06f4f770d54a228a9e61b97bab5cf151$0.f$1 -> b
    boolean androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$6fe2ec555872be3d0ee9c32d32f897ca06f4f770d54a228a9e61b97bab5cf151$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$6fe2ec555872be3d0ee9c32d32f897ca06f4f770d54a228a9e61b97bab5cf151$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IZ)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$6fe2ec555872be3d0ee9c32d32f897ca06f4f770d54a228a9e61b97bab5cf151$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda39 -> r.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$70cf0b4d1915ce6bae256713fe53440c9abc412ef412146c17d865a6412ed870$0.f$0 -> a
    androidx.media3.common.Player androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$70cf0b4d1915ce6bae256713fe53440c9abc412ef412146c17d865a6412ed870$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$70cf0b4d1915ce6bae256713fe53440c9abc412ef412146c17d865a6412ed870$0.<init>(androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector,androidx.media3.common.Player):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/p1;Lj/d0;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$70cf0b4d1915ce6bae256713fe53440c9abc412ef412146c17d865a6412ed870$0.invoke(java.lang.Object,androidx.media3.common.FlagSet):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lj/p;)V"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda4 -> r.v0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$243dce55efff2043247a1191066edfb9c2865bc8a80ab523a90f350d22e33f1a$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$243dce55efff2043247a1191066edfb9c2865bc8a80ab523a90f350d22e33f1a$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$243dce55efff2043247a1191066edfb9c2865bc8a80ab523a90f350d22e33f1a$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda40 -> r.l0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$733aadece9912db0b50d47445058117a37469a4f3497647d9d4343f0b13aab13$0.f$0 -> a
    java.util.List androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$733aadece9912db0b50d47445058117a37469a4f3497647d9d4343f0b13aab13$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$733aadece9912db0b50d47445058117a37469a4f3497647d9d4343f0b13aab13$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/util/List;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$733aadece9912db0b50d47445058117a37469a4f3497647d9d4343f0b13aab13$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda41 -> r.m0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$76b7e9f07fee69b9b0c77df400d63b42141e0f7abf154c141f8c64f09128d8d8$0.f$0 -> a
    java.lang.String androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$76b7e9f07fee69b9b0c77df400d63b42141e0f7abf154c141f8c64f09128d8d8$0.f$1 -> b
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$76b7e9f07fee69b9b0c77df400d63b42141e0f7abf154c141f8c64f09128d8d8$0.f$2 -> c
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$76b7e9f07fee69b9b0c77df400d63b42141e0f7abf154c141f8c64f09128d8d8$0.f$3 -> d
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$76b7e9f07fee69b9b0c77df400d63b42141e0f7abf154c141f8c64f09128d8d8$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;JJ)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$76b7e9f07fee69b9b0c77df400d63b42141e0f7abf154c141f8c64f09128d8d8$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda42 -> r.n0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$87ce23bcdac975750eabc8c079cc47e14901ca68f6cad9de198eab23c7895a43$0.f$0 -> a
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$87ce23bcdac975750eabc8c079cc47e14901ca68f6cad9de198eab23c7895a43$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$87ce23bcdac975750eabc8c079cc47e14901ca68f6cad9de198eab23c7895a43$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$87ce23bcdac975750eabc8c079cc47e14901ca68f6cad9de198eab23c7895a43$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda43 -> r.o0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$89f3cffc84d5190bba8135fd54ce1f7c70252d405c0f39b3946fe9f887feba36$0.f$0 -> a
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$89f3cffc84d5190bba8135fd54ce1f7c70252d405c0f39b3946fe9f887feba36$0.f$1 -> b
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$89f3cffc84d5190bba8135fd54ce1f7c70252d405c0f39b3946fe9f887feba36$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$89f3cffc84d5190bba8135fd54ce1f7c70252d405c0f39b3946fe9f887feba36$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJ)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$89f3cffc84d5190bba8135fd54ce1f7c70252d405c0f39b3946fe9f887feba36$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda44 -> r.p0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$8a2954e70006f33236262657ce098a2f5ea202fa2b3bc420e7bb3c3816a9a473$0.f$0 -> a
    androidx.media3.exoplayer.DecoderCounters androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$8a2954e70006f33236262657ce098a2f5ea202fa2b3bc420e7bb3c3816a9a473$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$8a2954e70006f33236262657ce098a2f5ea202fa2b3bc420e7bb3c3816a9a473$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$8a2954e70006f33236262657ce098a2f5ea202fa2b3bc420e7bb3c3816a9a473$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda45 -> r.q0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$8eaa6a6f9d84ae4eff6be2161eec12f7d924576f25aeadf79556e5ad19d6f4a6$0.f$0 -> a
    androidx.media3.common.PlaybackException androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$8eaa6a6f9d84ae4eff6be2161eec12f7d924576f25aeadf79556e5ad19d6f4a6$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$8eaa6a6f9d84ae4eff6be2161eec12f7d924576f25aeadf79556e5ad19d6f4a6$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackException):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b0;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$8eaa6a6f9d84ae4eff6be2161eec12f7d924576f25aeadf79556e5ad19d6f4a6$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda46 -> r.r0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$902822527be34b00d71a7f8fd1c3b55957603ae81c42b251897164cdaef2cdff$0.f$0 -> a
    androidx.media3.common.Metadata androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$902822527be34b00d71a7f8fd1c3b55957603ae81c42b251897164cdaef2cdff$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$902822527be34b00d71a7f8fd1c3b55957603ae81c42b251897164cdaef2cdff$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Metadata):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/x;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$902822527be34b00d71a7f8fd1c3b55957603ae81c42b251897164cdaef2cdff$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda47 -> r.s0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$90cdde0cd3893bfc77101e34e65e25018aa084edb0d6ffcfea423fe0be1f1307$0.f$0 -> a
    java.lang.String androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$90cdde0cd3893bfc77101e34e65e25018aa084edb0d6ffcfea423fe0be1f1307$0.f$1 -> b
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$90cdde0cd3893bfc77101e34e65e25018aa084edb0d6ffcfea423fe0be1f1307$0.f$2 -> c
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$90cdde0cd3893bfc77101e34e65e25018aa084edb0d6ffcfea423fe0be1f1307$0.f$3 -> d
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$90cdde0cd3893bfc77101e34e65e25018aa084edb0d6ffcfea423fe0be1f1307$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;JJ)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$90cdde0cd3893bfc77101e34e65e25018aa084edb0d6ffcfea423fe0be1f1307$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda48 -> r.t0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$91e75c39d6f99daf3d8d980aced51d0c6fd489374314d7f7ba213efcc5273efc$0.f$0 -> a
    androidx.media3.exoplayer.DecoderCounters androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$91e75c39d6f99daf3d8d980aced51d0c6fd489374314d7f7ba213efcc5273efc$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$91e75c39d6f99daf3d8d980aced51d0c6fd489374314d7f7ba213efcc5273efc$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$91e75c39d6f99daf3d8d980aced51d0c6fd489374314d7f7ba213efcc5273efc$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda49 -> r.u0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$945f00ffc522b35520671a5277b533d48af18b74aed7aa81d2a084a705c3956a$0.f$0 -> a
    androidx.media3.common.text.CueGroup androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$945f00ffc522b35520671a5277b533d48af18b74aed7aa81d2a084a705c3956a$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$945f00ffc522b35520671a5277b533d48af18b74aed7aa81d2a084a705c3956a$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.text.CueGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ll/b;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$945f00ffc522b35520671a5277b533d48af18b74aed7aa81d2a084a705c3956a$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda5 -> r.g1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$4544b01c8a33c0ba98408f9a6da5b0a99883ff56431df1af5b29536a6f799884$0.f$0 -> a
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$4544b01c8a33c0ba98408f9a6da5b0a99883ff56431df1af5b29536a6f799884$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$4544b01c8a33c0ba98408f9a6da5b0a99883ff56431df1af5b29536a6f799884$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$4544b01c8a33c0ba98408f9a6da5b0a99883ff56431df1af5b29536a6f799884$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda50 -> r.w0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$96faba12a1e39b2205583ec6f0e356fe2e8a9e5f794e0cefdd189a50ef06fe5a$0.f$0 -> a
    boolean androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$96faba12a1e39b2205583ec6f0e356fe2e8a9e5f794e0cefdd189a50ef06fe5a$0.f$1 -> b
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$96faba12a1e39b2205583ec6f0e356fe2e8a9e5f794e0cefdd189a50ef06fe5a$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$96faba12a1e39b2205583ec6f0e356fe2e8a9e5f794e0cefdd189a50ef06fe5a$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZI)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$96faba12a1e39b2205583ec6f0e356fe2e8a9e5f794e0cefdd189a50ef06fe5a$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda51 -> r.x0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$9d6598401d05eea35ced8447cbf54c0deec0c1a4254ae7cd9def6944796c7a82$0.f$0 -> a
    boolean androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$9d6598401d05eea35ced8447cbf54c0deec0c1a4254ae7cd9def6944796c7a82$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$9d6598401d05eea35ced8447cbf54c0deec0c1a4254ae7cd9def6944796c7a82$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Z)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$9d6598401d05eea35ced8447cbf54c0deec0c1a4254ae7cd9def6944796c7a82$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda52 -> r.y0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$a7c2c6583e1980c26b7ee446ffe9eb5f110e2232e8c5db2e06da0df58656b8a2$0.f$0 -> a
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$a7c2c6583e1980c26b7ee446ffe9eb5f110e2232e8c5db2e06da0df58656b8a2$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$a7c2c6583e1980c26b7ee446ffe9eb5f110e2232e8c5db2e06da0df58656b8a2$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$a7c2c6583e1980c26b7ee446ffe9eb5f110e2232e8c5db2e06da0df58656b8a2$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda53 -> r.z0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$a9613f82edd1e117618ecb43496869d3c14386858ee7589d04859a1896824e9b$0.f$0 -> a
    androidx.media3.common.MediaItem androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$a9613f82edd1e117618ecb43496869d3c14386858ee7589d04859a1896824e9b$0.f$1 -> b
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$a9613f82edd1e117618ecb43496869d3c14386858ee7589d04859a1896824e9b$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$a9613f82edd1e117618ecb43496869d3c14386858ee7589d04859a1896824e9b$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaItem,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/u;I)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$a9613f82edd1e117618ecb43496869d3c14386858ee7589d04859a1896824e9b$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda54 -> r.a1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$bab896be443d580bfd872566acaa78c55aa3714034c69ea7dcba4b48bdc6429a$0.f$0 -> a
    androidx.media3.common.PlaybackException androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$bab896be443d580bfd872566acaa78c55aa3714034c69ea7dcba4b48bdc6429a$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$bab896be443d580bfd872566acaa78c55aa3714034c69ea7dcba4b48bdc6429a$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackException):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b0;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$bab896be443d580bfd872566acaa78c55aa3714034c69ea7dcba4b48bdc6429a$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda55 -> r.b1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$bd2d185ab4f2a5a191f6e9a61a176940a71fa5b9f625ba02275067782c345131$0.f$0 -> a
    androidx.media3.common.MediaMetadata androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$bd2d185ab4f2a5a191f6e9a61a176940a71fa5b9f625ba02275067782c345131$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$bd2d185ab4f2a5a191f6e9a61a176940a71fa5b9f625ba02275067782c345131$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaMetadata):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/w;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$bd2d185ab4f2a5a191f6e9a61a176940a71fa5b9f625ba02275067782c345131$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda56 -> r.c1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$c8e0e674ea05d269d910850f7333bac4466055001ceb9f67074b04075c486604$0.f$0 -> a
    androidx.media3.common.Format androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$c8e0e674ea05d269d910850f7333bac4466055001ceb9f67074b04075c486604$0.f$1 -> b
    androidx.media3.exoplayer.DecoderReuseEvaluation androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$c8e0e674ea05d269d910850f7333bac4466055001ceb9f67074b04075c486604$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$c8e0e674ea05d269d910850f7333bac4466055001ceb9f67074b04075c486604$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/q;Lq/p;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$c8e0e674ea05d269d910850f7333bac4466055001ceb9f67074b04075c486604$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda57 -> r.d1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$db6b673c8149e8e1414aec7cd3d6ceffd81b98fba657db3412b15b30da17467c$0.f$0 -> a
    androidx.media3.exoplayer.DecoderCounters androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$db6b673c8149e8e1414aec7cd3d6ceffd81b98fba657db3412b15b30da17467c$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$db6b673c8149e8e1414aec7cd3d6ceffd81b98fba657db3412b15b30da17467c$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$db6b673c8149e8e1414aec7cd3d6ceffd81b98fba657db3412b15b30da17467c$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda58 -> r.e1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$dd5c8b312360405661bf19ac40d25e3ef93174039d881ad3fc0697cce40d7666$0.f$0 -> a
    androidx.media3.common.AudioAttributes androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$dd5c8b312360405661bf19ac40d25e3ef93174039d881ad3fc0697cce40d7666$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$dd5c8b312360405661bf19ac40d25e3ef93174039d881ad3fc0697cce40d7666$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.AudioAttributes):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$dd5c8b312360405661bf19ac40d25e3ef93174039d881ad3fc0697cce40d7666$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda59 -> r.f1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$e2524620f39dacf366a76ca3d49b7fba8c739a32157df6cb1ed0da228aab41b5$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$e2524620f39dacf366a76ca3d49b7fba8c739a32157df6cb1ed0da228aab41b5$0.<init>(androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/p1;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$e2524620f39dacf366a76ca3d49b7fba8c739a32157df6cb1ed0da228aab41b5$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda6 -> r.l1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$4c9a96ab0f24e8faa14a53f5ed2b9b40b2b9dc5baa8a8ab54b8b15e57eb180af$0.f$0 -> a
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$4c9a96ab0f24e8faa14a53f5ed2b9b40b2b9dc5baa8a8ab54b8b15e57eb180af$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$4c9a96ab0f24e8faa14a53f5ed2b9b40b2b9dc5baa8a8ab54b8b15e57eb180af$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$4c9a96ab0f24e8faa14a53f5ed2b9b40b2b9dc5baa8a8ab54b8b15e57eb180af$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda60 -> r.h1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$e5b46fc8502828f7bca35a5258fb67a31d6409db0402528e9e6d6e23eac89ea2$0.f$0 -> a
    long androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$e5b46fc8502828f7bca35a5258fb67a31d6409db0402528e9e6d6e23eac89ea2$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$e5b46fc8502828f7bca35a5258fb67a31d6409db0402528e9e6d6e23eac89ea2$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;J)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$e5b46fc8502828f7bca35a5258fb67a31d6409db0402528e9e6d6e23eac89ea2$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda61 -> r.i1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$eac856341381e2bef6269ba81aac30e369df1e3642ca1d21e5fd68747185b4dc$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$eac856341381e2bef6269ba81aac30e369df1e3642ca1d21e5fd68747185b4dc$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$eac856341381e2bef6269ba81aac30e369df1e3642ca1d21e5fd68747185b4dc$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda62 -> r.j1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$f07ccdc9b7fe86f03e28046a148ded5208bb2068fd72ae577684b0883951adf4$0.f$0 -> a
    androidx.media3.exoplayer.DecoderCounters androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$f07ccdc9b7fe86f03e28046a148ded5208bb2068fd72ae577684b0883951adf4$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$f07ccdc9b7fe86f03e28046a148ded5208bb2068fd72ae577684b0883951adf4$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$f07ccdc9b7fe86f03e28046a148ded5208bb2068fd72ae577684b0883951adf4$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda63 -> r.k1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$fc6053651649e5d5ba739e18d7cddabaa8a5bbca4f990118c9eccd90273bbe55$0.f$0 -> a
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$fc6053651649e5d5ba739e18d7cddabaa8a5bbca4f990118c9eccd90273bbe55$0.f$1 -> b
    int androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$fc6053651649e5d5ba739e18d7cddabaa8a5bbca4f990118c9eccd90273bbe55$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$fc6053651649e5d5ba739e18d7cddabaa8a5bbca4f990118c9eccd90273bbe55$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;II)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$9$fc6053651649e5d5ba739e18d7cddabaa8a5bbca4f990118c9eccd90273bbe55$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda7 -> r.m1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$809ff57a665757b3bc746b598f3fc453622b5aebe523ee423833c7c45d8d089e$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$809ff57a665757b3bc746b598f3fc453622b5aebe523ee423833c7c45d8d089e$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$809ff57a665757b3bc746b598f3fc453622b5aebe523ee423833c7c45d8d089e$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda8 -> r.n1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$8aa5bad0c16084c33d78a80eab9b8fff3c0e248389bb942420b6303551e47414$0.f$0 -> a
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$8aa5bad0c16084c33d78a80eab9b8fff3c0e248389bb942420b6303551e47414$0.f$1 -> b
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$8aa5bad0c16084c33d78a80eab9b8fff3c0e248389bb942420b6303551e47414$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$8aa5bad0c16084c33d78a80eab9b8fff3c0e248389bb942420b6303551e47414$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$8aa5bad0c16084c33d78a80eab9b8fff3c0e248389bb942420b6303551e47414$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$ExternalSyntheticLambda9 -> r.o1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$b83d853a6403a60f76cf43767c42cd13ff75cec803e538bbe43a7251e9d9173b$0.f$0 -> a
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$b83d853a6403a60f76cf43767c42cd13ff75cec803e538bbe43a7251e9d9173b$0.f$1 -> b
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$b83d853a6403a60f76cf43767c42cd13ff75cec803e538bbe43a7251e9d9173b$0.f$2 -> c
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$b83d853a6403a60f76cf43767c42cd13ff75cec803e538bbe43a7251e9d9173b$0.<init>(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$$InternalSyntheticLambda$10$b83d853a6403a60f76cf43767c42cd13ff75cec803e538bbe43a7251e9d9173b$0.invoke(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$MediaPeriodQueueTracker -> r.p1$a:
    androidx.media3.common.Timeline$Period period -> a
    com.google.common.collect.ImmutableList mediaPeriodQueue -> b
    com.google.common.collect.ImmutableMap mediaPeriodTimelines -> c
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId currentPlayerMediaPeriod -> d
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId playingMediaPeriod -> e
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId readingMediaPeriod -> f
    1:1:void <init>(androidx.media3.common.Timeline$Period):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0$b;)V"}
    1:1:com.google.common.collect.ImmutableList access$000(androidx.media3.exoplayer.analytics.DefaultAnalyticsCollector$MediaPeriodQueueTracker):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/p1$a;)Ll2/v;"}
    1:1:void addTimelineForMediaPeriodId(com.google.common.collect.ImmutableMap$Builder,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/x$a;Lg0/f0$b;Lj/i0;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId findCurrentPlayerMediaPeriodInQueue(androidx.media3.common.Player,com.google.common.collect.ImmutableList,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline$Period):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Ll2/v;Lg0/f0$b;Lj/i0$b;)Lg0/f0$b;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getCurrentPlayerMediaPeriod():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/f0$b;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getLoadingMediaPeriod():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/f0$b;"}
    1:1:androidx.media3.common.Timeline getMediaPeriodIdTimeline(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;)Lj/i0;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getPlayingMediaPeriod():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/f0$b;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getReadingMediaPeriod():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/f0$b;"}
    1:1:boolean isMatchingMediaPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,java.lang.Object,boolean,int,int,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Ljava/lang/Object;ZIII)Z"}
    1:1:void onPositionDiscontinuity(androidx.media3.common.Player):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;)V"}
    1:1:void onQueueUpdated(java.util.List,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Player):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lg0/f0$b;Lj/d0;)V"}
    1:1:void onTimelineChanged(androidx.media3.common.Player):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;)V"}
    1:1:void updateMediaPeriodTimelines(androidx.media3.common.Timeline):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager -> r.r1:
    androidx.media3.common.Timeline$Window window -> a
    androidx.media3.common.Timeline$Period period -> b
    java.util.HashMap sessions -> c
    com.google.common.base.Supplier sessionIdGenerator -> d
    androidx.media3.exoplayer.analytics.PlaybackSessionManager$Listener listener -> e
    androidx.media3.common.Timeline currentTimeline -> f
    java.lang.String currentSessionId -> g
    long lastRemovedCurrentWindowSequenceNumber -> h
    com.google.common.base.Supplier DEFAULT_SESSION_ID_GENERATOR -> i
    java.util.Random RANDOM -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(com.google.common.base.Supplier):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/r;)V"}
    1:1:java.lang.String getSessionForMediaPeriodId(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lg0/f0$b;)Ljava/lang/String;"}
    1:1:void setListener(androidx.media3.exoplayer.analytics.PlaybackSessionManager$Listener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/v3$a;)V"}
    1:1:java.lang.String getActiveSessionId():0:0 -> c
    1:1:void updateSessionsWithDiscontinuity(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:void updateSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void finishAllSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void updateSessionsWithTimelineChange(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:java.lang.String $r8$lambda$HYfPMFDnWG-Gleyzin0hfhOaabA():0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:long access$600(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1;)J"}
    1:1:androidx.media3.common.Timeline$Window access$700(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1;)Lj/i0$c;"}
    1:1:androidx.media3.common.Timeline$Period access$800(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1;)Lj/i0$b;"}
    1:1:void clearCurrentSession(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$SessionDescriptor):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1$a;)V"}
    1:1:java.lang.String generateDefaultSessionId():0:0 -> m
    1:1:long getMinWindowSequenceNumber():0:0 -> n
    1:1:androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$SessionDescriptor getOrAddSession(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)Lr/r1$a;"}
    1:1:void updateCurrentSession(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$$ExternalSyntheticLambda0 -> r.q1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$$InternalSyntheticLambda$10$d7ec9f9c8b5dedfdbe3a5bc9645c5ae6424bb1d62c0bcdc68588d9b6482ef5cb$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$$InternalSyntheticLambda$10$d7ec9f9c8b5dedfdbe3a5bc9645c5ae6424bb1d62c0bcdc68588d9b6482ef5cb$0.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$SessionDescriptor -> r.r1$a:
    java.lang.String sessionId -> a
    int windowIndex -> b
    long windowSequenceNumber -> c
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId adMediaPeriodId -> d
    boolean isCreated -> e
    boolean isActive -> f
    androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager this$0 -> g
    1:1:void <init>(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager,java.lang.String,int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1;Ljava/lang/String;ILg0/f0$b;)V"}
    1:1:java.lang.String access$000(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$SessionDescriptor):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1$a;)Ljava/lang/String;"}
    1:1:long access$100(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$SessionDescriptor):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1$a;)J"}
    1:1:int access$200(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$SessionDescriptor):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1$a;)I"}
    1:1:boolean access$300(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$SessionDescriptor):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1$a;)Z"}
    1:1:boolean access$302(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$SessionDescriptor,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1$a;Z)Z"}
    1:1:boolean access$400(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$SessionDescriptor):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1$a;)Z"}
    1:1:boolean access$402(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$SessionDescriptor,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1$a;Z)Z"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId access$500(androidx.media3.exoplayer.analytics.DefaultPlaybackSessionManager$SessionDescriptor):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/r1$a;)Lg0/f0$b;"}
    1:1:boolean belongsToSession(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)Z"}
    1:1:boolean isFinishedAtEventTime(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)Z"}
    1:1:void maybeSetWindowSequenceNumber(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:int resolveWindowIndexToNewTimeline(androidx.media3.common.Timeline,androidx.media3.common.Timeline,int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lj/i0;I)I"}
    1:1:boolean tryResolvingToNewTimeline(androidx.media3.common.Timeline,androidx.media3.common.Timeline):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lj/i0;)Z"}
androidx.media3.exoplayer.analytics.MediaMetricsListener -> r.u3:
    boolean reportedEventsForCurrentSession -> A
    android.content.Context context -> a
    androidx.media3.exoplayer.analytics.PlaybackSessionManager sessionManager -> b
    android.media.metrics.PlaybackSession playbackSession -> c
    long startTimeMs -> d
    androidx.media3.common.Timeline$Window window -> e
    androidx.media3.common.Timeline$Period period -> f
    java.util.HashMap bandwidthTimeMs -> g
    java.util.HashMap bandwidthBytes -> h
    java.lang.String activeSessionId -> i
    android.media.metrics.PlaybackMetrics$Builder metricsBuilder -> j
    int discontinuityReason -> k
    int currentPlaybackState -> l
    int currentNetworkType -> m
    androidx.media3.common.PlaybackException pendingPlayerError -> n
    androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingVideoFormat -> o
    androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingAudioFormat -> p
    androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate pendingTextFormat -> q
    androidx.media3.common.Format currentVideoFormat -> r
    androidx.media3.common.Format currentAudioFormat -> s
    androidx.media3.common.Format currentTextFormat -> t
    boolean isSeeking -> u
    int ioErrorType -> v
    boolean hasFatalError -> w
    int droppedFrames -> x
    int playedFrames -> y
    int audioUnderruns -> z
    1:1:void <init>(android.content.Context,android.media.metrics.PlaybackSession):0:0 -> <init>
    1:1:void onCues(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.util.List):0:0 -> A
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/util/List;)V"}
    1:1:androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo getErrorInfo(androidx.media3.common.PlaybackException,android.content.Context,boolean):0:0 -> A0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b0;Landroid/content/Context;Z)Lr/u3$a;"}
    1:1:void onPlayWhenReadyChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int):0:0 -> B
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZI)V"}
    1:1:android.util.Pair getLanguageAndRegion(java.lang.String):0:0 -> B0
    1:1:void onIsLoadingChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean):0:0 -> C
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Z)V"}
    1:1:android.media.metrics.LogSessionId getLogSessionId():0:0 -> C0
    1:1:void onDrmKeysRestored(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> D
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:int getNetworkType(android.content.Context):0:0 -> D0
    1:1:void onAudioTrackReleased(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> E
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ls/b0$a;)V"}
    1:1:int getStreamType(androidx.media3.common.MediaItem):0:0 -> E0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)I"}
    1:1:void onAudioDecoderReleased(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String):0:0 -> F
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;)V"}
    1:1:int getTrackChangeReason(int):0:0 -> F0
    1:1:void onCues(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.text.CueGroup):0:0 -> G
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ll/b;)V"}
    1:1:void maybeAddSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$Events):0:0 -> G0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$b;)V"}
    1:1:void onMetadata(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Metadata):0:0 -> H
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/x;)V"}
    1:1:void maybeReportNetworkChange(long):0:0 -> H0
    1:1:void onMediaMetadataChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaMetadata):0:0 -> I
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/w;)V"}
    1:1:void maybeReportPlaybackError(long):0:0 -> I0
    1:1:void onLoadCanceled(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> J
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;)V"}
    1:1:void maybeReportPlaybackStateChange(androidx.media3.common.Player,androidx.media3.exoplayer.analytics.AnalyticsListener$Events,long):0:0 -> J0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Lr/c$b;J)V"}
    1:1:void onDroppedVideoFrames(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long):0:0 -> K
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJ)V"}
    1:1:void maybeReportTrackChanges(androidx.media3.common.Player,androidx.media3.exoplayer.analytics.AnalyticsListener$Events,long):0:0 -> K0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Lr/c$b;J)V"}
    1:1:void onVideoSizeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.VideoSize):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/p0;)V"}
    1:1:void maybeUpdateAudioFormat(long,androidx.media3.common.Format,int):0:0 -> L0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLj/q;I)V"}
    1:1:void onPlaybackParametersChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackParameters):0:0 -> M
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/c0;)V"}
    1:1:void maybeUpdateMetricsBuilderValues(androidx.media3.common.Player,androidx.media3.exoplayer.analytics.AnalyticsListener$Events):0:0 -> M0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Lr/c$b;)V"}
    1:1:void onPositionDiscontinuity(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> N
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:void maybeUpdateTextFormat(long,androidx.media3.common.Format,int):0:0 -> N0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLj/q;I)V"}
    1:1:void onDrmKeysLoaded(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> O
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void maybeUpdateTimelineMetadata(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> O0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lg0/f0$b;)V"}
    1:1:void onPlaybackStateChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> P
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:void maybeUpdateVideoFormat(long,androidx.media3.common.Format,int):0:0 -> P0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLj/q;I)V"}
    1:1:void onLoadError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    1:1:void reportTrackChangeEvent(int,long,androidx.media3.common.Format,int):0:0 -> Q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJLj/q;I)V"}
    1:1:void onVideoCodecError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> R
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:int resolveNewPlaybackState(androidx.media3.common.Player):0:0 -> R0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;)I"}
    1:1:void onLoadingChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean):0:0 -> S
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Z)V"}
    1:1:void onDeviceVolumeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,boolean):0:0 -> T
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IZ)V"}
    1:1:void onEvents(androidx.media3.common.Player,androidx.media3.exoplayer.analytics.AnalyticsListener$Events):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Lr/c$b;)V"}
    1:1:void onDeviceInfoChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.DeviceInfo):0:0 -> V
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/l;)V"}
    1:1:void onTimelineChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> W
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:void onPlayerError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackException):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b0;)V"}
    1:1:void onAudioTrackInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> Y
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ls/b0$a;)V"}
    1:1:void onPlaybackSuppressionReasonChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> Z
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:void onVideoDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;JJ)V"}
    1:1:void onTracksChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Tracks):0:0 -> a0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/l0;)V"}
    1:1:void onRenderedFirstFrame(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Object,long):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Object;J)V"}
    1:1:void onAvailableCommandsChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Player$Commands):0:0 -> b0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/d0$b;)V"}
    1:1:void onDownstreamFormatChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/b0;)V"}
    1:1:void onDrmSessionManagerError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> c0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:void onVideoInputFormatChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/q;Lq/p;)V"}
    1:1:void onSurfaceSizeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,int):0:0 -> d0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;II)V"}
    1:1:void onAudioDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;J)V"}
    1:1:void onPlayerErrorChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.PlaybackException):0:0 -> e0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b0;)V"}
    1:1:void onAudioAttributesChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.AudioAttributes):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/b;)V"}
    1:1:void onSessionFinished(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,boolean):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;Z)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;)V"}
    1:1:void onVolumeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,float):0:0 -> g0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;F)V"}
    1:1:void onRepeatModeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:void onPlayerReleased(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> h0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void onVideoEnabled(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    1:1:void onAudioDisabled(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters):0:0 -> i0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    1:1:void onAudioCodecError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:void onVideoDisabled(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    1:1:void onVideoDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;J)V"}
    1:1:void onMediaItemTransition(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.MediaItem,int):0:0 -> k0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/u;I)V"}
    1:1:void onBandwidthEstimate(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,long):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJJ)V"}
    1:1:void onDrmSessionReleased(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> l0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void onIsPlayingChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Z)V"}
    1:1:void onAudioUnderrun(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,long,long):0:0 -> m0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IJJ)V"}
    1:1:void onVideoSizeChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int,int,int,float):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;IIIF)V"}
    1:1:void onAudioPositionAdvancing(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long):0:0 -> n0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;J)V"}
    1:1:void onDrmSessionAcquired(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void onLoadStarted(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> o0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/y;Lg0/b0;)V"}
    1:1:void onVideoFrameProcessingOffset(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,long,int):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;JI)V"}
    1:1:void onAudioEnabled(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.DecoderCounters):0:0 -> p0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lq/o;)V"}
    1:1:void onSessionCreated(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;)V"}
    1:1:void onSeekStarted(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> q0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:void onAudioSinkError(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.Exception):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/Exception;)V"}
    1:1:void onUpstreamDiscarded(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> r0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lg0/b0;)V"}
    1:1:void onAudioInputFormatChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/q;Lq/p;)V"}
    1:1:void onAdPlaybackStarted(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,java.lang.String):0:0 -> s0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:void onSkipSilenceEnabledChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Z)V"}
    1:1:void onPositionDiscontinuity(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int):0:0 -> t0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Lj/d0$e;Lj/d0$e;I)V"}
    1:1:void onAudioDecoderInitialized(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,long,long):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;JJ)V"}
    1:1:boolean canReportPendingFormatUpdate(androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/u3$b;)Z"}
    1:1:void onSessionActive(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;)V"}
    1:1:androidx.media3.exoplayer.analytics.MediaMetricsListener create(android.content.Context):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lr/u3;"}
    1:1:void onPlayerStateChanged(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,boolean,int):0:0 -> w
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;ZI)V"}
    1:1:void finishCurrentSession():0:0 -> w0
    1:1:void onVideoDecoderReleased(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String):0:0 -> x
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;)V"}
    1:1:int getDrmErrorCode(int):0:0 -> x0
    1:1:void onDrmKeysRemoved(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime):0:0 -> y
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    1:1:androidx.media3.common.DrmInitData getDrmInitData(com.google.common.collect.ImmutableList):0:0 -> y0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/v;)Lj/m;"}
    1:1:void onDrmSessionAcquired(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int):0:0 -> z
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    1:1:int getDrmType(androidx.media3.common.DrmInitData):0:0 -> z0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/m;)I"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline0 -> r.s1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackErrorEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$00c1ef3395ef868eaad79c5d8afa8b1846f7811cfdb17fb38a573680f86964bf$0.m(android.media.metrics.PlaybackErrorEvent$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline1 -> r.d2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackErrorEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$00c1ef3395ef868eaad79c5d8afa8b1846f7811cfdb17fb38a573680f86964bf$1.m(android.media.metrics.PlaybackErrorEvent$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline10 -> r.t1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$13.m(android.media.metrics.TrackChangeEvent$Builder,float):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline11 -> r.u1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$14.m(android.media.metrics.TrackChangeEvent$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline12 -> r.v1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$15.m(android.media.metrics.TrackChangeEvent$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline13 -> r.w1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$16.m(android.media.metrics.PlaybackSession,android.media.metrics.TrackChangeEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline14 -> r.x1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$2.m(android.media.metrics.TrackChangeEvent$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline15 -> r.y1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$3.m(android.media.metrics.TrackChangeEvent$Builder,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline16 -> r.z1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$4.m(android.media.metrics.TrackChangeEvent$Builder,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline17 -> r.a2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$5.m(android.media.metrics.TrackChangeEvent$Builder,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline18 -> r.b2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$6.m(android.media.metrics.TrackChangeEvent$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline19 -> r.c2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$7.m(android.media.metrics.TrackChangeEvent$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline2 -> r.o2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackErrorEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$00c1ef3395ef868eaad79c5d8afa8b1846f7811cfdb17fb38a573680f86964bf$2.m(android.media.metrics.PlaybackErrorEvent$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline20 -> r.e2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$8.m(android.media.metrics.TrackChangeEvent$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline21 -> r.f2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$9.m(android.media.metrics.TrackChangeEvent$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline22 -> r.g2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$1dc84e327b6c08ab15efc98d702eeab9583c324099e3cac5e2d90cae794150b5$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline23 -> r.h2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$1dc84e327b6c08ab15efc98d702eeab9583c324099e3cac5e2d90cae794150b5$1.m(android.media.metrics.PlaybackMetrics$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline24 -> r.i2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$40bcfff5d6fe3f2aa101ba37e5f4d3b0d9c3052bfb6be3efab1e00e220a94113$0.m(android.media.metrics.PlaybackMetrics$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline25 -> r.j2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$40bcfff5d6fe3f2aa101ba37e5f4d3b0d9c3052bfb6be3efab1e00e220a94113$1.m(android.media.metrics.PlaybackMetrics$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline26 -> r.k2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$40bcfff5d6fe3f2aa101ba37e5f4d3b0d9c3052bfb6be3efab1e00e220a94113$2.m(android.media.metrics.PlaybackMetrics$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline27 -> r.l2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$40bcfff5d6fe3f2aa101ba37e5f4d3b0d9c3052bfb6be3efab1e00e220a94113$3.m(android.media.metrics.PlaybackMetrics$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline28 -> r.m2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$40bcfff5d6fe3f2aa101ba37e5f4d3b0d9c3052bfb6be3efab1e00e220a94113$4.m(android.media.metrics.PlaybackMetrics$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline29 -> r.n2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$40bcfff5d6fe3f2aa101ba37e5f4d3b0d9c3052bfb6be3efab1e00e220a94113$5.m(android.media.metrics.PlaybackMetrics$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline3 -> r.z2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackErrorEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$00c1ef3395ef868eaad79c5d8afa8b1846f7811cfdb17fb38a573680f86964bf$3.m(android.media.metrics.PlaybackErrorEvent$Builder,java.lang.Exception):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline30 -> r.p2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$40bcfff5d6fe3f2aa101ba37e5f4d3b0d9c3052bfb6be3efab1e00e220a94113$6.m(android.media.metrics.PlaybackMetrics$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline31 -> r.q2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$40bcfff5d6fe3f2aa101ba37e5f4d3b0d9c3052bfb6be3efab1e00e220a94113$7.m(android.media.metrics.PlaybackSession,android.media.metrics.PlaybackMetrics):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline32 -> r.r2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$a09426446f84bb1f8e594b69e148865775f600cd579c1630f33ba7e56f94487c$0.m(android.media.metrics.PlaybackMetrics$Builder,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline33 -> r.s2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$a09426446f84bb1f8e594b69e148865775f600cd579c1630f33ba7e56f94487c$1.m(android.media.metrics.PlaybackMetrics$Builder,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline34 -> r.t2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackStateEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$b376420186d036abefe024a931c9bb04bfa0dc79dd7cb2e3d4812a9461383241$0.m(android.media.metrics.PlaybackStateEvent$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline35 -> r.u2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackStateEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$b376420186d036abefe024a931c9bb04bfa0dc79dd7cb2e3d4812a9461383241$1.m(android.media.metrics.PlaybackStateEvent$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline36 -> r.v2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackStateEvent androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$b376420186d036abefe024a931c9bb04bfa0dc79dd7cb2e3d4812a9461383241$2.m(android.media.metrics.PlaybackStateEvent$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline37 -> r.w2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$b376420186d036abefe024a931c9bb04bfa0dc79dd7cb2e3d4812a9461383241$3.m(android.media.metrics.PlaybackSession,android.media.metrics.PlaybackStateEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline38 -> r.x2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.NetworkEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$e7caeffd7edc0b2998e274845ffbd2f7c61fead6c77a72d6f659eaa9dd9b7a2b$0.m(android.media.metrics.NetworkEvent$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline39 -> r.y2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.NetworkEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$e7caeffd7edc0b2998e274845ffbd2f7c61fead6c77a72d6f659eaa9dd9b7a2b$1.m(android.media.metrics.NetworkEvent$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline4 -> r.k3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackErrorEvent androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$00c1ef3395ef868eaad79c5d8afa8b1846f7811cfdb17fb38a573680f86964bf$4.m(android.media.metrics.PlaybackErrorEvent$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline40 -> r.a3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.NetworkEvent androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$e7caeffd7edc0b2998e274845ffbd2f7c61fead6c77a72d6f659eaa9dd9b7a2b$2.m(android.media.metrics.NetworkEvent$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline41 -> r.b3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$e7caeffd7edc0b2998e274845ffbd2f7c61fead6c77a72d6f659eaa9dd9b7a2b$3.m(android.media.metrics.PlaybackSession,android.media.metrics.NetworkEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline42 -> r.c3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.LogSessionId androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$f6ad1dfd6e66dedc1c7289626a9eacb64947dd8378ef3036f0bb15b1fbe490c5$0.m(android.media.metrics.PlaybackSession):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline43 -> r.d3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$11$1fb8b6eea7b570045ce9ed423bc8fc6e1458164ed3ce67b6a02028466fdfac12$0.m(android.media.metrics.PlaybackMetrics$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline44 -> r.e3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$11$1fb8b6eea7b570045ce9ed423bc8fc6e1458164ed3ce67b6a02028466fdfac12$1.m(android.media.metrics.PlaybackMetrics$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline45 -> r.f3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$11$1fb8b6eea7b570045ce9ed423bc8fc6e1458164ed3ce67b6a02028466fdfac12$2.m(android.media.metrics.PlaybackMetrics$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline46 -> r.g3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$11$9a282a7dcdc594ea61c1b47e672aaf575960d55f6418f545c4d7377ff7ca89ea$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline47 -> r.h3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackErrorEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$15$00c1ef3395ef868eaad79c5d8afa8b1846f7811cfdb17fb38a573680f86964bf$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline48 -> r.i3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$15$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$0.m(int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline49 -> r.j3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackMetrics$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$15$a09426446f84bb1f8e594b69e148865775f600cd579c1630f33ba7e56f94487c$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline5 -> r.p3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$00c1ef3395ef868eaad79c5d8afa8b1846f7811cfdb17fb38a573680f86964bf$5.m(android.media.metrics.PlaybackSession,android.media.metrics.PlaybackErrorEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline50 -> r.l3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackStateEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$15$b376420186d036abefe024a931c9bb04bfa0dc79dd7cb2e3d4812a9461383241$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline51 -> r.m3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.NetworkEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$15$e7caeffd7edc0b2998e274845ffbd2f7c61fead6c77a72d6f659eaa9dd9b7a2b$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline52 -> r.n3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.MediaMetricsManager androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$9$f5cb3410f186b17a4eaeaa4e4718c77ff8b7e5be8eb1ac3f541a2cf14962f103$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline53 -> r.o3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.PlaybackSession androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$9$f5cb3410f186b17a4eaeaa4e4718c77ff8b7e5be8eb1ac3f541a2cf14962f103$1.m(android.media.metrics.MediaMetricsManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline6 -> r.q3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$0.m(android.media.metrics.TrackChangeEvent$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline7 -> r.r3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$10.m(android.media.metrics.TrackChangeEvent$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline8 -> r.s3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$11.m(android.media.metrics.TrackChangeEvent$Builder,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$$ExternalSyntheticApiModelOutline9 -> r.t3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.metrics.TrackChangeEvent$Builder androidx.media3.exoplayer.analytics.MediaMetricsListener$$InternalSyntheticApiModelOutline$10$12053e9bce64ba793146877c6a7c56b181d37cb40223ce27caa0b9b414883434$12.m(android.media.metrics.TrackChangeEvent$Builder,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.analytics.MediaMetricsListener$ErrorInfo -> r.u3$a:
    int errorCode -> a
    int subErrorCode -> b
    1:1:void <init>(int,int):0:0 -> <init>
androidx.media3.exoplayer.analytics.MediaMetricsListener$PendingFormatUpdate -> r.u3$b:
    androidx.media3.common.Format format -> a
    int selectionReason -> b
    java.lang.String sessionId -> c
    1:1:void <init>(androidx.media3.common.Format,int,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;ILjava/lang/String;)V"}
androidx.media3.exoplayer.analytics.PlaybackSessionManager -> r.v3:
    java.lang.String getSessionForMediaPeriodId(androidx.media3.common.Timeline,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lg0/f0$b;)Ljava/lang/String;"}
    void setListener(androidx.media3.exoplayer.analytics.PlaybackSessionManager$Listener) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/v3$a;)V"}
    java.lang.String getActiveSessionId() -> c
    void updateSessionsWithDiscontinuity(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;I)V"}
    void updateSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    void finishAllSessions(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
    void updateSessionsWithTimelineChange(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;)V"}
androidx.media3.exoplayer.analytics.PlaybackSessionManager$Listener -> r.v3$a:
    void onSessionFinished(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,boolean) -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;Z)V"}
    void onSessionCreated(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String) -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;)V"}
    void onAdPlaybackStarted(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String,java.lang.String) -> s0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;Ljava/lang/String;)V"}
    void onSessionActive(androidx.media3.exoplayer.analytics.AnalyticsListener$EventTime,java.lang.String) -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/c$a;Ljava/lang/String;)V"}
androidx.media3.exoplayer.analytics.PlayerId -> r.w3:
    java.lang.String name -> a
    androidx.media3.exoplayer.analytics.PlayerId$LogSessionIdApi31 logSessionIdApi31 -> b
    java.lang.Object equalityToken -> c
    androidx.media3.exoplayer.analytics.PlayerId UNSET -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.media.metrics.LogSessionId,java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String):0:0 -> <init>
    3:3:void <init>(androidx.media3.exoplayer.analytics.PlayerId$LogSessionIdApi31,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3$a;Ljava/lang/String;)V"}
    1:1:android.media.metrics.LogSessionId getLogSessionId():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.analytics.PlayerId$LogSessionIdApi31 -> r.w3$a:
    android.media.metrics.LogSessionId logSessionId -> a
    androidx.media3.exoplayer.analytics.PlayerId$LogSessionIdApi31 UNSET -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.media.metrics.LogSessionId):0:0 -> <init>
androidx.media3.exoplayer.audio.AudioCapabilities -> s.e:
    android.util.SparseArray encodingToAudioProfile -> a
    int maxChannelCount -> b
    androidx.media3.exoplayer.audio.AudioCapabilities DEFAULT_AUDIO_CAPABILITIES -> c
    com.google.common.collect.ImmutableList EXTERNAL_SURROUND_SOUND_ENCODINGS -> d
    com.google.common.collect.ImmutableMap ALL_SURROUND_ENCODINGS_AND_MAX_CHANNELS -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.List):0:0 -> <init>
    2:2:void <init>(java.util.List,androidx.media3.exoplayer.audio.AudioCapabilities$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ls/e$a;)V"}
    1:1:com.google.common.collect.ImmutableList access$000(java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Ll2/v;"}
    1:1:boolean deviceMaySetExternalSurroundSoundGlobalSetting():0:0 -> b
    1:1:com.google.common.collect.ImmutableList getAudioProfiles(java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Ll2/v;"}
    1:1:com.google.common.collect.ImmutableList getAudioProfiles(int[],int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"([II)Ll2/v;"}
    1:1:androidx.media3.exoplayer.audio.AudioCapabilities getCapabilities(android.content.Context,androidx.media3.common.AudioAttributes,android.media.AudioDeviceInfo):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj/b;Landroid/media/AudioDeviceInfo;)Ls/e;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:androidx.media3.exoplayer.audio.AudioCapabilities getCapabilitiesInternal(android.content.Context,android.content.Intent,androidx.media3.common.AudioAttributes,androidx.media3.exoplayer.audio.AudioDeviceInfoApi23):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/content/Intent;Lj/b;Ls/l;)Ls/e;"}
    1:1:androidx.media3.exoplayer.audio.AudioCapabilities getCapabilitiesInternal(android.content.Context,androidx.media3.common.AudioAttributes,androidx.media3.exoplayer.audio.AudioDeviceInfoApi23):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj/b;Ls/l;)Ls/e;"}
    1:1:int getChannelConfigForPassthrough(int):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:android.util.Pair getEncodingAndChannelConfigForPassthrough(androidx.media3.common.Format,androidx.media3.common.AudioAttributes):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lj/b;)Landroid/util/Pair;"}
    1:1:android.net.Uri getExternalSurroundSoundGlobalSettingUri():0:0 -> j
    1:1:boolean isPassthroughPlaybackSupported(androidx.media3.common.Format,androidx.media3.common.AudioAttributes):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lj/b;)Z"}
    1:1:boolean supportsEncoding(int):0:0 -> l
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.exoplayer.audio.AudioCapabilities$$ExternalSyntheticApiModelOutline0 -> s.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioProfile androidx.media3.exoplayer.audio.AudioCapabilities$$InternalSyntheticApiModelOutline$9$e85c424d708e3c9b0682ac191cb62ff3f6c9146b797f8514fd5f1a1acc6a2133$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioCapabilities$$ExternalSyntheticApiModelOutline1 -> s.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.audio.AudioCapabilities$$InternalSyntheticApiModelOutline$9$e85c424d708e3c9b0682ac191cb62ff3f6c9146b797f8514fd5f1a1acc6a2133$1.m(android.media.AudioProfile):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioCapabilities$$ExternalSyntheticApiModelOutline2 -> s.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.audio.AudioCapabilities$$InternalSyntheticApiModelOutline$9$e85c424d708e3c9b0682ac191cb62ff3f6c9146b797f8514fd5f1a1acc6a2133$2.m(android.media.AudioProfile):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioCapabilities$$ExternalSyntheticApiModelOutline3 -> s.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int[] androidx.media3.exoplayer.audio.AudioCapabilities$$InternalSyntheticApiModelOutline$9$e85c424d708e3c9b0682ac191cb62ff3f6c9146b797f8514fd5f1a1acc6a2133$3.m(android.media.AudioProfile):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioCapabilities$1 -> s.e$a:
androidx.media3.exoplayer.audio.AudioCapabilities$Api23 -> s.e$b:
    1:1:com.google.common.collect.ImmutableSet getAllBluetoothDeviceTypes():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z;"}
    1:1:boolean isBluetoothConnected(android.media.AudioManager,androidx.media3.exoplayer.audio.AudioDeviceInfoApi23):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioManager;Ls/l;)Z"}
androidx.media3.exoplayer.audio.AudioCapabilities$Api29 -> s.e$c:
    1:1:com.google.common.collect.ImmutableList getDirectPlaybackSupportedEncodings(androidx.media3.common.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)Ll2/v;"}
    1:1:int getMaxSupportedChannelCountForPassthrough(int,int,androidx.media3.common.AudioAttributes):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILj/b;)I"}
androidx.media3.exoplayer.audio.AudioCapabilities$Api29$$ExternalSyntheticApiModelOutline0 -> s.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.audio.AudioCapabilities$Api29$$InternalSyntheticApiModelOutline$8$8ece2d790593b5736adafd7c93bcc06d12737fac8a57435e3a708a1d8cb051b1$0.m(android.media.AudioFormat,android.media.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioCapabilities$Api33 -> s.e$d:
    1:1:androidx.media3.exoplayer.audio.AudioCapabilities getCapabilitiesInternalForDirectPlayback(android.media.AudioManager,androidx.media3.common.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioManager;Lj/b;)Ls/e;"}
    1:1:androidx.media3.exoplayer.audio.AudioDeviceInfoApi23 getDefaultRoutedDeviceForAttributes(android.media.AudioManager,androidx.media3.common.AudioAttributes):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioManager;Lj/b;)Ls/l;"}
androidx.media3.exoplayer.audio.AudioCapabilities$Api33$$ExternalSyntheticApiModelOutline0 -> s.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List androidx.media3.exoplayer.audio.AudioCapabilities$Api33$$InternalSyntheticApiModelOutline$8$2dac02e169dbf038db555552b5ecf8586da3b986b8dcf864e4c209d3e14b2365$0.m(android.media.AudioManager,android.media.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioCapabilities$Api33$$ExternalSyntheticApiModelOutline1 -> s.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioDeviceInfo androidx.media3.exoplayer.audio.AudioCapabilities$Api33$$InternalSyntheticApiModelOutline$8$2dac02e169dbf038db555552b5ecf8586da3b986b8dcf864e4c209d3e14b2365$1.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioCapabilities$Api33$$ExternalSyntheticApiModelOutline2 -> s.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List androidx.media3.exoplayer.audio.AudioCapabilities$Api33$$InternalSyntheticApiModelOutline$8$64725f14e9a62c5ad80f05af9ffc602c7dab7a1d9a35e43cc82c1ddee8a3e1c6$0.m(android.media.AudioManager,android.media.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioCapabilities$AudioProfile -> s.e$e:
    int encoding -> a
    int maxChannelCount -> b
    com.google.common.collect.ImmutableSet channelMasks -> c
    androidx.media3.exoplayer.audio.AudioCapabilities$AudioProfile DEFAULT_AUDIO_PROFILE -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(int,java.util.Set):0:0 -> <init>
    1:1:com.google.common.collect.ImmutableSet getAllChannelMasksForMaxChannelCount(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll2/z;"}
    1:1:int getMaxSupportedChannelCountForPassthrough(int,androidx.media3.common.AudioAttributes):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/b;)I"}
    1:1:boolean supportsChannelCount(int):0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver -> s.j:
    android.content.Context context -> a
    androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$Listener listener -> b
    android.os.Handler handler -> c
    androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$AudioDeviceCallbackV23 audioDeviceCallback -> d
    android.content.BroadcastReceiver hdmiAudioPlugBroadcastReceiver -> e
    androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$ExternalSurroundSoundSettingObserver externalSurroundSoundSettingObserver -> f
    androidx.media3.exoplayer.audio.AudioCapabilities audioCapabilities -> g
    androidx.media3.exoplayer.audio.AudioDeviceInfoApi23 routedDevice -> h
    androidx.media3.common.AudioAttributes audioAttributes -> i
    boolean registered -> j
    1:1:void <init>(android.content.Context,androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$Listener,androidx.media3.common.AudioAttributes,androidx.media3.exoplayer.audio.AudioDeviceInfoApi23):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ls/j$f;Lj/b;Ls/l;)V"}
    1:1:androidx.media3.common.AudioAttributes access$200(androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j;)Lj/b;"}
    1:1:androidx.media3.exoplayer.audio.AudioDeviceInfoApi23 access$300(androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j;)Ls/l;"}
    1:1:androidx.media3.exoplayer.audio.AudioDeviceInfoApi23 access$302(androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver,androidx.media3.exoplayer.audio.AudioDeviceInfoApi23):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j;Ls/l;)Ls/l;"}
    1:1:void access$400(androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver,androidx.media3.exoplayer.audio.AudioCapabilities):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j;Ls/e;)V"}
    1:1:android.content.Context access$500(androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j;)Landroid/content/Context;"}
    1:1:void onNewAudioCapabilities(androidx.media3.exoplayer.audio.AudioCapabilities):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/e;)V"}
    1:1:androidx.media3.exoplayer.audio.AudioCapabilities register():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/e;"}
    1:1:void setAudioAttributes(androidx.media3.common.AudioAttributes):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:1:void setRoutedDevice(android.media.AudioDeviceInfo):0:0 -> i
    1:1:void unregister():0:0 -> j
androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$1 -> s.j$a:
androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$Api23 -> s.j$b:
    1:1:void registerAudioDeviceCallback(android.content.Context,android.media.AudioDeviceCallback,android.os.Handler):0:0 -> a
    1:1:void unregisterAudioDeviceCallback(android.content.Context,android.media.AudioDeviceCallback):0:0 -> b
androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$Api23$$ExternalSyntheticApiModelOutline0 -> s.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$Api23$$InternalSyntheticApiModelOutline$9$8072bd8aaec7ff6f26232c51b21e5e5a3ff058847ab4594e9a931c7658634003$0.m(android.media.AudioManager,android.media.AudioDeviceCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$AudioDeviceCallbackV23 -> s.j$c:
    androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j;)V"}
    2:2:void <init>(androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver,androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j;Ls/j$a;)V"}
    1:1:void onAudioDevicesAdded(android.media.AudioDeviceInfo[]):0:0 -> onAudioDevicesAdded
    1:1:void onAudioDevicesRemoved(android.media.AudioDeviceInfo[]):0:0 -> onAudioDevicesRemoved
androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$ExternalSurroundSoundSettingObserver -> s.j$d:
    android.content.ContentResolver resolver -> a
    android.net.Uri settingUri -> b
    androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver this$0 -> c
    1:1:void <init>(androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver,android.os.Handler,android.content.ContentResolver,android.net.Uri):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j;Landroid/os/Handler;Landroid/content/ContentResolver;Landroid/net/Uri;)V"}
    1:1:void register():0:0 -> a
    1:1:void unregister():0:0 -> b
    1:1:void onChange(boolean):0:0 -> onChange
androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$HdmiAudioPlugBroadcastReceiver -> s.j$e:
    androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j;)V"}
    2:2:void <init>(androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver,androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/j;Ls/j$a;)V"}
    1:1:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver$Listener -> s.j$f:
    void onAudioCapabilitiesChanged(androidx.media3.exoplayer.audio.AudioCapabilities) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/e;)V"}
androidx.media3.exoplayer.audio.AudioDeviceInfoApi23 -> s.l:
    android.media.AudioDeviceInfo audioDeviceInfo -> a
    1:1:void <init>(android.media.AudioDeviceInfo):0:0 -> <init>
androidx.media3.exoplayer.audio.AudioOffloadSupport -> s.m:
    boolean isFormatSupported -> a
    boolean isGaplessSupported -> b
    boolean isSpeedChangeSupported -> c
    androidx.media3.exoplayer.audio.AudioOffloadSupport DEFAULT_UNSUPPORTED -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.exoplayer.audio.AudioOffloadSupport$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/m$b;)V"}
    2:2:void <init>(androidx.media3.exoplayer.audio.AudioOffloadSupport$Builder,androidx.media3.exoplayer.audio.AudioOffloadSupport$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/m$b;Ls/m$a;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.audio.AudioOffloadSupport$1 -> s.m$a:
androidx.media3.exoplayer.audio.AudioOffloadSupport$Builder -> s.m$b:
    boolean isFormatSupported -> a
    boolean isGaplessSupported -> b
    boolean isSpeedChangeSupported -> c
    void <init>() -> <init>
    1:1:boolean access$100(androidx.media3.exoplayer.audio.AudioOffloadSupport$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/m$b;)Z"}
    1:1:boolean access$200(androidx.media3.exoplayer.audio.AudioOffloadSupport$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/m$b;)Z"}
    1:1:boolean access$300(androidx.media3.exoplayer.audio.AudioOffloadSupport$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/m$b;)Z"}
    1:1:androidx.media3.exoplayer.audio.AudioOffloadSupport build():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/m;"}
    1:1:androidx.media3.exoplayer.audio.AudioOffloadSupport$Builder setIsFormatSupported(boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ls/m$b;"}
    1:1:androidx.media3.exoplayer.audio.AudioOffloadSupport$Builder setIsGaplessSupported(boolean):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ls/m$b;"}
    1:1:androidx.media3.exoplayer.audio.AudioOffloadSupport$Builder setIsSpeedChangeSupported(boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ls/m$b;"}
androidx.media3.exoplayer.audio.AudioRendererEventListener -> s.z:
    void onAudioTrackInitialized(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    void onAudioTrackReleased(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    void onSkipSilenceEnabledChanged(boolean) -> d
    void onAudioSinkError(java.lang.Exception) -> e
    void onAudioEnabled(androidx.media3.exoplayer.DecoderCounters) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    void onAudioDisabled(androidx.media3.exoplayer.DecoderCounters) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    void onAudioDecoderReleased(java.lang.String) -> n
    void onAudioDecoderInitialized(java.lang.String,long,long) -> o
    void onAudioInputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation) -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    void onAudioUnderrun(int,long,long) -> s
    void onAudioPositionAdvancing(long) -> w
    void onAudioCodecError(java.lang.Exception) -> z
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher -> s.z$a:
    android.os.Handler handler -> a
    androidx.media3.exoplayer.audio.AudioRendererEventListener listener -> b
    1:1:void <init>(android.os.Handler,androidx.media3.exoplayer.audio.AudioRendererEventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Ls/z;)V"}
    1:1:void lambda$decoderReleased$5(java.lang.String):0:0 -> A
    1:1:void lambda$disabled$6(androidx.media3.exoplayer.DecoderCounters):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void lambda$enabled$0(androidx.media3.exoplayer.DecoderCounters):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void lambda$inputFormatChanged$2(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    1:1:void lambda$positionAdvancing$3(long):0:0 -> E
    1:1:void lambda$skipSilenceEnabledChanged$7(boolean):0:0 -> F
    1:1:void lambda$underrun$4(int,long,long):0:0 -> G
    1:1:void positionAdvancing(long):0:0 -> H
    1:1:void skipSilenceEnabledChanged(boolean):0:0 -> I
    1:1:void underrun(int,long,long):0:0 -> J
    1:1:void $r8$lambda$2hTvDgSq-G2zW65qfSD30etLVwk(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,java.lang.Exception):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ljava/lang/Exception;)V"}
    1:1:void $r8$lambda$7C9vlGvmJHcEe7pgX4rokulGKII(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,java.lang.String,long,long):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ljava/lang/String;JJ)V"}
    1:1:void $r8$lambda$Bm1imZw7fkd3rTdA5Djrbo2Nvjg(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,androidx.media3.exoplayer.DecoderCounters):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Lq/o;)V"}
    1:1:void $r8$lambda$PvuacwwJnJFI3fUqiSCeo6daDx4(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Z)V"}
    1:1:void $r8$lambda$Sty75O3VFMZNfmPxlsKMIqwEhSE(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ls/b0$a;)V"}
    1:1:void $r8$lambda$XE7M0nlPW0-Xb0Sx86x2wFQLazY(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ljava/lang/String;)V"}
    1:1:void $r8$lambda$_Bo74VuHX7udphK71lwQTNhd4EI(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,androidx.media3.exoplayer.DecoderCounters):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Lq/o;)V"}
    1:1:void $r8$lambda$j1TK0NlL8b2bXiq9y0zPGLdwidw(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,long):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;J)V"}
    1:1:void $r8$lambda$pevdSTgLu_xyeGC6BgiZxBD4T2I(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ls/b0$a;)V"}
    1:1:void $r8$lambda$seRv22SJNspkSgKvBt0vsYyBvvA(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Lj/q;Lq/p;)V"}
    1:1:void $r8$lambda$y3Kthw2f4PQw51sqPhhOYqDV0fg(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,int,long,long):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;IJJ)V"}
    1:1:void $r8$lambda$ynqjalrUDT04kGZOtowAxMd_tio(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,java.lang.Exception):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ljava/lang/Exception;)V"}
    1:1:void audioCodecError(java.lang.Exception):0:0 -> m
    1:1:void audioSinkError(java.lang.Exception):0:0 -> n
    1:1:void audioTrackInitialized(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    1:1:void audioTrackReleased(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    1:1:void decoderInitialized(java.lang.String,long,long):0:0 -> q
    1:1:void decoderReleased(java.lang.String):0:0 -> r
    1:1:void disabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void enabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void inputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    1:1:void lambda$audioCodecError$9(java.lang.Exception):0:0 -> v
    1:1:void lambda$audioSinkError$8(java.lang.Exception):0:0 -> w
    1:1:void lambda$audioTrackInitialized$10(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    1:1:void lambda$audioTrackReleased$11(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    1:1:void lambda$decoderInitialized$1(java.lang.String,long,long):0:0 -> z
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda0 -> s.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$10$2e08d1d5eaf0e0420dbadbf10170fdba0fabd4916a0741e09011ce96ed3fded7$0.f$0 -> f
    androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$10$2e08d1d5eaf0e0420dbadbf10170fdba0fabd4916a0741e09011ce96ed3fded7$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$10$2e08d1d5eaf0e0420dbadbf10170fdba0fabd4916a0741e09011ce96ed3fded7$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ls/b0$a;)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$10$2e08d1d5eaf0e0420dbadbf10170fdba0fabd4916a0741e09011ce96ed3fded7$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda1 -> s.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$10$7f93472f4ca91559c08374a889683ccaf60420569a85e79d19b07ca571c7d532$0.f$0 -> f
    androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$10$7f93472f4ca91559c08374a889683ccaf60420569a85e79d19b07ca571c7d532$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$10$7f93472f4ca91559c08374a889683ccaf60420569a85e79d19b07ca571c7d532$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ls/b0$a;)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$10$7f93472f4ca91559c08374a889683ccaf60420569a85e79d19b07ca571c7d532$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda10 -> s.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$9$a39ab5203a3451f29a506660606e0211ec455838512ffe02815af2c164d0f081$0.f$0 -> f
    boolean androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$9$a39ab5203a3451f29a506660606e0211ec455838512ffe02815af2c164d0f081$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$9$a39ab5203a3451f29a506660606e0211ec455838512ffe02815af2c164d0f081$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Z)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$9$a39ab5203a3451f29a506660606e0211ec455838512ffe02815af2c164d0f081$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda11 -> s.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$9$e240e46553097854e42ab3b17afecd1bb579d40dc32126949fb588e6d500deac$0.f$0 -> f
    int androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$9$e240e46553097854e42ab3b17afecd1bb579d40dc32126949fb588e6d500deac$0.f$1 -> g
    long androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$9$e240e46553097854e42ab3b17afecd1bb579d40dc32126949fb588e6d500deac$0.f$2 -> h
    long androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$9$e240e46553097854e42ab3b17afecd1bb579d40dc32126949fb588e6d500deac$0.f$3 -> i
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$9$e240e46553097854e42ab3b17afecd1bb579d40dc32126949fb588e6d500deac$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,int,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;IJJ)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$9$e240e46553097854e42ab3b17afecd1bb579d40dc32126949fb588e6d500deac$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda2 -> s.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$37723469461f38f834b9f5c384ee372b2d5096999a2da681a42c38d48fe431de$0.f$0 -> f
    java.lang.Exception androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$37723469461f38f834b9f5c384ee372b2d5096999a2da681a42c38d48fe431de$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$37723469461f38f834b9f5c384ee372b2d5096999a2da681a42c38d48fe431de$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,java.lang.Exception):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ljava/lang/Exception;)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$37723469461f38f834b9f5c384ee372b2d5096999a2da681a42c38d48fe431de$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda3 -> s.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9968583932e18644dd0948eb3d248daae4598d17d4003210d273135665f33f6a$0.f$0 -> f
    androidx.media3.exoplayer.DecoderCounters androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9968583932e18644dd0948eb3d248daae4598d17d4003210d273135665f33f6a$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9968583932e18644dd0948eb3d248daae4598d17d4003210d273135665f33f6a$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,androidx.media3.exoplayer.DecoderCounters):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Lq/o;)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9968583932e18644dd0948eb3d248daae4598d17d4003210d273135665f33f6a$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda4 -> s.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9a39a9bc674abac6d18efd2eb25ff14fa66112322e27ac196fc522bd5abf1ed7$0.f$0 -> f
    androidx.media3.exoplayer.DecoderCounters androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9a39a9bc674abac6d18efd2eb25ff14fa66112322e27ac196fc522bd5abf1ed7$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9a39a9bc674abac6d18efd2eb25ff14fa66112322e27ac196fc522bd5abf1ed7$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,androidx.media3.exoplayer.DecoderCounters):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Lq/o;)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9a39a9bc674abac6d18efd2eb25ff14fa66112322e27ac196fc522bd5abf1ed7$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda5 -> s.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9bbb8ab69804698e2229739773627322b149e1a35bbdbdb53b1eb2635ac27404$0.f$0 -> f
    long androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9bbb8ab69804698e2229739773627322b149e1a35bbdbdb53b1eb2635ac27404$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9bbb8ab69804698e2229739773627322b149e1a35bbdbdb53b1eb2635ac27404$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;J)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9bbb8ab69804698e2229739773627322b149e1a35bbdbdb53b1eb2635ac27404$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda6 -> s.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$ba7f3a536e0f47674f3c65b88f1d0eea182e6e07b04716338bc396d675339c1d$0.f$0 -> f
    java.lang.String androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$ba7f3a536e0f47674f3c65b88f1d0eea182e6e07b04716338bc396d675339c1d$0.f$1 -> g
    long androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$ba7f3a536e0f47674f3c65b88f1d0eea182e6e07b04716338bc396d675339c1d$0.f$2 -> h
    long androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$ba7f3a536e0f47674f3c65b88f1d0eea182e6e07b04716338bc396d675339c1d$0.f$3 -> i
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$ba7f3a536e0f47674f3c65b88f1d0eea182e6e07b04716338bc396d675339c1d$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,java.lang.String,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ljava/lang/String;JJ)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$ba7f3a536e0f47674f3c65b88f1d0eea182e6e07b04716338bc396d675339c1d$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda7 -> s.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$bcf8a6c1f43a31188e14de1a96cf88af934763d2ffceb44483b5ba1d84b77940$0.f$0 -> f
    java.lang.Exception androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$bcf8a6c1f43a31188e14de1a96cf88af934763d2ffceb44483b5ba1d84b77940$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$bcf8a6c1f43a31188e14de1a96cf88af934763d2ffceb44483b5ba1d84b77940$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,java.lang.Exception):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ljava/lang/Exception;)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$bcf8a6c1f43a31188e14de1a96cf88af934763d2ffceb44483b5ba1d84b77940$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda8 -> s.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$dfe88808abcdf73dcd0e5d4a6b755fa255dab245f883b3d46d85727a16f500a7$0.f$0 -> f
    java.lang.String androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$dfe88808abcdf73dcd0e5d4a6b755fa255dab245f883b3d46d85727a16f500a7$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$dfe88808abcdf73dcd0e5d4a6b755fa255dab245f883b3d46d85727a16f500a7$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Ljava/lang/String;)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$dfe88808abcdf73dcd0e5d4a6b755fa255dab245f883b3d46d85727a16f500a7$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$ExternalSyntheticLambda9 -> s.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$e0deff2b605a89c8280d5556786b9122a6190aaa7f62735d45f91832a724f0b5$0.f$0 -> f
    androidx.media3.common.Format androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$e0deff2b605a89c8280d5556786b9122a6190aaa7f62735d45f91832a724f0b5$0.f$1 -> g
    androidx.media3.exoplayer.DecoderReuseEvaluation androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$e0deff2b605a89c8280d5556786b9122a6190aaa7f62735d45f91832a724f0b5$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$e0deff2b605a89c8280d5556786b9122a6190aaa7f62735d45f91832a724f0b5$0.<init>(androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z$a;Lj/q;Lq/p;)V"}
    1:1:void androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$e0deff2b605a89c8280d5556786b9122a6190aaa7f62735d45f91832a724f0b5$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.AudioSink -> s.b0:
    void setPlayerId(androidx.media3.exoplayer.analytics.PlayerId) -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)V"}
    void setOffloadDelayPadding(int,int) -> B
    int getFormatSupport(androidx.media3.common.Format) -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    boolean supportsFormat(androidx.media3.common.Format) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    void reset() -> b
    boolean isEnded() -> c
    void pause() -> d
    androidx.media3.exoplayer.audio.AudioOffloadSupport getFormatOffloadSupport(androidx.media3.common.Format) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Ls/m;"}
    boolean handleBuffer(java.nio.ByteBuffer,long,int) -> f
    void flush() -> flush
    androidx.media3.common.PlaybackParameters getPlaybackParameters() -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/c0;"}
    void setPlaybackParameters(androidx.media3.common.PlaybackParameters) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    void setOffloadMode(int) -> i
    void setVolume(float) -> j
    void play() -> k
    long getCurrentPositionUs(boolean) -> l
    void disableTunneling() -> m
    void configure(androidx.media3.common.Format,int,int[]) -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;I[I)V"}
    void enableTunnelingV21() -> o
    void setAuxEffectInfo(androidx.media3.common.AuxEffectInfo) -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/e;)V"}
    void setPreferredDevice(android.media.AudioDeviceInfo) -> q
    void playToEndOfStream() -> r
    void release() -> release
    boolean hasPendingData() -> s
    void setOutputStreamOffsetUs(long) -> t
    void setAudioAttributes(androidx.media3.common.AudioAttributes) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    void setAudioSessionId(int) -> v
    void setClock(androidx.media3.common.util.Clock) -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c;)V"}
    void setListener(androidx.media3.exoplayer.audio.AudioSink$Listener) -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$d;)V"}
    void setSkipSilenceEnabled(boolean) -> y
    void handleDiscontinuity() -> z
androidx.media3.exoplayer.audio.AudioSink$-CC -> s.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$setOutputStreamOffsetUs(androidx.media3.exoplayer.audio.AudioSink,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0;J)V"}
androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig -> s.b0$a:
    int encoding -> a
    int sampleRate -> b
    int channelConfig -> c
    boolean tunneling -> d
    boolean offload -> e
    int bufferSize -> f
    1:1:void <init>(int,int,int,boolean,boolean,int):0:0 -> <init>
androidx.media3.exoplayer.audio.AudioSink$ConfigurationException -> s.b0$b:
    androidx.media3.common.Format format -> f
    1:1:void <init>(java.lang.String,androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lj/q;)V"}
    2:2:void <init>(java.lang.Throwable,androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Lj/q;)V"}
androidx.media3.exoplayer.audio.AudioSink$InitializationException -> s.b0$c:
    int audioTrackState -> f
    boolean isRecoverable -> g
    androidx.media3.common.Format format -> h
    1:1:void <init>(int,int,int,int,androidx.media3.common.Format,boolean,java.lang.Exception):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIIILj/q;ZLjava/lang/Exception;)V"}
androidx.media3.exoplayer.audio.AudioSink$Listener -> s.b0$d:
    void onAudioTrackInitialized(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    void onAudioTrackReleased(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    void onPositionAdvancing(long) -> c
    void onSkipSilenceEnabledChanged(boolean) -> d
    void onAudioSinkError(java.lang.Exception) -> e
    void onAudioCapabilitiesChanged() -> f
    void onOffloadBufferEmptying() -> g
    void onSilenceSkipped() -> h
    void onPositionDiscontinuity() -> i
    void onUnderrun(int,long,long) -> j
    void onOffloadBufferFull() -> k
androidx.media3.exoplayer.audio.AudioSink$UnexpectedDiscontinuityException -> s.b0$e:
    long actualPresentationTimeUs -> f
    long expectedPresentationTimeUs -> g
    1:1:void <init>(long,long):0:0 -> <init>
androidx.media3.exoplayer.audio.AudioSink$WriteException -> s.b0$f:
    int errorCode -> f
    boolean isRecoverable -> g
    androidx.media3.common.Format format -> h
    1:1:void <init>(int,androidx.media3.common.Format,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/q;Z)V"}
androidx.media3.exoplayer.audio.AudioTimestampPoller -> s.c0:
    androidx.media3.exoplayer.audio.AudioTimestampPoller$AudioTimestampWrapper audioTimestamp -> a
    int state -> b
    long initializeSystemTimeUs -> c
    long sampleIntervalUs -> d
    long lastTimestampSampleTimeUs -> e
    long initialTimestampPositionFrames -> f
    1:1:void <init>(android.media.AudioTrack):0:0 -> <init>
    1:1:void acceptTimestamp():0:0 -> a
    1:1:void expectTimestampFramePositionReset():0:0 -> b
    1:1:long getTimestampPositionFrames():0:0 -> c
    1:1:long getTimestampSystemTimeUs():0:0 -> d
    1:1:boolean hasAdvancingTimestamp():0:0 -> e
    1:1:boolean maybePollTimestamp(long):0:0 -> f
    1:1:void rejectTimestamp():0:0 -> g
    1:1:void reset():0:0 -> h
    1:1:void updateState(int):0:0 -> i
androidx.media3.exoplayer.audio.AudioTimestampPoller$AudioTimestampWrapper -> s.c0$a:
    android.media.AudioTrack audioTrack -> a
    android.media.AudioTimestamp audioTimestamp -> b
    long rawTimestampFramePositionWrapCount -> c
    long lastTimestampRawPositionFrames -> d
    long lastTimestampPositionFrames -> e
    boolean expectTimestampFramePositionReset -> f
    long accumulatedRawTimestampFramePosition -> g
    1:1:void <init>(android.media.AudioTrack):0:0 -> <init>
    1:1:void expectTimestampFramePositionReset():0:0 -> a
    1:1:long getTimestampPositionFrames():0:0 -> b
    1:1:long getTimestampSystemTimeUs():0:0 -> c
    1:1:boolean maybeUpdateTimestamp():0:0 -> d
androidx.media3.exoplayer.audio.AudioTrackPositionTracker -> s.d0:
    long stopPlaybackHeadPosition -> A
    long endPlaybackHeadPosition -> B
    long lastPositionUs -> C
    long lastSystemTimeUs -> D
    boolean lastSampleUsedGetTimestampMode -> E
    long previousModePositionUs -> F
    long previousModeSystemTimeUs -> G
    boolean expectRawPlaybackHeadReset -> H
    long sumRawPlaybackHeadPosition -> I
    androidx.media3.common.util.Clock clock -> J
    androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener listener -> a
    long[] playheadOffsets -> b
    android.media.AudioTrack audioTrack -> c
    int outputPcmFrameSize -> d
    int bufferSize -> e
    androidx.media3.exoplayer.audio.AudioTimestampPoller audioTimestampPoller -> f
    int outputSampleRate -> g
    boolean needsPassthroughWorkarounds -> h
    long bufferSizeUs -> i
    float audioTrackPlaybackSpeed -> j
    boolean notifiedPositionIncreasing -> k
    long smoothedPlayheadOffsetUs -> l
    long lastPlayheadSampleTimeUs -> m
    java.lang.reflect.Method getLatencyMethod -> n
    long latencyUs -> o
    boolean hasData -> p
    boolean isOutputPcm -> q
    long lastLatencySampleTimeUs -> r
    long lastRawPlaybackHeadPositionSampleTimeMs -> s
    long rawPlaybackHeadPosition -> t
    long rawPlaybackHeadWrapCount -> u
    long passthroughWorkaroundPauseOffset -> v
    int nextPlayheadOffsetIndex -> w
    int playheadOffsetCount -> x
    long stopTimestampUs -> y
    long forceResetWorkaroundTimeMs -> z
    1:1:void <init>(androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/d0$a;)V"}
    1:1:void expectRawPlaybackHeadReset():0:0 -> a
    1:1:boolean forceHasPendingData():0:0 -> b
    1:1:int getAvailableBufferSize(long):0:0 -> c
    1:1:long getCurrentPositionUs(boolean):0:0 -> d
    1:1:long getPlaybackHeadPosition():0:0 -> e
    1:1:long getPlaybackHeadPositionUs():0:0 -> f
    1:1:void handleEndOfStream(long):0:0 -> g
    1:1:boolean hasPendingData(long):0:0 -> h
    1:1:boolean isPlaying():0:0 -> i
    1:1:boolean isStalled(long):0:0 -> j
    1:1:boolean mayHandleBuffer(long):0:0 -> k
    1:1:void maybePollAndCheckTimestamp(long):0:0 -> l
    1:1:void maybeSampleSyncParams():0:0 -> m
    1:1:void maybeUpdateLatency(long):0:0 -> n
    1:1:boolean needsPassthroughWorkarounds(int):0:0 -> o
    1:1:boolean pause():0:0 -> p
    1:1:void reset():0:0 -> q
    1:1:void resetSyncParams():0:0 -> r
    1:1:void setAudioTrack(android.media.AudioTrack,boolean,int,int,int):0:0 -> s
    1:1:void setAudioTrackPlaybackSpeed(float):0:0 -> t
    1:1:void setClock(androidx.media3.common.util.Clock):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c;)V"}
    1:1:void start():0:0 -> v
    1:1:void updateRawPlaybackHeadPosition(long):0:0 -> w
androidx.media3.exoplayer.audio.AudioTrackPositionTracker$Listener -> s.d0$a:
    void onUnderrun(int,long) -> a
    void onPositionFramesMismatch(long,long,long,long) -> b
    void onPositionAdvancing(long) -> c
    void onInvalidLatency(long) -> d
    void onSystemTimeUsMismatch(long,long,long,long) -> e
androidx.media3.exoplayer.audio.ChannelMappingAudioProcessor -> s.e0:
    int[] pendingOutputChannels -> i
    int[] outputChannels -> j
    void <init>() -> <init>
    1:1:void queueInput(java.nio.ByteBuffer):0:0 -> h
    1:1:androidx.media3.common.audio.AudioProcessor$AudioFormat onConfigure(androidx.media3.common.audio.AudioProcessor$AudioFormat):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/b$a;)Lk/b$a;"}
    1:1:void onFlush():0:0 -> j
    1:1:void onReset():0:0 -> l
    1:1:void setChannelMap(int[]):0:0 -> n
androidx.media3.exoplayer.audio.DefaultAudioOffloadSupportProvider -> s.g0:
    android.content.Context context -> a
    java.lang.Boolean isOffloadVariableRateSupported -> b
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:androidx.media3.exoplayer.audio.AudioOffloadSupport getAudioOffloadSupport(androidx.media3.common.Format,androidx.media3.common.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lj/b;)Ls/m;"}
    1:1:boolean isOffloadVariableRateSupported(android.content.Context):0:0 -> b
androidx.media3.exoplayer.audio.DefaultAudioOffloadSupportProvider$Api29 -> s.g0$a:
    1:1:androidx.media3.exoplayer.audio.AudioOffloadSupport getOffloadedPlaybackSupport(android.media.AudioFormat,android.media.AudioAttributes,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;Z)Ls/m;"}
androidx.media3.exoplayer.audio.DefaultAudioOffloadSupportProvider$Api29$$ExternalSyntheticApiModelOutline0 -> s.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.audio.DefaultAudioOffloadSupportProvider$Api29$$InternalSyntheticApiModelOutline$8$293f80c29500f301d4c5aabe63ba1840fd40543e14e902caaf51c4e6c78546aa$0.m(android.media.AudioFormat,android.media.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioOffloadSupportProvider$Api31 -> s.g0$b:
    1:1:androidx.media3.exoplayer.audio.AudioOffloadSupport getOffloadedPlaybackSupport(android.media.AudioFormat,android.media.AudioAttributes,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;Z)Ls/m;"}
androidx.media3.exoplayer.audio.DefaultAudioOffloadSupportProvider$Api31$$ExternalSyntheticApiModelOutline0 -> s.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.audio.DefaultAudioOffloadSupportProvider$Api31$$InternalSyntheticApiModelOutline$8$c617016abafc9283bb1dc49203344a7a8d2abe3253c45e987adb8788e621f6b8$0.m(android.media.AudioFormat,android.media.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink -> s.z0:
    androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24 onRoutingChangedListener -> A
    androidx.media3.common.AudioAttributes audioAttributes -> B
    androidx.media3.exoplayer.audio.DefaultAudioSink$MediaPositionParameters afterDrainParameters -> C
    androidx.media3.exoplayer.audio.DefaultAudioSink$MediaPositionParameters mediaPositionParameters -> D
    androidx.media3.common.PlaybackParameters playbackParameters -> E
    boolean skipSilenceEnabled -> F
    java.nio.ByteBuffer avSyncHeader -> G
    int bytesUntilNextAvSync -> H
    long submittedPcmBytes -> I
    long submittedEncodedFrames -> J
    long writtenPcmBytes -> K
    long writtenEncodedFrames -> L
    int framesPerEncodedSample -> M
    boolean startMediaTimeUsNeedsSync -> N
    boolean startMediaTimeUsNeedsInit -> O
    long startMediaTimeUs -> P
    float volume -> Q
    java.nio.ByteBuffer inputBuffer -> R
    int inputBufferAccessUnitCount -> S
    java.nio.ByteBuffer outputBuffer -> T
    byte[] preV21OutputBuffer -> U
    int preV21OutputBufferOffset -> V
    boolean handledEndOfStream -> W
    boolean stoppedAudioTrack -> X
    boolean handledOffloadOnPresentationEnded -> Y
    boolean playing -> Z
    android.content.Context context -> a
    boolean externalAudioSessionIdProvided -> a0
    androidx.media3.common.audio.AudioProcessorChain audioProcessorChain -> b
    int audioSessionId -> b0
    boolean enableFloatOutput -> c
    androidx.media3.common.AuxEffectInfo auxEffectInfo -> c0
    androidx.media3.exoplayer.audio.ChannelMappingAudioProcessor channelMappingAudioProcessor -> d
    androidx.media3.exoplayer.audio.AudioDeviceInfoApi23 preferredDevice -> d0
    androidx.media3.exoplayer.audio.TrimmingAudioProcessor trimmingAudioProcessor -> e
    boolean tunneling -> e0
    com.google.common.collect.ImmutableList toIntPcmAvailableAudioProcessors -> f
    long lastTunnelingAvSyncPresentationTimeUs -> f0
    com.google.common.collect.ImmutableList toFloatPcmAvailableAudioProcessors -> g
    long lastFeedElapsedRealtimeMs -> g0
    androidx.media3.common.util.ConditionVariable releasingConditionVariable -> h
    boolean offloadDisabledUntilNextConfiguration -> h0
    androidx.media3.exoplayer.audio.AudioTrackPositionTracker audioTrackPositionTracker -> i
    boolean isWaitingForOffloadEndOfStreamHandled -> i0
    java.util.ArrayDeque mediaPositionParametersCheckpoints -> j
    android.os.Looper playbackLooper -> j0
    boolean preferAudioTrackPlaybackParams -> k
    long skippedOutputFrameCountAtLastPosition -> k0
    int offloadMode -> l
    long accumulatedSkippedSilenceDurationUs -> l0
    androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29 offloadStreamEventCallbackV29 -> m
    android.os.Handler reportSkippedSilenceHandler -> m0
    androidx.media3.exoplayer.audio.DefaultAudioSink$PendingExceptionHolder initializationExceptionPendingExceptionHolder -> n
    boolean failOnSpuriousAudioTimestamp -> n0
    androidx.media3.exoplayer.audio.DefaultAudioSink$PendingExceptionHolder writeExceptionPendingExceptionHolder -> o
    java.lang.Object releaseExecutorLock -> o0
    androidx.media3.exoplayer.audio.DefaultAudioSink$AudioTrackBufferSizeProvider audioTrackBufferSizeProvider -> p
    java.util.concurrent.ExecutorService releaseExecutor -> p0
    androidx.media3.exoplayer.audio.DefaultAudioSink$AudioOffloadSupportProvider audioOffloadSupportProvider -> q
    int pendingReleaseCount -> q0
    androidx.media3.exoplayer.ExoPlayer$AudioOffloadListener audioOffloadListener -> r
    androidx.media3.exoplayer.analytics.PlayerId playerId -> s
    androidx.media3.exoplayer.audio.AudioSink$Listener listener -> t
    androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration pendingConfiguration -> u
    androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration configuration -> v
    androidx.media3.common.audio.AudioProcessingPipeline audioProcessingPipeline -> w
    android.media.AudioTrack audioTrack -> x
    androidx.media3.exoplayer.audio.AudioCapabilities audioCapabilities -> y
    androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver audioCapabilitiesReceiver -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.exoplayer.audio.DefaultAudioSink$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$f;)V"}
    2:2:void <init>(androidx.media3.exoplayer.audio.DefaultAudioSink$Builder,androidx.media3.exoplayer.audio.DefaultAudioSink$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$f;Ls/z0$a;)V"}
    1:1:void setPlayerId(androidx.media3.exoplayer.analytics.PlayerId):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)V"}
    1:1:void setOffloadDelayPadding(int,int):0:0 -> B
    1:1:int getFormatSupport(androidx.media3.common.Format):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:void $r8$lambda$o-Cuo9scon0w-dXTeciNerpUle8(android.media.AudioTrack,androidx.media3.exoplayer.audio.AudioSink$Listener,android.os.Handler,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig,androidx.media3.common.util.ConditionVariable):0:0 -> D
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioTrack;Ls/b0$d;Landroid/os/Handler;Ls/b0$a;Lm/f;)V"}
    1:1:void $r8$lambda$qr0eXqT3sbHegEjp53-wsAh6480(androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> E
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;)V"}
    1:1:void $r8$lambda$tkFWhVWtHRlIn6wywpBQZa3fleU(androidx.media3.exoplayer.audio.AudioSink$Listener,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> F
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$d;Ls/b0$a;)V"}
    1:1:android.media.AudioTrack access$1100(androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;)Landroid/media/AudioTrack;"}
    1:1:androidx.media3.exoplayer.audio.AudioSink$Listener access$1200(androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;)Ls/b0$d;"}
    1:1:boolean access$1300(androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;)Z"}
    1:1:boolean access$1402(androidx.media3.exoplayer.audio.DefaultAudioSink,boolean):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;Z)Z"}
    1:1:long access$1500(androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;)J"}
    1:1:long access$1600(androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;)J"}
    1:1:long access$1800(androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;)J"}
    1:1:void applyAudioProcessorPlaybackParametersAndSkipSilence(long):0:0 -> N
    1:1:long applyMediaPositionParameters(long):0:0 -> O
    1:1:long applySkipping(long):0:0 -> P
    1:1:android.media.AudioTrack buildAudioTrack(androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$g;)Landroid/media/AudioTrack;"}
    1:1:android.media.AudioTrack buildAudioTrackWithRetry():0:0 -> R
    1:1:boolean drainToEndOfStream():0:0 -> S
    1:1:int getAudioTrackMinBufferSize(int,int,int):0:0 -> T
    1:1:int getFramesPerEncodedSample(int,java.nio.ByteBuffer):0:0 -> U
    1:1:long getSubmittedFrames():0:0 -> V
    1:1:long getWrittenFrames():0:0 -> W
    1:1:void handleSkippedSilence(long):0:0 -> X
    1:1:boolean initializeAudioTrack():0:0 -> Y
    1:1:boolean isAudioTrackDeadObject(int):0:0 -> Z
    1:1:boolean supportsFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:boolean isAudioTrackInitialized():0:0 -> a0
    1:1:void reset():0:0 -> b
    1:1:boolean isOffloadedPlayback(android.media.AudioTrack):0:0 -> b0
    1:1:boolean isEnded():0:0 -> c
    1:1:void lambda$releaseAudioTrackAsync$0(androidx.media3.exoplayer.audio.AudioSink$Listener,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$d;Ls/b0$a;)V"}
    1:1:void pause():0:0 -> d
    1:1:void lambda$releaseAudioTrackAsync$1(android.media.AudioTrack,androidx.media3.exoplayer.audio.AudioSink$Listener,android.os.Handler,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig,androidx.media3.common.util.ConditionVariable):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioTrack;Ls/b0$d;Landroid/os/Handler;Ls/b0$a;Lm/f;)V"}
    1:1:androidx.media3.exoplayer.audio.AudioOffloadSupport getFormatOffloadSupport(androidx.media3.common.Format):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Ls/m;"}
    1:1:void maybeDisableOffload():0:0 -> e0
    1:1:boolean handleBuffer(java.nio.ByteBuffer,long,int):0:0 -> f
    1:1:void maybeReportSkippedSilence():0:0 -> f0
    1:1:void flush():0:0 -> flush
    1:1:androidx.media3.common.PlaybackParameters getPlaybackParameters():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/c0;"}
    1:1:void maybeStartAudioCapabilitiesReceiver():0:0 -> g0
    1:1:void setPlaybackParameters(androidx.media3.common.PlaybackParameters):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    1:1:void onAudioCapabilitiesChanged(androidx.media3.exoplayer.audio.AudioCapabilities):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/e;)V"}
    1:1:void setOffloadMode(int):0:0 -> i
    1:1:void playPendingData():0:0 -> i0
    1:1:void setVolume(float):0:0 -> j
    1:1:void processBuffers(long):0:0 -> j0
    1:1:void play():0:0 -> k
    1:1:void registerStreamEventCallbackV29(android.media.AudioTrack):0:0 -> k0
    1:1:long getCurrentPositionUs(boolean):0:0 -> l
    1:1:void releaseAudioTrackAsync(android.media.AudioTrack,androidx.media3.common.util.ConditionVariable,androidx.media3.exoplayer.audio.AudioSink$Listener,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioTrack;Lm/f;Ls/b0$d;Ls/b0$a;)V"}
    1:1:void disableTunneling():0:0 -> m
    1:1:void resetSinkStateForFlush():0:0 -> m0
    1:1:void configure(androidx.media3.common.Format,int,int[]):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;I[I)V"}
    1:1:void setAudioProcessorPlaybackParameters(androidx.media3.common.PlaybackParameters):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    1:1:void enableTunnelingV21():0:0 -> o
    1:1:void setAudioTrackPlaybackParametersV23():0:0 -> o0
    1:1:void setAuxEffectInfo(androidx.media3.common.AuxEffectInfo):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/e;)V"}
    1:1:void setVolumeInternal():0:0 -> p0
    1:1:void setPreferredDevice(android.media.AudioDeviceInfo):0:0 -> q
    1:1:void setVolumeInternalV21(android.media.AudioTrack,float):0:0 -> q0
    1:1:void playToEndOfStream():0:0 -> r
    1:1:void setVolumeInternalV3(android.media.AudioTrack,float):0:0 -> r0
    1:1:void release():0:0 -> release
    1:1:boolean hasPendingData():0:0 -> s
    1:1:void setupAudioProcessors():0:0 -> s0
    1:1:void setOutputStreamOffsetUs(long):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean shouldApplyAudioProcessorPlaybackParameters():0:0 -> t0
    1:1:void setAudioAttributes(androidx.media3.common.AudioAttributes):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:1:boolean shouldUseFloatOutput(int):0:0 -> u0
    1:1:void setAudioSessionId(int):0:0 -> v
    1:1:boolean useAudioTrackPlaybackParams():0:0 -> v0
    1:1:void setClock(androidx.media3.common.util.Clock):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c;)V"}
    1:1:void writeBuffer(java.nio.ByteBuffer,long):0:0 -> w0
    1:1:void setListener(androidx.media3.exoplayer.audio.AudioSink$Listener):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$d;)V"}
    1:1:int writeNonBlockingV21(android.media.AudioTrack,java.nio.ByteBuffer,int):0:0 -> x0
    1:1:void setSkipSilenceEnabled(boolean):0:0 -> y
    1:1:int writeNonBlockingWithAvSyncV21(android.media.AudioTrack,java.nio.ByteBuffer,int,long):0:0 -> y0
    1:1:void handleDiscontinuity():0:0 -> z
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline0 -> s.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.PlaybackParams androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$15$a310891d637d13aa53d57f4511e1737c7b134931fcff6697eb4e84dc8407cd92$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline1 -> s.m0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$8$2d9ac0610a495099fed8f17a0bd70e2b5e0555abca047055f0c213b2f9e9f7be$0.m(android.media.AudioTrack,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline10 -> s.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.PlaybackParams androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$9$a310891d637d13aa53d57f4511e1737c7b134931fcff6697eb4e84dc8407cd92$5.m(android.media.AudioTrack):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline11 -> s.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$9$a310891d637d13aa53d57f4511e1737c7b134931fcff6697eb4e84dc8407cd92$6.m(android.media.PlaybackParams):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline12 -> s.l0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$9$a310891d637d13aa53d57f4511e1737c7b134931fcff6697eb4e84dc8407cd92$8.m(android.media.PlaybackParams):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline2 -> s.n0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$8$3f2b09b5731809fb51fb4f2d3bd1918c8c4ec83fb46fb8416b47a532f19a21cf$0.m(android.media.AudioTrack):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline3 -> s.o0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$8$9d5ae1108897fdd7eeb1acf72fa5fa6893ab6217adf753aa424c21f6ee8b32fe$0.m(android.media.AudioTrack):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline4 -> s.p0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$8$acdf4ea97f1ed1cfb03c54c24fea162a3c439b8a6103649b61eed89291d6f73d$0.m(android.media.AudioTrack,java.nio.ByteBuffer,int,int,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline5 -> s.q0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.PlaybackParams androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$9$a310891d637d13aa53d57f4511e1737c7b134931fcff6697eb4e84dc8407cd92$0.m(android.media.PlaybackParams):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline6 -> s.r0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.PlaybackParams androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$9$a310891d637d13aa53d57f4511e1737c7b134931fcff6697eb4e84dc8407cd92$1.m(android.media.PlaybackParams,float):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline7 -> s.s0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.PlaybackParams androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$9$a310891d637d13aa53d57f4511e1737c7b134931fcff6697eb4e84dc8407cd92$2.m(android.media.PlaybackParams,float):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline8 -> s.t0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.PlaybackParams androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$9$a310891d637d13aa53d57f4511e1737c7b134931fcff6697eb4e84dc8407cd92$3.m(android.media.PlaybackParams,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticApiModelOutline9 -> s.u0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticApiModelOutline$9$a310891d637d13aa53d57f4511e1737c7b134931fcff6697eb4e84dc8407cd92$4.m(android.media.AudioTrack,android.media.PlaybackParams):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticLambda13 -> s.v0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.DefaultAudioSink androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$05afcd2a9387680bbcd6a9cbb9e0a1208c5a87d4b3f39da8f099b0d57032f623$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$05afcd2a9387680bbcd6a9cbb9e0a1208c5a87d4b3f39da8f099b0d57032f623$0.<init>(androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;)V"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$05afcd2a9387680bbcd6a9cbb9e0a1208c5a87d4b3f39da8f099b0d57032f623$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticLambda14 -> s.w0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.media.AudioTrack androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$a35c9ad78a38f7f5d633b221568c75385291277b4314ebcb6ed73a907874c3c7$0.f$0 -> f
    androidx.media3.exoplayer.audio.AudioSink$Listener androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$a35c9ad78a38f7f5d633b221568c75385291277b4314ebcb6ed73a907874c3c7$0.f$1 -> g
    android.os.Handler androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$a35c9ad78a38f7f5d633b221568c75385291277b4314ebcb6ed73a907874c3c7$0.f$2 -> h
    androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$a35c9ad78a38f7f5d633b221568c75385291277b4314ebcb6ed73a907874c3c7$0.f$3 -> i
    androidx.media3.common.util.ConditionVariable androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$a35c9ad78a38f7f5d633b221568c75385291277b4314ebcb6ed73a907874c3c7$0.f$4 -> j
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$a35c9ad78a38f7f5d633b221568c75385291277b4314ebcb6ed73a907874c3c7$0.<init>(android.media.AudioTrack,androidx.media3.exoplayer.audio.AudioSink$Listener,android.os.Handler,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig,androidx.media3.common.util.ConditionVariable):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioTrack;Ls/b0$d;Landroid/os/Handler;Ls/b0$a;Lm/f;)V"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$a35c9ad78a38f7f5d633b221568c75385291277b4314ebcb6ed73a907874c3c7$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticLambda15 -> s.x0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.DefaultAudioSink androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$d8eee456043aabe68b69b5f134f0ad2ff3c7f66358f8fd1abe9f1302ff573017$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$d8eee456043aabe68b69b5f134f0ad2ff3c7f66358f8fd1abe9f1302ff573017$0.<init>(androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;)V"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$8$d8eee456043aabe68b69b5f134f0ad2ff3c7f66358f8fd1abe9f1302ff573017$0.onAudioCapabilitiesChanged(androidx.media3.exoplayer.audio.AudioCapabilities):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/e;)V"}
androidx.media3.exoplayer.audio.DefaultAudioSink$$ExternalSyntheticLambda16 -> s.y0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.AudioSink$Listener androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$9$6c38052d1ec4c67cd96b351741fc976b28b9fcad14aa891ea53278f006eacd60$0.f$0 -> f
    androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$9$6c38052d1ec4c67cd96b351741fc976b28b9fcad14aa891ea53278f006eacd60$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$9$6c38052d1ec4c67cd96b351741fc976b28b9fcad14aa891ea53278f006eacd60$0.<init>(androidx.media3.exoplayer.audio.AudioSink$Listener,androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$d;Ls/b0$a;)V"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$$InternalSyntheticLambda$9$6c38052d1ec4c67cd96b351741fc976b28b9fcad14aa891ea53278f006eacd60$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$1 -> s.z0$a:
androidx.media3.exoplayer.audio.DefaultAudioSink$Api23 -> s.z0$b:
    1:1:void setPreferredDeviceOnAudioTrack(android.media.AudioTrack,androidx.media3.exoplayer.audio.AudioDeviceInfoApi23):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioTrack;Ls/l;)V"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Api23$$ExternalSyntheticApiModelOutline0 -> s.a1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.audio.DefaultAudioSink$Api23$$InternalSyntheticApiModelOutline$9$710321c80d7e22c20fabd13bfc992a19c6cc9def24b0843021af4bf0d81e5561$0.m(android.media.AudioTrack,android.media.AudioDeviceInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Api31 -> s.z0$c:
    1:1:void setLogSessionIdOnAudioTrack(android.media.AudioTrack,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioTrack;Lr/w3;)V"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Api31$$ExternalSyntheticApiModelOutline0 -> s.b1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.audio.DefaultAudioSink$Api31$$InternalSyntheticApiModelOutline$10$77b2a26d828ec24fcf520e16fac330385fdd72386769efd36325d60d4c7e4d83$1.m(android.media.metrics.LogSessionId,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Api31$$ExternalSyntheticApiModelOutline1 -> s.c1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$Api31$$InternalSyntheticApiModelOutline$10$77b2a26d828ec24fcf520e16fac330385fdd72386769efd36325d60d4c7e4d83$2.m(android.media.AudioTrack,android.media.metrics.LogSessionId):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$AudioOffloadSupportProvider -> s.z0$d:
    androidx.media3.exoplayer.audio.AudioOffloadSupport getAudioOffloadSupport(androidx.media3.common.Format,androidx.media3.common.AudioAttributes) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lj/b;)Ls/m;"}
androidx.media3.exoplayer.audio.DefaultAudioSink$AudioTrackBufferSizeProvider -> s.z0$e:
    androidx.media3.exoplayer.audio.DefaultAudioSink$AudioTrackBufferSizeProvider DEFAULT -> a
    1:1:void <clinit>():0:0 -> <clinit>
    int getBufferSizeInBytes(int,int,int,int,int,int,double) -> a
androidx.media3.exoplayer.audio.DefaultAudioSink$Builder -> s.z0$f:
    android.content.Context context -> a
    androidx.media3.exoplayer.audio.AudioCapabilities audioCapabilities -> b
    androidx.media3.common.audio.AudioProcessorChain audioProcessorChain -> c
    boolean enableFloatOutput -> d
    boolean enableAudioTrackPlaybackParams -> e
    boolean buildCalled -> f
    androidx.media3.exoplayer.audio.DefaultAudioSink$AudioTrackBufferSizeProvider audioTrackBufferSizeProvider -> g
    androidx.media3.exoplayer.audio.DefaultAudioSink$AudioOffloadSupportProvider audioOffloadSupportProvider -> h
    androidx.media3.exoplayer.ExoPlayer$AudioOffloadListener audioOffloadListener -> i
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:android.content.Context access$100(androidx.media3.exoplayer.audio.DefaultAudioSink$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$f;)Landroid/content/Context;"}
    1:1:androidx.media3.exoplayer.ExoPlayer$AudioOffloadListener access$1000(androidx.media3.exoplayer.audio.DefaultAudioSink$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$f;)Lq/w$a;"}
    1:1:androidx.media3.exoplayer.audio.AudioCapabilities access$200(androidx.media3.exoplayer.audio.DefaultAudioSink$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$f;)Ls/e;"}
    1:1:androidx.media3.common.audio.AudioProcessorChain access$300(androidx.media3.exoplayer.audio.DefaultAudioSink$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$f;)Lk/c;"}
    1:1:boolean access$400(androidx.media3.exoplayer.audio.DefaultAudioSink$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$f;)Z"}
    1:1:boolean access$500(androidx.media3.exoplayer.audio.DefaultAudioSink$Builder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$f;)Z"}
    1:1:androidx.media3.exoplayer.audio.DefaultAudioSink$AudioTrackBufferSizeProvider access$600(androidx.media3.exoplayer.audio.DefaultAudioSink$Builder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$f;)Ls/z0$e;"}
    1:1:androidx.media3.exoplayer.audio.DefaultAudioSink$AudioOffloadSupportProvider access$700(androidx.media3.exoplayer.audio.DefaultAudioSink$Builder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$f;)Ls/z0$d;"}
    1:1:androidx.media3.exoplayer.audio.DefaultAudioSink build():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/z0;"}
    1:1:androidx.media3.exoplayer.audio.DefaultAudioSink$Builder setEnableAudioTrackPlaybackParams(boolean):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ls/z0$f;"}
    1:1:androidx.media3.exoplayer.audio.DefaultAudioSink$Builder setEnableFloatOutput(boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ls/z0$f;"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration -> s.z0$g:
    androidx.media3.common.Format inputFormat -> a
    int inputPcmFrameSize -> b
    int outputMode -> c
    int outputPcmFrameSize -> d
    int outputSampleRate -> e
    int outputChannelConfig -> f
    int outputEncoding -> g
    int bufferSize -> h
    androidx.media3.common.audio.AudioProcessingPipeline audioProcessingPipeline -> i
    boolean enableAudioTrackPlaybackParams -> j
    boolean enableOffloadGapless -> k
    boolean tunneling -> l
    1:1:void <init>(androidx.media3.common.Format,int,int,int,int,int,int,int,androidx.media3.common.audio.AudioProcessingPipeline,boolean,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;IIIIIIILk/a;ZZZ)V"}
    1:1:android.media.AudioTrack buildAudioTrack(androidx.media3.common.AudioAttributes,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;I)Landroid/media/AudioTrack;"}
    1:1:androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig buildAudioTrackConfig():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/b0$a;"}
    1:1:boolean canReuseAudioTrack(androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$g;)Z"}
    1:1:androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration copyWithBufferSize(int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ls/z0$g;"}
    1:1:android.media.AudioTrack createAudioTrack(androidx.media3.common.AudioAttributes,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;I)Landroid/media/AudioTrack;"}
    1:1:android.media.AudioTrack createAudioTrackV21(androidx.media3.common.AudioAttributes,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;I)Landroid/media/AudioTrack;"}
    1:1:android.media.AudioTrack createAudioTrackV29(androidx.media3.common.AudioAttributes,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;I)Landroid/media/AudioTrack;"}
    1:1:android.media.AudioTrack createAudioTrackV9(androidx.media3.common.AudioAttributes,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;I)Landroid/media/AudioTrack;"}
    1:1:long framesToDurationUs(long):0:0 -> i
    1:1:android.media.AudioAttributes getAudioTrackAttributesV21(androidx.media3.common.AudioAttributes,boolean):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Z)Landroid/media/AudioAttributes;"}
    1:1:android.media.AudioAttributes getAudioTrackTunnelingAttributesV21():0:0 -> k
    1:1:long inputFramesToDurationUs(long):0:0 -> l
    1:1:boolean outputModeIsOffload():0:0 -> m
androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$ExternalSyntheticApiModelOutline0 -> s.d1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioTrack$Builder androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$InternalSyntheticApiModelOutline$10$321239a258bf6657c0d434c2493ce1cf8fc82c6dc7d5f7ad30e0f53cce03e0b7$0.m(android.media.AudioTrack$Builder,android.media.AudioAttributes):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$ExternalSyntheticApiModelOutline1 -> s.e1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioTrack$Builder androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$InternalSyntheticApiModelOutline$10$321239a258bf6657c0d434c2493ce1cf8fc82c6dc7d5f7ad30e0f53cce03e0b7$1.m(android.media.AudioTrack$Builder,android.media.AudioFormat):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$ExternalSyntheticApiModelOutline2 -> s.f1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioTrack$Builder androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$InternalSyntheticApiModelOutline$10$321239a258bf6657c0d434c2493ce1cf8fc82c6dc7d5f7ad30e0f53cce03e0b7$2.m(android.media.AudioTrack$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$ExternalSyntheticApiModelOutline3 -> s.g1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioTrack$Builder androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$InternalSyntheticApiModelOutline$10$321239a258bf6657c0d434c2493ce1cf8fc82c6dc7d5f7ad30e0f53cce03e0b7$3.m(android.media.AudioTrack$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$ExternalSyntheticApiModelOutline4 -> s.h1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioTrack$Builder androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$InternalSyntheticApiModelOutline$10$321239a258bf6657c0d434c2493ce1cf8fc82c6dc7d5f7ad30e0f53cce03e0b7$4.m(android.media.AudioTrack$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$ExternalSyntheticApiModelOutline5 -> s.i1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioTrack$Builder androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$InternalSyntheticApiModelOutline$10$321239a258bf6657c0d434c2493ce1cf8fc82c6dc7d5f7ad30e0f53cce03e0b7$5.m(android.media.AudioTrack$Builder,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$ExternalSyntheticApiModelOutline6 -> s.j1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioTrack androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$InternalSyntheticApiModelOutline$10$321239a258bf6657c0d434c2493ce1cf8fc82c6dc7d5f7ad30e0f53cce03e0b7$6.m(android.media.AudioTrack$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$ExternalSyntheticApiModelOutline7 -> s.k1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioTrack$Builder androidx.media3.exoplayer.audio.DefaultAudioSink$Configuration$$InternalSyntheticApiModelOutline$15$321239a258bf6657c0d434c2493ce1cf8fc82c6dc7d5f7ad30e0f53cce03e0b7$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$DefaultAudioProcessorChain -> s.z0$h:
    androidx.media3.common.audio.AudioProcessor[] audioProcessors -> a
    androidx.media3.exoplayer.audio.SilenceSkippingAudioProcessor silenceSkippingAudioProcessor -> b
    androidx.media3.common.audio.SonicAudioProcessor sonicAudioProcessor -> c
    1:1:void <init>(androidx.media3.common.audio.AudioProcessor[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lk/b;)V"}
    2:2:void <init>(androidx.media3.common.audio.AudioProcessor[],androidx.media3.exoplayer.audio.SilenceSkippingAudioProcessor,androidx.media3.common.audio.SonicAudioProcessor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lk/b;Ls/w1;Lk/f;)V"}
    1:1:androidx.media3.common.PlaybackParameters applyPlaybackParameters(androidx.media3.common.PlaybackParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)Lj/c0;"}
    1:1:long getMediaDuration(long):0:0 -> b
    1:1:androidx.media3.common.audio.AudioProcessor[] getAudioProcessors():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lk/b;"}
    1:1:long getSkippedOutputFrameCount():0:0 -> d
    1:1:boolean applySkipSilenceEnabled(boolean):0:0 -> e
androidx.media3.exoplayer.audio.DefaultAudioSink$InvalidAudioTrackTimestampException -> s.z0$i:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,androidx.media3.exoplayer.audio.DefaultAudioSink$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ls/z0$a;)V"}
androidx.media3.exoplayer.audio.DefaultAudioSink$MediaPositionParameters -> s.z0$j:
    androidx.media3.common.PlaybackParameters playbackParameters -> a
    long mediaTimeUs -> b
    long audioTrackPositionUs -> c
    1:1:void <init>(androidx.media3.common.PlaybackParameters,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;JJ)V"}
    2:2:void <init>(androidx.media3.common.PlaybackParameters,long,long,androidx.media3.exoplayer.audio.DefaultAudioSink$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;JJLs/z0$a;)V"}
androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24 -> s.z0$k:
    android.media.AudioTrack audioTrack -> a
    androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver capabilitiesReceiver -> b
    android.media.AudioRouting$OnRoutingChangedListener listener -> c
    1:1:void <init>(android.media.AudioTrack,androidx.media3.exoplayer.audio.AudioCapabilitiesReceiver):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/AudioTrack;Ls/j;)V"}
    1:1:void $r8$lambda$HRb3r58UkCrShJGoyBtN21Qgd6c(androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24,android.media.AudioRouting):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$k;Landroid/media/AudioRouting;)V"}
    1:1:void onRoutingChanged(android.media.AudioRouting):0:0 -> b
    1:1:void release():0:0 -> c
androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$ExternalSyntheticApiModelOutline0 -> s.l1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioDeviceInfo androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$InternalSyntheticApiModelOutline$10$8152be3ef0b762e0c644fa9d1d0798f13182b2f8a1031a45b273c313ed0191f3$0.m(android.media.AudioRouting):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$ExternalSyntheticApiModelOutline1 -> s.m1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$InternalSyntheticApiModelOutline$10$c22e615f120e947b50678dd7777ce1381fc480275e50ff97659931df4fbd9d74$1.m(android.media.AudioTrack,android.media.AudioRouting$OnRoutingChangedListener,android.os.Handler):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$ExternalSyntheticApiModelOutline2 -> s.n1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.AudioRouting$OnRoutingChangedListener androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$InternalSyntheticApiModelOutline$10$cfd5df8a5f88c84ef033d21f8cfb21057992e02e800d5430ca11bbe93d0a90cc$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$ExternalSyntheticApiModelOutline3 -> s.o1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$InternalSyntheticApiModelOutline$10$cfd5df8a5f88c84ef033d21f8cfb21057992e02e800d5430ca11bbe93d0a90cc$1.m(android.media.AudioTrack,android.media.AudioRouting$OnRoutingChangedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$ExternalSyntheticLambda4 -> s.p1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24 androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$InternalSyntheticLambda$10$c22e615f120e947b50678dd7777ce1381fc480275e50ff97659931df4fbd9d74$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$InternalSyntheticLambda$10$c22e615f120e947b50678dd7777ce1381fc480275e50ff97659931df4fbd9d74$0.<init>(androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$k;)V"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$OnRoutingChangedListenerApi24$$InternalSyntheticLambda$10$c22e615f120e947b50678dd7777ce1381fc480275e50ff97659931df4fbd9d74$0.onRoutingChanged(android.media.AudioRouting):0:0 -> onRoutingChanged
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$PendingExceptionHolder -> s.z0$l:
    long throwDelayMs -> a
    java.lang.Exception pendingException -> b
    long throwDeadlineMs -> c
    1:1:void <init>(long):0:0 -> <init>
    1:1:void clear():0:0 -> a
    1:1:void throwExceptionIfDeadlineIsReached(java.lang.Exception):0:0 -> b
androidx.media3.exoplayer.audio.DefaultAudioSink$PositionTrackerListener -> s.z0$m:
    androidx.media3.exoplayer.audio.DefaultAudioSink this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;)V"}
    2:2:void <init>(androidx.media3.exoplayer.audio.DefaultAudioSink,androidx.media3.exoplayer.audio.DefaultAudioSink$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;Ls/z0$a;)V"}
    1:1:void onUnderrun(int,long):0:0 -> a
    1:1:void onPositionFramesMismatch(long,long,long,long):0:0 -> b
    1:1:void onPositionAdvancing(long):0:0 -> c
    1:1:void onInvalidLatency(long):0:0 -> d
    1:1:void onSystemTimeUsMismatch(long,long,long,long):0:0 -> e
androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29 -> s.z0$n:
    android.os.Handler handler -> a
    android.media.AudioTrack$StreamEventCallback callback -> b
    androidx.media3.exoplayer.audio.DefaultAudioSink this$0 -> c
    1:1:void <init>(androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0;)V"}
    1:1:void register(android.media.AudioTrack):0:0 -> a
    1:1:void unregister(android.media.AudioTrack):0:0 -> b
androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29$$ExternalSyntheticApiModelOutline0 -> s.q1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29$$InternalSyntheticApiModelOutline$10$32aedac12edd842a0b45f73ca0490ed24bac51cfd884243f7cc65867c5c9bc8d$0.m(android.media.AudioTrack,android.media.AudioTrack$StreamEventCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29$$ExternalSyntheticApiModelOutline1 -> s.r1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29$$InternalSyntheticApiModelOutline$10$8cc939a89647564c6b11e016ef6e1de7c66ac83d962a7645feb90016de897b46$1.m(android.media.AudioTrack,java.util.concurrent.Executor,android.media.AudioTrack$StreamEventCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29$$ExternalSyntheticLambda2 -> s.s1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.os.Handler androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29$$InternalSyntheticLambda$10$8cc939a89647564c6b11e016ef6e1de7c66ac83d962a7645feb90016de897b46$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29$$InternalSyntheticLambda$10$8cc939a89647564c6b11e016ef6e1de7c66ac83d962a7645feb90016de897b46$0.<init>(android.os.Handler):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29$$InternalSyntheticLambda$10$8cc939a89647564c6b11e016ef6e1de7c66ac83d962a7645feb90016de897b46$0.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29$1 -> s.z0$n$a:
    androidx.media3.exoplayer.audio.DefaultAudioSink val$this$0 -> a
    androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29 this$1 -> b
    1:1:void <init>(androidx.media3.exoplayer.audio.DefaultAudioSink$StreamEventCallbackV29,androidx.media3.exoplayer.audio.DefaultAudioSink):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/z0$n;Ls/z0;)V"}
    1:1:void onDataRequest(android.media.AudioTrack,int):0:0 -> onDataRequest
    1:1:void onPresentationEnded(android.media.AudioTrack):0:0 -> onPresentationEnded
    1:1:void onTearDown(android.media.AudioTrack):0:0 -> onTearDown
androidx.media3.exoplayer.audio.DefaultAudioTrackBufferSizeProvider -> s.t1:
    int minPcmBufferDurationUs -> b
    int maxPcmBufferDurationUs -> c
    int pcmBufferMultiplicationFactor -> d
    int passthroughBufferDurationUs -> e
    int offloadBufferDurationUs -> f
    int ac3BufferMultiplicationFactor -> g
    int dtshdBufferMultiplicationFactor -> h
    1:1:void <init>(androidx.media3.exoplayer.audio.DefaultAudioTrackBufferSizeProvider$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/t1$a;)V"}
    1:1:int getBufferSizeInBytes(int,int,int,int,int,int,double):0:0 -> a
    1:1:int durationUsToBytes(int,int,int):0:0 -> b
    1:1:int get1xBufferSizeInBytes(int,int,int,int,int,int):0:0 -> c
    1:1:int getMaximumEncodedRateBytesPerSecond(int):0:0 -> d
    1:1:int getOffloadBufferSizeInBytes(int):0:0 -> e
    1:1:int getPassthroughBufferSizeInBytes(int,int):0:0 -> f
    1:1:int getPcmBufferSizeInBytes(int,int,int):0:0 -> g
androidx.media3.exoplayer.audio.DefaultAudioTrackBufferSizeProvider$Builder -> s.t1$a:
    int minPcmBufferDurationUs -> a
    int maxPcmBufferDurationUs -> b
    int pcmBufferMultiplicationFactor -> c
    int passthroughBufferDurationUs -> d
    int offloadBufferDurationUs -> e
    int ac3BufferMultiplicationFactor -> f
    int dtshdBufferMultiplicationFactor -> g
    1:1:void <init>():0:0 -> <init>
    1:1:int access$000(androidx.media3.exoplayer.audio.DefaultAudioTrackBufferSizeProvider$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/t1$a;)I"}
    1:1:int access$100(androidx.media3.exoplayer.audio.DefaultAudioTrackBufferSizeProvider$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/t1$a;)I"}
    1:1:int access$200(androidx.media3.exoplayer.audio.DefaultAudioTrackBufferSizeProvider$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/t1$a;)I"}
    1:1:int access$300(androidx.media3.exoplayer.audio.DefaultAudioTrackBufferSizeProvider$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/t1$a;)I"}
    1:1:int access$400(androidx.media3.exoplayer.audio.DefaultAudioTrackBufferSizeProvider$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/t1$a;)I"}
    1:1:int access$500(androidx.media3.exoplayer.audio.DefaultAudioTrackBufferSizeProvider$Builder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/t1$a;)I"}
    1:1:int access$600(androidx.media3.exoplayer.audio.DefaultAudioTrackBufferSizeProvider$Builder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/t1$a;)I"}
    1:1:androidx.media3.exoplayer.audio.DefaultAudioTrackBufferSizeProvider build():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls/t1;"}
androidx.media3.exoplayer.audio.MediaCodecAudioRenderer -> s.u1:
    android.content.Context context -> M0
    androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher eventDispatcher -> N0
    androidx.media3.exoplayer.audio.AudioSink audioSink -> O0
    int codecMaxInputSize -> P0
    boolean codecNeedsDiscardChannelsWorkaround -> Q0
    boolean codecNeedsVorbisToAndroidChannelMappingWorkaround -> R0
    androidx.media3.common.Format inputFormat -> S0
    androidx.media3.common.Format decryptOnlyCodecFormat -> T0
    long currentPositionUs -> U0
    boolean allowPositionDiscontinuity -> V0
    boolean audioSinkNeedsReset -> W0
    boolean hasPendingReportedSkippedSilence -> X0
    int rendererPriority -> Y0
    boolean isStarted -> Z0
    long nextBufferToWritePresentationTimeUs -> a1
    1:1:void <init>(android.content.Context,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,boolean,android.os.Handler,androidx.media3.exoplayer.audio.AudioRendererEventListener,androidx.media3.exoplayer.audio.AudioSink):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lz/p$b;Lz/e0;ZLandroid/os/Handler;Ls/z;Ls/b0;)V"}
    1:1:void renderToEndOfStream():0:0 -> A1
    1:1:androidx.media3.exoplayer.MediaClock getMediaClock():0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/z1;"}
    1:1:boolean hasSkippedSilenceSinceLastCall():0:0 -> E
    1:1:void handleMessage(int,java.lang.Object):0:0 -> H
    1:1:long getPositionUs():0:0 -> K
    1:1:float getCodecOperatingRateV23(float,androidx.media3.common.Format,androidx.media3.common.Format[]):0:0 -> M0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FLj/q;[Lj/q;)F"}
    1:1:boolean shouldUseBypass(androidx.media3.common.Format):0:0 -> N1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:java.util.List getDecoderInfos(androidx.media3.exoplayer.mediacodec.MediaCodecSelector,androidx.media3.common.Format,boolean):0:0 -> O0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/e0;Lj/q;Z)Ljava/util/List;"}
    1:1:int supportsFormat(androidx.media3.exoplayer.mediacodec.MediaCodecSelector,androidx.media3.common.Format):0:0 -> O1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/e0;Lj/q;)I"}
    1:1:long getDurationToProgressUs(boolean,long,long):0:0 -> P0
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration getMediaCodecConfiguration(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format,android.media.MediaCrypto,float):0:0 -> R0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;Landroid/media/MediaCrypto;F)Lz/p$a;"}
    1:1:boolean access$102(androidx.media3.exoplayer.audio.MediaCodecAudioRenderer,boolean):0:0 -> T1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/u1;Z)Z"}
    1:1:androidx.media3.exoplayer.audio.AudioRendererEventListener$EventDispatcher access$200(androidx.media3.exoplayer.audio.MediaCodecAudioRenderer):0:0 -> U1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/u1;)Ls/z$a;"}
    1:1:androidx.media3.exoplayer.Renderer$WakeupListener access$300(androidx.media3.exoplayer.audio.MediaCodecAudioRenderer):0:0 -> V1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/u1;)Lq/x2$a;"}
    1:1:void onDisabled():0:0 -> W
    1:1:void handleInputBufferSupplementalData(androidx.media3.decoder.DecoderInputBuffer):0:0 -> W0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)V"}
    1:1:androidx.media3.exoplayer.Renderer$WakeupListener access$400(androidx.media3.exoplayer.audio.MediaCodecAudioRenderer):0:0 -> W1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/u1;)Lq/x2$a;"}
    1:1:void onEnabled(boolean,boolean):0:0 -> X
    1:1:void access$500(androidx.media3.exoplayer.audio.MediaCodecAudioRenderer):0:0 -> X1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/u1;)V"}
    1:1:boolean codecNeedsDiscardChannelsWorkaround(java.lang.String):0:0 -> Y1
    1:1:void onPositionReset(long,boolean):0:0 -> Z
    1:1:boolean codecNeedsVorbisToAndroidChannelMappingWorkaround(java.lang.String):0:0 -> Z1
    1:1:void onRelease():0:0 -> a0
    1:1:boolean deviceDoesntSupportOperatingRate():0:0 -> a2
    1:1:int getAudioOffloadSupport(androidx.media3.common.Format):0:0 -> b2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:boolean isEnded():0:0 -> c
    1:1:void onReset():0:0 -> c0
    1:1:int getCodecMaxInputSize(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format):0:0 -> c2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;)I"}
    1:1:void onStarted():0:0 -> d0
    1:1:int getCodecMaxInputSize(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format,androidx.media3.common.Format[]):0:0 -> d2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;[Lj/q;)I"}
    1:1:boolean isReady():0:0 -> e
    1:1:void onStopped():0:0 -> e0
    1:1:java.util.List getDecoderInfos(androidx.media3.exoplayer.mediacodec.MediaCodecSelector,androidx.media3.common.Format,boolean,androidx.media3.exoplayer.audio.AudioSink):0:0 -> e2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/e0;Lj/q;ZLs/b0;)Ljava/util/List;"}
    1:1:android.media.MediaFormat getMediaFormat(androidx.media3.common.Format,java.lang.String,int,float):0:0 -> f2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Ljava/lang/String;IF)Landroid/media/MediaFormat;"}
    1:1:androidx.media3.common.PlaybackParameters getPlaybackParameters():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/c0;"}
    1:1:void onPositionDiscontinuity():0:0 -> g2
    1:1:void setPlaybackParameters(androidx.media3.common.PlaybackParameters):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    1:1:void updateCodecImportance():0:0 -> h2
    1:1:void updateCurrentPosition():0:0 -> i2
    1:1:void onCodecError(java.lang.Exception):0:0 -> k1
    1:1:void onCodecInitialized(java.lang.String,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration,long,long):0:0 -> l1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz/p$a;JJ)V"}
    1:1:void onCodecReleased(java.lang.String):0:0 -> m1
    1:1:java.lang.String getName():0:0 -> n
    1:1:androidx.media3.exoplayer.DecoderReuseEvaluation canReuseCodec(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format,androidx.media3.common.Format):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;Lj/q;)Lq/p;"}
    1:1:androidx.media3.exoplayer.DecoderReuseEvaluation onInputFormatChanged(androidx.media3.exoplayer.FormatHolder):0:0 -> n1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;)Lq/p;"}
    1:1:void onOutputFormatChanged(androidx.media3.common.Format,android.media.MediaFormat):0:0 -> o1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Landroid/media/MediaFormat;)V"}
    1:1:void onOutputStreamOffsetUsChanged(long):0:0 -> p1
    1:1:void onProcessedStreamChange():0:0 -> r1
    1:1:boolean processOutputBuffer(long,long,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,java.nio.ByteBuffer,int,int,int,long,boolean,boolean,androidx.media3.common.Format):0:0 -> v1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJLz/p;Ljava/nio/ByteBuffer;IIIJZZLj/q;)Z"}
androidx.media3.exoplayer.audio.MediaCodecAudioRenderer$1 -> s.u1$a:
androidx.media3.exoplayer.audio.MediaCodecAudioRenderer$Api23 -> s.u1$b:
    1:1:void setAudioSinkPreferredDevice(androidx.media3.exoplayer.audio.AudioSink,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0;Ljava/lang/Object;)V"}
androidx.media3.exoplayer.audio.MediaCodecAudioRenderer$AudioSinkListener -> s.u1$c:
    androidx.media3.exoplayer.audio.MediaCodecAudioRenderer this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.audio.MediaCodecAudioRenderer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/u1;)V"}
    2:2:void <init>(androidx.media3.exoplayer.audio.MediaCodecAudioRenderer,androidx.media3.exoplayer.audio.MediaCodecAudioRenderer$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/u1;Ls/u1$a;)V"}
    1:1:void onAudioTrackInitialized(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    1:1:void onAudioTrackReleased(androidx.media3.exoplayer.audio.AudioSink$AudioTrackConfig):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls/b0$a;)V"}
    1:1:void onPositionAdvancing(long):0:0 -> c
    1:1:void onSkipSilenceEnabledChanged(boolean):0:0 -> d
    1:1:void onAudioSinkError(java.lang.Exception):0:0 -> e
    1:1:void onAudioCapabilitiesChanged():0:0 -> f
    1:1:void onOffloadBufferEmptying():0:0 -> g
    1:1:void onSilenceSkipped():0:0 -> h
    1:1:void onPositionDiscontinuity():0:0 -> i
    1:1:void onUnderrun(int,long,long):0:0 -> j
    1:1:void onOffloadBufferFull():0:0 -> k
androidx.media3.exoplayer.audio.OggOpusAudioPacketizer -> s.v1:
    java.nio.ByteBuffer outputBuffer -> a
    int pageSequenceNumber -> b
    int granulePosition -> c
    byte[] OGG_DEFAULT_ID_HEADER_PAGE -> d
    byte[] OGG_DEFAULT_COMMENT_HEADER_PAGE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void packetize(androidx.media3.decoder.DecoderInputBuffer,java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;Ljava/util/List;)V"}
    1:1:java.nio.ByteBuffer packetizeInternal(java.nio.ByteBuffer,byte[]):0:0 -> b
    1:1:java.nio.ByteBuffer replaceOutputBuffer(int):0:0 -> c
    1:1:void reset():0:0 -> d
    1:1:void writeOggIdHeaderPage(java.nio.ByteBuffer,byte[]):0:0 -> e
    1:1:void writeOggPacketHeader(java.nio.ByteBuffer,long,int,int,boolean):0:0 -> f
androidx.media3.exoplayer.audio.SilenceSkippingAudioProcessor -> s.w1:
    float silenceRetentionRatio -> i
    short silenceThresholdLevel -> j
    int minVolumeToKeepPercentageWhenMuting -> k
    long minimumSilenceDurationUs -> l
    long maxSilenceToKeepDurationUs -> m
    int bytesPerFrame -> n
    boolean enabled -> o
    int state -> p
    long skippedFrames -> q
    int outputSilenceFramesSinceNoise -> r
    byte[] maybeSilenceBuffer -> s
    int maybeSilenceBufferStartIndex -> t
    int maybeSilenceBufferContentsSize -> u
    byte[] contiguousOutputBuffer -> v
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(long,float,long,int,short):0:0 -> <init>
    1:1:void outputShortenedSilenceBuffer(boolean):0:0 -> A
    1:1:void outputSilence(int,int):0:0 -> B
    1:1:void processNoisy(java.nio.ByteBuffer):0:0 -> C
    1:1:void sampleIntToTwoBigEndianBytes(byte[],int,int):0:0 -> D
    1:1:void setEnabled(boolean):0:0 -> E
    1:1:void shortenSilenceSilenceUntilNoise(java.nio.ByteBuffer):0:0 -> F
    1:1:int twoByteSampleToInt(byte,byte):0:0 -> G
    1:1:boolean isActive():0:0 -> d
    1:1:void queueInput(java.nio.ByteBuffer):0:0 -> h
    1:1:androidx.media3.common.audio.AudioProcessor$AudioFormat onConfigure(androidx.media3.common.audio.AudioProcessor$AudioFormat):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/b$a;)Lk/b$a;"}
    1:1:void onFlush():0:0 -> j
    1:1:void onQueueEndOfStream():0:0 -> k
    1:1:void onReset():0:0 -> l
    1:1:int alignToBytePerFrameBoundary(float):0:0 -> n
    1:1:int alignToBytePerFrameBoundary(int):0:0 -> o
    1:1:int calculateFadeInPercentage(int,int):0:0 -> p
    1:1:int calculateFadeOutPercentage(int,int):0:0 -> q
    1:1:int calculateShortenedSilenceLength(int):0:0 -> r
    1:1:int durationUsToFrames(long):0:0 -> s
    1:1:int findNoiseLimit(java.nio.ByteBuffer):0:0 -> t
    1:1:int findNoisePosition(java.nio.ByteBuffer):0:0 -> u
    1:1:long getSkippedFrames():0:0 -> v
    1:1:boolean isNoise(byte,byte):0:0 -> w
    1:1:void modifyVolume(byte[],int,int):0:0 -> x
    1:1:void output(java.nio.ByteBuffer):0:0 -> y
    1:1:void outputRange(byte[],int,int):0:0 -> z
androidx.media3.exoplayer.audio.ToFloatPcmAudioProcessor -> s.x1:
    int FLOAT_NAN_AS_INT -> i
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void queueInput(java.nio.ByteBuffer):0:0 -> h
    1:1:androidx.media3.common.audio.AudioProcessor$AudioFormat onConfigure(androidx.media3.common.audio.AudioProcessor$AudioFormat):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/b$a;)Lk/b$a;"}
    1:1:void writePcm32BitFloat(int,java.nio.ByteBuffer):0:0 -> n
androidx.media3.exoplayer.audio.TrimmingAudioProcessor -> s.y1:
    int trimStartFrames -> i
    int trimEndFrames -> j
    boolean reconfigurationPending -> k
    int pendingTrimStartBytes -> l
    byte[] endBuffer -> m
    int endBufferSize -> n
    long trimmedFrameCount -> o
    1:1:void <init>():0:0 -> <init>
    1:1:boolean isEnded():0:0 -> c
    1:1:java.nio.ByteBuffer getOutput():0:0 -> e
    1:1:void queueInput(java.nio.ByteBuffer):0:0 -> h
    1:1:androidx.media3.common.audio.AudioProcessor$AudioFormat onConfigure(androidx.media3.common.audio.AudioProcessor$AudioFormat):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk/b$a;)Lk/b$a;"}
    1:1:void onFlush():0:0 -> j
    1:1:void onQueueEndOfStream():0:0 -> k
    1:1:void onReset():0:0 -> l
    1:1:long getTrimmedFrameCount():0:0 -> n
    1:1:void resetTrimmedFrameCount():0:0 -> o
    1:1:void setTrimFrameCount(int,int):0:0 -> p
androidx.media3.exoplayer.dash.BaseUrlExclusionList -> t.b:
    java.util.Map excludedServiceLocations -> a
    java.util.Map excludedPriorities -> b
    java.util.Map selectionsTaken -> c
    java.util.Random random -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(java.util.Random):0:0 -> <init>
    1:1:int $r8$lambda$ntLYs6AQqIcuPK7Mh8WMiBBjXHE(androidx.media3.exoplayer.dash.manifest.BaseUrl,androidx.media3.exoplayer.dash.manifest.BaseUrl):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/b;Lu/b;)I"}
    1:1:void addExclusion(java.lang.Object,long,java.util.Map):0:0 -> b
    1:1:java.util.List applyExclusions(java.util.List):0:0 -> c
    1:1:int compareBaseUrl(androidx.media3.exoplayer.dash.manifest.BaseUrl,androidx.media3.exoplayer.dash.manifest.BaseUrl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/b;Lu/b;)I"}
    1:1:void exclude(androidx.media3.exoplayer.dash.manifest.BaseUrl,long):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/b;J)V"}
    1:1:int getPriorityCount(java.util.List):0:0 -> f
    1:1:int getPriorityCountAfterExclusion(java.util.List):0:0 -> g
    1:1:void removeExpiredExclusions(long,java.util.Map):0:0 -> h
    1:1:void reset():0:0 -> i
    1:1:androidx.media3.exoplayer.dash.manifest.BaseUrl selectBaseUrl(java.util.List):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lu/b;"}
    1:1:androidx.media3.exoplayer.dash.manifest.BaseUrl selectWeighted(java.util.List):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lu/b;"}
androidx.media3.exoplayer.dash.BaseUrlExclusionList$$ExternalSyntheticLambda0 -> t.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.dash.BaseUrlExclusionList$$InternalSyntheticLambda$10$6a8583be445461268b5e27920c493fa6a9b12e593591593f400df5d82c7c350b$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.dash.BaseUrlExclusionList$$InternalSyntheticLambda$10$6a8583be445461268b5e27920c493fa6a9b12e593591593f400df5d82c7c350b$0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.dash.DashChunkSource -> androidx.media3.exoplayer.dash.a:
    void updateTrackSelection(androidx.media3.exoplayer.trackselection.ExoTrackSelection) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;)V"}
    void updateManifest(androidx.media3.exoplayer.dash.manifest.DashManifest,int) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/c;I)V"}
androidx.media3.exoplayer.dash.DashChunkSource$Factory -> androidx.media3.exoplayer.dash.a$a:
    androidx.media3.exoplayer.dash.DashChunkSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Landroidx/media3/exoplayer/dash/a$a;"}
    androidx.media3.exoplayer.dash.DashChunkSource$Factory experimentalParseSubtitlesDuringExtraction(boolean) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroidx/media3/exoplayer/dash/a$a;"}
    androidx.media3.common.Format getOutputTextFormat(androidx.media3.common.Format) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
    androidx.media3.exoplayer.dash.DashChunkSource createDashChunkSource(androidx.media3.exoplayer.upstream.LoaderErrorThrower,androidx.media3.exoplayer.dash.manifest.DashManifest,androidx.media3.exoplayer.dash.BaseUrlExclusionList,int,int[],androidx.media3.exoplayer.trackselection.ExoTrackSelection,int,long,boolean,java.util.List,androidx.media3.exoplayer.dash.PlayerEmsgHandler$PlayerTrackEmsgHandler,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.analytics.PlayerId,androidx.media3.exoplayer.upstream.CmcdConfiguration) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/o;Lu/c;Lt/b;I[ILj0/y;IJZLjava/util/List;Landroidx/media3/exoplayer/dash/f$c;Lo/y;Lr/w3;Lk0/f;)Landroidx/media3/exoplayer/dash/a;"}
androidx.media3.exoplayer.dash.DashManifestStaleException -> t.c:
    void <init>() -> <init>
androidx.media3.exoplayer.dash.DashMediaPeriod -> androidx.media3.exoplayer.dash.c:
    androidx.media3.exoplayer.dash.manifest.DashManifest manifest -> A
    int periodIndex -> B
    java.util.List eventStreams -> C
    java.util.regex.Pattern CEA608_SERVICE_DESCRIPTOR_REGEX -> D
    java.util.regex.Pattern CEA708_SERVICE_DESCRIPTOR_REGEX -> E
    int id -> f
    androidx.media3.exoplayer.dash.DashChunkSource$Factory chunkSourceFactory -> g
    androidx.media3.datasource.TransferListener transferListener -> h
    androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager -> i
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> j
    androidx.media3.exoplayer.dash.BaseUrlExclusionList baseUrlExclusionList -> k
    long elapsedRealtimeOffsetMs -> l
    androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower -> m
    androidx.media3.exoplayer.upstream.Allocator allocator -> n
    androidx.media3.exoplayer.source.TrackGroupArray trackGroups -> o
    androidx.media3.exoplayer.dash.DashMediaPeriod$TrackGroupInfo[] trackGroupInfos -> p
    androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory -> q
    androidx.media3.exoplayer.dash.PlayerEmsgHandler playerEmsgHandler -> r
    java.util.IdentityHashMap trackEmsgHandlerBySampleStream -> s
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher -> t
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher -> u
    androidx.media3.exoplayer.analytics.PlayerId playerId -> v
    androidx.media3.exoplayer.source.MediaPeriod$Callback callback -> w
    androidx.media3.exoplayer.source.chunk.ChunkSampleStream[] sampleStreams -> x
    androidx.media3.exoplayer.dash.EventSampleStream[] eventSampleStreams -> y
    androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader -> z
    1:1:void <init>(int,androidx.media3.exoplayer.dash.manifest.DashManifest,androidx.media3.exoplayer.dash.BaseUrlExclusionList,int,androidx.media3.exoplayer.dash.DashChunkSource$Factory,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.upstream.CmcdConfiguration,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,long,androidx.media3.exoplayer.upstream.LoaderErrorThrower,androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.dash.PlayerEmsgHandler$PlayerEmsgCallback,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILu/c;Lt/b;ILandroidx/media3/exoplayer/dash/a$a;Lo/y;Lk0/f;Lv/x;Lv/v$a;Lk0/m;Lg0/m0$a;JLk0/o;Lk0/b;Lg0/j;Landroidx/media3/exoplayer/dash/f$b;Lr/w3;)V"}
    1:1:androidx.media3.common.Format[] getClosedCaptionTrackFormats(java.util.List,int[]):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;[I)[Lj/q;"}
    1:1:int[][] getGroupedAdaptationSetIndices(java.util.List):0:0 -> B
    1:1:int getPrimaryStreamIndex(int,int[]):0:0 -> C
    1:1:int[] getStreamIndexToTrackGroupIndex(androidx.media3.exoplayer.trackselection.ExoTrackSelection[]):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;)[I"}
    1:1:boolean hasEventMessageTrack(java.util.List,int[]):0:0 -> E
    1:1:int identifyEmbeddedTracks(int,java.util.List,int[][],boolean[],androidx.media3.common.Format[][]):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/util/List;[[I[Z[[Lj/q;)I"}
    1:1:java.util.List lambda$selectTracks$0(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)Ljava/util/List;"}
    1:1:void maybeUpdateFormatsForParsedText(androidx.media3.exoplayer.dash.DashChunkSource$Factory,androidx.media3.common.Format[]):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/a$a;[Lj/q;)V"}
    1:1:androidx.media3.exoplayer.source.chunk.ChunkSampleStream[] newSampleStreamArray(int):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lh0/h;"}
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)V"}
    1:1:androidx.media3.common.Format[] parseClosedCaptionDescriptor(androidx.media3.exoplayer.dash.manifest.Descriptor,java.util.regex.Pattern,androidx.media3.common.Format):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/e;Ljava/util/regex/Pattern;Lj/q;)[Lj/q;"}
    1:1:void release():0:0 -> L
    1:1:void releaseDisabledStreams(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[]):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;)V"}
    1:1:void releaseOrphanEmbeddedStreams(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],androidx.media3.exoplayer.source.SampleStream[],int[]):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Lg0/b1;[I)V"}
    1:1:void selectNewStreams(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long,int[]):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Lg0/b1;[ZJ[I)V"}
    1:1:void updateManifest(androidx.media3.exoplayer.dash.manifest.DashManifest,int):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/c;I)V"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c1;)V"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:void onSampleStreamReleased(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)V"}
    1:1:void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    1:1:java.util.List $r8$lambda$TUHs_IqLfMVO7vbZCLrTBS_Mfpo(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)Ljava/util/List;"}
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:long seekToUs(long):0:0 -> r
    1:1:void buildManifestEventTrackGroupInfos(java.util.List,androidx.media3.common.TrackGroup[],androidx.media3.exoplayer.dash.DashMediaPeriod$TrackGroupInfo[],int):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;[Lj/j0;[Landroidx/media3/exoplayer/dash/c$a;I)V"}
    1:1:int buildPrimaryAndEmbeddedTrackGroupInfos(androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.dash.DashChunkSource$Factory,java.util.List,int[][],int,boolean[],androidx.media3.common.Format[][],androidx.media3.common.TrackGroup[],androidx.media3.exoplayer.dash.DashMediaPeriod$TrackGroupInfo[]):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/x;Landroidx/media3/exoplayer/dash/a$a;Ljava/util/List;[[II[Z[[Lj/q;[Lj/j0;[Landroidx/media3/exoplayer/dash/c$a;)I"}
    1:1:androidx.media3.exoplayer.source.chunk.ChunkSampleStream buildSampleStream(androidx.media3.exoplayer.dash.DashMediaPeriod$TrackGroupInfo,androidx.media3.exoplayer.trackselection.ExoTrackSelection,long):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/c$a;Lj0/y;J)Lh0/h;"}
    1:1:long readDiscontinuity():0:0 -> v
    1:1:android.util.Pair buildTrackGroups(androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.dash.DashChunkSource$Factory,java.util.List,java.util.List):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/x;Landroidx/media3/exoplayer/dash/a$a;Ljava/util/List;Ljava/util/List;)Landroid/util/Pair;"}
    1:1:androidx.media3.exoplayer.dash.manifest.Descriptor findAdaptationSetSwitchingProperty(java.util.List):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lu/e;"}
    1:1:androidx.media3.exoplayer.dash.manifest.Descriptor findDescriptor(java.util.List,java.lang.String):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ljava/lang/String;)Lu/e;"}
    1:1:androidx.media3.exoplayer.dash.manifest.Descriptor findTrickPlayProperty(java.util.List):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lu/e;"}
androidx.media3.exoplayer.dash.DashMediaPeriod$$ExternalSyntheticLambda0 -> androidx.media3.exoplayer.dash.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.dash.DashMediaPeriod$$InternalSyntheticLambda$9$c3fd200f336a091c57217da0e4a022a4213b2f94d14b7507dac2404ee2a937bb$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.dash.DashMediaPeriod$$InternalSyntheticLambda$9$c3fd200f336a091c57217da0e4a022a4213b2f94d14b7507dac2404ee2a937bb$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.dash.DashMediaPeriod$TrackGroupInfo -> androidx.media3.exoplayer.dash.c$a:
    int[] adaptationSetIndices -> a
    int trackType -> b
    int trackGroupCategory -> c
    int eventStreamGroupIndex -> d
    int primaryTrackGroupIndex -> e
    int embeddedEventMessageTrackGroupIndex -> f
    int embeddedClosedCaptionTrackGroupIndex -> g
    com.google.common.collect.ImmutableList embeddedClosedCaptionTrackOriginalFormats -> h
    1:1:void <init>(int,int,int[],int,int,int,int,com.google.common.collect.ImmutableList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II[IIIIILl2/v;)V"}
    1:1:androidx.media3.exoplayer.dash.DashMediaPeriod$TrackGroupInfo embeddedClosedCaptionTrack(int[],int,com.google.common.collect.ImmutableList):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([IILl2/v;)Landroidx/media3/exoplayer/dash/c$a;"}
    1:1:androidx.media3.exoplayer.dash.DashMediaPeriod$TrackGroupInfo embeddedEmsgTrack(int[],int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([II)Landroidx/media3/exoplayer/dash/c$a;"}
    1:1:androidx.media3.exoplayer.dash.DashMediaPeriod$TrackGroupInfo mpdEventTrack(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/media3/exoplayer/dash/c$a;"}
    1:1:androidx.media3.exoplayer.dash.DashMediaPeriod$TrackGroupInfo primaryTrack(int,int[],int,int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[IIII)Landroidx/media3/exoplayer/dash/c$a;"}
androidx.media3.exoplayer.dash.DashMediaSource -> androidx.media3.exoplayer.dash.DashMediaSource:
    java.lang.Runnable refreshManifestRunnable -> A
    java.lang.Runnable simulateManifestRefreshRunnable -> B
    androidx.media3.exoplayer.dash.PlayerEmsgHandler$PlayerEmsgCallback playerEmsgCallback -> C
    androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoadErrorThrower -> D
    androidx.media3.datasource.DataSource dataSource -> E
    androidx.media3.exoplayer.upstream.Loader loader -> F
    androidx.media3.datasource.TransferListener mediaTransferListener -> G
    java.io.IOException manifestFatalError -> H
    android.os.Handler handler -> I
    androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration -> J
    android.net.Uri manifestUri -> K
    android.net.Uri initialManifestUri -> L
    androidx.media3.exoplayer.dash.manifest.DashManifest manifest -> M
    boolean manifestLoadPending -> N
    long manifestLoadStartTimestampMs -> O
    long manifestLoadEndTimestampMs -> P
    long elapsedRealtimeOffsetMs -> Q
    int staleManifestReloadAttempt -> R
    long expiredManifestPublishTimeUs -> S
    int firstPeriodId -> T
    androidx.media3.common.MediaItem mediaItem -> U
    boolean sideloadedManifest -> m
    androidx.media3.datasource.DataSource$Factory manifestDataSourceFactory -> n
    androidx.media3.exoplayer.dash.DashChunkSource$Factory chunkSourceFactory -> o
    androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory -> p
    androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager -> q
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> r
    androidx.media3.exoplayer.dash.BaseUrlExclusionList baseUrlExclusionList -> s
    long fallbackTargetLiveOffsetMs -> t
    long minLiveStartPositionUs -> u
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher manifestEventDispatcher -> v
    androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser -> w
    androidx.media3.exoplayer.dash.DashMediaSource$ManifestCallback manifestCallback -> x
    java.lang.Object manifestUriLock -> y
    android.util.SparseArray periodsById -> z
    1:1:void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.dash.manifest.DashManifest,androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.exoplayer.dash.DashChunkSource$Factory,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.upstream.CmcdConfiguration,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Lu/c;Lo/g$a;Lk0/p$a;Landroidx/media3/exoplayer/dash/a$a;Lg0/j;Lk0/f;Lv/x;Lk0/m;JJ)V"}
    2:2:void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.dash.manifest.DashManifest,androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.exoplayer.dash.DashChunkSource$Factory,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.upstream.CmcdConfiguration,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,long,long,androidx.media3.exoplayer.dash.DashMediaSource$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Lu/c;Lo/g$a;Lk0/p$a;Landroidx/media3/exoplayer/dash/a$a;Lg0/j;Lk0/f;Lv/x;Lk0/m;JJLandroidx/media3/exoplayer/dash/DashMediaSource$a;)V"}
    1:1:void prepareSourceInternal(androidx.media3.datasource.TransferListener):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:void releaseSourceInternal():0:0 -> E
    1:1:void $r8$lambda$3bzidoHGVuXNM20rBwQc9nSdumM(androidx.media3.exoplayer.dash.DashMediaSource):0:0 -> F
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$bjPSyv091RXo7Z8FfABbHZYQsso(androidx.media3.exoplayer.dash.DashMediaSource):0:0 -> G
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void access$500(androidx.media3.exoplayer.dash.DashMediaSource,long):0:0 -> H
    1:1:void access$600(androidx.media3.exoplayer.dash.DashMediaSource,java.io.IOException):0:0 -> I
    1:1:androidx.media3.exoplayer.upstream.Loader access$700(androidx.media3.exoplayer.dash.DashMediaSource):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/DashMediaSource;)Lk0/n;"}
    1:1:java.io.IOException access$800(androidx.media3.exoplayer.dash.DashMediaSource):0:0 -> K
    1:1:long getAvailableEndTimeInManifestUs(androidx.media3.exoplayer.dash.manifest.Period,long,long):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/g;JJ)J"}
    1:1:long getAvailableStartTimeInManifestUs(androidx.media3.exoplayer.dash.manifest.Period,long,long):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/g;JJ)J"}
    1:1:long getIntervalUntilNextManifestRefreshMs(androidx.media3.exoplayer.dash.manifest.DashManifest,long):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/c;J)J"}
    1:1:long getManifestLoadRetryDelayMillis():0:0 -> O
    1:1:boolean hasVideoOrAudioAdaptationSets(androidx.media3.exoplayer.dash.manifest.Period):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/g;)Z"}
    1:1:boolean isIndexExplicit(androidx.media3.exoplayer.dash.manifest.Period):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/g;)Z"}
    1:1:void lambda$new$0():0:0 -> R
    1:1:void loadNtpTimeOffset():0:0 -> S
    1:1:void onDashManifestPublishTimeExpired(long):0:0 -> T
    1:1:void onDashManifestRefreshRequested():0:0 -> U
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJ)V"}
    1:1:void onManifestLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onManifestLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,java.io.IOException,int):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onUtcTimestampLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onUtcTimestampLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,java.io.IOException):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJLjava/io/IOException;)Lk0/n$c;"}
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:void onUtcTimestampResolutionError(java.io.IOException):0:0 -> a0
    1:1:void onUtcTimestampResolved(long):0:0 -> b0
    1:1:void processManifest(boolean):0:0 -> c0
    1:1:void resolveUtcTimingElement(androidx.media3.exoplayer.dash.manifest.UtcTimingElement):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/o;)V"}
    1:1:void resolveUtcTimingElementDirect(androidx.media3.exoplayer.dash.manifest.UtcTimingElement):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/o;)V"}
    1:1:void updateMediaItem(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:void resolveUtcTimingElementHttp(androidx.media3.exoplayer.dash.manifest.UtcTimingElement,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/o;Lk0/p$a;)V"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    1:1:void scheduleManifestRefresh(long):0:0 -> g0
    1:1:void maybeThrowSourceInfoRefreshError():0:0 -> h
    1:1:void startLoading(androidx.media3.exoplayer.upstream.ParsingLoadable,androidx.media3.exoplayer.upstream.Loader$Callback,int):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;Lk0/n$b;I)V"}
    1:1:void startLoadingManifest():0:0 -> i0
    1:1:void updateLiveConfiguration(long,long):0:0 -> j0
    1:1:void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
androidx.media3.exoplayer.dash.DashMediaSource$$ExternalSyntheticLambda0 -> t.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.dash.DashMediaSource androidx.media3.exoplayer.dash.DashMediaSource$$InternalSyntheticLambda$7$45bd12a9dcfb39c901e152088be8389b43b7d7c82f16181afb895599dbec30b0$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.dash.DashMediaSource$$InternalSyntheticLambda$7$45bd12a9dcfb39c901e152088be8389b43b7d7c82f16181afb895599dbec30b0$0.<init>(androidx.media3.exoplayer.dash.DashMediaSource):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.dash.DashMediaSource$$InternalSyntheticLambda$7$45bd12a9dcfb39c901e152088be8389b43b7d7c82f16181afb895599dbec30b0$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.dash.DashMediaSource$$ExternalSyntheticLambda1 -> t.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.dash.DashMediaSource androidx.media3.exoplayer.dash.DashMediaSource$$InternalSyntheticLambda$7$45bd12a9dcfb39c901e152088be8389b43b7d7c82f16181afb895599dbec30b0$1.f$0 -> f
    1:1:void androidx.media3.exoplayer.dash.DashMediaSource$$InternalSyntheticLambda$7$45bd12a9dcfb39c901e152088be8389b43b7d7c82f16181afb895599dbec30b0$1.<init>(androidx.media3.exoplayer.dash.DashMediaSource):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.dash.DashMediaSource$$InternalSyntheticLambda$7$45bd12a9dcfb39c901e152088be8389b43b7d7c82f16181afb895599dbec30b0$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.dash.DashMediaSource$1 -> androidx.media3.exoplayer.dash.DashMediaSource$a:
    androidx.media3.exoplayer.dash.DashMediaSource this$0 -> a
    1:1:void onInitialized():0:0 -> a
    1:1:void onInitializationFailed(java.io.IOException):0:0 -> b
androidx.media3.exoplayer.dash.DashMediaSource$DashTimeline -> androidx.media3.exoplayer.dash.DashMediaSource$b:
    long presentationStartTimeMs -> e
    long windowStartTimeMs -> f
    long elapsedRealtimeEpochOffsetMs -> g
    int firstPeriodId -> h
    long offsetInFirstPeriodUs -> i
    long windowDurationUs -> j
    long windowDefaultStartPositionUs -> k
    androidx.media3.exoplayer.dash.manifest.DashManifest manifest -> l
    androidx.media3.common.MediaItem mediaItem -> m
    androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration -> n
    1:1:void <init>(long,long,long,int,long,long,long,androidx.media3.exoplayer.dash.manifest.DashManifest,androidx.media3.common.MediaItem,androidx.media3.common.MediaItem$LiveConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJJIJJJLu/c;Lj/u;Lj/u$g;)V"}
    1:1:int getIndexOfPeriod(java.lang.Object):0:0 -> b
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:int getPeriodCount():0:0 -> i
    1:1:java.lang.Object getUidOfPeriod(int):0:0 -> m
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
    1:1:int getWindowCount():0:0 -> p
    1:1:long getAdjustedWindowDefaultStartPositionUs(long):0:0 -> s
    1:1:boolean isMovingLiveWindow(androidx.media3.exoplayer.dash.manifest.DashManifest):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/c;)Z"}
androidx.media3.exoplayer.dash.DashMediaSource$DefaultPlayerEmsgCallback -> androidx.media3.exoplayer.dash.DashMediaSource$c:
    androidx.media3.exoplayer.dash.DashMediaSource this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.dash.DashMediaSource):0:0 -> <init>
    2:2:void <init>(androidx.media3.exoplayer.dash.DashMediaSource,androidx.media3.exoplayer.dash.DashMediaSource$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/DashMediaSource;Landroidx/media3/exoplayer/dash/DashMediaSource$a;)V"}
    1:1:void onDashManifestRefreshRequested():0:0 -> a
    1:1:void onDashManifestPublishTimeExpired(long):0:0 -> b
androidx.media3.exoplayer.dash.DashMediaSource$Factory -> androidx.media3.exoplayer.dash.DashMediaSource$Factory:
    androidx.media3.exoplayer.dash.DashChunkSource$Factory chunkSourceFactory -> a
    androidx.media3.datasource.DataSource$Factory manifestDataSourceFactory -> b
    androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider -> c
    androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory -> d
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> e
    long fallbackTargetLiveOffsetMs -> f
    long minLiveStartPositionUs -> g
    androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser -> h
    1:1:void <init>(androidx.media3.exoplayer.dash.DashChunkSource$Factory,androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/a$a;Lo/g$a;)V"}
    2:2:void <init>(androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lg0/f0;"}
    1:1:androidx.media3.exoplayer.dash.DashMediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Landroidx/media3/exoplayer/dash/DashMediaSource;"}
    1:1:androidx.media3.exoplayer.dash.DashMediaSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> g
    1:1:androidx.media3.exoplayer.dash.DashMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Landroidx/media3/exoplayer/dash/DashMediaSource$Factory;"}
    1:1:androidx.media3.exoplayer.dash.DashMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Landroidx/media3/exoplayer/dash/DashMediaSource$Factory;"}
    1:1:androidx.media3.exoplayer.dash.DashMediaSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Landroidx/media3/exoplayer/dash/DashMediaSource$Factory;"}
androidx.media3.exoplayer.dash.DashMediaSource$Iso8601Parser -> androidx.media3.exoplayer.dash.DashMediaSource$d:
    java.util.regex.Pattern TIMESTAMP_WITH_TIMEZONE_PATTERN -> a
    1:1:java.lang.Object parse(android.net.Uri,java.io.InputStream):0:0 -> a
    1:1:java.lang.Long parse(android.net.Uri,java.io.InputStream):0:0 -> b
androidx.media3.exoplayer.dash.DashMediaSource$ManifestCallback -> androidx.media3.exoplayer.dash.DashMediaSource$e:
    androidx.media3.exoplayer.dash.DashMediaSource this$0 -> f
    1:1:void <init>(androidx.media3.exoplayer.dash.DashMediaSource):0:0 -> <init>
    2:2:void <init>(androidx.media3.exoplayer.dash.DashMediaSource,androidx.media3.exoplayer.dash.DashMediaSource$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/DashMediaSource;Landroidx/media3/exoplayer/dash/DashMediaSource$a;)V"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJZ)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,java.io.IOException,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
androidx.media3.exoplayer.dash.DashMediaSource$ManifestLoadErrorThrower -> androidx.media3.exoplayer.dash.DashMediaSource$f:
    androidx.media3.exoplayer.dash.DashMediaSource this$0 -> a
    1:1:void maybeThrowManifestError():0:0 -> a
    1:1:void maybeThrowError():0:0 -> f
androidx.media3.exoplayer.dash.DashMediaSource$UtcTimestampCallback -> androidx.media3.exoplayer.dash.DashMediaSource$g:
    androidx.media3.exoplayer.dash.DashMediaSource this$0 -> f
    1:1:void <init>(androidx.media3.exoplayer.dash.DashMediaSource):0:0 -> <init>
    2:2:void <init>(androidx.media3.exoplayer.dash.DashMediaSource,androidx.media3.exoplayer.dash.DashMediaSource$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/DashMediaSource;Landroidx/media3/exoplayer/dash/DashMediaSource$a;)V"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJZ)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,java.io.IOException,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
androidx.media3.exoplayer.dash.DashMediaSource$XsDateTimeParser -> androidx.media3.exoplayer.dash.DashMediaSource$h:
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.exoplayer.dash.DashMediaSource$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/DashMediaSource$a;)V"}
    1:1:java.lang.Object parse(android.net.Uri,java.io.InputStream):0:0 -> a
    1:1:java.lang.Long parse(android.net.Uri,java.io.InputStream):0:0 -> b
androidx.media3.exoplayer.dash.DashSegmentIndex -> t.f:
    long getSegmentNum(long,long) -> a
    long getTimeUs(long) -> b
    boolean isExplicit() -> c
    long getDurationUs(long,long) -> d
    long getFirstSegmentNum() -> e
    long getSegmentCount(long) -> f
    long getAvailableSegmentCount(long,long) -> g
    long getFirstAvailableSegmentNum(long,long) -> h
    long getNextSegmentAvailableTimeUs(long,long) -> i
    androidx.media3.exoplayer.dash.manifest.RangedUri getSegmentUrl(long) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lu/i;"}
androidx.media3.exoplayer.dash.DashUtil -> t.g:
    1:1:androidx.media3.datasource.DataSpec buildDataSpec(androidx.media3.exoplayer.dash.manifest.Representation,java.lang.String,androidx.media3.exoplayer.dash.manifest.RangedUri,int,java.util.Map):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/j;Ljava/lang/String;Lu/i;ILjava/util/Map;)Lo/k;"}
    1:1:java.lang.String resolveCacheKey(androidx.media3.exoplayer.dash.manifest.Representation,androidx.media3.exoplayer.dash.manifest.RangedUri):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/j;Lu/i;)Ljava/lang/String;"}
androidx.media3.exoplayer.dash.DashWrappingSegmentIndex -> t.h:
    androidx.media3.extractor.ChunkIndex chunkIndex -> a
    long timeOffsetUs -> b
    1:1:void <init>(androidx.media3.extractor.ChunkIndex,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/h;J)V"}
    1:1:long getSegmentNum(long,long):0:0 -> a
    1:1:long getTimeUs(long):0:0 -> b
    1:1:boolean isExplicit():0:0 -> c
    1:1:long getDurationUs(long,long):0:0 -> d
    1:1:long getFirstSegmentNum():0:0 -> e
    1:1:long getSegmentCount(long):0:0 -> f
    1:1:long getAvailableSegmentCount(long,long):0:0 -> g
    1:1:long getFirstAvailableSegmentNum(long,long):0:0 -> h
    1:1:long getNextSegmentAvailableTimeUs(long,long):0:0 -> i
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getSegmentUrl(long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lu/i;"}
androidx.media3.exoplayer.dash.DefaultDashChunkSource -> androidx.media3.exoplayer.dash.d:
    androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower -> a
    androidx.media3.exoplayer.dash.BaseUrlExclusionList baseUrlExclusionList -> b
    int[] adaptationSetIndices -> c
    int trackType -> d
    androidx.media3.datasource.DataSource dataSource -> e
    long elapsedRealtimeOffsetMs -> f
    int maxSegmentsPerLoad -> g
    androidx.media3.exoplayer.dash.PlayerEmsgHandler$PlayerTrackEmsgHandler playerTrackEmsgHandler -> h
    androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder[] representationHolders -> i
    androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection -> j
    androidx.media3.exoplayer.dash.manifest.DashManifest manifest -> k
    int periodIndex -> l
    java.io.IOException fatalError -> m
    boolean missingLastSegment -> n
    long lastChunkRequestRealtimeMs -> o
    1:1:void <init>(androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory,androidx.media3.exoplayer.upstream.LoaderErrorThrower,androidx.media3.exoplayer.dash.manifest.DashManifest,androidx.media3.exoplayer.dash.BaseUrlExclusionList,int,int[],androidx.media3.exoplayer.trackselection.ExoTrackSelection,int,androidx.media3.datasource.DataSource,long,int,boolean,java.util.List,androidx.media3.exoplayer.dash.PlayerEmsgHandler$PlayerTrackEmsgHandler,androidx.media3.exoplayer.analytics.PlayerId,androidx.media3.exoplayer.upstream.CmcdConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/f$a;Lk0/o;Lu/c;Lt/b;I[ILj0/y;ILo/g;JIZLjava/util/List;Landroidx/media3/exoplayer/dash/f$c;Lr/w3;Lk0/f;)V"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:void updateTrackSelection(androidx.media3.exoplayer.trackselection.ExoTrackSelection):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;)V"}
    1:1:void updateManifest(androidx.media3.exoplayer.dash.manifest.DashManifest,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/c;I)V"}
    1:1:boolean onChunkLoadError(androidx.media3.exoplayer.source.chunk.Chunk,boolean,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;ZLk0/m$c;Lk0/m;)Z"}
    1:1:void onChunkLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;)V"}
    1:1:void maybeThrowError():0:0 -> f
    1:1:int getPreferredQueueSize(long,java.util.List):0:0 -> h
    1:1:void getNextChunk(androidx.media3.exoplayer.LoadingInfo,long,java.util.List,androidx.media3.exoplayer.source.chunk.ChunkHolder):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;JLjava/util/List;Lh0/g;)V"}
    1:1:boolean shouldCancelLoad(long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLh0/e;Ljava/util/List;)Z"}
    1:1:androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions createFallbackOptions(androidx.media3.exoplayer.trackselection.ExoTrackSelection,java.util.List):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Ljava/util/List;)Lk0/m$a;"}
    1:1:long getAvailableLiveDurationUs(long,long):0:0 -> l
    1:1:android.util.Pair getNextObjectAndRangeRequest(long,androidx.media3.exoplayer.dash.manifest.RangedUri,androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLu/i;Landroidx/media3/exoplayer/dash/d$b;)Landroid/util/Pair;"}
    1:1:long getNowPeriodTimeUs(long):0:0 -> n
    1:1:java.util.ArrayList getRepresentations():0:0 -> o
    1:1:long getSegmentNum(androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder,androidx.media3.exoplayer.source.chunk.MediaChunk,long,long,long):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/d$b;Lh0/m;JJJ)J"}
    1:1:androidx.media3.exoplayer.source.chunk.Chunk newInitializationChunk(androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder,androidx.media3.datasource.DataSource,androidx.media3.common.Format,int,java.lang.Object,androidx.media3.exoplayer.dash.manifest.RangedUri,androidx.media3.exoplayer.dash.manifest.RangedUri,androidx.media3.exoplayer.upstream.CmcdData$Factory):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/d$b;Lo/g;Lj/q;ILjava/lang/Object;Lu/i;Lu/i;Lk0/g$a;)Lh0/e;"}
    1:1:androidx.media3.exoplayer.source.chunk.Chunk newMediaChunk(androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder,androidx.media3.datasource.DataSource,int,androidx.media3.common.Format,int,java.lang.Object,long,int,long,long,androidx.media3.exoplayer.upstream.CmcdData$Factory):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/d$b;Lo/g;ILj/q;ILjava/lang/Object;JIJJLk0/g$a;)Lh0/e;"}
    1:1:androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder updateSelectedBaseUrl(int):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/media3/exoplayer/dash/d$b;"}
androidx.media3.exoplayer.dash.DefaultDashChunkSource$Factory -> androidx.media3.exoplayer.dash.d$a:
    androidx.media3.datasource.DataSource$Factory dataSourceFactory -> a
    int maxSegmentsPerLoad -> b
    androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory chunkExtractorFactory -> c
    1:1:void <init>(androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory,androidx.media3.datasource.DataSource$Factory,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/f$a;Lo/g$a;I)V"}
    2:2:void <init>(androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;)V"}
    3:3:void <init>(androidx.media3.datasource.DataSource$Factory,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;I)V"}
    1:1:androidx.media3.exoplayer.dash.DashChunkSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Landroidx/media3/exoplayer/dash/a$a;"}
    1:1:androidx.media3.exoplayer.dash.DashChunkSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroidx/media3/exoplayer/dash/a$a;"}
    1:1:androidx.media3.common.Format getOutputTextFormat(androidx.media3.common.Format):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
    1:1:androidx.media3.exoplayer.dash.DashChunkSource createDashChunkSource(androidx.media3.exoplayer.upstream.LoaderErrorThrower,androidx.media3.exoplayer.dash.manifest.DashManifest,androidx.media3.exoplayer.dash.BaseUrlExclusionList,int,int[],androidx.media3.exoplayer.trackselection.ExoTrackSelection,int,long,boolean,java.util.List,androidx.media3.exoplayer.dash.PlayerEmsgHandler$PlayerTrackEmsgHandler,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.analytics.PlayerId,androidx.media3.exoplayer.upstream.CmcdConfiguration):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/o;Lu/c;Lt/b;I[ILj0/y;IJZLjava/util/List;Landroidx/media3/exoplayer/dash/f$c;Lo/y;Lr/w3;Lk0/f;)Landroidx/media3/exoplayer/dash/a;"}
    1:1:androidx.media3.exoplayer.dash.DefaultDashChunkSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroidx/media3/exoplayer/dash/d$a;"}
    1:1:androidx.media3.exoplayer.dash.DefaultDashChunkSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Landroidx/media3/exoplayer/dash/d$a;"}
androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder -> androidx.media3.exoplayer.dash.d$b:
    androidx.media3.exoplayer.source.chunk.ChunkExtractor chunkExtractor -> a
    androidx.media3.exoplayer.dash.manifest.Representation representation -> b
    androidx.media3.exoplayer.dash.manifest.BaseUrl selectedBaseUrl -> c
    androidx.media3.exoplayer.dash.DashSegmentIndex segmentIndex -> d
    long periodDurationUs -> e
    long segmentNumShift -> f
    1:1:void <init>(long,androidx.media3.exoplayer.dash.manifest.Representation,androidx.media3.exoplayer.dash.manifest.BaseUrl,androidx.media3.exoplayer.source.chunk.ChunkExtractor,long,androidx.media3.exoplayer.dash.DashSegmentIndex):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLu/j;Lu/b;Lh0/f;JLt/f;)V"}
    1:1:long access$000(androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/d$b;)J"}
    1:1:androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder copyWithNewRepresentation(long,androidx.media3.exoplayer.dash.manifest.Representation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLu/j;)Landroidx/media3/exoplayer/dash/d$b;"}
    1:1:androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder copyWithNewSegmentIndex(androidx.media3.exoplayer.dash.DashSegmentIndex):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt/f;)Landroidx/media3/exoplayer/dash/d$b;"}
    1:1:androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder copyWithNewSelectedBaseUrl(androidx.media3.exoplayer.dash.manifest.BaseUrl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/b;)Landroidx/media3/exoplayer/dash/d$b;"}
    1:1:long getFirstAvailableSegmentNum(long):0:0 -> e
    1:1:long getFirstSegmentNum():0:0 -> f
    1:1:long getLastAvailableSegmentNum(long):0:0 -> g
    1:1:long getSegmentCount():0:0 -> h
    1:1:long getSegmentEndTimeUs(long):0:0 -> i
    1:1:long getSegmentNum(long):0:0 -> j
    1:1:long getSegmentStartTimeUs(long):0:0 -> k
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getSegmentUrl(long):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lu/i;"}
    1:1:boolean isSegmentAvailableAtFullNetworkSpeed(long,long):0:0 -> m
androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationSegmentIterator -> androidx.media3.exoplayer.dash.d$c:
    androidx.media3.exoplayer.dash.DefaultDashChunkSource$RepresentationHolder representationHolder -> e
    long nowPeriodTimeUs -> f
    1:1:long getChunkEndTimeUs():0:0 -> a
    1:1:long getChunkStartTimeUs():0:0 -> b
androidx.media3.exoplayer.dash.EventSampleStream -> androidx.media3.exoplayer.dash.e:
    androidx.media3.common.Format upstreamFormat -> f
    androidx.media3.extractor.metadata.emsg.EventMessageEncoder eventMessageEncoder -> g
    long[] eventTimesUs -> h
    boolean eventStreamAppendable -> i
    androidx.media3.exoplayer.dash.manifest.EventStream eventStream -> j
    boolean isFormatSentDownstream -> k
    int currentIndex -> l
    long pendingSeekPositionUs -> m
    1:1:void <init>(androidx.media3.exoplayer.dash.manifest.EventStream,androidx.media3.common.Format,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/f;Lj/q;Z)V"}
    1:1:java.lang.String eventStreamId():0:0 -> a
    1:1:void seekToUs(long):0:0 -> b
    1:1:void updateEventStream(androidx.media3.exoplayer.dash.manifest.EventStream,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/f;Z)V"}
    1:1:boolean isReady():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:int skipData(long):0:0 -> t
    1:1:int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
androidx.media3.exoplayer.dash.PlayerEmsgHandler -> androidx.media3.exoplayer.dash.f:
    androidx.media3.exoplayer.upstream.Allocator allocator -> f
    androidx.media3.exoplayer.dash.PlayerEmsgHandler$PlayerEmsgCallback playerEmsgCallback -> g
    androidx.media3.extractor.metadata.emsg.EventMessageDecoder decoder -> h
    android.os.Handler handler -> i
    java.util.TreeMap manifestPublishTimeToExpiryTimeUs -> j
    androidx.media3.exoplayer.dash.manifest.DashManifest manifest -> k
    long expiredManifestPublishTimeUs -> l
    boolean chunkLoadedCompletedSinceLastManifestRefreshRequest -> m
    boolean isWaitingForManifestRefresh -> n
    boolean released -> o
    1:1:void <init>(androidx.media3.exoplayer.dash.manifest.DashManifest,androidx.media3.exoplayer.dash.PlayerEmsgHandler$PlayerEmsgCallback,androidx.media3.exoplayer.upstream.Allocator):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/c;Landroidx/media3/exoplayer/dash/f$b;Lk0/b;)V"}
    1:1:androidx.media3.extractor.metadata.emsg.EventMessageDecoder access$000(androidx.media3.exoplayer.dash.PlayerEmsgHandler):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/f;)Lz0/b;"}
    1:1:boolean access$100(java.lang.String,java.lang.String):0:0 -> b
    1:1:long access$200(androidx.media3.extractor.metadata.emsg.EventMessage):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;)J"}
    1:1:android.os.Handler access$300(androidx.media3.exoplayer.dash.PlayerEmsgHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/f;)Landroid/os/Handler;"}
    1:1:java.util.Map$Entry ceilingExpiryEntryForPublishTime(long):0:0 -> e
    1:1:long getManifestPublishTimeMsInEmsg(androidx.media3.extractor.metadata.emsg.EventMessage):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;)J"}
    1:1:void handleManifestExpiredMessage(long,long):0:0 -> g
    1:1:boolean isPlayerEmsgEvent(java.lang.String,java.lang.String):0:0 -> h
    1:1:void maybeNotifyDashManifestRefreshNeeded():0:0 -> i
    1:1:boolean maybeRefreshManifestBeforeLoadingNextChunk(long):0:0 -> j
    1:1:androidx.media3.exoplayer.dash.PlayerEmsgHandler$PlayerTrackEmsgHandler newPlayerTrackEmsgHandler():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/media3/exoplayer/dash/f$c;"}
    1:1:void notifyManifestPublishTimeExpired():0:0 -> l
    1:1:void onChunkLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;)V"}
    1:1:boolean onChunkLoadError(boolean):0:0 -> n
    1:1:void release():0:0 -> o
    1:1:void removePreviouslyExpiredManifestPublishTimeValues():0:0 -> p
    1:1:void updateManifest(androidx.media3.exoplayer.dash.manifest.DashManifest):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/c;)V"}
androidx.media3.exoplayer.dash.PlayerEmsgHandler$ManifestExpiryEventInfo -> androidx.media3.exoplayer.dash.f$a:
    long eventTimeUs -> a
    long manifestPublishTimeMsInEmsg -> b
androidx.media3.exoplayer.dash.PlayerEmsgHandler$PlayerEmsgCallback -> androidx.media3.exoplayer.dash.f$b:
    void onDashManifestRefreshRequested() -> a
    void onDashManifestPublishTimeExpired(long) -> b
androidx.media3.exoplayer.dash.PlayerEmsgHandler$PlayerTrackEmsgHandler -> androidx.media3.exoplayer.dash.f$c:
    androidx.media3.exoplayer.source.SampleQueue sampleQueue -> a
    androidx.media3.exoplayer.FormatHolder formatHolder -> b
    androidx.media3.extractor.metadata.MetadataInputBuffer buffer -> c
    long maxLoadedChunkEndTimeUs -> d
    androidx.media3.exoplayer.dash.PlayerEmsgHandler this$0 -> e
    1:1:void <init>(androidx.media3.exoplayer.dash.PlayerEmsgHandler,androidx.media3.exoplayer.upstream.Allocator):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/dash/f;Lk0/b;)V"}
    1:1:void format(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZI)I"}
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZ)I"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JIIILo0/s0$a;)V"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)V"}
    1:1:androidx.media3.extractor.metadata.MetadataInputBuffer dequeueSample():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx0/b;"}
    1:1:boolean maybeRefreshManifestBeforeLoadingNextChunk(long):0:0 -> h
    1:1:void onChunkLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;)V"}
    1:1:boolean onChunkLoadError(androidx.media3.exoplayer.source.chunk.Chunk):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;)Z"}
    1:1:void onManifestExpiredMessageEncountered(long,long):0:0 -> k
    1:1:void parseAndDiscardSamples():0:0 -> l
    1:1:void parsePlayerEmsgEvent(long,androidx.media3.extractor.metadata.emsg.EventMessage):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLz0/a;)V"}
    1:1:void release():0:0 -> n
androidx.media3.exoplayer.dash.manifest.AdaptationSet -> u.a:
    long id -> a
    int type -> b
    java.util.List representations -> c
    java.util.List accessibilityDescriptors -> d
    java.util.List essentialProperties -> e
    java.util.List supplementalProperties -> f
    1:1:void <init>(long,int,java.util.List,java.util.List,java.util.List,java.util.List):0:0 -> <init>
androidx.media3.exoplayer.dash.manifest.BaseUrl -> u.b:
    java.lang.String url -> a
    java.lang.String serviceLocation -> b
    int priority -> c
    int weight -> d
    1:1:void <init>(java.lang.String,java.lang.String,int,int):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.dash.manifest.DashManifest -> u.c:
    long availabilityStartTimeMs -> a
    long durationMs -> b
    long minBufferTimeMs -> c
    boolean dynamic -> d
    long minUpdatePeriodMs -> e
    long timeShiftBufferDepthMs -> f
    long suggestedPresentationDelayMs -> g
    long publishTimeMs -> h
    androidx.media3.exoplayer.dash.manifest.UtcTimingElement utcTiming -> i
    androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement serviceDescription -> j
    android.net.Uri location -> k
    androidx.media3.exoplayer.dash.manifest.ProgramInformation programInformation -> l
    java.util.List periods -> m
    1:1:void <init>(long,long,long,boolean,long,long,long,long,androidx.media3.exoplayer.dash.manifest.ProgramInformation,androidx.media3.exoplayer.dash.manifest.UtcTimingElement,androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement,android.net.Uri,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJJZJJJJLu/h;Lu/o;Lu/l;Landroid/net/Uri;Ljava/util/List;)V"}
    1:1:java.lang.Object copy(java.util.List):0:0 -> a
    1:1:androidx.media3.exoplayer.dash.manifest.DashManifest copy(java.util.List):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lu/c;"}
    1:1:java.util.ArrayList copyAdaptationSets(java.util.List,java.util.LinkedList):0:0 -> c
    1:1:androidx.media3.exoplayer.dash.manifest.Period getPeriod(int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lu/g;"}
    1:1:int getPeriodCount():0:0 -> e
    1:1:long getPeriodDurationMs(int):0:0 -> f
    1:1:long getPeriodDurationUs(int):0:0 -> g
androidx.media3.exoplayer.dash.manifest.DashManifestParser -> u.d:
    org.xmlpull.v1.XmlPullParserFactory xmlParserFactory -> a
    java.util.regex.Pattern FRAME_RATE_PATTERN -> b
    java.util.regex.Pattern CEA_608_ACCESSIBILITY_PATTERN -> c
    java.util.regex.Pattern CEA_708_ACCESSIBILITY_PATTERN -> d
    int[] MPEG_CHANNEL_CONFIGURATION_MAPPING -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:int parseAudioChannelConfiguration(org.xmlpull.v1.XmlPullParser):0:0 -> A
    1:1:long parseAvailabilityTimeOffsetUs(org.xmlpull.v1.XmlPullParser,long):0:0 -> B
    1:1:java.util.List parseBaseUrl(org.xmlpull.v1.XmlPullParser,java.util.List,boolean):0:0 -> C
    1:1:int parseCea608AccessibilityChannel(java.util.List):0:0 -> D
    1:1:int parseCea708AccessibilityChannel(java.util.List):0:0 -> E
    1:1:android.util.Pair parseContentProtection(org.xmlpull.v1.XmlPullParser):0:0 -> F
    1:1:int parseContentType(org.xmlpull.v1.XmlPullParser):0:0 -> G
    1:1:long parseDateTime(org.xmlpull.v1.XmlPullParser,java.lang.String,long):0:0 -> H
    1:1:androidx.media3.exoplayer.dash.manifest.Descriptor parseDescriptor(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Lu/e;"}
    1:1:int parseDolbyChannelConfiguration(org.xmlpull.v1.XmlPullParser):0:0 -> J
    1:1:int parseDtsChannelConfiguration(org.xmlpull.v1.XmlPullParser):0:0 -> K
    1:1:int parseDtsxChannelConfiguration(org.xmlpull.v1.XmlPullParser):0:0 -> L
    1:1:long parseDuration(org.xmlpull.v1.XmlPullParser,java.lang.String,long):0:0 -> M
    1:1:java.lang.String parseEac3SupplementalProperties(java.util.List):0:0 -> N
    1:1:android.util.Pair parseEvent(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,long,long,java.io.ByteArrayOutputStream):0:0 -> O
    1:1:byte[] parseEventObject(org.xmlpull.v1.XmlPullParser,java.io.ByteArrayOutputStream):0:0 -> P
    1:1:androidx.media3.exoplayer.dash.manifest.EventStream parseEventStream(org.xmlpull.v1.XmlPullParser):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;)Lu/f;"}
    1:1:float parseFloat(org.xmlpull.v1.XmlPullParser,java.lang.String,float):0:0 -> R
    1:1:float parseFrameRate(org.xmlpull.v1.XmlPullParser,float):0:0 -> S
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri parseInitialization(org.xmlpull.v1.XmlPullParser):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;)Lu/i;"}
    1:1:int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> U
    1:1:androidx.media3.common.Label parseLabel(org.xmlpull.v1.XmlPullParser):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;)Lj/t;"}
    1:1:long parseLastSegmentNumberSupplementalProperty(java.util.List):0:0 -> W
    1:1:long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long):0:0 -> X
    1:1:androidx.media3.exoplayer.dash.manifest.DashManifest parseMediaPresentationDescription(org.xmlpull.v1.XmlPullParser,android.net.Uri):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Landroid/net/Uri;)Lu/c;"}
    1:1:int parseMpegChannelConfiguration(org.xmlpull.v1.XmlPullParser):0:0 -> Z
    1:1:java.lang.Object parse(android.net.Uri,java.io.InputStream):0:0 -> a
    1:1:android.util.Pair parsePeriod(org.xmlpull.v1.XmlPullParser,java.util.List,long,long,long,long,boolean):0:0 -> a0
    1:1:long addSegmentTimelineElementsToList(java.util.List,long,long,int,long):0:0 -> b
    1:1:java.lang.String[] parseProfiles(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[]):0:0 -> b0
    1:1:androidx.media3.exoplayer.dash.manifest.AdaptationSet buildAdaptationSet(long,int,java.util.List,java.util.List,java.util.List,java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JILjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lu/a;"}
    1:1:androidx.media3.exoplayer.dash.manifest.ProgramInformation parseProgramInformation(org.xmlpull.v1.XmlPullParser):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;)Lu/h;"}
    1:1:androidx.media3.extractor.metadata.emsg.EventMessage buildEvent(java.lang.String,java.lang.String,long,long,byte[]):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;JJ[B)Lz0/a;"}
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri parseRangedUrl(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;Ljava/lang/String;)Lu/i;"}
    1:1:androidx.media3.exoplayer.dash.manifest.EventStream buildEventStream(java.lang.String,java.lang.String,long,long[],androidx.media3.extractor.metadata.emsg.EventMessage[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;J[J[Lz0/a;)Lu/f;"}
    1:1:androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo parseRepresentation(org.xmlpull.v1.XmlPullParser,java.util.List,java.lang.String,java.lang.String,int,int,float,int,int,java.lang.String,java.util.List,java.util.List,java.util.List,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase,long,long,long,long,long,boolean):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;IIFIILjava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lu/k;JJJJJZ)Lu/d$a;"}
    1:1:androidx.media3.common.Format buildFormat(java.lang.String,java.lang.String,int,int,float,int,int,int,java.lang.String,java.util.List,java.util.List,java.lang.String,java.util.List,java.util.List):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;IIFIIILjava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lj/q;"}
    1:1:int parseRoleFlagsFromAccessibilityDescriptors(java.util.List):0:0 -> f0
    1:1:androidx.media3.exoplayer.dash.manifest.DashManifest buildMediaPresentationDescription(long,long,long,boolean,long,long,long,long,androidx.media3.exoplayer.dash.manifest.ProgramInformation,androidx.media3.exoplayer.dash.manifest.UtcTimingElement,androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement,android.net.Uri,java.util.List):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJJZJJJJLu/h;Lu/o;Lu/l;Landroid/net/Uri;Ljava/util/List;)Lu/c;"}
    1:1:int parseRoleFlagsFromDashRoleScheme(java.lang.String):0:0 -> g0
    1:1:androidx.media3.exoplayer.dash.manifest.Period buildPeriod(java.lang.String,long,java.util.List,java.util.List,androidx.media3.exoplayer.dash.manifest.Descriptor):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;JLjava/util/List;Ljava/util/List;Lu/e;)Lu/g;"}
    1:1:int parseRoleFlagsFromProperties(java.util.List):0:0 -> h0
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri buildRangedUri(java.lang.String,long,long):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;JJ)Lu/i;"}
    1:1:int parseRoleFlagsFromRoleDescriptors(java.util.List):0:0 -> i0
    1:1:androidx.media3.exoplayer.dash.manifest.Representation buildRepresentation(androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo,java.lang.String,java.util.List,java.lang.String,java.util.ArrayList,java.util.ArrayList):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/d$a;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;)Lu/j;"}
    1:1:androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase parseSegmentBase(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Lu/k$e;)Lu/k$e;"}
    1:1:androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList buildSegmentList(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long,java.util.List,long,java.util.List,long,long):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/i;JJJJLjava/util/List;JLjava/util/List;JJ)Lu/k$b;"}
    1:1:androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList parseSegmentList(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList,long,long,long,long,long):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Lu/k$b;JJJJJ)Lu/k$b;"}
    1:1:androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate buildSegmentTemplate(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long,long,java.util.List,long,androidx.media3.exoplayer.dash.manifest.UrlTemplate,androidx.media3.exoplayer.dash.manifest.UrlTemplate,long,long):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/i;JJJJJLjava/util/List;JLu/n;Lu/n;JJ)Lu/k$c;"}
    1:1:androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate parseSegmentTemplate(org.xmlpull.v1.XmlPullParser,androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate,java.util.List,long,long,long,long,long):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Lu/k$c;Ljava/util/List;JJJJJ)Lu/k$c;"}
    1:1:androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTimelineElement buildSegmentTimelineElement(long,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJ)Lu/k$d;"}
    1:1:java.util.List parseSegmentTimeline(org.xmlpull.v1.XmlPullParser,long,long):0:0 -> m0
    1:1:androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase buildSingleSegmentBase(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/i;JJJJ)Lu/k$e;"}
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri parseSegmentUrl(org.xmlpull.v1.XmlPullParser):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;)Lu/i;"}
    1:1:androidx.media3.exoplayer.dash.manifest.UtcTimingElement buildUtcTimingElement(java.lang.String,java.lang.String):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;)Lu/o;"}
    1:1:int parseSelectionFlagsFromDashRoleScheme(java.lang.String):0:0 -> o0
    1:1:int checkContentTypeConsistency(int,int):0:0 -> p
    1:1:int parseSelectionFlagsFromRoleDescriptors(java.util.List):0:0 -> p0
    1:1:java.lang.String checkLanguageConsistency(java.lang.String,java.lang.String):0:0 -> q
    1:1:androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement parseServiceDescription(org.xmlpull.v1.XmlPullParser):0:0 -> q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;)Lu/l;"}
    1:1:void fillInClearKeyInformation(java.util.ArrayList):0:0 -> r
    1:1:java.lang.String parseString(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String):0:0 -> r0
    1:1:void filterRedundantIncompleteSchemeDatas(java.util.ArrayList):0:0 -> s
    1:1:java.lang.String parseText(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> s0
    1:1:long getFinalAvailabilityTimeOffset(long,long):0:0 -> t
    1:1:android.util.Pair parseTileCountFromProperties(java.util.List):0:0 -> t0
    1:1:java.lang.String getSampleMimeType(java.lang.String,java.lang.String):0:0 -> u
    1:1:int parseTvaAudioPurposeCsValue(java.lang.String):0:0 -> u0
    1:1:boolean isDvbProfileDeclared(java.lang.String[]):0:0 -> v
    1:1:androidx.media3.exoplayer.dash.manifest.UrlTemplate parseUrlTemplate(org.xmlpull.v1.XmlPullParser,java.lang.String,androidx.media3.exoplayer.dash.manifest.UrlTemplate):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;Lu/n;)Lu/n;"}
    1:1:void maybeSkipTag(org.xmlpull.v1.XmlPullParser):0:0 -> w
    1:1:androidx.media3.exoplayer.dash.manifest.UtcTimingElement parseUtcTiming(org.xmlpull.v1.XmlPullParser):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;)Lu/o;"}
    1:1:androidx.media3.exoplayer.dash.manifest.DashManifest parse(android.net.Uri,java.io.InputStream):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/io/InputStream;)Lu/c;"}
    1:1:androidx.media3.exoplayer.dash.manifest.AdaptationSet parseAdaptationSet(org.xmlpull.v1.XmlPullParser,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase,long,long,long,long,long,boolean):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Ljava/util/List;Lu/k;JJJJJZ)Lu/a;"}
    1:1:void parseAdaptationSetChild(org.xmlpull.v1.XmlPullParser):0:0 -> z
androidx.media3.exoplayer.dash.manifest.DashManifestParser$RepresentationInfo -> u.d$a:
    androidx.media3.common.Format format -> a
    com.google.common.collect.ImmutableList baseUrls -> b
    androidx.media3.exoplayer.dash.manifest.SegmentBase segmentBase -> c
    java.lang.String drmSchemeType -> d
    java.util.ArrayList drmSchemeDatas -> e
    java.util.ArrayList inbandEventStreams -> f
    long revisionId -> g
    java.util.List essentialProperties -> h
    java.util.List supplementalProperties -> i
    1:1:void <init>(androidx.media3.common.Format,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.List,java.util.List,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Ljava/util/List;Lu/k;Ljava/lang/String;Ljava/util/ArrayList;Ljava/util/ArrayList;Ljava/util/List;Ljava/util/List;J)V"}
androidx.media3.exoplayer.dash.manifest.Descriptor -> u.e:
    java.lang.String schemeIdUri -> a
    java.lang.String value -> b
    java.lang.String id -> c
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.dash.manifest.EventStream -> u.f:
    androidx.media3.extractor.metadata.emsg.EventMessage[] events -> a
    long[] presentationTimesUs -> b
    java.lang.String schemeIdUri -> c
    java.lang.String value -> d
    long timescale -> e
    1:1:void <init>(java.lang.String,java.lang.String,long,long[],androidx.media3.extractor.metadata.emsg.EventMessage[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;J[J[Lz0/a;)V"}
    1:1:java.lang.String id():0:0 -> a
androidx.media3.exoplayer.dash.manifest.Period -> u.g:
    java.lang.String id -> a
    long startMs -> b
    java.util.List adaptationSets -> c
    java.util.List eventStreams -> d
    androidx.media3.exoplayer.dash.manifest.Descriptor assetIdentifier -> e
    1:1:void <init>(java.lang.String,long,java.util.List,java.util.List):0:0 -> <init>
    2:2:void <init>(java.lang.String,long,java.util.List,java.util.List,androidx.media3.exoplayer.dash.manifest.Descriptor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;JLjava/util/List;Ljava/util/List;Lu/e;)V"}
    1:1:int getAdaptationSetIndex(int):0:0 -> a
androidx.media3.exoplayer.dash.manifest.ProgramInformation -> u.h:
    java.lang.String title -> a
    java.lang.String source -> b
    java.lang.String copyright -> c
    java.lang.String moreInformationURL -> d
    java.lang.String lang -> e
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.dash.manifest.RangedUri -> u.i:
    long start -> a
    long length -> b
    java.lang.String referenceUri -> c
    int hashCode -> d
    1:1:void <init>(java.lang.String,long,long):0:0 -> <init>
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri attemptMerge(androidx.media3.exoplayer.dash.manifest.RangedUri,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/i;Ljava/lang/String;)Lu/i;"}
    1:1:android.net.Uri resolveUri(java.lang.String):0:0 -> b
    1:1:java.lang.String resolveUriString(java.lang.String):0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.exoplayer.dash.manifest.Representation -> u.j:
    long revisionId -> a
    androidx.media3.common.Format format -> b
    com.google.common.collect.ImmutableList baseUrls -> c
    long presentationTimeOffsetUs -> d
    java.util.List inbandEventStreams -> e
    java.util.List essentialProperties -> f
    java.util.List supplementalProperties -> g
    androidx.media3.exoplayer.dash.manifest.RangedUri initializationUri -> h
    1:1:void <init>(long,androidx.media3.common.Format,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase,java.util.List,java.util.List,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLj/q;Ljava/util/List;Lu/k;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V"}
    2:2:void <init>(long,androidx.media3.common.Format,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase,java.util.List,java.util.List,java.util.List,androidx.media3.exoplayer.dash.manifest.Representation$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLj/q;Ljava/util/List;Lu/k;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lu/j$a;)V"}
    java.lang.String getCacheKey() -> k
    androidx.media3.exoplayer.dash.DashSegmentIndex getIndex() -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt/f;"}
    androidx.media3.exoplayer.dash.manifest.RangedUri getIndexUri() -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu/i;"}
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getInitializationUri():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu/i;"}
    1:1:androidx.media3.exoplayer.dash.manifest.Representation newInstance(long,androidx.media3.common.Format,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase,java.util.List,java.util.List,java.util.List,java.lang.String):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLj/q;Ljava/util/List;Lu/k;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)Lu/j;"}
androidx.media3.exoplayer.dash.manifest.Representation$1 -> u.j$a:
androidx.media3.exoplayer.dash.manifest.Representation$MultiSegmentRepresentation -> u.j$b:
    androidx.media3.exoplayer.dash.manifest.SegmentBase$MultiSegmentBase segmentBase -> i
    1:1:void <init>(long,androidx.media3.common.Format,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase$MultiSegmentBase,java.util.List,java.util.List,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLj/q;Ljava/util/List;Lu/k$a;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V"}
    1:1:long getSegmentNum(long,long):0:0 -> a
    1:1:long getTimeUs(long):0:0 -> b
    1:1:boolean isExplicit():0:0 -> c
    1:1:long getDurationUs(long,long):0:0 -> d
    1:1:long getFirstSegmentNum():0:0 -> e
    1:1:long getSegmentCount(long):0:0 -> f
    1:1:long getAvailableSegmentCount(long,long):0:0 -> g
    1:1:long getFirstAvailableSegmentNum(long,long):0:0 -> h
    1:1:long getNextSegmentAvailableTimeUs(long,long):0:0 -> i
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getSegmentUrl(long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lu/i;"}
    1:1:java.lang.String getCacheKey():0:0 -> k
    1:1:androidx.media3.exoplayer.dash.DashSegmentIndex getIndex():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt/f;"}
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getIndexUri():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu/i;"}
androidx.media3.exoplayer.dash.manifest.Representation$SingleSegmentRepresentation -> u.j$c:
    android.net.Uri uri -> i
    long contentLength -> j
    java.lang.String cacheKey -> k
    androidx.media3.exoplayer.dash.manifest.RangedUri indexUri -> l
    androidx.media3.exoplayer.dash.manifest.SingleSegmentIndex segmentIndex -> m
    1:1:void <init>(long,androidx.media3.common.Format,java.util.List,androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase,java.util.List,java.util.List,java.util.List,java.lang.String,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLj/q;Ljava/util/List;Lu/k$e;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/lang/String;J)V"}
    1:1:java.lang.String getCacheKey():0:0 -> k
    1:1:androidx.media3.exoplayer.dash.DashSegmentIndex getIndex():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt/f;"}
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getIndexUri():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu/i;"}
androidx.media3.exoplayer.dash.manifest.SegmentBase -> u.k:
    androidx.media3.exoplayer.dash.manifest.RangedUri initialization -> a
    long timescale -> b
    long presentationTimeOffset -> c
    1:1:void <init>(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/i;JJ)V"}
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getInitialization(androidx.media3.exoplayer.dash.manifest.Representation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/j;)Lu/i;"}
    1:1:long getPresentationTimeOffsetUs():0:0 -> b
androidx.media3.exoplayer.dash.manifest.SegmentBase$MultiSegmentBase -> u.k$a:
    long startNumber -> d
    long duration -> e
    java.util.List segmentTimeline -> f
    long timeShiftBufferDepthUs -> g
    long periodStartUnixTimeUs -> h
    long availabilityTimeOffsetUs -> i
    1:1:void <init>(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long,java.util.List,long,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/i;JJJJLjava/util/List;JJJ)V"}
    1:1:long getAvailableSegmentCount(long,long):0:0 -> c
    1:1:long getFirstAvailableSegmentNum(long,long):0:0 -> d
    1:1:long getFirstSegmentNum():0:0 -> e
    1:1:long getNextSegmentAvailableTimeUs(long,long):0:0 -> f
    long getSegmentCount(long) -> g
    1:1:long getSegmentDurationUs(long,long):0:0 -> h
    1:1:long getSegmentNum(long,long):0:0 -> i
    1:1:long getSegmentTimeUs(long):0:0 -> j
    androidx.media3.exoplayer.dash.manifest.RangedUri getSegmentUrl(androidx.media3.exoplayer.dash.manifest.Representation,long) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/j;J)Lu/i;"}
    1:1:boolean isExplicit():0:0 -> l
androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentList -> u.k$b:
    java.util.List mediaSegments -> j
    1:1:void <init>(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long,java.util.List,long,java.util.List,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/i;JJJJLjava/util/List;JLjava/util/List;JJ)V"}
    1:1:long getSegmentCount(long):0:0 -> g
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getSegmentUrl(androidx.media3.exoplayer.dash.manifest.Representation,long):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/j;J)Lu/i;"}
    1:1:boolean isExplicit():0:0 -> l
androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTemplate -> u.k$c:
    androidx.media3.exoplayer.dash.manifest.UrlTemplate initializationTemplate -> j
    androidx.media3.exoplayer.dash.manifest.UrlTemplate mediaTemplate -> k
    long endNumber -> l
    1:1:void <init>(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long,long,java.util.List,long,androidx.media3.exoplayer.dash.manifest.UrlTemplate,androidx.media3.exoplayer.dash.manifest.UrlTemplate,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/i;JJJJJLjava/util/List;JLu/n;Lu/n;JJ)V"}
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getInitialization(androidx.media3.exoplayer.dash.manifest.Representation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/j;)Lu/i;"}
    1:1:long getSegmentCount(long):0:0 -> g
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getSegmentUrl(androidx.media3.exoplayer.dash.manifest.Representation,long):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/j;J)Lu/i;"}
androidx.media3.exoplayer.dash.manifest.SegmentBase$SegmentTimelineElement -> u.k$d:
    long startTime -> a
    long duration -> b
    1:1:void <init>(long,long):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.dash.manifest.SegmentBase$SingleSegmentBase -> u.k$e:
    long indexStart -> d
    long indexLength -> e
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.exoplayer.dash.manifest.RangedUri,long,long,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/i;JJJJ)V"}
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getIndex():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu/i;"}
androidx.media3.exoplayer.dash.manifest.ServiceDescriptionElement -> u.l:
    long targetOffsetMs -> a
    long minOffsetMs -> b
    long maxOffsetMs -> c
    float minPlaybackSpeed -> d
    float maxPlaybackSpeed -> e
    1:1:void <init>(long,long,long,float,float):0:0 -> <init>
androidx.media3.exoplayer.dash.manifest.SingleSegmentIndex -> u.m:
    androidx.media3.exoplayer.dash.manifest.RangedUri uri -> a
    1:1:void <init>(androidx.media3.exoplayer.dash.manifest.RangedUri):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu/i;)V"}
    1:1:long getSegmentNum(long,long):0:0 -> a
    1:1:long getTimeUs(long):0:0 -> b
    1:1:boolean isExplicit():0:0 -> c
    1:1:long getDurationUs(long,long):0:0 -> d
    1:1:long getFirstSegmentNum():0:0 -> e
    1:1:long getSegmentCount(long):0:0 -> f
    1:1:long getAvailableSegmentCount(long,long):0:0 -> g
    1:1:long getFirstAvailableSegmentNum(long,long):0:0 -> h
    1:1:long getNextSegmentAvailableTimeUs(long,long):0:0 -> i
    1:1:androidx.media3.exoplayer.dash.manifest.RangedUri getSegmentUrl(long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lu/i;"}
androidx.media3.exoplayer.dash.manifest.UrlTemplate -> u.n:
    java.util.List urlPieces -> a
    java.util.List identifiers -> b
    java.util.List identifierFormatTags -> c
    1:1:void <init>(java.util.List,java.util.List,java.util.List):0:0 -> <init>
    1:1:java.lang.String buildUri(java.lang.String,long,int,long):0:0 -> a
    1:1:androidx.media3.exoplayer.dash.manifest.UrlTemplate compile(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lu/n;"}
    1:1:void parseTemplate(java.lang.String,java.util.List,java.util.List,java.util.List):0:0 -> c
androidx.media3.exoplayer.dash.manifest.UtcTimingElement -> u.o:
    java.lang.String schemeIdUri -> a
    java.lang.String value -> b
    1:1:void <init>(java.lang.String,java.lang.String):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.exoplayer.drm.ClearKeyUtil -> v.a:
    1:1:byte[] adjustRequestData(byte[]):0:0 -> a
    1:1:byte[] adjustResponseData(byte[]):0:0 -> b
    1:1:java.lang.String base64ToBase64Url(java.lang.String):0:0 -> c
    1:1:java.lang.String base64UrlToBase64(java.lang.String):0:0 -> d
androidx.media3.exoplayer.drm.DefaultDrmSession -> v.g:
    java.util.List schemeDatas -> a
    androidx.media3.exoplayer.drm.ExoMediaDrm mediaDrm -> b
    androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager provisioningManager -> c
    androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener referenceCountListener -> d
    int mode -> e
    boolean playClearSamplesWithoutKeys -> f
    boolean isPlaceholderSession -> g
    java.util.HashMap keyRequestParameters -> h
    androidx.media3.common.util.CopyOnWriteMultiset eventDispatchers -> i
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> j
    androidx.media3.exoplayer.analytics.PlayerId playerId -> k
    androidx.media3.exoplayer.drm.MediaDrmCallback callback -> l
    java.util.UUID uuid -> m
    android.os.Looper playbackLooper -> n
    androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler responseHandler -> o
    int state -> p
    int referenceCount -> q
    android.os.HandlerThread requestHandlerThread -> r
    androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler requestHandler -> s
    androidx.media3.decoder.CryptoConfig cryptoConfig -> t
    androidx.media3.exoplayer.drm.DrmSession$DrmSessionException lastException -> u
    byte[] sessionId -> v
    byte[] offlineLicenseKeySetId -> w
    androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest currentKeyRequest -> x
    androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest currentProvisionRequest -> y
    1:1:void <init>(java.util.UUID,androidx.media3.exoplayer.drm.ExoMediaDrm,androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager,androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener,java.util.List,int,boolean,boolean,byte[],java.util.HashMap,androidx.media3.exoplayer.drm.MediaDrmCallback,android.os.Looper,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Lv/f0;Lv/g$a;Lv/g$b;Ljava/util/List;IZZ[BLjava/util/HashMap;Lv/r0;Landroid/os/Looper;Lk0/m;Lr/w3;)V"}
    1:1:void onKeysError(java.lang.Throwable,boolean):0:0 -> A
    1:1:void onKeysRequired():0:0 -> B
    1:1:void onMediaDrmEvent(int):0:0 -> C
    1:1:void onProvisionCompleted():0:0 -> D
    1:1:void onProvisionError(java.lang.Exception,boolean):0:0 -> E
    1:1:void onProvisionResponse(java.lang.Object,java.lang.Object):0:0 -> F
    1:1:boolean openInternal():0:0 -> G
    1:1:void postKeyRequest(byte[],int,boolean):0:0 -> H
    1:1:void provision():0:0 -> I
    1:1:boolean restoreKeys():0:0 -> J
    1:1:void verifyPlaybackThread():0:0 -> K
    1:1:void release(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;)V"}
    1:1:boolean playClearSamplesWithoutKeys():0:0 -> b
    1:1:java.util.Map queryKeyStatus():0:0 -> c
    1:1:int getState():0:0 -> d
    1:1:void acquire(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;)V"}
    1:1:java.util.UUID getSchemeUuid():0:0 -> f
    1:1:boolean requiresSecureDecoder(java.lang.String):0:0 -> g
    1:1:androidx.media3.exoplayer.drm.DrmSession$DrmSessionException getError():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv/n$a;"}
    1:1:androidx.media3.decoder.CryptoConfig getCryptoConfig():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/b;"}
    1:1:void $r8$lambda$iscReJ46wZlBbmPHCFB8pAJP2UU(java.lang.Throwable,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Lv/v$a;)V"}
    1:1:void $r8$lambda$w4H8pVlH20e07N0zFRH9k5T3Ovc(int,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILv/v$a;)V"}
    1:1:void access$000(androidx.media3.exoplayer.drm.DefaultDrmSession,java.lang.Object,java.lang.Object):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;Ljava/lang/Object;Ljava/lang/Object;)V"}
    1:1:void access$100(androidx.media3.exoplayer.drm.DefaultDrmSession,java.lang.Object,java.lang.Object):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;Ljava/lang/Object;Ljava/lang/Object;)V"}
    1:1:java.util.UUID access$200(androidx.media3.exoplayer.drm.DefaultDrmSession):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;)Ljava/util/UUID;"}
    1:1:androidx.media3.exoplayer.drm.MediaDrmCallback access$300(androidx.media3.exoplayer.drm.DefaultDrmSession):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;)Lv/r0;"}
    1:1:androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$400(androidx.media3.exoplayer.drm.DefaultDrmSession):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;)Lk0/m;"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler access$500(androidx.media3.exoplayer.drm.DefaultDrmSession):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;)Lv/g$e;"}
    1:1:void dispatchEvent(androidx.media3.common.util.Consumer):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/g;)V"}
    1:1:void doLicense(boolean):0:0 -> s
    1:1:long getLicenseDurationRemainingSec():0:0 -> t
    1:1:boolean hasSessionId(byte[]):0:0 -> u
    1:1:boolean isOpen():0:0 -> v
    1:1:void lambda$onError$1(java.lang.Throwable,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Lv/v$a;)V"}
    1:1:void lambda$openInternal$0(int,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILv/v$a;)V"}
    1:1:void onError(java.lang.Throwable,int):0:0 -> y
    1:1:void onKeyResponse(java.lang.Object,java.lang.Object):0:0 -> z
androidx.media3.exoplayer.drm.DefaultDrmSession$$ExternalSyntheticLambda0 -> v.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Throwable androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$61ced7e484ea0ad0cf88ccd6af9653c22a78f1510e9c80b4f527c8c91c9b3e05$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$61ced7e484ea0ad0cf88ccd6af9653c22a78f1510e9c80b4f527c8c91c9b3e05$0.<init>(java.lang.Throwable):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$61ced7e484ea0ad0cf88ccd6af9653c22a78f1510e9c80b4f527c8c91c9b3e05$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DefaultDrmSession$$ExternalSyntheticLambda1 -> v.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$8fbd370831dda1a2a9a1351d2fbc6b122dc67d0700cb23e7e148c4eac555f21a$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$8fbd370831dda1a2a9a1351d2fbc6b122dc67d0700cb23e7e148c4eac555f21a$0.<init>(int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$8fbd370831dda1a2a9a1351d2fbc6b122dc67d0700cb23e7e148c4eac555f21a$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DefaultDrmSession$$ExternalSyntheticLambda2 -> v.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$a8d117e5e703abdcba3022ad1d35275420fd73b79afaaa773b1a140b4784354e$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$a8d117e5e703abdcba3022ad1d35275420fd73b79afaaa773b1a140b4784354e$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DefaultDrmSession$$ExternalSyntheticLambda3 -> v.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$b82f7e54dccc804749aed18cb904c3236f0bbc56ed5e30ad5bb7556edd881118$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$b82f7e54dccc804749aed18cb904c3236f0bbc56ed5e30ad5bb7556edd881118$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DefaultDrmSession$$ExternalSyntheticLambda4 -> v.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$b82f7e54dccc804749aed18cb904c3236f0bbc56ed5e30ad5bb7556edd881118$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSession$$InternalSyntheticLambda$9$b82f7e54dccc804749aed18cb904c3236f0bbc56ed5e30ad5bb7556edd881118$1.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DefaultDrmSession$ProvisioningManager -> v.g$a:
    void provisionRequired(androidx.media3.exoplayer.drm.DefaultDrmSession) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;)V"}
    void onProvisionCompleted() -> b
    void onProvisionError(java.lang.Exception,boolean) -> c
androidx.media3.exoplayer.drm.DefaultDrmSession$ReferenceCountListener -> v.g$b:
    void onReferenceCountIncremented(androidx.media3.exoplayer.drm.DefaultDrmSession,int) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;I)V"}
    void onReferenceCountDecremented(androidx.media3.exoplayer.drm.DefaultDrmSession,int) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;I)V"}
androidx.media3.exoplayer.drm.DefaultDrmSession$RequestHandler -> v.g$c:
    boolean isReleased -> a
    androidx.media3.exoplayer.drm.DefaultDrmSession this$0 -> b
    1:1:void <init>(androidx.media3.exoplayer.drm.DefaultDrmSession,android.os.Looper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;Landroid/os/Looper;)V"}
    1:1:boolean maybeRetryRequest(android.os.Message,androidx.media3.exoplayer.drm.MediaDrmCallbackException):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Message;Lv/s0;)Z"}
    1:1:void post(int,java.lang.Object,boolean):0:0 -> b
    1:1:void release():0:0 -> c
    1:1:void handleMessage(android.os.Message):0:0 -> handleMessage
androidx.media3.exoplayer.drm.DefaultDrmSession$RequestTask -> v.g$d:
    long taskId -> a
    boolean allowRetry -> b
    long startTimeMs -> c
    java.lang.Object request -> d
    int errorCount -> e
    1:1:void <init>(long,boolean,long,java.lang.Object):0:0 -> <init>
androidx.media3.exoplayer.drm.DefaultDrmSession$ResponseHandler -> v.g$e:
    androidx.media3.exoplayer.drm.DefaultDrmSession this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.drm.DefaultDrmSession,android.os.Looper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;Landroid/os/Looper;)V"}
    1:1:void handleMessage(android.os.Message):0:0 -> handleMessage
androidx.media3.exoplayer.drm.DefaultDrmSession$UnexpectedDrmSessionException -> v.g$f:
    1:1:void <init>(java.lang.Throwable):0:0 -> <init>
androidx.media3.exoplayer.drm.DefaultDrmSessionManager -> v.h:
    java.util.UUID uuid -> b
    androidx.media3.exoplayer.drm.ExoMediaDrm$Provider exoMediaDrmProvider -> c
    androidx.media3.exoplayer.drm.MediaDrmCallback callback -> d
    java.util.HashMap keyRequestParameters -> e
    boolean multiSession -> f
    int[] useDrmSessionsForClearContentTrackTypes -> g
    boolean playClearSamplesWithoutKeys -> h
    androidx.media3.exoplayer.drm.DefaultDrmSessionManager$ProvisioningManagerImpl provisioningManagerImpl -> i
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> j
    androidx.media3.exoplayer.drm.DefaultDrmSessionManager$ReferenceCountListenerImpl referenceCountListener -> k
    long sessionKeepaliveMs -> l
    java.util.List sessions -> m
    java.util.Set preacquiredSessionReferences -> n
    java.util.Set keepaliveSessions -> o
    int prepareCallsCount -> p
    androidx.media3.exoplayer.drm.ExoMediaDrm exoMediaDrm -> q
    androidx.media3.exoplayer.drm.DefaultDrmSession placeholderDrmSession -> r
    androidx.media3.exoplayer.drm.DefaultDrmSession noMultiSessionDrmSession -> s
    android.os.Looper playbackLooper -> t
    android.os.Handler playbackHandler -> u
    int mode -> v
    byte[] offlineLicenseKeySetId -> w
    androidx.media3.exoplayer.analytics.PlayerId playerId -> x
    androidx.media3.exoplayer.drm.DefaultDrmSessionManager$MediaDrmHandler mediaDrmHandler -> y
    1:1:void <init>(java.util.UUID,androidx.media3.exoplayer.drm.ExoMediaDrm$Provider,androidx.media3.exoplayer.drm.MediaDrmCallback,java.util.HashMap,boolean,int[],boolean,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Lv/f0$c;Lv/r0;Ljava/util/HashMap;Z[IZLk0/m;J)V"}
    2:2:void <init>(java.util.UUID,androidx.media3.exoplayer.drm.ExoMediaDrm$Provider,androidx.media3.exoplayer.drm.MediaDrmCallback,java.util.HashMap,boolean,int[],boolean,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,long,androidx.media3.exoplayer.drm.DefaultDrmSessionManager$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Lv/f0$c;Lv/r0;Ljava/util/HashMap;Z[IZLk0/m;JLv/h$a;)V"}
    1:1:androidx.media3.exoplayer.drm.DrmSession maybeAcquirePlaceholderSession(int,boolean):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Lv/n;"}
    1:1:void maybeCreateMediaDrmHandler(android.os.Looper):0:0 -> B
    1:1:void maybeReleaseMediaDrm():0:0 -> C
    1:1:void releaseAllKeepaliveSessions():0:0 -> D
    1:1:void releaseAllPreacquiredSessions():0:0 -> E
    1:1:void setMode(int,byte[]):0:0 -> F
    1:1:void undoAcquisition(androidx.media3.exoplayer.drm.DrmSession,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/n;Lv/v$a;)V"}
    1:1:void verifyPlaybackThread(boolean):0:0 -> H
    1:1:androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference preacquireSession(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lj/q;)Lv/x$b;"}
    1:1:void setPlayer(android.os.Looper,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Looper;Lr/w3;)V"}
    1:1:int getCryptoType(androidx.media3.common.Format):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:androidx.media3.exoplayer.drm.DrmSession acquireSession(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lj/q;)Lv/n;"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSession access$1000(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)Lv/g;"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSession access$1002(androidx.media3.exoplayer.drm.DefaultDrmSessionManager,androidx.media3.exoplayer.drm.DefaultDrmSession):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;Lv/g;)Lv/g;"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSessionManager$ProvisioningManagerImpl access$1100(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)Lv/h$g;"}
    1:1:void access$1200(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)V"}
    1:1:void prepare():0:0 -> i
    1:1:java.util.Set access$1300(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)Ljava/util/Set;"}
    1:1:android.os.Looper access$1400(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)Landroid/os/Looper;"}
    1:1:androidx.media3.exoplayer.drm.DrmSession access$1500(androidx.media3.exoplayer.drm.DefaultDrmSessionManager,android.os.Looper,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;Landroid/os/Looper;Lv/v$a;Lj/q;Z)Lv/n;"}
    1:1:java.util.List access$400(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)Ljava/util/List;"}
    1:1:long access$500(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)J"}
    1:1:java.util.Set access$600(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)Ljava/util/Set;"}
    1:1:android.os.Handler access$700(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)Landroid/os/Handler;"}
    1:1:int access$800(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)I"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSession access$900(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)Lv/g;"}
    1:1:void release():0:0 -> release
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSession access$902(androidx.media3.exoplayer.drm.DefaultDrmSessionManager,androidx.media3.exoplayer.drm.DefaultDrmSession):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;Lv/g;)Lv/g;"}
    1:1:androidx.media3.exoplayer.drm.DrmSession acquireSession(android.os.Looper,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format,boolean):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Looper;Lv/v$a;Lj/q;Z)Lv/n;"}
    1:1:boolean acquisitionFailedIndicatingResourceShortage(androidx.media3.exoplayer.drm.DrmSession):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/n;)Z"}
    1:1:boolean canAcquireSession(androidx.media3.common.DrmInitData):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/m;)Z"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSession createAndAcquireSession(java.util.List,boolean,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;ZLv/v$a;)Lv/g;"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSession createAndAcquireSessionWithRetry(java.util.List,boolean,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,boolean):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;ZLv/v$a;Z)Lv/g;"}
    1:1:java.util.List getSchemeDatas(androidx.media3.common.DrmInitData,java.util.UUID,boolean):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/m;Ljava/util/UUID;Z)Ljava/util/List;"}
    1:1:void initPlaybackLooper(android.os.Looper):0:0 -> z
androidx.media3.exoplayer.drm.DefaultDrmSessionManager$1 -> v.h$a:
androidx.media3.exoplayer.drm.DefaultDrmSessionManager$Builder -> v.h$b:
    java.util.HashMap keyRequestParameters -> a
    java.util.UUID uuid -> b
    androidx.media3.exoplayer.drm.ExoMediaDrm$Provider exoMediaDrmProvider -> c
    boolean multiSession -> d
    int[] useDrmSessionsForClearContentTrackTypes -> e
    boolean playClearSamplesWithoutKeys -> f
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> g
    long sessionKeepaliveMs -> h
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSessionManager build(androidx.media3.exoplayer.drm.MediaDrmCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/r0;)Lv/h;"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSessionManager$Builder setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lv/h$b;"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSessionManager$Builder setMultiSession(boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lv/h$b;"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSessionManager$Builder setPlayClearSamplesWithoutKeys(boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lv/h$b;"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSessionManager$Builder setUseDrmSessionsForClearContent(int[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([I)Lv/h$b;"}
    1:1:androidx.media3.exoplayer.drm.DefaultDrmSessionManager$Builder setUuidAndExoMediaDrmProvider(java.util.UUID,androidx.media3.exoplayer.drm.ExoMediaDrm$Provider):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Lv/f0$c;)Lv/h$b;"}
androidx.media3.exoplayer.drm.DefaultDrmSessionManager$MediaDrmEventListener -> v.h$c:
    androidx.media3.exoplayer.drm.DefaultDrmSessionManager this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)V"}
    2:2:void <init>(androidx.media3.exoplayer.drm.DefaultDrmSessionManager,androidx.media3.exoplayer.drm.DefaultDrmSessionManager$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;Lv/h$a;)V"}
    1:1:void onEvent(androidx.media3.exoplayer.drm.ExoMediaDrm,byte[],int,int,byte[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/f0;[BII[B)V"}
androidx.media3.exoplayer.drm.DefaultDrmSessionManager$MediaDrmHandler -> v.h$d:
    androidx.media3.exoplayer.drm.DefaultDrmSessionManager this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.drm.DefaultDrmSessionManager,android.os.Looper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;Landroid/os/Looper;)V"}
    1:1:void handleMessage(android.os.Message):0:0 -> handleMessage
androidx.media3.exoplayer.drm.DefaultDrmSessionManager$MissingSchemeDataException -> v.h$e:
    1:1:void <init>(java.util.UUID):0:0 -> <init>
    2:2:void <init>(java.util.UUID,androidx.media3.exoplayer.drm.DefaultDrmSessionManager$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Lv/h$a;)V"}
androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference -> v.h$f:
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher eventDispatcher -> b
    androidx.media3.exoplayer.drm.DrmSession session -> c
    boolean isReleased -> d
    androidx.media3.exoplayer.drm.DefaultDrmSessionManager this$0 -> e
    1:1:void <init>(androidx.media3.exoplayer.drm.DefaultDrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;Lv/v$a;)V"}
    1:1:void $r8$lambda$BWUlbpHNnO0pd6L0GQ1Cex4nU4E(androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h$f;)V"}
    1:1:void $r8$lambda$fCLVq_t20h3xLks86JGondJV4gk(androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference,androidx.media3.common.Format):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h$f;Lj/q;)V"}
    1:1:void acquire(androidx.media3.common.Format):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:void lambda$acquire$0(androidx.media3.common.Format):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:void lambda$release$1():0:0 -> e
    1:1:void release():0:0 -> release
androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference$$ExternalSyntheticLambda0 -> v.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference$$InternalSyntheticLambda$9$3ef33cd8382896d5f43a377ee0adf39f3039df88e200ca200cdd8130606cfd90$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference$$InternalSyntheticLambda$9$3ef33cd8382896d5f43a377ee0adf39f3039df88e200ca200cdd8130606cfd90$0.<init>(androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h$f;)V"}
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference$$InternalSyntheticLambda$9$3ef33cd8382896d5f43a377ee0adf39f3039df88e200ca200cdd8130606cfd90$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference$$ExternalSyntheticLambda1 -> v.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference$$InternalSyntheticLambda$9$8efdc642cd2567ea07dad40fa0f6145b707838216e9fa34a422b530adee4d6e0$0.f$0 -> f
    androidx.media3.common.Format androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference$$InternalSyntheticLambda$9$8efdc642cd2567ea07dad40fa0f6145b707838216e9fa34a422b530adee4d6e0$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference$$InternalSyntheticLambda$9$8efdc642cd2567ea07dad40fa0f6145b707838216e9fa34a422b530adee4d6e0$0.<init>(androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference,androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h$f;Lj/q;)V"}
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSessionManager$PreacquiredSessionReference$$InternalSyntheticLambda$9$8efdc642cd2567ea07dad40fa0f6145b707838216e9fa34a422b530adee4d6e0$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DefaultDrmSessionManager$ProvisioningManagerImpl -> v.h$g:
    java.util.Set sessionsAwaitingProvisioning -> a
    androidx.media3.exoplayer.drm.DefaultDrmSession provisioningSession -> b
    androidx.media3.exoplayer.drm.DefaultDrmSessionManager this$0 -> c
    1:1:void <init>(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)V"}
    1:1:void provisionRequired(androidx.media3.exoplayer.drm.DefaultDrmSession):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;)V"}
    1:1:void onProvisionCompleted():0:0 -> b
    1:1:void onProvisionError(java.lang.Exception,boolean):0:0 -> c
    1:1:void onSessionFullyReleased(androidx.media3.exoplayer.drm.DefaultDrmSession):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;)V"}
androidx.media3.exoplayer.drm.DefaultDrmSessionManager$ReferenceCountListenerImpl -> v.h$h:
    androidx.media3.exoplayer.drm.DefaultDrmSessionManager this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.drm.DefaultDrmSessionManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;)V"}
    2:2:void <init>(androidx.media3.exoplayer.drm.DefaultDrmSessionManager,androidx.media3.exoplayer.drm.DefaultDrmSessionManager$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/h;Lv/h$a;)V"}
    1:1:void onReferenceCountIncremented(androidx.media3.exoplayer.drm.DefaultDrmSession,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;I)V"}
    1:1:void onReferenceCountDecremented(androidx.media3.exoplayer.drm.DefaultDrmSession,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;I)V"}
    1:1:void $r8$lambda$6-4p6JOtHzUfGta2avWoAEIpMgk(androidx.media3.exoplayer.drm.DefaultDrmSession):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;)V"}
    1:1:void lambda$onReferenceCountDecremented$0(androidx.media3.exoplayer.drm.DefaultDrmSession):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;)V"}
androidx.media3.exoplayer.drm.DefaultDrmSessionManager$ReferenceCountListenerImpl$$ExternalSyntheticLambda0 -> v.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.drm.DefaultDrmSession androidx.media3.exoplayer.drm.DefaultDrmSessionManager$ReferenceCountListenerImpl$$InternalSyntheticLambda$9$f4ba90a0252b9baed996f30d2f7fc10d3e69af1b6a8dbcc5ab6993f69907b55b$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSessionManager$ReferenceCountListenerImpl$$InternalSyntheticLambda$9$f4ba90a0252b9baed996f30d2f7fc10d3e69af1b6a8dbcc5ab6993f69907b55b$0.<init>(androidx.media3.exoplayer.drm.DefaultDrmSession):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/g;)V"}
    1:1:void androidx.media3.exoplayer.drm.DefaultDrmSessionManager$ReferenceCountListenerImpl$$InternalSyntheticLambda$9$f4ba90a0252b9baed996f30d2f7fc10d3e69af1b6a8dbcc5ab6993f69907b55b$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DefaultDrmSessionManagerProvider -> v.l:
    java.lang.Object lock -> a
    androidx.media3.common.MediaItem$DrmConfiguration drmConfiguration -> b
    androidx.media3.exoplayer.drm.DrmSessionManager manager -> c
    androidx.media3.datasource.DataSource$Factory drmHttpDataSourceFactory -> d
    java.lang.String userAgent -> e
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy drmLoadErrorHandlingPolicy -> f
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.exoplayer.drm.DrmSessionManager get(androidx.media3.common.MediaItem):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lv/x;"}
    1:1:androidx.media3.exoplayer.drm.DrmSessionManager createManager(androidx.media3.common.MediaItem$DrmConfiguration):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$f;)Lv/x;"}
androidx.media3.exoplayer.drm.DrmSession -> v.n:
    void release(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;)V"}
    boolean playClearSamplesWithoutKeys() -> b
    java.util.Map queryKeyStatus() -> c
    int getState() -> d
    void acquire(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;)V"}
    java.util.UUID getSchemeUuid() -> f
    boolean requiresSecureDecoder(java.lang.String) -> g
    androidx.media3.exoplayer.drm.DrmSession$DrmSessionException getError() -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv/n$a;"}
    androidx.media3.decoder.CryptoConfig getCryptoConfig() -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/b;"}
androidx.media3.exoplayer.drm.DrmSession$-CC -> v.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    7:15:void androidx.media3.exoplayer.drm.DrmSession.replaceSession(androidx.media3.exoplayer.drm.DrmSession,androidx.media3.exoplayer.drm.DrmSession):0:0 -> a
    7:15:void replaceSession(androidx.media3.exoplayer.drm.DrmSession,androidx.media3.exoplayer.drm.DrmSession):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/n;Lv/n;)V"}
androidx.media3.exoplayer.drm.DrmSession$DrmSessionException -> v.n$a:
    int errorCode -> f
    1:1:void <init>(java.lang.Throwable,int):0:0 -> <init>
androidx.media3.exoplayer.drm.DrmSessionEventListener -> v.v:
    void onDrmKeysLoaded(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    void onDrmSessionReleased(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    void onDrmSessionManagerError(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,java.lang.Exception) -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Ljava/lang/Exception;)V"}
    void onDrmKeysRemoved(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    void onDrmKeysRestored(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    void onDrmSessionAcquired(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    void onDrmSessionAcquired(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,int) -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;I)V"}
androidx.media3.exoplayer.drm.DrmSessionEventListener$-CC -> v.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$onDrmSessionAcquired(androidx.media3.exoplayer.drm.DrmSessionEventListener,int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v;ILg0/f0$b;)V"}
androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher -> v.v$a:
    int windowIndex -> a
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId -> b
    java.util.concurrent.CopyOnWriteArrayList listenerAndHandlers -> c
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(java.util.concurrent.CopyOnWriteArrayList,int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/CopyOnWriteArrayList;ILg0/f0$b;)V"}
    1:1:void $r8$lambda$1soR2XB-NDqou1HoxQIsjwWUdis(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;)V"}
    1:1:void $r8$lambda$h8EVPCiq9fzW6JXaqdN4bB4KrYo(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener,int):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;I)V"}
    1:1:void $r8$lambda$idWl0lib48LmsSWPZp537c7qr3c(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener,java.lang.Exception):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;Ljava/lang/Exception;)V"}
    1:1:void $r8$lambda$pcEDtY4Gxn7Thh4LGBXdhcKWhaE(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;)V"}
    1:1:void $r8$lambda$sIz5IrCncKjt2jJYHVOo4XzMyEg(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;)V"}
    1:1:void $r8$lambda$vu-akcINtRhtjDf7CnMMAcpbzy0(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;)V"}
    1:1:void addEventListener(android.os.Handler,androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lv/v;)V"}
    1:1:void drmKeysLoaded():0:0 -> h
    1:1:void drmKeysRemoved():0:0 -> i
    1:1:void drmKeysRestored():0:0 -> j
    1:1:void drmSessionAcquired(int):0:0 -> k
    1:1:void drmSessionManagerError(java.lang.Exception):0:0 -> l
    1:1:void drmSessionReleased():0:0 -> m
    1:1:void lambda$drmKeysLoaded$1(androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v;)V"}
    1:1:void lambda$drmKeysRemoved$4(androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v;)V"}
    1:1:void lambda$drmKeysRestored$3(androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v;)V"}
    1:1:void lambda$drmSessionAcquired$0(androidx.media3.exoplayer.drm.DrmSessionEventListener,int):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v;I)V"}
    1:1:void lambda$drmSessionManagerError$2(androidx.media3.exoplayer.drm.DrmSessionEventListener,java.lang.Exception):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v;Ljava/lang/Exception;)V"}
    1:1:void lambda$drmSessionReleased$5(androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v;)V"}
    1:1:void removeEventListener(androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v;)V"}
    1:1:androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher withParameters(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)Lv/v$a;"}
androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$ExternalSyntheticLambda0 -> v.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$3a0582d609f1df24bfcc024c02dd0e813137eabbf1776e4e78543fed9d5caff3$0.f$0 -> f
    androidx.media3.exoplayer.drm.DrmSessionEventListener androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$3a0582d609f1df24bfcc024c02dd0e813137eabbf1776e4e78543fed9d5caff3$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$3a0582d609f1df24bfcc024c02dd0e813137eabbf1776e4e78543fed9d5caff3$0.<init>(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;)V"}
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$3a0582d609f1df24bfcc024c02dd0e813137eabbf1776e4e78543fed9d5caff3$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$ExternalSyntheticLambda1 -> v.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$435c61b1bf06ef9135bea7408069c546794598238ba802b979d291ad0a0b76a8$0.f$0 -> f
    androidx.media3.exoplayer.drm.DrmSessionEventListener androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$435c61b1bf06ef9135bea7408069c546794598238ba802b979d291ad0a0b76a8$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$435c61b1bf06ef9135bea7408069c546794598238ba802b979d291ad0a0b76a8$0.<init>(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;)V"}
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$435c61b1bf06ef9135bea7408069c546794598238ba802b979d291ad0a0b76a8$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$ExternalSyntheticLambda2 -> v.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$a9d23e6b01dd66eb8a0ef92f3196aa45801cb0e4ac5921edb540c0b450ecfb0f$0.f$0 -> f
    androidx.media3.exoplayer.drm.DrmSessionEventListener androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$a9d23e6b01dd66eb8a0ef92f3196aa45801cb0e4ac5921edb540c0b450ecfb0f$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$a9d23e6b01dd66eb8a0ef92f3196aa45801cb0e4ac5921edb540c0b450ecfb0f$0.<init>(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;)V"}
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$10$a9d23e6b01dd66eb8a0ef92f3196aa45801cb0e4ac5921edb540c0b450ecfb0f$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$ExternalSyntheticLambda3 -> v.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$00f2a9dd6ae59411aeb01237991c46c606416780069dc8a8de5eae504995ad68$0.f$0 -> f
    androidx.media3.exoplayer.drm.DrmSessionEventListener androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$00f2a9dd6ae59411aeb01237991c46c606416780069dc8a8de5eae504995ad68$0.f$1 -> g
    int androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$00f2a9dd6ae59411aeb01237991c46c606416780069dc8a8de5eae504995ad68$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$00f2a9dd6ae59411aeb01237991c46c606416780069dc8a8de5eae504995ad68$0.<init>(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;I)V"}
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$00f2a9dd6ae59411aeb01237991c46c606416780069dc8a8de5eae504995ad68$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$ExternalSyntheticLambda4 -> v.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$5c8b2125bc9c7ba0a0f5f49930525a4cc40de9520081fef0e27c63ed1788a5c7$0.f$0 -> f
    androidx.media3.exoplayer.drm.DrmSessionEventListener androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$5c8b2125bc9c7ba0a0f5f49930525a4cc40de9520081fef0e27c63ed1788a5c7$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$5c8b2125bc9c7ba0a0f5f49930525a4cc40de9520081fef0e27c63ed1788a5c7$0.<init>(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;)V"}
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$5c8b2125bc9c7ba0a0f5f49930525a4cc40de9520081fef0e27c63ed1788a5c7$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$ExternalSyntheticLambda5 -> v.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$7a4bbe1e0296911daaf25f2d4a158768f9e2997ca3d5f1a46d362e742ca81ce5$0.f$0 -> f
    androidx.media3.exoplayer.drm.DrmSessionEventListener androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$7a4bbe1e0296911daaf25f2d4a158768f9e2997ca3d5f1a46d362e742ca81ce5$0.f$1 -> g
    java.lang.Exception androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$7a4bbe1e0296911daaf25f2d4a158768f9e2997ca3d5f1a46d362e742ca81ce5$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$7a4bbe1e0296911daaf25f2d4a158768f9e2997ca3d5f1a46d362e742ca81ce5$0.<init>(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.drm.DrmSessionEventListener,java.lang.Exception):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lv/v;Ljava/lang/Exception;)V"}
    1:1:void androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$$InternalSyntheticLambda$9$7a4bbe1e0296911daaf25f2d4a158768f9e2997ca3d5f1a46d362e742ca81ce5$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher$ListenerAndHandler -> v.v$a$a:
    android.os.Handler handler -> a
    androidx.media3.exoplayer.drm.DrmSessionEventListener listener -> b
    1:1:void <init>(android.os.Handler,androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lv/v;)V"}
androidx.media3.exoplayer.drm.DrmSessionManager -> v.x:
    androidx.media3.exoplayer.drm.DrmSessionManager DRM_UNSUPPORTED -> a
    1:1:void <clinit>():0:0 -> <clinit>
    androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference preacquireSession(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lj/q;)Lv/x$b;"}
    void setPlayer(android.os.Looper,androidx.media3.exoplayer.analytics.PlayerId) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Looper;Lr/w3;)V"}
    int getCryptoType(androidx.media3.common.Format) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    androidx.media3.exoplayer.drm.DrmSession acquireSession(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lj/q;)Lv/n;"}
    void prepare() -> i
    void release() -> release
androidx.media3.exoplayer.drm.DrmSessionManager$-CC -> v.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:3:androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference androidx.media3.exoplayer.drm.DrmSessionManager.preacquireSession(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format):0:0 -> a
    1:3:androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference $default$preacquireSession(androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/x;Lv/v$a;Lj/q;)Lv/x$b;"}
    1:1:void $default$prepare(androidx.media3.exoplayer.drm.DrmSessionManager):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/x;)V"}
    1:1:void $default$release(androidx.media3.exoplayer.drm.DrmSessionManager):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/x;)V"}
androidx.media3.exoplayer.drm.DrmSessionManager$1 -> v.x$a:
    void <init>() -> <init>
    1:1:androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference preacquireSession(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lj/q;)Lv/x$b;"}
    1:1:void setPlayer(android.os.Looper,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Looper;Lr/w3;)V"}
    1:1:int getCryptoType(androidx.media3.common.Format):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:androidx.media3.exoplayer.drm.DrmSession acquireSession(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.common.Format):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;Lj/q;)Lv/n;"}
    1:1:void prepare():0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference -> v.x$b:
    androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference EMPTY -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void release() -> release
androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference$$ExternalSyntheticLambda0 -> v.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference$$InternalSyntheticLambda$9$c9d5d67ae807291c6b74377696cd38791dec9758244ad3719915fe28baa3284c$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference$$InternalSyntheticLambda$9$c9d5d67ae807291c6b74377696cd38791dec9758244ad3719915fe28baa3284c$0.release():0:0 -> release
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference$-CC -> v.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void <clinit>():0:0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void lambda$static$0():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.DrmSessionManagerProvider -> v.a0:
    androidx.media3.exoplayer.drm.DrmSessionManager get(androidx.media3.common.MediaItem) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lv/x;"}
androidx.media3.exoplayer.drm.DrmUtil -> v.b0:
    1:1:int getErrorCodeForMediaDrmException(java.lang.Throwable,int):0:0 -> a
    1:1:boolean isFailureToConstructNotProvisionedException(java.lang.Throwable):0:0 -> b
    1:1:boolean isFailureToConstructResourceBusyException(java.lang.Throwable):0:0 -> c
androidx.media3.exoplayer.drm.DrmUtil$Api21 -> v.b0$a:
    1:1:boolean isMediaDrmStateException(java.lang.Throwable):0:0 -> a
    1:1:int mediaDrmStateExceptionToErrorCode(java.lang.Throwable):0:0 -> b
androidx.media3.exoplayer.drm.DrmUtil$Api23 -> v.b0$b:
    1:1:boolean isMediaDrmResetException(java.lang.Throwable):0:0 -> a
androidx.media3.exoplayer.drm.DummyExoMediaDrm -> v.c0:
    void <init>() -> <init>
    1:1:void setOnEventListener(androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/f0$b;)V"}
    1:1:androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest getProvisionRequest():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv/f0$d;"}
    1:1:void setPlayerIdForSession(byte[],androidx.media3.exoplayer.analytics.PlayerId):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLr/w3;)V"}
    1:1:void provideProvisionResponse(byte[]):0:0 -> d
    1:1:androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest getKeyRequest(byte[],java.util.List,int,java.util.HashMap):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLjava/util/List;ILjava/util/HashMap;)Lv/f0$a;"}
    1:1:boolean requiresSecureDecoder(byte[],java.lang.String):0:0 -> f
    1:1:void restoreKeys(byte[],byte[]):0:0 -> g
    1:1:java.util.Map queryKeyStatus(byte[]):0:0 -> h
    1:1:int getCryptoType():0:0 -> i
    1:1:void closeSession(byte[]):0:0 -> j
    1:1:androidx.media3.decoder.CryptoConfig createCryptoConfig(byte[]):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lp/b;"}
    1:1:byte[] openSession():0:0 -> l
    1:1:byte[] provideKeyResponse(byte[],byte[]):0:0 -> m
    1:1:void release():0:0 -> release
androidx.media3.exoplayer.drm.ErrorStateDrmSession -> v.d0:
    androidx.media3.exoplayer.drm.DrmSession$DrmSessionException error -> a
    1:1:void <init>(androidx.media3.exoplayer.drm.DrmSession$DrmSessionException):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/n$a;)V"}
    1:1:void release(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;)V"}
    1:1:boolean playClearSamplesWithoutKeys():0:0 -> b
    1:1:java.util.Map queryKeyStatus():0:0 -> c
    1:1:int getState():0:0 -> d
    1:1:void acquire(androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v$a;)V"}
    1:1:java.util.UUID getSchemeUuid():0:0 -> f
    1:1:boolean requiresSecureDecoder(java.lang.String):0:0 -> g
    1:1:androidx.media3.exoplayer.drm.DrmSession$DrmSessionException getError():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv/n$a;"}
    1:1:androidx.media3.decoder.CryptoConfig getCryptoConfig():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/b;"}
androidx.media3.exoplayer.drm.ExoMediaDrm -> v.f0:
    void setOnEventListener(androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/f0$b;)V"}
    androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest getProvisionRequest() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv/f0$d;"}
    void setPlayerIdForSession(byte[],androidx.media3.exoplayer.analytics.PlayerId) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLr/w3;)V"}
    void provideProvisionResponse(byte[]) -> d
    androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest getKeyRequest(byte[],java.util.List,int,java.util.HashMap) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLjava/util/List;ILjava/util/HashMap;)Lv/f0$a;"}
    boolean requiresSecureDecoder(byte[],java.lang.String) -> f
    void restoreKeys(byte[],byte[]) -> g
    java.util.Map queryKeyStatus(byte[]) -> h
    int getCryptoType() -> i
    void closeSession(byte[]) -> j
    androidx.media3.decoder.CryptoConfig createCryptoConfig(byte[]) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lp/b;"}
    byte[] openSession() -> l
    byte[] provideKeyResponse(byte[],byte[]) -> m
    void release() -> release
androidx.media3.exoplayer.drm.ExoMediaDrm$-CC -> v.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$setPlayerIdForSession(androidx.media3.exoplayer.drm.ExoMediaDrm,byte[],androidx.media3.exoplayer.analytics.PlayerId):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/f0;[BLr/w3;)V"}
androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest -> v.f0$a:
    byte[] data -> a
    java.lang.String licenseServerUrl -> b
    int requestType -> c
    1:1:void <init>(byte[],java.lang.String,int):0:0 -> <init>
    1:1:byte[] getData():0:0 -> a
    1:1:java.lang.String getLicenseServerUrl():0:0 -> b
androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener -> v.f0$b:
    void onEvent(androidx.media3.exoplayer.drm.ExoMediaDrm,byte[],int,int,byte[]) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/f0;[BII[B)V"}
androidx.media3.exoplayer.drm.ExoMediaDrm$Provider -> v.f0$c:
    androidx.media3.exoplayer.drm.ExoMediaDrm acquireExoMediaDrm(java.util.UUID) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;)Lv/f0;"}
androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest -> v.f0$d:
    byte[] data -> a
    java.lang.String defaultUrl -> b
    1:1:void <init>(byte[],java.lang.String):0:0 -> <init>
    1:1:byte[] getData():0:0 -> a
    1:1:java.lang.String getDefaultUrl():0:0 -> b
androidx.media3.exoplayer.drm.FrameworkCryptoConfig -> v.g0:
    java.util.UUID uuid -> a
    byte[] sessionId -> b
    boolean forceAllowInsecureDecoderComponents -> c
    boolean WORKAROUND_DEVICE_NEEDS_KEYS_TO_CONFIGURE_CODEC -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.UUID,byte[],boolean):0:0 -> <init>
androidx.media3.exoplayer.drm.FrameworkMediaDrm -> v.o0:
    java.util.UUID uuid -> a
    android.media.MediaDrm mediaDrm -> b
    int referenceCount -> c
    androidx.media3.exoplayer.drm.ExoMediaDrm$Provider DEFAULT_PROVIDER -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.UUID):0:0 -> <init>
    1:1:void lambda$setOnEventListener$1(androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener,android.media.MediaDrm,byte[],int,int,byte[]):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/f0$b;Landroid/media/MediaDrm;[BII[B)V"}
    1:1:androidx.media3.exoplayer.drm.ExoMediaDrm lambda$static$0(java.util.UUID):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;)Lv/f0;"}
    1:1:boolean needsForceWidevineL3Workaround():0:0 -> C
    1:1:androidx.media3.exoplayer.drm.FrameworkMediaDrm newInstance(java.util.UUID):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;)Lv/o0;"}
    1:1:boolean shouldForceAllowInsecureDecoderComponents():0:0 -> E
    1:1:void setOnEventListener(androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/f0$b;)V"}
    1:1:androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest getProvisionRequest():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv/f0$d;"}
    1:1:void setPlayerIdForSession(byte[],androidx.media3.exoplayer.analytics.PlayerId):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLr/w3;)V"}
    1:1:void provideProvisionResponse(byte[]):0:0 -> d
    1:1:androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest getKeyRequest(byte[],java.util.List,int,java.util.HashMap):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLjava/util/List;ILjava/util/HashMap;)Lv/f0$a;"}
    1:1:boolean requiresSecureDecoder(byte[],java.lang.String):0:0 -> f
    1:1:void restoreKeys(byte[],byte[]):0:0 -> g
    1:1:java.util.Map queryKeyStatus(byte[]):0:0 -> h
    1:1:int getCryptoType():0:0 -> i
    1:1:void closeSession(byte[]):0:0 -> j
    1:1:androidx.media3.decoder.CryptoConfig createCryptoConfig(byte[]):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lp/b;"}
    1:1:byte[] openSession():0:0 -> l
    1:1:byte[] provideKeyResponse(byte[],byte[]):0:0 -> m
    1:1:void $r8$lambda$HOYaMEsVU-sGA5tqHTvymFiNxrI(androidx.media3.exoplayer.drm.FrameworkMediaDrm,androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener,android.media.MediaDrm,byte[],int,int,byte[]):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/o0;Lv/f0$b;Landroid/media/MediaDrm;[BII[B)V"}
    1:1:androidx.media3.exoplayer.drm.ExoMediaDrm $r8$lambda$wwVJw-YGvYN9c8lhXotI28kxhNc(java.util.UUID):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;)Lv/f0;"}
    1:1:byte[] addLaUrlAttributeIfMissing(byte[]):0:0 -> p
    1:1:java.lang.String adjustLicenseServerUrl(java.lang.String):0:0 -> q
    1:1:byte[] adjustRequestData(java.util.UUID,byte[]):0:0 -> r
    1:1:void release():0:0 -> release
    1:1:byte[] adjustRequestInitData(java.util.UUID,byte[]):0:0 -> s
    1:1:java.lang.String adjustRequestMimeType(java.util.UUID,java.lang.String):0:0 -> t
    1:1:java.util.UUID adjustUuid(java.util.UUID):0:0 -> u
    1:1:androidx.media3.exoplayer.drm.FrameworkCryptoConfig createCryptoConfig(byte[]):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lv/g0;"}
    1:1:void forceWidevineL3(android.media.MediaDrm):0:0 -> w
    1:1:java.lang.String getPropertyString(java.lang.String):0:0 -> x
    1:1:androidx.media3.common.DrmInitData$SchemeData getSchemeData(java.util.UUID,java.util.List):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Ljava/util/List;)Lj/m$b;"}
    1:1:boolean isMediaDrmRequiresSecureDecoderImplemented():0:0 -> z
androidx.media3.exoplayer.drm.FrameworkMediaDrm$$ExternalSyntheticApiModelOutline0 -> v.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.drm.FrameworkMediaDrm$$InternalSyntheticApiModelOutline$10$363fc26382581a396106f7581e4350e37d1f5e21cc3a948ed5330dc9acd7fcbb$0.m(android.media.MediaDrm$KeyRequest):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.FrameworkMediaDrm$$ExternalSyntheticLambda1 -> v.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.drm.FrameworkMediaDrm androidx.media3.exoplayer.drm.FrameworkMediaDrm$$InternalSyntheticLambda$10$d2196f1c1c6efe51ba9e8fe49c7e79131becb7e9473c336e1ec57b4a14e0bac6$0.f$0 -> a
    androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener androidx.media3.exoplayer.drm.FrameworkMediaDrm$$InternalSyntheticLambda$10$d2196f1c1c6efe51ba9e8fe49c7e79131becb7e9473c336e1ec57b4a14e0bac6$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.drm.FrameworkMediaDrm$$InternalSyntheticLambda$10$d2196f1c1c6efe51ba9e8fe49c7e79131becb7e9473c336e1ec57b4a14e0bac6$0.<init>(androidx.media3.exoplayer.drm.FrameworkMediaDrm,androidx.media3.exoplayer.drm.ExoMediaDrm$OnEventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/o0;Lv/f0$b;)V"}
    1:1:void androidx.media3.exoplayer.drm.FrameworkMediaDrm$$InternalSyntheticLambda$10$d2196f1c1c6efe51ba9e8fe49c7e79131becb7e9473c336e1ec57b4a14e0bac6$0.onEvent(android.media.MediaDrm,byte[],int,int,byte[]):0:0 -> onEvent
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.FrameworkMediaDrm$$ExternalSyntheticLambda2 -> v.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.drm.FrameworkMediaDrm$$InternalSyntheticLambda$7$c9e24a80cc2c150691269a2ca2c996163676fba5bd1f6b6ea97a3bdf9d5dd536$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.exoplayer.drm.ExoMediaDrm androidx.media3.exoplayer.drm.FrameworkMediaDrm$$InternalSyntheticLambda$7$c9e24a80cc2c150691269a2ca2c996163676fba5bd1f6b6ea97a3bdf9d5dd536$0.acquireExoMediaDrm(java.util.UUID):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;)Lv/f0;"}
androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31 -> v.o0$a:
    1:1:boolean requiresSecureDecoder(android.media.MediaDrm,java.lang.String):0:0 -> a
    1:1:void setLogSessionIdOnMediaDrmSession(android.media.MediaDrm,byte[],androidx.media3.exoplayer.analytics.PlayerId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/MediaDrm;[BLr/w3;)V"}
androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31$$ExternalSyntheticApiModelOutline0 -> v.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.MediaDrm$PlaybackComponent androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31$$InternalSyntheticApiModelOutline$10$3c853a6fea81b7bb5c6cadc4d78df0d655da5c88e8f3347258943781d4e45ad1$2.m(android.media.MediaDrm,byte[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31$$ExternalSyntheticApiModelOutline1 -> v.l0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.MediaDrm$PlaybackComponent androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31$$InternalSyntheticApiModelOutline$10$3c853a6fea81b7bb5c6cadc4d78df0d655da5c88e8f3347258943781d4e45ad1$3.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31$$ExternalSyntheticApiModelOutline2 -> v.m0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31$$InternalSyntheticApiModelOutline$10$3c853a6fea81b7bb5c6cadc4d78df0d655da5c88e8f3347258943781d4e45ad1$4.m(android.media.MediaDrm$PlaybackComponent,android.media.metrics.LogSessionId):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31$$ExternalSyntheticApiModelOutline3 -> v.n0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.drm.FrameworkMediaDrm$Api31$$InternalSyntheticApiModelOutline$10$d8d368ad475c44385afac6304810fbf7b383ba2127e8cf585b07adec207c6755$0.m(android.media.MediaDrm,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.drm.HttpMediaDrmCallback -> v.p0:
    androidx.media3.datasource.DataSource$Factory dataSourceFactory -> a
    java.lang.String defaultLicenseUrl -> b
    boolean forceDefaultLicenseUrl -> c
    java.util.Map keyRequestProperties -> d
    1:1:void <init>(java.lang.String,boolean,androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ZLo/g$a;)V"}
    1:1:byte[] executeKeyRequest(java.util.UUID,androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Lv/f0$a;)[B"}
    1:1:byte[] executeProvisionRequest(java.util.UUID,androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Lv/f0$d;)[B"}
    1:1:byte[] executePost(androidx.media3.datasource.DataSource$Factory,java.lang.String,byte[],java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;Ljava/lang/String;[BLjava/util/Map;)[B"}
    1:1:java.lang.String getRedirectUrl(androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/t;I)Ljava/lang/String;"}
    1:1:void setKeyRequestProperty(java.lang.String,java.lang.String):0:0 -> e
androidx.media3.exoplayer.drm.KeysExpiredException -> v.q0:
    void <init>() -> <init>
androidx.media3.exoplayer.drm.MediaDrmCallback -> v.r0:
    byte[] executeKeyRequest(java.util.UUID,androidx.media3.exoplayer.drm.ExoMediaDrm$KeyRequest) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Lv/f0$a;)[B"}
    byte[] executeProvisionRequest(java.util.UUID,androidx.media3.exoplayer.drm.ExoMediaDrm$ProvisionRequest) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;Lv/f0$d;)[B"}
androidx.media3.exoplayer.drm.MediaDrmCallbackException -> v.s0:
    androidx.media3.datasource.DataSpec dataSpec -> f
    android.net.Uri uriAfterRedirects -> g
    java.util.Map responseHeaders -> h
    long bytesLoaded -> i
    1:1:void <init>(androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,java.lang.Throwable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Landroid/net/Uri;Ljava/util/Map;JLjava/lang/Throwable;)V"}
androidx.media3.exoplayer.drm.UnsupportedDrmException -> v.t0:
    int reason -> f
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(int,java.lang.Exception):0:0 -> <init>
androidx.media3.exoplayer.drm.WidevineUtil -> v.u0:
    1:1:long getDurationRemainingSec(java.util.Map,java.lang.String):0:0 -> a
    1:1:android.util.Pair getLicenseDurationRemainingSec(androidx.media3.exoplayer.drm.DrmSession):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/n;)Landroid/util/Pair;"}
androidx.media3.exoplayer.hls.Aes128DataSource -> androidx.media3.exoplayer.hls.a:
    androidx.media3.datasource.DataSource upstream -> a
    byte[] encryptionKey -> b
    byte[] encryptionIv -> c
    javax.crypto.CipherInputStream cipherInputStream -> d
    1:1:void <init>(androidx.media3.datasource.DataSource,byte[],byte[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;[B[B)V"}
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:javax.crypto.Cipher getCipherInstance():0:0 -> h
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
    1:1:void addTransferListener(androidx.media3.datasource.TransferListener):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:java.util.Map getResponseHeaders():0:0 -> s
androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor -> w.a:
    androidx.media3.extractor.Extractor extractor -> a
    androidx.media3.common.Format multivariantPlaylistFormat -> b
    androidx.media3.common.util.TimestampAdjuster timestampAdjuster -> c
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> d
    boolean parseSubtitlesDuringExtraction -> e
    androidx.media3.extractor.PositionHolder POSITION_HOLDER -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.extractor.Extractor,androidx.media3.common.Format,androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.text.SubtitleParser$Factory,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/r;Lj/q;Lm/e0;Ll1/t$a;Z)V"}
    1:1:void onTruncatedSegmentParsed():0:0 -> a
    1:1:boolean isReusable():0:0 -> b
    1:1:boolean read(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:boolean isPackedAudioExtractor():0:0 -> e
    1:1:androidx.media3.exoplayer.hls.HlsMediaChunkExtractor recreate():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw/f;"}
androidx.media3.exoplayer.hls.DefaultHlsDataSourceFactory -> w.b:
    androidx.media3.datasource.DataSource$Factory dataSourceFactory -> a
    1:1:void <init>(androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;)V"}
    1:1:androidx.media3.datasource.DataSource createDataSource(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lo/g;"}
androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory -> w.c:
    int payloadReaderFactoryFlags -> b
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> c
    boolean parseSubtitlesDuringExtraction -> d
    boolean exposeCea608WhenMissingDeclarations -> e
    int[] DEFAULT_EXTRACTOR_ORDER -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int,boolean):0:0 -> <init>
    1:1:androidx.media3.exoplayer.hls.HlsExtractorFactory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lw/e;"}
    1:1:androidx.media3.exoplayer.hls.HlsExtractorFactory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lw/e;"}
    1:1:androidx.media3.common.Format getOutputTextFormat(androidx.media3.common.Format):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
    1:1:androidx.media3.exoplayer.hls.HlsMediaChunkExtractor createExtractor(android.net.Uri,androidx.media3.common.Format,java.util.List,androidx.media3.common.util.TimestampAdjuster,java.util.Map,androidx.media3.extractor.ExtractorInput,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lj/q;Ljava/util/List;Lm/e0;Ljava/util/Map;Lo0/s;Lr/w3;)Lw/f;"}
    1:1:void addFileTypeIfValidAndNotPresent(int,java.util.List):0:0 -> e
    1:1:androidx.media3.exoplayer.hls.BundledHlsMediaChunkExtractor createExtractor(android.net.Uri,androidx.media3.common.Format,java.util.List,androidx.media3.common.util.TimestampAdjuster,java.util.Map,androidx.media3.extractor.ExtractorInput,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lj/q;Ljava/util/List;Lm/e0;Ljava/util/Map;Lo0/s;Lr/w3;)Lw/a;"}
    1:1:androidx.media3.extractor.Extractor createExtractorByFileType(int,androidx.media3.common.Format,java.util.List,androidx.media3.common.util.TimestampAdjuster):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/q;Ljava/util/List;Lm/e0;)Lo0/r;"}
    1:1:androidx.media3.extractor.mp4.FragmentedMp4Extractor createFragmentedMp4Extractor(androidx.media3.extractor.text.SubtitleParser$Factory,boolean,androidx.media3.common.util.TimestampAdjuster,androidx.media3.common.Format,java.util.List):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;ZLm/e0;Lj/q;Ljava/util/List;)Li1/h;"}
    1:1:androidx.media3.extractor.ts.TsExtractor createTsExtractor(int,boolean,androidx.media3.common.Format,java.util.List,androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.text.SubtitleParser$Factory,boolean):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZLj/q;Ljava/util/List;Lm/e0;Ll1/t$a;Z)Lu1/j0;"}
    1:1:androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lw/c;"}
    1:1:boolean isFmp4Variant(androidx.media3.common.Format):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:androidx.media3.exoplayer.hls.DefaultHlsExtractorFactory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lw/c;"}
    1:1:boolean sniffQuietly(androidx.media3.extractor.Extractor,androidx.media3.extractor.ExtractorInput):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/r;Lo0/s;)Z"}
androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache -> androidx.media3.exoplayer.hls.b:
    java.util.LinkedHashMap backingMap -> a
    1:1:byte[] get(android.net.Uri):0:0 -> a
    1:1:byte[] put(android.net.Uri,byte[]):0:0 -> b
    1:1:byte[] remove(android.net.Uri):0:0 -> c
androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache$1 -> androidx.media3.exoplayer.hls.b$a:
    int val$maxSize -> f
    androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache this$0 -> g
androidx.media3.exoplayer.hls.HlsChunkSource -> androidx.media3.exoplayer.hls.c:
    androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory -> a
    androidx.media3.datasource.DataSource mediaDataSource -> b
    androidx.media3.datasource.DataSource encryptionDataSource -> c
    androidx.media3.exoplayer.hls.TimestampAdjusterProvider timestampAdjusterProvider -> d
    android.net.Uri[] playlistUrls -> e
    androidx.media3.common.Format[] playlistFormats -> f
    androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker -> g
    androidx.media3.common.TrackGroup trackGroup -> h
    java.util.List muxedCaptionFormats -> i
    androidx.media3.exoplayer.hls.FullSegmentEncryptionKeyCache keyCache -> j
    androidx.media3.exoplayer.analytics.PlayerId playerId -> k
    long timestampAdjusterInitializationTimeoutMs -> l
    boolean isPrimaryTimestampSource -> m
    byte[] scratchSpace -> n
    java.io.IOException fatalError -> o
    android.net.Uri expectedPlaylistUrl -> p
    boolean independentSegments -> q
    androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection -> r
    long liveEdgeInPeriodTimeUs -> s
    boolean seenExpectedPlaylistError -> t
    long lastChunkRequestRealtimeMs -> u
    1:1:void <init>(androidx.media3.exoplayer.hls.HlsExtractorFactory,androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker,android.net.Uri[],androidx.media3.common.Format[],androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.hls.TimestampAdjusterProvider,long,java.util.List,androidx.media3.exoplayer.analytics.PlayerId,androidx.media3.exoplayer.upstream.CmcdConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/e;Lx/k;[Landroid/net/Uri;[Lj/q;Lw/d;Lo/y;Lw/j;JLjava/util/List;Lr/w3;Lk0/f;)V"}
    1:1:androidx.media3.exoplayer.source.chunk.MediaChunkIterator[] createMediaChunkIterators(androidx.media3.exoplayer.hls.HlsMediaChunk,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/e;J)[Lh0/n;"}
    1:1:void deactivatePlaylistForSelectedTrack():0:0 -> b
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:int getChunkPublicationState(androidx.media3.exoplayer.hls.HlsMediaChunk):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/e;)I"}
    1:1:android.net.Uri getFullEncryptionKeyUri(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;Lx/f$e;)Landroid/net/Uri;"}
    1:1:void getNextChunk(androidx.media3.exoplayer.LoadingInfo,long,java.util.List,boolean,androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;JLjava/util/List;ZLandroidx/media3/exoplayer/hls/c$b;)V"}
    1:1:android.util.Pair getNextMediaSequenceAndPartIndex(androidx.media3.exoplayer.hls.HlsMediaChunk,boolean,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/e;ZLx/f;JJ)Landroid/util/Pair;"}
    1:1:androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder getNextSegmentHolder(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;JI)Landroidx/media3/exoplayer/hls/c$e;"}
    1:1:int getPreferredQueueSize(long,java.util.List):0:0 -> i
    1:1:java.util.List getSegmentBaseList(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;JI)Ljava/util/List;"}
    1:1:androidx.media3.common.TrackGroup getTrackGroup():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/j0;"}
    1:1:androidx.media3.exoplayer.trackselection.ExoTrackSelection getTrackSelection():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/y;"}
    1:1:boolean hasIndependentSegments():0:0 -> m
    1:1:androidx.media3.exoplayer.source.chunk.Chunk maybeCreateEncryptionChunkFor(android.net.Uri,int,boolean,androidx.media3.exoplayer.upstream.CmcdData$Factory):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;IZLk0/g$a;)Lh0/e;"}
    1:1:boolean maybeExcludeTrack(androidx.media3.exoplayer.source.chunk.Chunk,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;J)Z"}
    1:1:void maybeThrowError():0:0 -> p
    1:1:boolean obtainsChunksForPlaylist(android.net.Uri):0:0 -> q
    1:1:void onChunkLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;)V"}
    1:1:boolean onPlaylistError(android.net.Uri,long):0:0 -> s
    1:1:void reset():0:0 -> t
    1:1:long resolveTimeToLiveEdgeUs(long):0:0 -> u
    1:1:void setIsPrimaryTimestampSource(boolean):0:0 -> v
    1:1:void setTrackSelection(androidx.media3.exoplayer.trackselection.ExoTrackSelection):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;)V"}
    1:1:boolean shouldCancelLoad(long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLh0/e;Ljava/util/List;)Z"}
    1:1:void updateLiveEdgeTimeUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;)V"}
androidx.media3.exoplayer.hls.HlsChunkSource$EncryptionKeyChunk -> androidx.media3.exoplayer.hls.c$a:
    byte[] result -> l
    1:1:void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,byte[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Lj/q;ILjava/lang/Object;[B)V"}
    1:1:void consume(byte[],int):0:0 -> g
    1:1:byte[] getResult():0:0 -> j
androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder -> androidx.media3.exoplayer.hls.c$b:
    androidx.media3.exoplayer.source.chunk.Chunk chunk -> a
    boolean endOfStream -> b
    android.net.Uri playlistUrl -> c
    1:1:void clear():0:0 -> a
androidx.media3.exoplayer.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator -> androidx.media3.exoplayer.hls.c$c:
    java.util.List segmentBases -> e
    long startOfPlaylistInPeriodUs -> f
    java.lang.String playlistBaseUri -> g
    1:1:long getChunkEndTimeUs():0:0 -> a
    1:1:long getChunkStartTimeUs():0:0 -> b
androidx.media3.exoplayer.hls.HlsChunkSource$InitializationTrackSelection -> androidx.media3.exoplayer.hls.c$d:
    int selectedIndex -> h
    1:1:void <init>(androidx.media3.common.TrackGroup,int[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;[I)V"}
    1:1:void updateSelectedTrack(long,long,long,java.util.List,androidx.media3.exoplayer.source.chunk.MediaChunkIterator[]):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJJLjava/util/List;[Lh0/n;)V"}
    1:1:int getSelectionReason():0:0 -> s
    1:1:int getSelectedIndex():0:0 -> t
    1:1:java.lang.Object getSelectionData():0:0 -> x
androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder -> androidx.media3.exoplayer.hls.c$e:
    androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase segmentBase -> a
    long mediaSequence -> b
    int partIndex -> c
    boolean isPreload -> d
    1:1:void <init>(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase,long,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f$e;JI)V"}
androidx.media3.exoplayer.hls.HlsDataSourceFactory -> w.d:
    androidx.media3.datasource.DataSource createDataSource(int) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lo/g;"}
androidx.media3.exoplayer.hls.HlsExtractorFactory -> w.e:
    androidx.media3.exoplayer.hls.HlsExtractorFactory DEFAULT -> a
    1:1:void <clinit>():0:0 -> <clinit>
    androidx.media3.exoplayer.hls.HlsExtractorFactory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lw/e;"}
    androidx.media3.exoplayer.hls.HlsExtractorFactory experimentalParseSubtitlesDuringExtraction(boolean) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lw/e;"}
    androidx.media3.common.Format getOutputTextFormat(androidx.media3.common.Format) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
    androidx.media3.exoplayer.hls.HlsMediaChunkExtractor createExtractor(android.net.Uri,androidx.media3.common.Format,java.util.List,androidx.media3.common.util.TimestampAdjuster,java.util.Map,androidx.media3.extractor.ExtractorInput,androidx.media3.exoplayer.analytics.PlayerId) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lj/q;Ljava/util/List;Lm/e0;Ljava/util/Map;Lo0/s;Lr/w3;)Lw/f;"}
androidx.media3.exoplayer.hls.HlsManifest -> androidx.media3.exoplayer.hls.d:
    androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist -> a
    androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist mediaPlaylist -> b
    1:1:void <init>(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/g;Lx/f;)V"}
androidx.media3.exoplayer.hls.HlsMediaChunk -> androidx.media3.exoplayer.hls.e:
    boolean mediaSegmentEncrypted -> A
    boolean initSegmentEncrypted -> B
    androidx.media3.exoplayer.analytics.PlayerId playerId -> C
    long timestampAdjusterInitializationTimeoutMs -> D
    androidx.media3.exoplayer.hls.HlsMediaChunkExtractor extractor -> E
    androidx.media3.exoplayer.hls.HlsSampleStreamWrapper output -> F
    int nextLoadPosition -> G
    boolean initDataLoadRequired -> H
    boolean loadCanceled -> I
    boolean loadCompleted -> J
    com.google.common.collect.ImmutableList sampleQueueFirstSampleIndices -> K
    boolean extractorInvalidated -> L
    boolean isPublished -> M
    java.util.concurrent.atomic.AtomicInteger uidSource -> N
    int uid -> k
    int discontinuitySequenceNumber -> l
    android.net.Uri playlistUrl -> m
    boolean shouldSpliceIn -> n
    int partIndex -> o
    androidx.media3.datasource.DataSource initDataSource -> p
    androidx.media3.datasource.DataSpec initDataSpec -> q
    androidx.media3.exoplayer.hls.HlsMediaChunkExtractor previousExtractor -> r
    boolean isPrimaryTimestampSource -> s
    boolean hasGapTag -> t
    androidx.media3.common.util.TimestampAdjuster timestampAdjuster -> u
    androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory -> v
    java.util.List muxedCaptionFormats -> w
    androidx.media3.common.DrmInitData drmInitData -> x
    androidx.media3.extractor.metadata.id3.Id3Decoder id3Decoder -> y
    androidx.media3.common.util.ParsableByteArray scratchId3Data -> z
    1:1:void <init>(androidx.media3.exoplayer.hls.HlsExtractorFactory,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,boolean,androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean,android.net.Uri,java.util.List,int,java.lang.Object,long,long,long,int,boolean,int,boolean,boolean,androidx.media3.common.util.TimestampAdjuster,long,androidx.media3.common.DrmInitData,androidx.media3.exoplayer.hls.HlsMediaChunkExtractor,androidx.media3.extractor.metadata.id3.Id3Decoder,androidx.media3.common.util.ParsableByteArray,boolean,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/e;Lo/g;Lo/k;Lj/q;ZLo/g;Lo/k;ZLandroid/net/Uri;Ljava/util/List;ILjava/lang/Object;JJJIZIZZLm/e0;JLj/m;Lw/f;Lc1/h;Lm/z;ZLr/w3;)V"}
    1:1:void load():0:0 -> a
    1:1:void cancelLoad():0:0 -> b
    1:1:boolean isLoadCompleted():0:0 -> h
    1:1:androidx.media3.datasource.DataSource buildDataSource(androidx.media3.datasource.DataSource,byte[],byte[]):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;[B[B)Lo/g;"}
    1:1:androidx.media3.exoplayer.hls.HlsMediaChunk createInstance(androidx.media3.exoplayer.hls.HlsExtractorFactory,androidx.media3.datasource.DataSource,androidx.media3.common.Format,long,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder,android.net.Uri,java.util.List,int,java.lang.Object,boolean,androidx.media3.exoplayer.hls.TimestampAdjusterProvider,long,androidx.media3.exoplayer.hls.HlsMediaChunk,byte[],byte[],boolean,androidx.media3.exoplayer.analytics.PlayerId,androidx.media3.exoplayer.upstream.CmcdData$Factory):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/e;Lo/g;Lj/q;JLx/f;Landroidx/media3/exoplayer/hls/c$e;Landroid/net/Uri;Ljava/util/List;ILjava/lang/Object;ZLw/j;JLandroidx/media3/exoplayer/hls/e;[B[BZLr/w3;Lk0/g$a;)Landroidx/media3/exoplayer/hls/e;"}
    1:1:void feedDataToExtractor(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean,boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;ZZ)V"}
    1:1:byte[] getEncryptionIvArray(java.lang.String):0:0 -> l
    1:1:int getFirstSampleIndex(int):0:0 -> m
    1:1:void init(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper,com.google.common.collect.ImmutableList):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/l;Ll2/v;)V"}
    1:1:void invalidateExtractor():0:0 -> o
    1:1:boolean isIndependent(androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/c$e;Lx/f;)Z"}
    1:1:boolean isPublished():0:0 -> q
    1:1:void loadMedia():0:0 -> r
    1:1:void maybeLoadInitData():0:0 -> s
    1:1:long peekId3PrivTimestamp(androidx.media3.extractor.ExtractorInput):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)J"}
    1:1:androidx.media3.extractor.DefaultExtractorInput prepareExtraction(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Z)Lo0/j;"}
    1:1:void publish():0:0 -> v
    1:1:boolean shouldSpliceIn(androidx.media3.exoplayer.hls.HlsMediaChunk,android.net.Uri,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.HlsChunkSource$SegmentBaseHolder,long):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/e;Landroid/net/Uri;Lx/f;Landroidx/media3/exoplayer/hls/c$e;J)Z"}
androidx.media3.exoplayer.hls.HlsMediaChunkExtractor -> w.f:
    void onTruncatedSegmentParsed() -> a
    boolean isReusable() -> b
    boolean read(androidx.media3.extractor.ExtractorInput) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    void init(androidx.media3.extractor.ExtractorOutput) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    boolean isPackedAudioExtractor() -> e
    androidx.media3.exoplayer.hls.HlsMediaChunkExtractor recreate() -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw/f;"}
androidx.media3.exoplayer.hls.HlsMediaPeriod -> androidx.media3.exoplayer.hls.g:
    androidx.media3.exoplayer.hls.HlsSampleStreamWrapper[] sampleStreamWrappers -> A
    androidx.media3.exoplayer.hls.HlsSampleStreamWrapper[] enabledSampleStreamWrappers -> B
    int[][] manifestUrlIndicesPerWrapper -> C
    int audioVideoSampleStreamWrapperCount -> D
    androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader -> E
    androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory -> f
    androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker -> g
    androidx.media3.exoplayer.hls.HlsDataSourceFactory dataSourceFactory -> h
    androidx.media3.datasource.TransferListener mediaTransferListener -> i
    androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager -> j
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher -> k
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> l
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher -> m
    androidx.media3.exoplayer.upstream.Allocator allocator -> n
    java.util.IdentityHashMap streamWrapperIndices -> o
    androidx.media3.exoplayer.hls.TimestampAdjusterProvider timestampAdjusterProvider -> p
    androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory -> q
    boolean allowChunklessPreparation -> r
    int metadataType -> s
    boolean useSessionKeys -> t
    androidx.media3.exoplayer.analytics.PlayerId playerId -> u
    androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback sampleStreamWrapperCallback -> v
    long timestampAdjusterInitializationTimeoutMs -> w
    androidx.media3.exoplayer.source.MediaPeriod$Callback mediaPeriodCallback -> x
    int pendingPrepareCount -> y
    androidx.media3.exoplayer.source.TrackGroupArray trackGroups -> z
    1:1:void <init>(androidx.media3.exoplayer.hls.HlsExtractorFactory,androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker,androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.upstream.CmcdConfiguration,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,boolean,int,boolean,androidx.media3.exoplayer.analytics.PlayerId,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/e;Lx/k;Lw/d;Lo/y;Lk0/f;Lv/x;Lv/v$a;Lk0/m;Lg0/m0$a;Lk0/b;Lg0/j;ZIZLr/w3;J)V"}
    1:1:java.util.Map deriveOverridingDrmInitData(java.util.List):0:0 -> A
    1:1:androidx.media3.common.Format deriveVideoFormat(androidx.media3.common.Format):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
    1:1:java.util.List lambda$selectTracks$0(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/l;)Ljava/util/List;"}
    1:1:void release():0:0 -> D
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:void onPlaylistChanged():0:0 -> d
    1:1:boolean onPlaylistError(android.net.Uri,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lk0/m$c;Z)Z"}
    1:1:java.util.List $r8$lambda$TPjONB1geuuEgpfOLwEWZ_5aWFU(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/l;)Ljava/util/List;"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:int access$106(androidx.media3.exoplayer.hls.HlsMediaPeriod):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/g;)I"}
    1:1:void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    1:1:androidx.media3.exoplayer.hls.HlsSampleStreamWrapper[] access$200(androidx.media3.exoplayer.hls.HlsMediaPeriod):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/g;)[Landroidx/media3/exoplayer/hls/l;"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray access$302(androidx.media3.exoplayer.hls.HlsMediaPeriod,androidx.media3.exoplayer.source.TrackGroupArray):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/g;Lg0/l1;)Lg0/l1;"}
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:long seekToUs(long):0:0 -> r
    1:1:androidx.media3.exoplayer.source.MediaPeriod$Callback access$400(androidx.media3.exoplayer.hls.HlsMediaPeriod):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/g;)Lg0/c0$a;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker access$500(androidx.media3.exoplayer.hls.HlsMediaPeriod):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/g;)Lx/k;"}
    1:1:void buildAndPrepareAudioSampleStreamWrappers(long,java.util.List,java.util.List,java.util.List,java.util.Map):0:0 -> u
    1:1:long readDiscontinuity():0:0 -> v
    1:1:void buildAndPrepareMainSampleStreamWrapper(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist,long,java.util.List,java.util.List,java.util.Map):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/g;JLjava/util/List;Ljava/util/List;Ljava/util/Map;)V"}
    1:1:void buildAndPrepareSampleStreamWrappers(long):0:0 -> x
    1:1:androidx.media3.exoplayer.hls.HlsSampleStreamWrapper buildSampleStreamWrapper(java.lang.String,int,android.net.Uri[],androidx.media3.common.Format[],androidx.media3.common.Format,java.util.List,java.util.Map,long):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;I[Landroid/net/Uri;[Lj/q;Lj/q;Ljava/util/List;Ljava/util/Map;J)Landroidx/media3/exoplayer/hls/l;"}
    1:1:androidx.media3.common.Format deriveAudioFormat(androidx.media3.common.Format,androidx.media3.common.Format,boolean):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lj/q;Z)Lj/q;"}
androidx.media3.exoplayer.hls.HlsMediaPeriod$$ExternalSyntheticLambda0 -> androidx.media3.exoplayer.hls.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.hls.HlsMediaPeriod$$InternalSyntheticLambda$9$5a54f34197ff19901c6dde970cf0c567501691817da5c8c1a52ebead642f4b21$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.hls.HlsMediaPeriod$$InternalSyntheticLambda$9$5a54f34197ff19901c6dde970cf0c567501691817da5c8c1a52ebead642f4b21$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.hls.HlsMediaPeriod$1 -> androidx.media3.exoplayer.hls.g$a:
androidx.media3.exoplayer.hls.HlsMediaPeriod$SampleStreamWrapperCallback -> androidx.media3.exoplayer.hls.g$b:
    androidx.media3.exoplayer.hls.HlsMediaPeriod this$0 -> f
    1:1:void <init>(androidx.media3.exoplayer.hls.HlsMediaPeriod):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/g;)V"}
    2:2:void <init>(androidx.media3.exoplayer.hls.HlsMediaPeriod,androidx.media3.exoplayer.hls.HlsMediaPeriod$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/g;Landroidx/media3/exoplayer/hls/g$a;)V"}
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/l;)V"}
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c1;)V"}
    1:1:void onPlaylistRefreshRequired(android.net.Uri):0:0 -> f
    1:1:void onPrepared():0:0 -> n
androidx.media3.exoplayer.hls.HlsMediaSource -> androidx.media3.exoplayer.hls.HlsMediaSource:
    androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory -> m
    androidx.media3.exoplayer.hls.HlsDataSourceFactory dataSourceFactory -> n
    androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory -> o
    androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager -> p
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> q
    boolean allowChunklessPreparation -> r
    int metadataType -> s
    boolean useSessionKeys -> t
    androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker playlistTracker -> u
    long elapsedRealTimeOffsetMs -> v
    long timestampAdjusterInitializationTimeoutMs -> w
    androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration -> x
    androidx.media3.datasource.TransferListener mediaTransferListener -> y
    androidx.media3.common.MediaItem mediaItem -> z
    1:1:void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.hls.HlsExtractorFactory,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.upstream.CmcdConfiguration,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker,long,boolean,int,boolean,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Lw/d;Lw/e;Lg0/j;Lk0/f;Lv/x;Lk0/m;Lx/k;JZIZJ)V"}
    2:2:void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.hls.HlsExtractorFactory,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.upstream.CmcdConfiguration,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker,long,boolean,int,boolean,long,androidx.media3.exoplayer.hls.HlsMediaSource$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Lw/d;Lw/e;Lg0/j;Lk0/f;Lv/x;Lk0/m;Lx/k;JZIZJLandroidx/media3/exoplayer/hls/HlsMediaSource$a;)V"}
    1:1:void prepareSourceInternal(androidx.media3.datasource.TransferListener):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:void releaseSourceInternal():0:0 -> E
    1:1:androidx.media3.exoplayer.source.SinglePeriodTimeline createTimelineForLive(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,long,androidx.media3.exoplayer.hls.HlsManifest):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;JJLandroidx/media3/exoplayer/hls/d;)Lg0/e1;"}
    1:1:androidx.media3.exoplayer.source.SinglePeriodTimeline createTimelineForOnDemand(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long,long,androidx.media3.exoplayer.hls.HlsManifest):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;JJLandroidx/media3/exoplayer/hls/d;)Lg0/e1;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part findClosestPrecedingIndependentPart(java.util.List,long):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;J)Lx/f$b;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment findClosestPrecedingSegment(java.util.List,long):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;J)Lx/f$d;"}
    1:1:long getLiveEdgeOffsetUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;)J"}
    1:1:long getLiveWindowDefaultStartPositionUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;J)J"}
    1:1:long getTargetLiveOffsetUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;J)J"}
    1:1:void updateLiveConfiguration(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,long):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;J)V"}
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:void onPrimaryPlaylistRefreshed(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;)V"}
    1:1:void updateMediaItem(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    1:1:void maybeThrowSourceInfoRefreshError():0:0 -> h
    1:1:void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
androidx.media3.exoplayer.hls.HlsMediaSource$1 -> androidx.media3.exoplayer.hls.HlsMediaSource$a:
androidx.media3.exoplayer.hls.HlsMediaSource$Factory -> androidx.media3.exoplayer.hls.HlsMediaSource$Factory:
    androidx.media3.exoplayer.hls.HlsDataSourceFactory hlsDataSourceFactory -> a
    androidx.media3.exoplayer.hls.HlsExtractorFactory extractorFactory -> b
    androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory playlistParserFactory -> c
    androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory playlistTrackerFactory -> d
    androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory -> e
    androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider -> f
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> g
    boolean allowChunklessPreparation -> h
    int metadataType -> i
    boolean useSessionKeys -> j
    long elapsedRealTimeOffsetMs -> k
    long timestampAdjusterInitializationTimeoutMs -> l
    1:1:void <init>(androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;)V"}
    2:2:void <init>(androidx.media3.exoplayer.hls.HlsDataSourceFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/d;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lg0/f0;"}
    1:1:androidx.media3.exoplayer.hls.HlsMediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Landroidx/media3/exoplayer/hls/HlsMediaSource;"}
    1:1:androidx.media3.exoplayer.hls.HlsMediaSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> g
    1:1:androidx.media3.exoplayer.hls.HlsMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Landroidx/media3/exoplayer/hls/HlsMediaSource$Factory;"}
    1:1:androidx.media3.exoplayer.hls.HlsMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Landroidx/media3/exoplayer/hls/HlsMediaSource$Factory;"}
    1:1:androidx.media3.exoplayer.hls.HlsMediaSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Landroidx/media3/exoplayer/hls/HlsMediaSource$Factory;"}
androidx.media3.exoplayer.hls.HlsSampleStream -> androidx.media3.exoplayer.hls.h:
    int trackGroupIndex -> f
    androidx.media3.exoplayer.hls.HlsSampleStreamWrapper sampleStreamWrapper -> g
    int sampleQueueIndex -> h
    1:1:void bindSampleQueue():0:0 -> a
    1:1:boolean hasValidSampleQueueIndex():0:0 -> b
    1:1:void unbindSampleQueue():0:0 -> c
    1:1:boolean isReady():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:int skipData(long):0:0 -> t
    1:1:int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
androidx.media3.exoplayer.hls.HlsSampleStreamWrapper -> androidx.media3.exoplayer.hls.l:
    androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue[] sampleQueues -> A
    int[] sampleQueueTrackIds -> B
    java.util.Set sampleQueueMappingDoneByType -> C
    android.util.SparseIntArray sampleQueueIndicesByType -> D
    androidx.media3.extractor.TrackOutput emsgUnwrappingTrackOutput -> E
    int primarySampleQueueType -> F
    int primarySampleQueueIndex -> G
    boolean sampleQueuesBuilt -> H
    boolean prepared -> I
    int enabledTrackGroupCount -> J
    androidx.media3.common.Format upstreamTrackFormat -> K
    androidx.media3.common.Format downstreamTrackFormat -> L
    boolean released -> M
    androidx.media3.exoplayer.source.TrackGroupArray trackGroups -> N
    java.util.Set optionalTrackGroups -> O
    int[] trackGroupToSampleQueueIndex -> P
    int primaryTrackGroupIndex -> Q
    boolean haveAudioVideoSampleQueues -> R
    boolean[] sampleQueuesEnabledStates -> S
    boolean[] sampleQueueIsAudioVideoFlags -> T
    long lastSeekPositionUs -> U
    long pendingResetPositionUs -> V
    boolean pendingResetUpstreamFormats -> W
    boolean seenFirstTrackSelection -> X
    boolean loadingFinished -> Y
    boolean tracksEnded -> Z
    long sampleOffsetUs -> a0
    androidx.media3.common.DrmInitData drmInitData -> b0
    androidx.media3.exoplayer.hls.HlsMediaChunk sourceChunk -> c0
    java.util.Set MAPPABLE_TYPES -> d0
    java.lang.String uid -> f
    int trackType -> g
    androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback callback -> h
    androidx.media3.exoplayer.hls.HlsChunkSource chunkSource -> i
    androidx.media3.exoplayer.upstream.Allocator allocator -> j
    androidx.media3.common.Format muxedAudioFormat -> k
    androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager -> l
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher -> m
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> n
    androidx.media3.exoplayer.upstream.Loader loader -> o
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher -> p
    int metadataType -> q
    androidx.media3.exoplayer.hls.HlsChunkSource$HlsChunkHolder nextChunkHolder -> r
    java.util.ArrayList mediaChunks -> s
    java.util.List readOnlyMediaChunks -> t
    java.lang.Runnable maybeFinishPrepareRunnable -> u
    java.lang.Runnable onTracksEndedRunnable -> v
    android.os.Handler handler -> w
    java.util.ArrayList hlsSampleStreams -> x
    java.util.Map overridingDrmInitData -> y
    androidx.media3.exoplayer.source.chunk.Chunk loadingChunk -> z
    1:1:void <init>(java.lang.String,int,androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback,androidx.media3.exoplayer.hls.HlsChunkSource,java.util.Map,androidx.media3.exoplayer.upstream.Allocator,long,androidx.media3.common.Format,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ILandroidx/media3/exoplayer/hls/l$b;Landroidx/media3/exoplayer/hls/c;Ljava/util/Map;Lk0/b;JLj/q;Lv/x;Lv/v$a;Lk0/m;Lg0/m0$a;I)V"}
    1:1:void buildTracksFromSampleStreams():0:0 -> A
    1:1:boolean canDiscardUpstreamMediaChunksFromIndex(int):0:0 -> B
    1:1:void continuePreparing():0:0 -> C
    1:1:androidx.media3.extractor.DiscardingTrackOutput createDiscardingTrackOutput(int,int):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/n;"}
    1:1:androidx.media3.exoplayer.source.SampleQueue createSampleQueue(int,int):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lg0/a1;"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray createTrackGroupArrayWithDrmInfo(androidx.media3.common.TrackGroup[]):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/j0;)Lg0/l1;"}
    1:1:androidx.media3.common.Format deriveFormat(androidx.media3.common.Format,androidx.media3.common.Format,boolean):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lj/q;Z)Lj/q;"}
    1:1:void discardUpstream(int):0:0 -> H
    1:1:androidx.media3.exoplayer.hls.HlsMediaChunk discardUpstreamMediaChunksFromIndex(int):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/media3/exoplayer/hls/e;"}
    1:1:boolean finishedReadingChunk(androidx.media3.exoplayer.hls.HlsMediaChunk):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/e;)Z"}
    1:1:boolean formatsMatch(androidx.media3.common.Format,androidx.media3.common.Format):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lj/q;)Z"}
    1:1:androidx.media3.exoplayer.hls.HlsMediaChunk getLastMediaChunk():0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/media3/exoplayer/hls/e;"}
    1:1:androidx.media3.extractor.TrackOutput getMappedTrackOutput(int,int):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
    1:1:int getTrackTypeScore(int):0:0 -> N
    1:1:void initMediaChunkLoad(androidx.media3.exoplayer.hls.HlsMediaChunk):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/e;)V"}
    1:1:boolean isMediaChunk(androidx.media3.exoplayer.source.chunk.Chunk):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;)Z"}
    1:1:boolean isPendingReset():0:0 -> Q
    1:1:boolean isReady(int):0:0 -> R
    1:1:boolean isVideoSampleStream():0:0 -> S
    1:1:void lambda$onPlaylistUpdated$0(androidx.media3.exoplayer.hls.HlsMediaChunk):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/e;)V"}
    1:1:void mapSampleQueuesToMatchTrackGroups():0:0 -> U
    1:1:void maybeFinishPrepare():0:0 -> V
    1:1:void maybeThrowError():0:0 -> W
    1:1:void maybeThrowError(int):0:0 -> X
    1:1:void onLoadCanceled(androidx.media3.exoplayer.source.chunk.Chunk,long,long,boolean):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;JJZ)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk,long,long):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;JJ)V"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.source.chunk.Chunk,long,long,java.io.IOException,int):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:boolean isLoading():0:0 -> b
    1:1:void onNewExtractor():0:0 -> b0
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:boolean onPlaylistError(android.net.Uri,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lk0/m$c;Z)Z"}
    1:1:androidx.media3.extractor.TrackOutput track(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
    1:1:void onPlaylistUpdated():0:0 -> d0
    1:1:void onUpstreamFormatChanged(androidx.media3.common.Format):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:void onTracksEnded():0:0 -> e0
    1:1:void endTracks():0:0 -> f
    1:1:void prepareWithMultivariantPlaylistInfo(androidx.media3.common.TrackGroup[],int,int[]):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/j0;I[I)V"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:int readData(int,androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILq/u1;Lp/i;I)I"}
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:void release():0:0 -> h0
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:void resetSampleQueues():0:0 -> i0
    1:1:boolean seekInsideBufferUs(long,androidx.media3.exoplayer.hls.HlsMediaChunk):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLandroidx/media3/exoplayer/hls/e;)Z"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:boolean seekToUs(long,boolean):0:0 -> k0
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:boolean selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long,boolean):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJZ)Z"}
    1:1:void setDrmInitData(androidx.media3.common.DrmInitData):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/m;)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void setIsPrepared():0:0 -> n0
    1:1:void onLoaderReleased():0:0 -> o
    1:1:void setIsPrimaryTimestampSource(boolean):0:0 -> o0
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void setSampleOffsetUs(long):0:0 -> p0
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:int skipData(int,long):0:0 -> q0
    1:1:void unbindSampleQueue(int):0:0 -> r0
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
    1:1:void updateSampleStreams(androidx.media3.exoplayer.source.SampleStream[]):0:0 -> s0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg0/b1;)V"}
    1:1:void seekMap(androidx.media3.extractor.SeekMap):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
    1:1:void $r8$lambda$W3RdLufd4CyOoJ5aoAfP7tK_1WI(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/l;)V"}
    1:1:void $r8$lambda$n8W8YyJWVT-qogMIDmoPS6G9D20(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper,androidx.media3.exoplayer.hls.HlsMediaChunk):0:0 -> w
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/l;Landroidx/media3/exoplayer/hls/e;)V"}
    1:1:void $r8$lambda$n_MpjkbSugVnCnE8WpH6RrpZ5gA(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper):0:0 -> x
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/l;)V"}
    1:1:void assertIsPrepared():0:0 -> y
    1:1:int bindSampleQueueToSampleStream(int):0:0 -> z
androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$ExternalSyntheticLambda0 -> w.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$43a879927537139e13d7af25b662f39bd671caad742647a5f4529a91df267b89$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$43a879927537139e13d7af25b662f39bd671caad742647a5f4529a91df267b89$0.<init>(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/l$b;)V"}
    1:1:void androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$43a879927537139e13d7af25b662f39bd671caad742647a5f4529a91df267b89$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$ExternalSyntheticLambda1 -> androidx.media3.exoplayer.hls.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.hls.HlsSampleStreamWrapper androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$a4aaaa92c6045a97cfdd43c6cbce55c4ed68b330b1befc8ab4068dfbee139c89$0.f$0 -> f
    androidx.media3.exoplayer.hls.HlsMediaChunk androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$a4aaaa92c6045a97cfdd43c6cbce55c4ed68b330b1befc8ab4068dfbee139c89$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$a4aaaa92c6045a97cfdd43c6cbce55c4ed68b330b1befc8ab4068dfbee139c89$0.<init>(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper,androidx.media3.exoplayer.hls.HlsMediaChunk):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/l;Landroidx/media3/exoplayer/hls/e;)V"}
    1:1:void androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$a4aaaa92c6045a97cfdd43c6cbce55c4ed68b330b1befc8ab4068dfbee139c89$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$ExternalSyntheticLambda2 -> androidx.media3.exoplayer.hls.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.hls.HlsSampleStreamWrapper androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$ca97855ededfdba376cb6d30ff4995713bf9e21db62426cdf57f14d50aec2379$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$ca97855ededfdba376cb6d30ff4995713bf9e21db62426cdf57f14d50aec2379$0.<init>(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/l;)V"}
    1:1:void androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$ca97855ededfdba376cb6d30ff4995713bf9e21db62426cdf57f14d50aec2379$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$ExternalSyntheticLambda3 -> androidx.media3.exoplayer.hls.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.hls.HlsSampleStreamWrapper androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$ca97855ededfdba376cb6d30ff4995713bf9e21db62426cdf57f14d50aec2379$1.f$0 -> f
    1:1:void androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$ca97855ededfdba376cb6d30ff4995713bf9e21db62426cdf57f14d50aec2379$1.<init>(androidx.media3.exoplayer.hls.HlsSampleStreamWrapper):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/l;)V"}
    1:1:void androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$$InternalSyntheticLambda$9$ca97855ededfdba376cb6d30ff4995713bf9e21db62426cdf57f14d50aec2379$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$1 -> androidx.media3.exoplayer.hls.l$a:
androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$Callback -> androidx.media3.exoplayer.hls.l$b:
    void onPlaylistRefreshRequired(android.net.Uri) -> f
    void onPrepared() -> n
androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput -> androidx.media3.exoplayer.hls.l$c:
    androidx.media3.extractor.metadata.emsg.EventMessageDecoder emsgDecoder -> a
    androidx.media3.extractor.TrackOutput delegate -> b
    androidx.media3.common.Format delegateFormat -> c
    androidx.media3.common.Format format -> d
    byte[] buffer -> e
    int bufferPosition -> f
    androidx.media3.common.Format ID3_FORMAT -> g
    androidx.media3.common.Format EMSG_FORMAT -> h
    1:1:void <init>(androidx.media3.extractor.TrackOutput,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;I)V"}
    1:1:void format(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZI)I"}
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZ)I"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JIIILo0/s0$a;)V"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)V"}
    1:1:boolean emsgContainsExpectedWrappedFormat(androidx.media3.extractor.metadata.emsg.EventMessage):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;)Z"}
    1:1:void ensureBufferCapacity(int):0:0 -> h
    1:1:androidx.media3.common.util.ParsableByteArray getSampleAndTrimBuffer(int,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lm/z;"}
androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$HlsSampleQueue -> androidx.media3.exoplayer.hls.l$d:
    java.util.Map overridingDrmInitData -> H
    androidx.media3.common.DrmInitData drmInitData -> I
    1:1:void <init>(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,java.util.Map):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b;Lv/x;Lv/v$a;Ljava/util/Map;)V"}
    2:2:void <init>(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,java.util.Map,androidx.media3.exoplayer.hls.HlsSampleStreamWrapper$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b;Lv/x;Lv/v$a;Ljava/util/Map;Landroidx/media3/exoplayer/hls/l$a;)V"}
    1:1:void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JIIILo0/s0$a;)V"}
    1:1:androidx.media3.common.Metadata getAdjustedMetadata(androidx.media3.common.Metadata):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)Lj/x;"}
    1:1:void setDrmInitData(androidx.media3.common.DrmInitData):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/m;)V"}
    1:1:void setSourceChunk(androidx.media3.exoplayer.hls.HlsMediaChunk):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/hls/e;)V"}
    1:1:androidx.media3.common.Format getAdjustedUpstreamFormat(androidx.media3.common.Format):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
androidx.media3.exoplayer.hls.HlsTrackMetadataEntry -> w.h:
    java.lang.String groupId -> f
    java.lang.String name -> g
    java.util.List variantInfos -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.util.List):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.exoplayer.hls.HlsTrackMetadataEntry$1 -> w.h$a:
    void <init>() -> <init>
    1:1:androidx.media3.exoplayer.hls.HlsTrackMetadataEntry createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lw/h;"}
    1:1:androidx.media3.exoplayer.hls.HlsTrackMetadataEntry[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lw/h;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.exoplayer.hls.HlsTrackMetadataEntry$VariantInfo -> w.h$b:
    int averageBitrate -> f
    int peakBitrate -> g
    java.lang.String videoGroupId -> h
    java.lang.String audioGroupId -> i
    java.lang.String subtitleGroupId -> j
    java.lang.String captionGroupId -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.exoplayer.hls.HlsTrackMetadataEntry$VariantInfo$1 -> w.h$b$a:
    void <init>() -> <init>
    1:1:androidx.media3.exoplayer.hls.HlsTrackMetadataEntry$VariantInfo createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lw/h$b;"}
    1:1:androidx.media3.exoplayer.hls.HlsTrackMetadataEntry$VariantInfo[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lw/h$b;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.exoplayer.hls.SampleQueueMappingException -> w.i:
    1:1:void <init>(java.lang.String):0:0 -> <init>
androidx.media3.exoplayer.hls.TimestampAdjusterProvider -> w.j:
    android.util.SparseArray timestampAdjusters -> a
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.common.util.TimestampAdjuster getAdjuster(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lm/e0;"}
    1:1:void reset():0:0 -> b
androidx.media3.exoplayer.hls.WebvttExtractor -> w.k:
    java.lang.String language -> a
    androidx.media3.common.util.TimestampAdjuster timestampAdjuster -> b
    androidx.media3.common.util.ParsableByteArray sampleDataWrapper -> c
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> d
    boolean parseSubtitlesDuringExtraction -> e
    androidx.media3.extractor.ExtractorOutput output -> f
    byte[] sampleData -> g
    int sampleSize -> h
    java.util.regex.Pattern LOCAL_TIMESTAMP -> i
    java.util.regex.Pattern MEDIA_TIMESTAMP -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.text.SubtitleParser$Factory,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lm/e0;Ll1/t$a;Z)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.TrackOutput buildTrackOutput(long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/s0;"}
    1:1:void processSample():0:0 -> c
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistParserFactory -> x.a:
    void <init>() -> <init>
    1:1:androidx.media3.exoplayer.upstream.ParsingLoadable$Parser createPlaylistParser(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/g;Lx/f;)Lk0/p$a;"}
    1:1:androidx.media3.exoplayer.upstream.ParsingLoadable$Parser createPlaylistParser():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/p$a;"}
androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker -> x.c:
    androidx.media3.exoplayer.hls.HlsDataSourceFactory dataSourceFactory -> f
    androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory playlistParserFactory -> g
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> h
    java.util.HashMap playlistBundles -> i
    java.util.concurrent.CopyOnWriteArrayList listeners -> j
    double playlistStuckTargetDurationCoefficient -> k
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher -> l
    androidx.media3.exoplayer.upstream.Loader initialPlaylistLoader -> m
    android.os.Handler playlistRefreshHandler -> n
    androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener primaryPlaylistListener -> o
    androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist -> p
    android.net.Uri primaryMediaPlaylistUrl -> q
    androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot -> r
    boolean isLive -> s
    long initialStartTimeUs -> t
    androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory FACTORY -> u
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/d;Lk0/m;Lx/j;)V"}
    2:2:void <init>(androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory,double):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/d;Lk0/m;Lx/j;D)V"}
    1:1:java.util.concurrent.CopyOnWriteArrayList access$1900(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)Ljava/util/concurrent/CopyOnWriteArrayList;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist access$2000(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)Lx/f;"}
    1:1:java.util.HashMap access$2100(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)Ljava/util/HashMap;"}
    1:1:androidx.media3.exoplayer.hls.HlsDataSourceFactory access$700(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)Lw/d;"}
    1:1:androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher access$800(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)Lg0/m0$a;"}
    1:1:androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy access$900(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)Lk0/m;"}
    1:1:void createBundles(java.util.List):0:0 -> G
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment getFirstOldOverlappingSegment(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;Lx/f;)Lx/f$d;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getLatestPlaylistSnapshot(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;Lx/f;)Lx/f;"}
    1:1:int getLoadedPlaylistDiscontinuitySequence(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;Lx/f;)I"}
    1:1:long getLoadedPlaylistStartTimeUs(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;Lx/f;)J"}
    1:1:android.net.Uri getRequestUriForPrimaryChange(android.net.Uri):0:0 -> L
    1:1:boolean isVariantUrl(android.net.Uri):0:0 -> M
    1:1:void maybeActivateForPlayback(android.net.Uri):0:0 -> N
    1:1:boolean maybeSelectNewPrimaryUrl():0:0 -> O
    1:1:void maybeSetPrimaryUrl(android.net.Uri):0:0 -> P
    1:1:boolean notifyPlaylistError(android.net.Uri,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lk0/m$c;Z)Z"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,boolean):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJZ)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,java.io.IOException,int):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onPlaylistUpdated(android.net.Uri,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lx/f;)V"}
    1:1:void removeListener(androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/k$b;)V"}
    1:1:boolean isLive():0:0 -> b
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist getMultivariantPlaylist():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/g;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot(android.net.Uri,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Z)Lx/f;"}
    1:1:void start(android.net.Uri,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lg0/m0$a;Lx/k$e;)V"}
    1:1:boolean excludeMediaPlaylist(android.net.Uri,long):0:0 -> f
    1:1:boolean isSnapshotValid(android.net.Uri):0:0 -> g
    1:1:void addListener(androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/k$b;)V"}
    1:1:void maybeThrowPrimaryPlaylistRefreshError():0:0 -> i
    1:1:void stop():0:0 -> j
    1:1:void deactivatePlaylistForPlayback(android.net.Uri):0:0 -> k
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:void maybeThrowPlaylistRefreshError(android.net.Uri):0:0 -> m
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:long getInitialStartTimeUs():0:0 -> o
    1:1:void refreshPlaylist(android.net.Uri):0:0 -> p
    1:1:boolean access$1000(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker,android.net.Uri,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;Landroid/net/Uri;Lk0/m$c;Z)Z"}
    1:1:android.os.Handler access$1100(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)Landroid/os/Handler;"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist access$1200(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)Lx/g;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory access$1300(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)Lx/j;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist access$1400(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;Lx/f;Lx/f;)Lx/f;"}
    1:1:void access$1500(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker,android.net.Uri,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;Landroid/net/Uri;Lx/f;)V"}
    1:1:double access$1600(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)D"}
    1:1:android.net.Uri access$1700(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)Landroid/net/Uri;"}
    1:1:boolean access$1800(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)Z"}
androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$$ExternalSyntheticLambda0 -> x.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$$InternalSyntheticLambda$1$65b671f25f10e63c2450b20b09b8f4a6e4568131338c6f14ce87f1793e8eb1d1$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$$InternalSyntheticLambda$1$65b671f25f10e63c2450b20b09b8f4a6e4568131338c6f14ce87f1793e8eb1d1$0.createTracker(androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/d;Lk0/m;Lx/j;)Lx/k;"}
androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$1 -> x.c$a:
androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$FirstPrimaryMediaPlaylistListener -> x.c$b:
    androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0 -> f
    1:1:void <init>(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;)V"}
    2:2:void <init>(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker,androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;Lx/c$a;)V"}
    1:1:void onPlaylistChanged():0:0 -> d
    1:1:boolean onPlaylistError(android.net.Uri,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lk0/m$c;Z)Z"}
androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle -> x.c$c:
    android.net.Uri playlistUrl -> f
    androidx.media3.exoplayer.upstream.Loader mediaPlaylistLoader -> g
    androidx.media3.datasource.DataSource mediaPlaylistDataSource -> h
    androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist playlistSnapshot -> i
    long lastSnapshotLoadMs -> j
    long lastSnapshotChangeMs -> k
    long earliestNextLoadTimeMs -> l
    long excludeUntilMs -> m
    boolean loadPending -> n
    java.io.IOException playlistError -> o
    boolean activeForPlayback -> p
    androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker this$0 -> q
    1:1:void <init>(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker,android.net.Uri):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c;Landroid/net/Uri;)V"}
    1:1:void $r8$lambda$OXXmJCYhyNU-ChhyqrYnf0tcYIQ(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,android.net.Uri):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c$c;Landroid/net/Uri;)V"}
    1:1:boolean access$000(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c$c;J)Z"}
    1:1:void access$200(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.source.LoadEventInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c$c;Lx/f;Lg0/y;)V"}
    1:1:long access$300(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c$c;)J"}
    1:1:android.net.Uri access$400(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c$c;)Landroid/net/Uri;"}
    1:1:void access$500(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,android.net.Uri):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c$c;Landroid/net/Uri;)V"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist access$600(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c$c;)Lx/f;"}
    1:1:boolean excludePlaylist(long):0:0 -> h
    1:1:android.net.Uri getMediaPlaylistUriForReload():0:0 -> i
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/f;"}
    1:1:boolean isActiveForPlayback():0:0 -> k
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:boolean isSnapshotValid():0:0 -> m
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void lambda$loadPlaylistInternal$0(android.net.Uri):0:0 -> o
    1:1:void loadPlaylist(boolean):0:0 -> p
    1:1:void loadPlaylistImmediately(android.net.Uri):0:0 -> q
    1:1:void loadPlaylistInternal(android.net.Uri):0:0 -> r
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
    1:1:void maybeThrowPlaylistRefreshError():0:0 -> t
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,boolean):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJZ)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,java.io.IOException,int):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void processLoadedPlaylist(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.source.LoadEventInfo):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;Lg0/y;)V"}
    1:1:void release():0:0 -> y
    1:1:void setActiveForPlayback(boolean):0:0 -> z
androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle$$ExternalSyntheticLambda0 -> x.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle$$InternalSyntheticLambda$9$f243fa49f48ddc437420a7a9961f9b45bcfc48c950b36f29a1aed30889c33ef6$0.f$0 -> f
    android.net.Uri androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle$$InternalSyntheticLambda$9$f243fa49f48ddc437420a7a9961f9b45bcfc48c950b36f29a1aed30889c33ef6$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle$$InternalSyntheticLambda$9$f243fa49f48ddc437420a7a9961f9b45bcfc48c950b36f29a1aed30889c33ef6$0.<init>(androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,android.net.Uri):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/c$c;Landroid/net/Uri;)V"}
    1:1:void androidx.media3.exoplayer.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle$$InternalSyntheticLambda$9$f243fa49f48ddc437420a7a9961f9b45bcfc48c950b36f29a1aed30889c33ef6$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.hls.playlist.FilteringHlsPlaylistParserFactory -> x.e:
    androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory hlsPlaylistParserFactory -> a
    java.util.List streamKeys -> b
    1:1:void <init>(androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/j;Ljava/util/List;)V"}
    1:1:androidx.media3.exoplayer.upstream.ParsingLoadable$Parser createPlaylistParser(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/g;Lx/f;)Lk0/p$a;"}
    1:1:androidx.media3.exoplayer.upstream.ParsingLoadable$Parser createPlaylistParser():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/p$a;"}
androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist -> x.f:
    int playlistType -> d
    long startOffsetUs -> e
    boolean hasPositiveStartOffset -> f
    boolean preciseStart -> g
    long startTimeUs -> h
    boolean hasDiscontinuitySequence -> i
    int discontinuitySequence -> j
    long mediaSequence -> k
    int version -> l
    long targetDurationUs -> m
    long partTargetDurationUs -> n
    boolean hasEndTag -> o
    boolean hasProgramDateTime -> p
    androidx.media3.common.DrmInitData protectionSchemes -> q
    java.util.List segments -> r
    java.util.List trailingParts -> s
    java.util.Map renditionReports -> t
    long durationUs -> u
    androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl serverControl -> v
    1:1:void <init>(int,java.lang.String,java.util.List,long,boolean,long,boolean,int,long,int,long,long,boolean,boolean,boolean,androidx.media3.common.DrmInitData,java.util.List,java.util.List,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl,java.util.Map):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Ljava/util/List;JZJZIJIJJZZZLj/m;Ljava/util/List;Ljava/util/List;Lx/f$f;Ljava/util/Map;)V"}
    1:1:java.lang.Object copy(java.util.List):0:0 -> a
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist copy(java.util.List):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lx/f;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist copyWith(long,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JI)Lx/f;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist copyWithEndTag():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/f;"}
    1:1:long getEndTimeUs():0:0 -> e
    1:1:boolean isNewerThan(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;)Z"}
androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$1 -> x.f$a:
androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part -> x.f$b:
    boolean isIndependent -> q
    boolean isPreload -> r
    1:1:void <init>(java.lang.String,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment,long,int,long,androidx.media3.common.DrmInitData,java.lang.String,java.lang.String,long,long,boolean,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lx/f$d;JIJLj/m;Ljava/lang/String;Ljava/lang/String;JJZZZ)V"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Part copyWith(long,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JI)Lx/f$b;"}
androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$RenditionReport -> x.f$c:
    android.net.Uri playlistUri -> a
    long lastMediaSequence -> b
    int lastPartIndex -> c
    1:1:void <init>(android.net.Uri,long,int):0:0 -> <init>
androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment -> x.f$d:
    java.lang.String title -> q
    java.util.List parts -> r
    1:1:void <init>(java.lang.String,long,long,java.lang.String,java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment,java.lang.String,long,int,long,androidx.media3.common.DrmInitData,java.lang.String,java.lang.String,long,long,boolean,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lx/f$d;Ljava/lang/String;JIJLj/m;Ljava/lang/String;Ljava/lang/String;JJZLjava/util/List;)V"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment copyWith(long,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JI)Lx/f$d;"}
androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$SegmentBase -> x.f$e:
    java.lang.String url -> f
    androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment initializationSegment -> g
    long durationUs -> h
    int relativeDiscontinuitySequence -> i
    long relativeStartTimeUs -> j
    androidx.media3.common.DrmInitData drmInitData -> k
    java.lang.String fullSegmentEncryptionKeyUri -> l
    java.lang.String encryptionIV -> m
    long byteRangeOffset -> n
    long byteRangeLength -> o
    boolean hasGapTag -> p
    1:1:void <init>(java.lang.String,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment,long,int,long,androidx.media3.common.DrmInitData,java.lang.String,java.lang.String,long,long,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lx/f$d;JIJLj/m;Ljava/lang/String;Ljava/lang/String;JJZ)V"}
    2:2:void <init>(java.lang.String,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$Segment,long,int,long,androidx.media3.common.DrmInitData,java.lang.String,java.lang.String,long,long,boolean,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lx/f$d;JIJLj/m;Ljava/lang/String;Ljava/lang/String;JJZLx/f$a;)V"}
    1:1:int compareTo(java.lang.Long):0:0 -> a
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl -> x.f$f:
    long skipUntilUs -> a
    boolean canSkipDateRanges -> b
    long holdBackUs -> c
    long partHoldBackUs -> d
    boolean canBlockReload -> e
    1:1:void <init>(long,boolean,long,long,boolean):0:0 -> <init>
androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist -> x.g:
    java.util.List mediaPlaylistUrls -> d
    java.util.List variants -> e
    java.util.List videos -> f
    java.util.List audios -> g
    java.util.List subtitles -> h
    java.util.List closedCaptions -> i
    androidx.media3.common.Format muxedAudioFormat -> j
    java.util.List muxedCaptionFormats -> k
    java.util.Map variableDefinitions -> l
    java.util.List sessionKeyDrmInitData -> m
    androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist EMPTY -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,androidx.media3.common.Format,java.util.List,boolean,java.util.Map,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lj/q;Ljava/util/List;ZLjava/util/Map;Ljava/util/List;)V"}
    1:1:java.lang.Object copy(java.util.List):0:0 -> a
    1:1:void addMediaPlaylistUrls(java.util.List,java.util.List):0:0 -> b
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist copy(java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lx/g;"}
    1:1:java.util.List copyStreams(java.util.List,int,java.util.List):0:0 -> d
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist createSingleVariantMultivariantPlaylist(java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lx/g;"}
    1:1:java.util.List getMediaPlaylistUrls(java.util.List,java.util.List,java.util.List,java.util.List,java.util.List):0:0 -> f
androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Rendition -> x.g$a:
    android.net.Uri url -> a
    androidx.media3.common.Format format -> b
    java.lang.String groupId -> c
    java.lang.String name -> d
    1:1:void <init>(android.net.Uri,androidx.media3.common.Format,java.lang.String,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lj/q;Ljava/lang/String;Ljava/lang/String;)V"}
androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant -> x.g$b:
    android.net.Uri url -> a
    androidx.media3.common.Format format -> b
    java.lang.String videoGroupId -> c
    java.lang.String audioGroupId -> d
    java.lang.String subtitleGroupId -> e
    java.lang.String captionGroupId -> f
    1:1:void <init>(android.net.Uri,androidx.media3.common.Format,java.lang.String,java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lj/q;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant copyWithFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lx/g$b;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant createMediaPlaylistVariantUrl(android.net.Uri):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Lx/g$b;"}
androidx.media3.exoplayer.hls.playlist.HlsPlaylist -> x.h:
    java.lang.String baseUri -> a
    java.util.List tags -> b
    boolean hasIndependentSegments -> c
    1:1:void <init>(java.lang.String,java.util.List,boolean):0:0 -> <init>
androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser -> x.i:
    java.util.regex.Pattern REGEX_LAST_MSN -> A
    java.util.regex.Pattern REGEX_LAST_PART -> B
    java.util.regex.Pattern REGEX_TIME_OFFSET -> C
    java.util.regex.Pattern REGEX_BYTERANGE -> D
    java.util.regex.Pattern REGEX_ATTR_BYTERANGE -> E
    java.util.regex.Pattern REGEX_BYTERANGE_START -> F
    java.util.regex.Pattern REGEX_BYTERANGE_LENGTH -> G
    java.util.regex.Pattern REGEX_METHOD -> H
    java.util.regex.Pattern REGEX_KEYFORMAT -> I
    java.util.regex.Pattern REGEX_KEYFORMATVERSIONS -> J
    java.util.regex.Pattern REGEX_URI -> K
    java.util.regex.Pattern REGEX_IV -> L
    java.util.regex.Pattern REGEX_TYPE -> M
    java.util.regex.Pattern REGEX_PRELOAD_HINT_TYPE -> N
    java.util.regex.Pattern REGEX_LANGUAGE -> O
    java.util.regex.Pattern REGEX_NAME -> P
    java.util.regex.Pattern REGEX_GROUP_ID -> Q
    java.util.regex.Pattern REGEX_CHARACTERISTICS -> R
    java.util.regex.Pattern REGEX_INSTREAM_ID -> S
    java.util.regex.Pattern REGEX_AUTOSELECT -> T
    java.util.regex.Pattern REGEX_DEFAULT -> U
    java.util.regex.Pattern REGEX_FORCED -> V
    java.util.regex.Pattern REGEX_INDEPENDENT -> W
    java.util.regex.Pattern REGEX_GAP -> X
    java.util.regex.Pattern REGEX_PRECISE -> Y
    java.util.regex.Pattern REGEX_VALUE -> Z
    androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist multivariantPlaylist -> a
    java.util.regex.Pattern REGEX_IMPORT -> a0
    androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist previousMediaPlaylist -> b
    java.util.regex.Pattern REGEX_VARIABLE_REFERENCE -> b0
    java.util.regex.Pattern REGEX_AVERAGE_BANDWIDTH -> c
    java.util.regex.Pattern REGEX_VIDEO -> d
    java.util.regex.Pattern REGEX_AUDIO -> e
    java.util.regex.Pattern REGEX_SUBTITLES -> f
    java.util.regex.Pattern REGEX_CLOSED_CAPTIONS -> g
    java.util.regex.Pattern REGEX_BANDWIDTH -> h
    java.util.regex.Pattern REGEX_CHANNELS -> i
    java.util.regex.Pattern REGEX_CODECS -> j
    java.util.regex.Pattern REGEX_RESOLUTION -> k
    java.util.regex.Pattern REGEX_FRAME_RATE -> l
    java.util.regex.Pattern REGEX_TARGET_DURATION -> m
    java.util.regex.Pattern REGEX_ATTR_DURATION -> n
    java.util.regex.Pattern REGEX_PART_TARGET_DURATION -> o
    java.util.regex.Pattern REGEX_VERSION -> p
    java.util.regex.Pattern REGEX_PLAYLIST_TYPE -> q
    java.util.regex.Pattern REGEX_CAN_SKIP_UNTIL -> r
    java.util.regex.Pattern REGEX_CAN_SKIP_DATE_RANGES -> s
    java.util.regex.Pattern REGEX_SKIPPED_SEGMENTS -> t
    java.util.regex.Pattern REGEX_HOLD_BACK -> u
    java.util.regex.Pattern REGEX_PART_HOLD_BACK -> v
    java.util.regex.Pattern REGEX_CAN_BLOCK_RELOAD -> w
    java.util.regex.Pattern REGEX_MEDIA_SEQUENCE -> x
    java.util.regex.Pattern REGEX_MEDIA_DURATION -> y
    java.util.regex.Pattern REGEX_MEDIA_TITLE -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/g;Lx/f;)V"}
    1:1:long parseTimeSecondsToUs(java.lang.String,java.util.regex.Pattern):0:0 -> A
    1:1:java.lang.String replaceVariableReferences(java.lang.String,java.util.Map):0:0 -> B
    1:1:int skipIgnorableWhitespace(java.io.BufferedReader,boolean,int):0:0 -> C
    1:1:java.lang.Object parse(android.net.Uri,java.io.InputStream):0:0 -> a
    1:1:boolean checkPlaylistHeader(java.io.BufferedReader):0:0 -> b
    1:1:java.util.regex.Pattern compileBooleanAttrPattern(java.lang.String):0:0 -> c
    1:1:androidx.media3.common.DrmInitData getPlaylistProtectionSchemes(java.lang.String,androidx.media3.common.DrmInitData$SchemeData[]):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;[Lj/m$b;)Lj/m;"}
    1:1:java.lang.String getSegmentEncryptionIV(long,java.lang.String,java.lang.String):0:0 -> e
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant getVariantWithAudioGroup(java.util.ArrayList,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Ljava/lang/String;)Lx/g$b;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant getVariantWithSubtitleGroup(java.util.ArrayList,java.lang.String):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Ljava/lang/String;)Lx/g$b;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist$Variant getVariantWithVideoGroup(java.util.ArrayList,java.lang.String):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;Ljava/lang/String;)Lx/g$b;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsPlaylist parse(android.net.Uri,java.io.InputStream):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/io/InputStream;)Lx/h;"}
    1:1:double parseDoubleAttr(java.lang.String,java.util.regex.Pattern):0:0 -> j
    1:1:androidx.media3.common.DrmInitData$SchemeData parseDrmSchemeData(java.lang.String,java.lang.String,java.util.Map):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Lj/m$b;"}
    1:1:java.lang.String parseEncryptionScheme(java.lang.String):0:0 -> l
    1:1:int parseIntAttr(java.lang.String,java.util.regex.Pattern):0:0 -> m
    1:1:long parseLongAttr(java.lang.String,java.util.regex.Pattern):0:0 -> n
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist parseMediaPlaylist(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator,java.lang.String):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/g;Lx/f;Lx/i$b;Ljava/lang/String;)Lx/f;"}
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist parseMultivariantPlaylist(androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator,java.lang.String):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/i$b;Ljava/lang/String;)Lx/g;"}
    1:1:boolean parseOptionalBooleanAttribute(java.lang.String,java.util.regex.Pattern,boolean):0:0 -> q
    1:1:double parseOptionalDoubleAttr(java.lang.String,java.util.regex.Pattern,double):0:0 -> r
    1:1:int parseOptionalIntAttr(java.lang.String,java.util.regex.Pattern,int):0:0 -> s
    1:1:long parseOptionalLongAttr(java.lang.String,java.util.regex.Pattern,long):0:0 -> t
    1:1:java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.lang.String,java.util.Map):0:0 -> u
    1:1:java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map):0:0 -> v
    1:1:int parseRoleFlags(java.lang.String,java.util.Map):0:0 -> w
    1:1:int parseSelectionFlags(java.lang.String):0:0 -> x
    1:1:androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist$ServerControl parseServerControl(java.lang.String):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lx/f$f;"}
    1:1:java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map):0:0 -> z
androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$DeltaUpdateException -> x.i$a:
    void <init>() -> <init>
androidx.media3.exoplayer.hls.playlist.HlsPlaylistParser$LineIterator -> x.i$b:
    java.io.BufferedReader reader -> a
    java.util.Queue extraLines -> b
    java.lang.String next -> c
    1:1:void <init>(java.util.Queue,java.io.BufferedReader):0:0 -> <init>
    1:1:boolean hasNext():0:0 -> a
    1:1:java.lang.String next():0:0 -> b
androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory -> x.j:
    androidx.media3.exoplayer.upstream.ParsingLoadable$Parser createPlaylistParser(androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist,androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/g;Lx/f;)Lk0/p$a;"}
    androidx.media3.exoplayer.upstream.ParsingLoadable$Parser createPlaylistParser() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/p$a;"}
androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker -> x.k:
    void removeListener(androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/k$b;)V"}
    boolean isLive() -> b
    androidx.media3.exoplayer.hls.playlist.HlsMultivariantPlaylist getMultivariantPlaylist() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx/g;"}
    androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot(android.net.Uri,boolean) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Z)Lx/f;"}
    void start(android.net.Uri,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lg0/m0$a;Lx/k$e;)V"}
    boolean excludeMediaPlaylist(android.net.Uri,long) -> f
    boolean isSnapshotValid(android.net.Uri) -> g
    void addListener(androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/k$b;)V"}
    void maybeThrowPrimaryPlaylistRefreshError() -> i
    void stop() -> j
    void deactivatePlaylistForPlayback(android.net.Uri) -> k
    void maybeThrowPlaylistRefreshError(android.net.Uri) -> m
    long getInitialStartTimeUs() -> o
    void refreshPlaylist(android.net.Uri) -> p
androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$Factory -> x.k$a:
    androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker createTracker(androidx.media3.exoplayer.hls.HlsDataSourceFactory,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.hls.playlist.HlsPlaylistParserFactory) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw/d;Lk0/m;Lx/j;)Lx/k;"}
androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistEventListener -> x.k$b:
    void onPlaylistChanged() -> d
    boolean onPlaylistError(android.net.Uri,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,boolean) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lk0/m$c;Z)Z"}
androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistResetException -> x.k$c:
    android.net.Uri url -> f
    1:1:void <init>(android.net.Uri):0:0 -> <init>
androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PlaylistStuckException -> x.k$d:
    android.net.Uri url -> f
    1:1:void <init>(android.net.Uri):0:0 -> <init>
androidx.media3.exoplayer.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener -> x.k$e:
    void onPrimaryPlaylistRefreshed(androidx.media3.exoplayer.hls.playlist.HlsMediaPlaylist) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx/f;)V"}
androidx.media3.exoplayer.image.BitmapFactoryImageDecoder -> y.a:
    androidx.media3.exoplayer.image.BitmapFactoryImageDecoder$BitmapDecoder bitmapDecoder -> o
    1:1:void <init>(androidx.media3.exoplayer.image.BitmapFactoryImageDecoder$BitmapDecoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/a$b;)V"}
    2:2:void <init>(androidx.media3.exoplayer.image.BitmapFactoryImageDecoder$BitmapDecoder,androidx.media3.exoplayer.image.BitmapFactoryImageDecoder$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/a$b;Ly/a$a;)V"}
    1:1:androidx.media3.exoplayer.image.ImageDecoderException createUnexpectedDecodeException(java.lang.Throwable):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;)Ly/d;"}
    1:1:android.graphics.Bitmap decode(byte[],int):0:0 -> B
    1:1:androidx.media3.exoplayer.image.ImageDecoderException decode(androidx.media3.decoder.DecoderInputBuffer,androidx.media3.exoplayer.image.ImageOutputBuffer,boolean):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;Ly/f;Z)Ly/d;"}
    1:1:androidx.media3.exoplayer.image.ImageOutputBuffer dequeueOutputBuffer():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/f;"}
    1:1:androidx.media3.decoder.DecoderInputBuffer createInputBuffer():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/i;"}
    1:1:androidx.media3.decoder.DecoderOutputBuffer createOutputBuffer():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/j;"}
    1:1:androidx.media3.decoder.DecoderException createUnexpectedDecodeException(java.lang.Throwable):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;)Lp/h;"}
    1:1:androidx.media3.decoder.DecoderException decode(androidx.media3.decoder.DecoderInputBuffer,androidx.media3.decoder.DecoderOutputBuffer,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;Lp/j;Z)Lp/h;"}
    1:1:android.graphics.Bitmap access$100(byte[],int):0:0 -> x
    1:1:void access$200(androidx.media3.exoplayer.image.BitmapFactoryImageDecoder,androidx.media3.decoder.DecoderOutputBuffer):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/a;Lp/j;)V"}
    1:1:androidx.media3.exoplayer.image.ImageOutputBuffer createOutputBuffer():0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/f;"}
androidx.media3.exoplayer.image.BitmapFactoryImageDecoder$1 -> y.a$a:
    androidx.media3.exoplayer.image.BitmapFactoryImageDecoder this$0 -> k
    1:1:void <init>(androidx.media3.exoplayer.image.BitmapFactoryImageDecoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/a;)V"}
    1:1:void release():0:0 -> n
androidx.media3.exoplayer.image.BitmapFactoryImageDecoder$BitmapDecoder -> y.a$b:
    android.graphics.Bitmap decode(byte[],int) -> a
androidx.media3.exoplayer.image.BitmapFactoryImageDecoder$Factory -> y.a$c:
    androidx.media3.exoplayer.image.BitmapFactoryImageDecoder$BitmapDecoder bitmapDecoder -> b
    1:1:void <init>():0:0 -> <init>
    1:1:int supportsFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:androidx.media3.exoplayer.image.ImageDecoder createImageDecoder():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/c;"}
    1:1:android.graphics.Bitmap $r8$lambda$WGridHjRBLwTi6_jtvC4gIJEiAg(byte[],int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.exoplayer.image.BitmapFactoryImageDecoder createImageDecoder():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/a;"}
    1:1:android.graphics.Bitmap lambda$new$0(byte[],int):0:0 -> e
androidx.media3.exoplayer.image.BitmapFactoryImageDecoder$Factory$$ExternalSyntheticLambda0 -> y.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.image.BitmapFactoryImageDecoder$Factory$$InternalSyntheticLambda$8$ba4cf827bb2ba9ba60f75f46aed43c999a515f3209fb57b29c8aef85657fb8ba$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap androidx.media3.exoplayer.image.BitmapFactoryImageDecoder$Factory$$InternalSyntheticLambda$8$ba4cf827bb2ba9ba60f75f46aed43c999a515f3209fb57b29c8aef85657fb8ba$0.decode(byte[],int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.image.ImageDecoder -> y.c:
    androidx.media3.exoplayer.image.ImageOutputBuffer dequeueOutputBuffer() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/f;"}
    void queueInputBuffer(androidx.media3.decoder.DecoderInputBuffer) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)V"}
androidx.media3.exoplayer.image.ImageDecoder$Factory -> y.c$a:
    androidx.media3.exoplayer.image.ImageDecoder$Factory DEFAULT -> a
    1:1:void <clinit>():0:0 -> <clinit>
    int supportsFormat(androidx.media3.common.Format) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    androidx.media3.exoplayer.image.ImageDecoder createImageDecoder() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly/c;"}
androidx.media3.exoplayer.image.ImageDecoderException -> y.d:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
    3:3:void <init>(java.lang.Throwable):0:0 -> <init>
androidx.media3.exoplayer.image.ImageOutput -> y.e:
    androidx.media3.exoplayer.image.ImageOutput NO_OP -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void onImageAvailable(long,android.graphics.Bitmap) -> a
    void onDisabled() -> b
androidx.media3.exoplayer.image.ImageOutput$1 -> y.e$a:
    void <init>() -> <init>
    1:1:void onImageAvailable(long,android.graphics.Bitmap):0:0 -> a
    1:1:void onDisabled():0:0 -> b
androidx.media3.exoplayer.image.ImageOutputBuffer -> y.f:
    android.graphics.Bitmap bitmap -> j
    void <init>() -> <init>
androidx.media3.exoplayer.image.ImageRenderer -> y.g:
    boolean outputStreamEnded -> A
    androidx.media3.exoplayer.image.ImageRenderer$OutputStreamInfo outputStreamInfo -> B
    long lastProcessedOutputBufferTimeUs -> C
    long largestQueuedPresentationTimeUs -> D
    int decoderReinitializationState -> E
    int firstFrameState -> F
    androidx.media3.common.Format inputFormat -> G
    androidx.media3.exoplayer.image.ImageDecoder decoder -> H
    androidx.media3.decoder.DecoderInputBuffer inputBuffer -> I
    androidx.media3.exoplayer.image.ImageOutput imageOutput -> J
    android.graphics.Bitmap outputBitmap -> K
    boolean readyToOutputTiles -> L
    androidx.media3.exoplayer.image.ImageRenderer$TileInfo tileInfo -> M
    androidx.media3.exoplayer.image.ImageRenderer$TileInfo nextTileInfo -> N
    int currentTileIndex -> O
    androidx.media3.exoplayer.image.ImageDecoder$Factory decoderFactory -> w
    androidx.media3.decoder.DecoderInputBuffer flagsOnlyBuffer -> x
    java.util.ArrayDeque pendingOutputStreamChanges -> y
    boolean inputStreamEnded -> z
    1:1:void <init>(androidx.media3.exoplayer.image.ImageDecoder$Factory,androidx.media3.exoplayer.image.ImageOutput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/c$a;Ly/e;)V"}
    1:1:void handleMessage(int,java.lang.Object):0:0 -> H
    1:1:void onDisabled():0:0 -> W
    1:1:void onEnabled(boolean,boolean):0:0 -> X
    1:1:void onPositionReset(long,boolean):0:0 -> Z
    1:1:int supportsFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:void onRelease():0:0 -> a0
    1:1:boolean isEnded():0:0 -> c
    1:1:void onReset():0:0 -> c0
    1:1:boolean isReady():0:0 -> e
    1:1:void onStreamChanged(androidx.media3.common.Format[],long,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/q;JJLg0/f0$b;)V"}
    1:1:boolean canCreateDecoderForFormat(androidx.media3.common.Format):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:void render(long,long):0:0 -> l
    1:1:android.graphics.Bitmap cropTileFromImageGrid(int):0:0 -> l0
    1:1:boolean drainOutput(long,long):0:0 -> m0
    1:1:java.lang.String getName():0:0 -> n
    1:1:boolean feedInputBuffer(long):0:0 -> n0
    1:1:androidx.media3.exoplayer.image.ImageOutput getImageOutput(androidx.media3.exoplayer.image.ImageOutput):0:0 -> o0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/e;)Ly/e;"}
    1:1:void initDecoder():0:0 -> p0
    1:1:boolean isTileLastInGrid(androidx.media3.exoplayer.image.ImageRenderer$TileInfo):0:0 -> q0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/g$b;)Z"}
    1:1:void lowerFirstFrameState(int):0:0 -> r0
    1:1:void maybeAdvanceTileInfo(long,androidx.media3.decoder.DecoderInputBuffer):0:0 -> s0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLp/i;)V"}
    1:1:void onProcessedOutputBuffer(long):0:0 -> t0
    1:1:boolean processOutputBuffer(long,long,android.graphics.Bitmap,long):0:0 -> u0
    1:1:void releaseDecoderResources():0:0 -> v0
    1:1:void setImageOutput(androidx.media3.exoplayer.image.ImageOutput):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly/e;)V"}
    1:1:boolean shouldForceRender():0:0 -> x0
androidx.media3.exoplayer.image.ImageRenderer$OutputStreamInfo -> y.g$a:
    long previousStreamLastBufferTimeUs -> a
    long streamOffsetUs -> b
    androidx.media3.exoplayer.image.ImageRenderer$OutputStreamInfo UNSET -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,long):0:0 -> <init>
androidx.media3.exoplayer.image.ImageRenderer$TileInfo -> y.g$b:
    int tileIndex -> a
    long presentationTimeUs -> b
    android.graphics.Bitmap tileBitmap -> c
    1:1:void <init>(int,long):0:0 -> <init>
    1:1:long getPresentationTimeUs():0:0 -> a
    1:1:android.graphics.Bitmap getTileBitmap():0:0 -> b
    1:1:int getTileIndex():0:0 -> c
    1:1:boolean hasTileBitmap():0:0 -> d
    1:1:void setTileBitmap(android.graphics.Bitmap):0:0 -> e
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter -> z.d:
    android.media.MediaCodec codec -> a
    androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback asynchronousMediaCodecCallback -> b
    androidx.media3.exoplayer.mediacodec.MediaCodecBufferEnqueuer bufferEnqueuer -> c
    boolean codecReleased -> d
    int state -> e
    1:1:void <init>(android.media.MediaCodec,android.os.HandlerThread,androidx.media3.exoplayer.mediacodec.MediaCodecBufferEnqueuer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/MediaCodec;Landroid/os/HandlerThread;Lz/q;)V"}
    2:2:void <init>(android.media.MediaCodec,android.os.HandlerThread,androidx.media3.exoplayer.mediacodec.MediaCodecBufferEnqueuer,androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/MediaCodec;Landroid/os/HandlerThread;Lz/q;Lz/d$a;)V"}
    1:1:void queueSecureInputBuffer(int,int,androidx.media3.decoder.CryptoInfo,long,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILp/c;JI)V"}
    1:1:void queueInputBuffer(int,int,int,long,int):0:0 -> b
    1:1:void setParameters(android.os.Bundle):0:0 -> c
    1:1:int dequeueOutputBufferIndex(android.media.MediaCodec$BufferInfo):0:0 -> d
    1:1:java.nio.ByteBuffer getInputBuffer(int):0:0 -> e
    1:1:void setOutputSurface(android.view.Surface):0:0 -> f
    1:1:void flush():0:0 -> flush
    1:1:boolean needsReconfiguration():0:0 -> g
    1:1:void releaseOutputBuffer(int,boolean):0:0 -> h
    1:1:java.nio.ByteBuffer getOutputBuffer(int):0:0 -> i
    1:1:void setOnFrameRenderedListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener,android.os.Handler):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$d;Landroid/os/Handler;)V"}
    1:1:void releaseOutputBuffer(int,long):0:0 -> k
    1:1:int dequeueInputBufferIndex():0:0 -> l
    1:1:void setVideoScalingMode(int):0:0 -> m
    1:1:boolean registerOnBufferAvailableListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnBufferAvailableListener):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$c;)Z"}
    1:1:android.media.MediaFormat getOutputFormat():0:0 -> o
    1:1:void $r8$lambda$-ibrgfTdjr_PAaMb58kvEZ9Xc8I(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener,android.media.MediaCodec,long,long):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/d;Lz/p$d;Landroid/media/MediaCodec;JJ)V"}
    1:1:void access$100(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter,android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/d;Landroid/media/MediaFormat;Landroid/view/Surface;Landroid/media/MediaCrypto;I)V"}
    1:1:java.lang.String access$200(int):0:0 -> r
    1:1:void release():0:0 -> release
    1:1:java.lang.String access$300(int):0:0 -> s
    1:1:java.lang.String createCallbackThreadLabel(int):0:0 -> t
    1:1:java.lang.String createQueueingThreadLabel(int):0:0 -> u
    1:1:java.lang.String createThreadLabel(int,java.lang.String):0:0 -> v
    1:1:void initialize(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int):0:0 -> w
    1:1:void lambda$setOnFrameRenderedListener$0(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener,android.media.MediaCodec,long,long):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$d;Landroid/media/MediaCodec;JJ)V"}
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$$ExternalSyntheticApiModelOutline0 -> z.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$$InternalSyntheticApiModelOutline$8$27d07956100473c19eb1e5004f04d33eab5d3a4f891b614cfb036466f3c546f6$0.m(android.media.MediaCodec,android.view.Surface):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$$ExternalSyntheticApiModelOutline1 -> z.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$$InternalSyntheticApiModelOutline$8$2e4cce3a4339eed6ec32099b4c1bc7473156c65873342b1d8a8ee277441884e6$1.m(android.media.MediaCodec,android.media.MediaCodec$OnFrameRenderedListener,android.os.Handler):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$$ExternalSyntheticLambda2 -> z.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$$InternalSyntheticLambda$8$2e4cce3a4339eed6ec32099b4c1bc7473156c65873342b1d8a8ee277441884e6$0.f$0 -> a
    androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$$InternalSyntheticLambda$8$2e4cce3a4339eed6ec32099b4c1bc7473156c65873342b1d8a8ee277441884e6$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$$InternalSyntheticLambda$8$2e4cce3a4339eed6ec32099b4c1bc7473156c65873342b1d8a8ee277441884e6$0.<init>(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/d;Lz/p$d;)V"}
    1:1:void androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$$InternalSyntheticLambda$8$2e4cce3a4339eed6ec32099b4c1bc7473156c65873342b1d8a8ee277441884e6$0.onFrameRendered(android.media.MediaCodec,long,long):0:0 -> onFrameRendered
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$1 -> z.d$a:
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory -> z.d$b:
    com.google.common.base.Supplier callbackThreadSupplier -> a
    com.google.common.base.Supplier queueingThreadSupplier -> b
    boolean enableSynchronousBufferQueueingWithAsyncCryptoFlag -> c
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(com.google.common.base.Supplier,com.google.common.base.Supplier):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/r;Lk2/r;)V"}
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecAdapter createAdapter(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$a;)Lz/p;"}
    1:1:android.os.HandlerThread $r8$lambda$LKTvoazMLmujBdigvfpaHYbxJ-4(int):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.HandlerThread $r8$lambda$hlR0C3MH2CGn6y8aYxj5ZYwW_cM(int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter createAdapter(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$a;)Lz/d;"}
    1:1:void experimentalSetAsyncCryptoFlagEnabled(boolean):0:0 -> e
    1:1:android.os.HandlerThread lambda$new$0(int):0:0 -> f
    1:1:android.os.HandlerThread lambda$new$1(int):0:0 -> g
    1:1:boolean useSynchronousBufferQueueingWithAsyncCryptoFlag(androidx.media3.common.Format):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory$$ExternalSyntheticLambda0 -> z.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory$$InternalSyntheticLambda$8$72250a09a9ac73549d650f76c1adb066271e46db96b5f6f28c9b678a2ea7edb1$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory$$InternalSyntheticLambda$8$72250a09a9ac73549d650f76c1adb066271e46db96b5f6f28c9b678a2ea7edb1$0.<init>(int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory$$InternalSyntheticLambda$8$72250a09a9ac73549d650f76c1adb066271e46db96b5f6f28c9b678a2ea7edb1$0.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory$$ExternalSyntheticLambda1 -> z.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory$$InternalSyntheticLambda$8$72250a09a9ac73549d650f76c1adb066271e46db96b5f6f28c9b678a2ea7edb1$1.f$0 -> f
    1:1:void androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory$$InternalSyntheticLambda$8$72250a09a9ac73549d650f76c1adb066271e46db96b5f6f28c9b678a2ea7edb1$1.<init>(int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecAdapter$Factory$$InternalSyntheticLambda$8$72250a09a9ac73549d650f76c1adb066271e46db96b5f6f28c9b678a2ea7edb1$1.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer -> z.i:
    android.media.MediaCodec codec -> a
    android.os.HandlerThread handlerThread -> b
    android.os.Handler handler -> c
    java.util.concurrent.atomic.AtomicReference pendingRuntimeException -> d
    androidx.media3.common.util.ConditionVariable conditionVariable -> e
    boolean started -> f
    java.util.ArrayDeque MESSAGE_PARAMS_INSTANCE_POOL -> g
    java.lang.Object QUEUE_SECURE_LOCK -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.media.MediaCodec,android.os.HandlerThread):0:0 -> <init>
    2:2:void <init>(android.media.MediaCodec,android.os.HandlerThread,androidx.media3.common.util.ConditionVariable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/MediaCodec;Landroid/os/HandlerThread;Lm/f;)V"}
    1:1:void queueSecureInputBuffer(int,int,androidx.media3.decoder.CryptoInfo,long,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILp/c;JI)V"}
    1:1:void queueInputBuffer(int,int,int,long,int):0:0 -> b
    1:1:void setParameters(android.os.Bundle):0:0 -> c
    1:1:void shutdown():0:0 -> d
    1:1:void maybeThrowException():0:0 -> e
    1:1:void start():0:0 -> f
    1:1:void flush():0:0 -> flush
    1:1:void access$000(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer,android.os.Message):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/i;Landroid/os/Message;)V"}
    1:1:void blockUntilHandlerThreadIsIdle():0:0 -> h
    1:1:void copy(androidx.media3.decoder.CryptoInfo,android.media.MediaCodec$CryptoInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/c;Landroid/media/MediaCodec$CryptoInfo;)V"}
    1:1:byte[] copy(byte[],byte[]):0:0 -> j
    1:1:int[] copy(int[],int[]):0:0 -> k
    1:1:void doHandleMessage(android.os.Message):0:0 -> l
    1:1:void doQueueInputBuffer(int,int,int,long,int):0:0 -> m
    1:1:void doQueueSecureInputBuffer(int,int,android.media.MediaCodec$CryptoInfo,long,int):0:0 -> n
    1:1:void doSetParameters(android.os.Bundle):0:0 -> o
    1:1:void flushHandlerThread():0:0 -> p
    1:1:androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams getMessageParams():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz/i$b;"}
    1:1:void recycleMessageParams(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/i$b;)V"}
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$$ExternalSyntheticApiModelOutline0 -> z.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$$InternalSyntheticApiModelOutline$15$9be1e87d6503669e3e94aa6236266a921c648c9caf28952d045931a450c9ce9a$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$$ExternalSyntheticBackportWithForwarding1 -> z.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$$InternalSyntheticBackportWithForwarding$8$a32846d0dd21863f45ae72a278082609d379db01cb9241da9eed817fbdbca39a$0.m(java.util.concurrent.atomic.AtomicReference,java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$1 -> z.i$a:
    androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer,android.os.Looper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/i;Landroid/os/Looper;)V"}
    1:1:void handleMessage(android.os.Message):0:0 -> handleMessage
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecBufferEnqueuer$MessageParams -> z.i$b:
    int index -> a
    int offset -> b
    int size -> c
    android.media.MediaCodec$CryptoInfo cryptoInfo -> d
    long presentationTimeUs -> e
    int flags -> f
    1:1:void <init>():0:0 -> <init>
    1:1:void setQueueParams(int,int,int,long,int):0:0 -> a
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback -> z.l:
    java.lang.Object lock -> a
    android.os.HandlerThread callbackThread -> b
    android.os.Handler handler -> c
    androidx.collection.CircularIntArray availableInputBuffers -> d
    androidx.collection.CircularIntArray availableOutputBuffers -> e
    java.util.ArrayDeque bufferInfos -> f
    java.util.ArrayDeque formats -> g
    android.media.MediaFormat currentFormat -> h
    android.media.MediaFormat pendingOutputFormat -> i
    android.media.MediaCodec$CodecException mediaCodecException -> j
    android.media.MediaCodec$CryptoException mediaCodecCryptoException -> k
    long pendingFlushCount -> l
    boolean shutDown -> m
    java.lang.IllegalStateException internalException -> n
    androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnBufferAvailableListener onBufferAvailableListener -> o
    1:1:void <init>(android.os.HandlerThread):0:0 -> <init>
    1:1:void $r8$lambda$jRFItnn-9Y9NxJi1W74inKTGTe0(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/l;)V"}
    1:1:void addOutputFormat(android.media.MediaFormat):0:0 -> b
    1:1:int dequeueInputBufferIndex():0:0 -> c
    1:1:int dequeueOutputBufferIndex(android.media.MediaCodec$BufferInfo):0:0 -> d
    1:1:void flush():0:0 -> e
    1:1:void flushInternal():0:0 -> f
    1:1:android.media.MediaFormat getOutputFormat():0:0 -> g
    1:1:void initialize(android.media.MediaCodec):0:0 -> h
    1:1:boolean isFlushingOrShutdown():0:0 -> i
    1:1:void maybeThrowException():0:0 -> j
    1:1:void maybeThrowInternalException():0:0 -> k
    1:1:void maybeThrowMediaCodecCryptoException():0:0 -> l
    1:1:void maybeThrowMediaCodecException():0:0 -> m
    1:1:void onFlushCompleted():0:0 -> n
    1:1:void setInternalException(java.lang.IllegalStateException):0:0 -> o
    1:1:void onCryptoError(android.media.MediaCodec,android.media.MediaCodec$CryptoException):0:0 -> onCryptoError
    1:1:void onError(android.media.MediaCodec,android.media.MediaCodec$CodecException):0:0 -> onError
    1:1:void onInputBufferAvailable(android.media.MediaCodec,int):0:0 -> onInputBufferAvailable
    1:1:void onOutputBufferAvailable(android.media.MediaCodec,int,android.media.MediaCodec$BufferInfo):0:0 -> onOutputBufferAvailable
    1:1:void onOutputFormatChanged(android.media.MediaCodec,android.media.MediaFormat):0:0 -> onOutputFormatChanged
    1:1:void setOnBufferAvailableListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnBufferAvailableListener):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$c;)V"}
    1:1:void shutdown():0:0 -> q
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback$$ExternalSyntheticApiModelOutline0 -> z.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback$$InternalSyntheticApiModelOutline$8$1233124b43526eeda0a6275d64e60d0c1db4268b1ea276ed7e5d2eeea898c365$0.m(android.media.MediaCodec,android.media.MediaCodec$Callback,android.os.Handler):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback$$ExternalSyntheticLambda1 -> z.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback$$InternalSyntheticLambda$8$05b4286e96deda59deb9151c1b3c6679a40ac706420e9b760c7b46f50fa47bde$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback$$InternalSyntheticLambda$8$05b4286e96deda59deb9151c1b3c6679a40ac706420e9b760c7b46f50fa47bde$0.<init>(androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/l;)V"}
    1:1:void androidx.media3.exoplayer.mediacodec.AsynchronousMediaCodecCallback$$InternalSyntheticLambda$8$05b4286e96deda59deb9151c1b3c6679a40ac706420e9b760c7b46f50fa47bde$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.BatchBuffer -> z.m:
    long lastSampleTimeUs -> o
    int sampleCount -> p
    int maxSampleCount -> q
    1:1:void <init>():0:0 -> <init>
    1:1:void clear():0:0 -> f
    1:1:boolean append(androidx.media3.decoder.DecoderInputBuffer):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)Z"}
    1:1:boolean canAppendSampleBuffer(androidx.media3.decoder.DecoderInputBuffer):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)Z"}
    1:1:long getFirstSampleTimeUs():0:0 -> v
    1:1:long getLastSampleTimeUs():0:0 -> w
    1:1:int getSampleCount():0:0 -> x
    1:1:boolean hasSamples():0:0 -> y
    1:1:void setMaxSampleCount(int):0:0 -> z
androidx.media3.exoplayer.mediacodec.DefaultMediaCodecAdapterFactory -> z.n:
    android.content.Context context -> a
    int asynchronousMode -> b
    boolean asyncCryptoFlagEnabled -> c
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecAdapter createAdapter(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$a;)Lz/p;"}
    1:1:boolean shouldUseAsynchronousAdapterInDefaultMode():0:0 -> b
androidx.media3.exoplayer.mediacodec.MediaCodecAdapter -> z.p:
    void queueSecureInputBuffer(int,int,androidx.media3.decoder.CryptoInfo,long,int) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILp/c;JI)V"}
    void queueInputBuffer(int,int,int,long,int) -> b
    void setParameters(android.os.Bundle) -> c
    int dequeueOutputBufferIndex(android.media.MediaCodec$BufferInfo) -> d
    java.nio.ByteBuffer getInputBuffer(int) -> e
    void setOutputSurface(android.view.Surface) -> f
    void flush() -> flush
    boolean needsReconfiguration() -> g
    void releaseOutputBuffer(int,boolean) -> h
    java.nio.ByteBuffer getOutputBuffer(int) -> i
    void setOnFrameRenderedListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener,android.os.Handler) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$d;Landroid/os/Handler;)V"}
    void releaseOutputBuffer(int,long) -> k
    int dequeueInputBufferIndex() -> l
    void setVideoScalingMode(int) -> m
    boolean registerOnBufferAvailableListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnBufferAvailableListener) -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$c;)Z"}
    android.media.MediaFormat getOutputFormat() -> o
    void release() -> release
androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$-CC -> z.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean $default$registerOnBufferAvailableListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnBufferAvailableListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;Lz/p$c;)Z"}
androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration -> z.p$a:
    androidx.media3.exoplayer.mediacodec.MediaCodecInfo codecInfo -> a
    android.media.MediaFormat mediaFormat -> b
    androidx.media3.common.Format format -> c
    android.view.Surface surface -> d
    android.media.MediaCrypto crypto -> e
    int flags -> f
    1:1:void <init>(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,android.media.MediaFormat,androidx.media3.common.Format,android.view.Surface,android.media.MediaCrypto,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Landroid/media/MediaFormat;Lj/q;Landroid/view/Surface;Landroid/media/MediaCrypto;I)V"}
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration createForAudioDecoding(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,android.media.MediaFormat,androidx.media3.common.Format,android.media.MediaCrypto):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Landroid/media/MediaFormat;Lj/q;Landroid/media/MediaCrypto;)Lz/p$a;"}
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration createForVideoDecoding(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,android.media.MediaFormat,androidx.media3.common.Format,android.view.Surface,android.media.MediaCrypto):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Landroid/media/MediaFormat;Lj/q;Landroid/view/Surface;Landroid/media/MediaCrypto;)Lz/p$a;"}
androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory -> z.p$b:
    androidx.media3.exoplayer.mediacodec.MediaCodecAdapter createAdapter(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$a;)Lz/p;"}
androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnBufferAvailableListener -> z.p$c:
    void onOutputBufferAvailable() -> a
    void onInputBufferAvailable() -> b
androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener -> z.p$d:
    void onFrameRendered(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,long,long) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;JJ)V"}
androidx.media3.exoplayer.mediacodec.MediaCodecBufferEnqueuer -> z.q:
    void queueSecureInputBuffer(int,int,androidx.media3.decoder.CryptoInfo,long,int) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILp/c;JI)V"}
    void queueInputBuffer(int,int,int,long,int) -> b
    void setParameters(android.os.Bundle) -> c
    void shutdown() -> d
    void maybeThrowException() -> e
    void start() -> f
    void flush() -> flush
androidx.media3.exoplayer.mediacodec.MediaCodecDecoderException -> z.s:
    androidx.media3.exoplayer.mediacodec.MediaCodecInfo codecInfo -> f
    java.lang.String diagnosticInfo -> g
    int errorCode -> h
    1:1:void <init>(java.lang.Throwable,androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Lz/t;)V"}
    1:1:java.lang.String getDiagnosticInfoV21(java.lang.Throwable):0:0 -> a
    1:1:int getErrorCodeV23(java.lang.Throwable):0:0 -> b
androidx.media3.exoplayer.mediacodec.MediaCodecDecoderException$$ExternalSyntheticApiModelOutline0 -> z.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.mediacodec.MediaCodecDecoderException$$InternalSyntheticApiModelOutline$8$88a63523eb3f645b1d31e574ed8497734ae85aef6d7222624b4e2ccd02860707$0.m(android.media.MediaCodec$CodecException):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecInfo -> z.t:
    java.lang.String name -> a
    java.lang.String mimeType -> b
    java.lang.String codecMimeType -> c
    android.media.MediaCodecInfo$CodecCapabilities capabilities -> d
    boolean adaptive -> e
    boolean tunneling -> f
    boolean secure -> g
    boolean hardwareAccelerated -> h
    boolean softwareOnly -> i
    boolean vendor -> j
    boolean isVideo -> k
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities,boolean,boolean,boolean,boolean,boolean,boolean):0:0 -> <init>
    1:1:boolean needsProfileExcludedWorkaround(java.lang.String,int):0:0 -> A
    1:1:boolean needsRotatedVerticalResolutionWorkaround(java.lang.String):0:0 -> B
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecInfo newInstance(java.lang.String,java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities,boolean,boolean,boolean,boolean,boolean):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/media/MediaCodecInfo$CodecCapabilities;ZZZZZ)Lz/t;"}
    1:1:int adjustMaxInputChannelCount(java.lang.String,java.lang.String,int):0:0 -> a
    1:1:android.graphics.Point alignVideoSizeV21(int,int):0:0 -> b
    1:1:android.graphics.Point alignVideoSizeV21(android.media.MediaCodecInfo$VideoCapabilities,int,int):0:0 -> c
    1:1:boolean areSizeAndRateSupportedV21(android.media.MediaCodecInfo$VideoCapabilities,int,int,double):0:0 -> d
    1:1:androidx.media3.exoplayer.DecoderReuseEvaluation canReuseCodec(androidx.media3.common.Format,androidx.media3.common.Format):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lj/q;)Lq/p;"}
    1:1:android.media.MediaCodecInfo$CodecProfileLevel[] estimateLegacyVp9ProfileLevels(android.media.MediaCodecInfo$CodecCapabilities):0:0 -> f
    1:1:android.media.MediaCodecInfo$CodecProfileLevel[] getProfileLevels():0:0 -> g
    1:1:boolean isAdaptive(android.media.MediaCodecInfo$CodecCapabilities):0:0 -> h
    1:1:boolean isAudioChannelCountSupportedV21(int):0:0 -> i
    1:1:boolean isAudioSampleRateSupportedV21(int):0:0 -> j
    1:1:boolean isCodecProfileAndLevelSupported(androidx.media3.common.Format,boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Z)Z"}
    1:1:boolean isFormatFunctionallySupported(androidx.media3.common.Format):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:boolean isFormatSupported(androidx.media3.common.Format):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:boolean isHdr10PlusOutOfBandMetadataSupported():0:0 -> n
    1:1:boolean isSampleMimeTypeSupported(androidx.media3.common.Format):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:boolean isSeamlessAdaptationSupported(androidx.media3.common.Format):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:boolean isSecure(android.media.MediaCodecInfo$CodecCapabilities):0:0 -> q
    1:1:boolean isSecureV21(android.media.MediaCodecInfo$CodecCapabilities):0:0 -> r
    1:1:boolean isTunneling(android.media.MediaCodecInfo$CodecCapabilities):0:0 -> s
    1:1:boolean isTunnelingV21(android.media.MediaCodecInfo$CodecCapabilities):0:0 -> t
    1:1:java.lang.String toString():0:0 -> toString
    1:1:boolean isVideoSizeAndRateSupportedV21(int,int,double):0:0 -> u
    1:1:void logAssumedSupport(java.lang.String):0:0 -> v
    1:1:void logNoSupport(java.lang.String):0:0 -> w
    1:1:boolean needsAdaptationFlushWorkaround(java.lang.String):0:0 -> x
    1:1:boolean needsAdaptationReconfigureWorkaround(java.lang.String):0:0 -> y
    1:1:boolean needsDisableAdaptationWorkaround(java.lang.String):0:0 -> z
androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider -> z.z:
    java.lang.Boolean shouldIgnorePerformancePoints -> a
    1:1:java.lang.Boolean access$000():0:0 -> a
    1:1:java.lang.Boolean access$002(java.lang.Boolean):0:0 -> b
    1:1:int areResolutionAndFrameRateCovered(android.media.MediaCodecInfo$VideoCapabilities,int,int,double):0:0 -> c
androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29 -> z.z$a:
    1:1:int areResolutionAndFrameRateCovered(android.media.MediaCodecInfo$VideoCapabilities,int,int,double):0:0 -> a
    1:1:int evaluatePerformancePointCoverage(java.util.List,android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint):0:0 -> b
    1:1:boolean shouldIgnorePerformancePoints():0:0 -> c
androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29$$ExternalSyntheticApiModelOutline0 -> z.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29$$InternalSyntheticApiModelOutline$15$e118bfceb53023da810b2f638d168800859ee20c5dcb427768df4c1ec4cd988d$0.m(int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29$$ExternalSyntheticApiModelOutline1 -> z.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29$$InternalSyntheticApiModelOutline$15$e118bfceb53023da810b2f638d168800859ee20c5dcb427768df4c1ec4cd988d$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29$$ExternalSyntheticApiModelOutline2 -> z.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29$$InternalSyntheticApiModelOutline$8$e118bfceb53023da810b2f638d168800859ee20c5dcb427768df4c1ec4cd988d$0.m(android.media.MediaCodecInfo$VideoCapabilities):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29$$ExternalSyntheticApiModelOutline3 -> z.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29$$InternalSyntheticApiModelOutline$9$7b318cafe9c0226f5c4c3baa39a09594d3ac010031d82db2aa46ffe6e1bfc099$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29$$ExternalSyntheticApiModelOutline4 -> z.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.mediacodec.MediaCodecPerformancePointCoverageProvider$Api29$$InternalSyntheticApiModelOutline$9$7b318cafe9c0226f5c4c3baa39a09594d3ac010031d82db2aa46ffe6e1bfc099$1.m(android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint,android.media.MediaCodecInfo$VideoCapabilities$PerformancePoint):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecRenderer -> z.b0:
    androidx.media3.decoder.DecoderInputBuffer noDataBuffer -> A
    long largestQueuedPresentationTimeUs -> A0
    androidx.media3.decoder.DecoderInputBuffer buffer -> B
    long lastBufferInStreamPresentationTimeUs -> B0
    androidx.media3.decoder.DecoderInputBuffer bypassSampleBuffer -> C
    boolean inputStreamEnded -> C0
    androidx.media3.exoplayer.mediacodec.BatchBuffer bypassBatchBuffer -> D
    boolean outputStreamEnded -> D0
    android.media.MediaCodec$BufferInfo outputBufferInfo -> E
    boolean waitingForFirstSampleInFormat -> E0
    java.util.ArrayDeque pendingOutputStreamChanges -> F
    boolean pendingOutputEndOfStream -> F0
    androidx.media3.exoplayer.audio.OggOpusAudioPacketizer oggOpusAudioPacketizer -> G
    androidx.media3.exoplayer.ExoPlaybackException pendingPlaybackException -> G0
    androidx.media3.common.Format inputFormat -> H
    androidx.media3.exoplayer.DecoderCounters decoderCounters -> H0
    androidx.media3.common.Format outputFormat -> I
    androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$OutputStreamInfo outputStreamInfo -> I0
    androidx.media3.exoplayer.drm.DrmSession codecDrmSession -> J
    long lastProcessedOutputBufferTimeUs -> J0
    androidx.media3.exoplayer.drm.DrmSession sourceDrmSession -> K
    boolean needToNotifyOutputFormatChangeAfterStreamChange -> K0
    androidx.media3.exoplayer.Renderer$WakeupListener wakeupListener -> L
    byte[] ADAPTATION_WORKAROUND_BUFFER -> L0
    android.media.MediaCrypto mediaCrypto -> M
    long renderTimeLimitMs -> N
    float currentPlaybackSpeed -> O
    float targetPlaybackSpeed -> P
    androidx.media3.exoplayer.mediacodec.MediaCodecAdapter codec -> Q
    androidx.media3.common.Format codecInputFormat -> R
    android.media.MediaFormat codecOutputMediaFormat -> S
    boolean codecOutputMediaFormatChanged -> T
    float codecOperatingRate -> U
    java.util.ArrayDeque availableCodecInfos -> V
    androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException preferredDecoderInitializationException -> W
    androidx.media3.exoplayer.mediacodec.MediaCodecInfo codecInfo -> X
    int codecAdaptationWorkaroundMode -> Y
    boolean codecNeedsDiscardToSpsWorkaround -> Z
    boolean codecNeedsFlushWorkaround -> a0
    boolean codecNeedsSosFlushWorkaround -> b0
    boolean codecNeedsEosFlushWorkaround -> c0
    boolean codecNeedsEosOutputExceptionWorkaround -> d0
    boolean codecNeedsEosBufferTimestampWorkaround -> e0
    boolean codecNeedsMonoChannelCountWorkaround -> f0
    boolean codecNeedsAdaptationWorkaroundBuffer -> g0
    boolean shouldSkipAdaptationWorkaroundOutputBuffer -> h0
    boolean codecNeedsEosPropagation -> i0
    boolean codecRegisteredOnBufferAvailableListener -> j0
    long codecHotswapDeadlineMs -> k0
    int inputIndex -> l0
    int outputIndex -> m0
    java.nio.ByteBuffer outputBuffer -> n0
    boolean isDecodeOnlyOutputBuffer -> o0
    boolean isLastOutputBuffer -> p0
    boolean bypassEnabled -> q0
    boolean bypassSampleBufferPending -> r0
    boolean bypassDrainAndReinitialize -> s0
    boolean codecReconfigured -> t0
    int codecReconfigurationState -> u0
    int codecDrainState -> v0
    androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory codecAdapterFactory -> w
    int codecDrainAction -> w0
    androidx.media3.exoplayer.mediacodec.MediaCodecSelector mediaCodecSelector -> x
    boolean codecReceivedBuffers -> x0
    boolean enableDecoderFallback -> y
    boolean codecReceivedEos -> y0
    float assumedMinimumCodecOperatingRate -> z
    boolean codecHasOutputMediaFormat -> z0
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,boolean,float):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILz/p$b;Lz/e0;ZF)V"}
    1:1:boolean drainAndUpdateCodecDrmSessionV23():0:0 -> A0
    1:1:void renderToEndOfStream():0:0 -> A1
    1:1:long getDurationToProgressUs(long,long):0:0 -> B
    1:1:boolean drainOutputBuffer(long,long):0:0 -> B0
    1:1:void resetCodecStateForFlush():0:0 -> B1
    1:1:boolean drmNeedsCodecReinitialization(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format,androidx.media3.exoplayer.drm.DrmSession,androidx.media3.exoplayer.drm.DrmSession):0:0 -> C0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;Lv/n;Lv/n;)Z"}
    1:1:void resetCodecStateForRelease():0:0 -> C1
    1:1:boolean feedInputBuffer():0:0 -> D0
    1:1:void resetInputBuffer():0:0 -> D1
    1:1:void flushCodec():0:0 -> E0
    1:1:void resetOutputBuffer():0:0 -> E1
    1:1:int supportsMixedMimeTypeAdaptation():0:0 -> F
    1:1:boolean flushOrReinitializeCodec():0:0 -> F0
    1:1:void setCodecDrmSession(androidx.media3.exoplayer.drm.DrmSession):0:0 -> F1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/n;)V"}
    1:1:boolean flushOrReleaseCodec():0:0 -> G0
    1:1:void setOutputStreamInfo(androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$OutputStreamInfo):0:0 -> G1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/b0$f;)V"}
    1:1:void handleMessage(int,java.lang.Object):0:0 -> H
    1:1:java.util.List getAvailableCodecInfos(boolean):0:0 -> H0
    1:1:void setPendingOutputEndOfStream():0:0 -> H1
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecAdapter getCodec():0:0 -> I0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz/p;"}
    1:1:void setPendingPlaybackException(androidx.media3.exoplayer.ExoPlaybackException):0:0 -> I1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u;)V"}
    1:1:int getCodecBufferFlags(androidx.media3.decoder.DecoderInputBuffer):0:0 -> J0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)I"}
    1:1:void setSourceDrmSession(androidx.media3.exoplayer.drm.DrmSession):0:0 -> J1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/n;)V"}
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecInfo getCodecInfo():0:0 -> K0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz/t;"}
    1:1:boolean shouldContinueRendering(long):0:0 -> K1
    1:1:void setPlaybackSpeed(float,float):0:0 -> L
    1:1:boolean getCodecNeedsEosPropagation():0:0 -> L0
    1:1:boolean shouldInitCodec(androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> L1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;)Z"}
    float getCodecOperatingRateV23(float,androidx.media3.common.Format,androidx.media3.common.Format[]) -> M0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FLj/q;[Lj/q;)F"}
    1:1:boolean shouldReinitCodec():0:0 -> M1
    1:1:android.media.MediaFormat getCodecOutputMediaFormat():0:0 -> N0
    1:1:boolean shouldUseBypass(androidx.media3.common.Format):0:0 -> N1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    java.util.List getDecoderInfos(androidx.media3.exoplayer.mediacodec.MediaCodecSelector,androidx.media3.common.Format,boolean) -> O0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/e0;Lj/q;Z)Ljava/util/List;"}
    int supportsFormat(androidx.media3.exoplayer.mediacodec.MediaCodecSelector,androidx.media3.common.Format) -> O1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/e0;Lj/q;)I"}
    1:1:long getDurationToProgressUs(boolean,long,long):0:0 -> P0
    1:1:boolean supportsFormatDrm(androidx.media3.common.Format):0:0 -> P1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:long getLastBufferInStreamPresentationTimeUs():0:0 -> Q0
    1:1:boolean updateCodecOperatingRate(androidx.media3.common.Format):0:0 -> Q1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration getMediaCodecConfiguration(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format,android.media.MediaCrypto,float) -> R0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;Landroid/media/MediaCrypto;F)Lz/p$a;"}
    1:1:void updateDrmSessionV23():0:0 -> R1
    1:1:long getOutputStreamOffsetUs():0:0 -> S0
    1:1:void updateOutputFormatForTime(long):0:0 -> S1
    1:1:long getOutputStreamStartPositionUs():0:0 -> T0
    1:1:float getPlaybackSpeed():0:0 -> U0
    1:1:androidx.media3.exoplayer.Renderer$WakeupListener getWakeupListener():0:0 -> V0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/x2$a;"}
    1:1:void onDisabled():0:0 -> W
    void handleInputBufferSupplementalData(androidx.media3.decoder.DecoderInputBuffer) -> W0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)V"}
    1:1:void onEnabled(boolean,boolean):0:0 -> X
    1:1:boolean hasOutputBuffer():0:0 -> X0
    1:1:boolean haveBypassBatchBufferAndNewSampleSameDecodeOnlyState():0:0 -> Y0
    1:1:void onPositionReset(long,boolean):0:0 -> Z
    1:1:void initBypass(androidx.media3.common.Format):0:0 -> Z0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:int supportsFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:void initCodec(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,android.media.MediaCrypto):0:0 -> a1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Landroid/media/MediaCrypto;)V"}
    1:1:boolean initMediaCryptoIfDrmSessionReady():0:0 -> b1
    1:1:boolean isEnded():0:0 -> c
    1:1:void onReset():0:0 -> c0
    1:1:boolean isBypassEnabled():0:0 -> c1
    1:1:void onStarted():0:0 -> d0
    1:1:boolean isBypassPossible(androidx.media3.common.Format):0:0 -> d1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:boolean isReady():0:0 -> e
    1:1:void onStopped():0:0 -> e0
    1:1:boolean isDecodeOnly(long,long):0:0 -> e1
    1:1:void onStreamChanged(androidx.media3.common.Format[],long,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/q;JJLg0/f0$b;)V"}
    1:1:boolean isMediaCodecException(java.lang.IllegalStateException):0:0 -> f1
    1:1:boolean isMediaCodecExceptionV21(java.lang.IllegalStateException):0:0 -> g1
    1:1:boolean isRecoverableMediaCodecExceptionV21(java.lang.IllegalStateException):0:0 -> h1
    1:1:void maybeInitCodecOrBypass():0:0 -> i1
    1:1:void maybeInitCodecWithFallback(android.media.MediaCrypto,boolean):0:0 -> j1
    1:1:androidx.media3.exoplayer.Renderer$WakeupListener access$200(androidx.media3.exoplayer.mediacodec.MediaCodecRenderer):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/b0;)Lq/x2$a;"}
    void onCodecError(java.lang.Exception) -> k1
    1:1:void render(long,long):0:0 -> l
    1:1:void bypassRead():0:0 -> l0
    void onCodecInitialized(java.lang.String,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration,long,long) -> l1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz/p$a;JJ)V"}
    1:1:boolean bypassRender(long,long):0:0 -> m0
    void onCodecReleased(java.lang.String) -> m1
    androidx.media3.exoplayer.DecoderReuseEvaluation canReuseCodec(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format,androidx.media3.common.Format) -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;Lj/q;)Lq/p;"}
    1:1:androidx.media3.exoplayer.DecoderReuseEvaluation onInputFormatChanged(androidx.media3.exoplayer.FormatHolder):0:0 -> n1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;)Lq/p;"}
    1:1:int codecAdaptationWorkaroundMode(java.lang.String):0:0 -> o0
    void onOutputFormatChanged(androidx.media3.common.Format,android.media.MediaFormat) -> o1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Landroid/media/MediaFormat;)V"}
    1:1:boolean codecNeedsDiscardToSpsWorkaround(java.lang.String,androidx.media3.common.Format):0:0 -> p0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lj/q;)Z"}
    1:1:void onOutputStreamOffsetUsChanged(long):0:0 -> p1
    1:1:boolean codecNeedsEosBufferTimestampWorkaround(java.lang.String):0:0 -> q0
    1:1:void onProcessedOutputBuffer(long):0:0 -> q1
    1:1:boolean codecNeedsEosFlushWorkaround(java.lang.String):0:0 -> r0
    1:1:void onProcessedStreamChange():0:0 -> r1
    1:1:boolean codecNeedsEosOutputExceptionWorkaround(java.lang.String):0:0 -> s0
    1:1:void onQueueInputBuffer(androidx.media3.decoder.DecoderInputBuffer):0:0 -> s1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)V"}
    1:1:boolean codecNeedsEosPropagationWorkaround(androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> t0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;)Z"}
    1:1:void onReadyToInitializeCodec(androidx.media3.common.Format):0:0 -> t1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:boolean codecNeedsFlushWorkaround(java.lang.String):0:0 -> u0
    1:1:void processEndOfStream():0:0 -> u1
    1:1:boolean codecNeedsSosFlushWorkaround(java.lang.String):0:0 -> v0
    boolean processOutputBuffer(long,long,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,java.nio.ByteBuffer,int,int,int,long,boolean,boolean,androidx.media3.common.Format) -> v1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJLz/p;Ljava/nio/ByteBuffer;IIIJZZLj/q;)Z"}
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecDecoderException createDecoderException(java.lang.Throwable,androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Lz/t;)Lz/s;"}
    1:1:void processOutputMediaFormatChanged():0:0 -> w1
    1:1:void disableBypass():0:0 -> x0
    1:1:boolean readSourceOmittingSampleData(int):0:0 -> x1
    1:1:boolean drainAndFlushCodec():0:0 -> y0
    1:1:void reinitializeCodec():0:0 -> y1
    1:1:void drainAndReinitializeCodec():0:0 -> z0
    1:1:void releaseCodec():0:0 -> z1
androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$$ExternalSyntheticApiModelOutline0 -> z.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$$InternalSyntheticApiModelOutline$8$2eea859651e984aff9fc157937f8c355acbab6f011e35a6cbabaf1563abe94dd$0.m(android.media.MediaCrypto,byte[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$1 -> z.b0$a:
androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$Api21 -> z.b0$b:
    1:1:boolean registerOnBufferAvailableListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$MediaCodecRendererCodecAdapterListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;Lz/b0$e;)Z"}
androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$Api31 -> z.b0$c:
    1:1:void setLogSessionIdToMediaCodecFormat(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$a;Lr/w3;)V"}
androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$Api31$$ExternalSyntheticApiModelOutline0 -> z.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$Api31$$InternalSyntheticApiModelOutline$8$0fd3d7cfdbef7cf20991d6fa70645d7b367d880bd1349add787aa25cab2ae700$2.m(android.media.metrics.LogSessionId):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException -> z.b0$d:
    java.lang.String mimeType -> f
    boolean secureDecoderRequired -> g
    androidx.media3.exoplayer.mediacodec.MediaCodecInfo codecInfo -> h
    java.lang.String diagnosticInfo -> i
    androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException fallbackDecoderInitializationException -> j
    1:1:void <init>(androidx.media3.common.Format,java.lang.Throwable,boolean,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Ljava/lang/Throwable;ZI)V"}
    2:2:void <init>(androidx.media3.common.Format,java.lang.Throwable,boolean,androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Ljava/lang/Throwable;ZLz/t;)V"}
    3:3:void <init>(java.lang.String,java.lang.Throwable,java.lang.String,boolean,androidx.media3.exoplayer.mediacodec.MediaCodecInfo,java.lang.String,androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;ZLz/t;Ljava/lang/String;Lz/b0$d;)V"}
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException access$000(androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException,androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/b0$d;Lz/b0$d;)Lz/b0$d;"}
    1:1:java.lang.String buildCustomDiagnosticInfo(int):0:0 -> b
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException copyWithFallbackException(androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$DecoderInitializationException):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/b0$d;)Lz/b0$d;"}
    1:1:java.lang.String getDiagnosticInfoV21(java.lang.Throwable):0:0 -> d
androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$MediaCodecRendererCodecAdapterListener -> z.b0$e:
    androidx.media3.exoplayer.mediacodec.MediaCodecRenderer this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.mediacodec.MediaCodecRenderer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/b0;)V"}
    2:2:void <init>(androidx.media3.exoplayer.mediacodec.MediaCodecRenderer,androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/b0;Lz/b0$a;)V"}
    1:1:void onOutputBufferAvailable():0:0 -> a
    1:1:void onInputBufferAvailable():0:0 -> b
androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$OutputStreamInfo -> z.b0$f:
    long previousStreamLastBufferTimeUs -> a
    long startPositionUs -> b
    long streamOffsetUs -> c
    androidx.media3.common.util.TimedValueQueue formatQueue -> d
    androidx.media3.exoplayer.mediacodec.MediaCodecRenderer$OutputStreamInfo UNSET -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,long,long):0:0 -> <init>
androidx.media3.exoplayer.mediacodec.MediaCodecSelector -> z.e0:
    androidx.media3.exoplayer.mediacodec.MediaCodecSelector DEFAULT -> a
    1:1:void <clinit>():0:0 -> <clinit>
    java.util.List getDecoderInfos(java.lang.String,boolean,boolean) -> a
androidx.media3.exoplayer.mediacodec.MediaCodecSelector$$ExternalSyntheticLambda0 -> z.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.mediacodec.MediaCodecSelector$$InternalSyntheticLambda$8$e270ac3a93e0e22d33b2e4e4f5e67d97c58ba8eb620f88c010443e2a979848f7$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List androidx.media3.exoplayer.mediacodec.MediaCodecSelector$$InternalSyntheticLambda$8$e270ac3a93e0e22d33b2e4e4f5e67d97c58ba8eb620f88c010443e2a979848f7$0.getDecoderInfos(java.lang.String,boolean,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecUtil -> z.n0:
    java.util.regex.Pattern PROFILE_PATTERN -> a
    java.util.HashMap decoderInfosCache -> b
    int maxH264DecodableFrameSize -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:android.util.Pair getVp9ProfileAndLevel(java.lang.String,java.lang.String[]):0:0 -> A
    1:1:java.lang.Integer hevcCodecStringToProfileLevel(java.lang.String):0:0 -> B
    1:1:boolean isAlias(android.media.MediaCodecInfo):0:0 -> C
    1:1:boolean isAliasV29(android.media.MediaCodecInfo):0:0 -> D
    1:1:boolean isCodecUsableDecoder(android.media.MediaCodecInfo,java.lang.String,boolean,java.lang.String):0:0 -> E
    1:1:boolean isHardwareAccelerated(android.media.MediaCodecInfo,java.lang.String):0:0 -> F
    1:1:boolean isHardwareAcceleratedV29(android.media.MediaCodecInfo):0:0 -> G
    1:1:boolean isSoftwareOnly(android.media.MediaCodecInfo,java.lang.String):0:0 -> H
    1:1:boolean isSoftwareOnlyV29(android.media.MediaCodecInfo):0:0 -> I
    1:1:boolean isVendor(android.media.MediaCodecInfo):0:0 -> J
    1:1:boolean isVendorV29(android.media.MediaCodecInfo):0:0 -> K
    1:1:int lambda$applyWorkarounds$1(androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;)I"}
    1:1:int lambda$applyWorkarounds$2(androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;)I"}
    1:1:int lambda$getDecoderInfosSortedByFormatSupport$0(androidx.media3.common.Format,androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lz/t;)I"}
    1:1:int lambda$sortByScore$3(androidx.media3.exoplayer.mediacodec.MediaCodecUtil$ScoreProvider,java.lang.Object,java.lang.Object):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/n0$g;Ljava/lang/Object;Ljava/lang/Object;)I"}
    1:1:int maxH264DecodableFrameSize():0:0 -> P
    1:1:int mp4aAudioObjectTypeToProfile(int):0:0 -> Q
    1:1:void sortByScore(java.util.List,androidx.media3.exoplayer.mediacodec.MediaCodecUtil$ScoreProvider):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lz/n0$g;)V"}
    1:1:int vp9LevelNumberToConst(int):0:0 -> S
    1:1:int vp9ProfileNumberToConst(int):0:0 -> T
    1:1:int $r8$lambda$-YExj2qWGyYInzOCIQVMxMsxt5E(androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;)I"}
    1:1:int $r8$lambda$FSCp8JLOjPYzMyl8UbrLcfJqyp8(androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;)I"}
    1:1:int $r8$lambda$j9HDDpakw55z3kgXGyludkE7sIw(androidx.media3.exoplayer.mediacodec.MediaCodecUtil$ScoreProvider,java.lang.Object,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/n0$g;Ljava/lang/Object;Ljava/lang/Object;)I"}
    1:1:int $r8$lambda$jclmsGbkPxwnfkIgRwEFviS4hUs(androidx.media3.common.Format,androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lz/t;)I"}
    1:1:void applyWorkarounds(java.lang.String,java.util.List):0:0 -> e
    1:1:int av1LevelNumberToConst(int):0:0 -> f
    1:1:int avcLevelNumberToConst(int):0:0 -> g
    1:1:int avcLevelToMaxFrameSize(int):0:0 -> h
    1:1:int avcProfileNumberToConst(int):0:0 -> i
    1:1:java.lang.Integer dolbyVisionStringToLevel(java.lang.String):0:0 -> j
    1:1:java.lang.Integer dolbyVisionStringToProfile(java.lang.String):0:0 -> k
    1:1:android.util.Pair getAacCodecProfileAndLevel(java.lang.String,java.lang.String[]):0:0 -> l
    1:1:java.lang.String getAlternativeCodecMimeType(androidx.media3.common.Format):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Ljava/lang/String;"}
    1:1:java.util.List getAlternativeDecoderInfos(androidx.media3.exoplayer.mediacodec.MediaCodecSelector,androidx.media3.common.Format,boolean,boolean):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/e0;Lj/q;ZZ)Ljava/util/List;"}
    1:1:android.util.Pair getAv1ProfileAndLevel(java.lang.String,java.lang.String[],androidx.media3.common.ColorInfo):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;[Ljava/lang/String;Lj/h;)Landroid/util/Pair;"}
    1:1:android.util.Pair getAvcProfileAndLevel(java.lang.String,java.lang.String[]):0:0 -> p
    1:1:java.lang.String getCodecMimeType(android.media.MediaCodecInfo,java.lang.String,java.lang.String):0:0 -> q
    1:1:android.util.Pair getCodecProfileAndLevel(androidx.media3.common.Format):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Landroid/util/Pair;"}
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecInfo getDecoderInfo(java.lang.String,boolean,boolean):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ZZ)Lz/t;"}
    1:1:java.util.List getDecoderInfos(java.lang.String,boolean,boolean):0:0 -> t
    1:1:java.util.ArrayList getDecoderInfosInternal(androidx.media3.exoplayer.mediacodec.MediaCodecUtil$CodecKey,androidx.media3.exoplayer.mediacodec.MediaCodecUtil$MediaCodecListCompat):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/n0$b;Lz/n0$d;)Ljava/util/ArrayList;"}
    1:1:java.util.List getDecoderInfosSoftMatch(androidx.media3.exoplayer.mediacodec.MediaCodecSelector,androidx.media3.common.Format,boolean,boolean):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/e0;Lj/q;ZZ)Ljava/util/List;"}
    1:1:java.util.List getDecoderInfosSortedByFormatSupport(java.util.List,androidx.media3.common.Format):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lj/q;)Ljava/util/List;"}
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecInfo getDecryptOnlyDecoderInfo():0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz/t;"}
    1:1:android.util.Pair getDolbyVisionProfileAndLevel(java.lang.String,java.lang.String[]):0:0 -> y
    1:1:android.util.Pair getHevcProfileAndLevel(java.lang.String,java.lang.String[],androidx.media3.common.ColorInfo):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;[Ljava/lang/String;Lj/h;)Landroid/util/Pair;"}
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$ExternalSyntheticApiModelOutline0 -> z.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticApiModelOutline$8$3a5b11785d10663c199458a151f01907d5139605ea6722a577d3d8d29355b151$0.m(android.media.MediaCodecInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$ExternalSyntheticApiModelOutline1 -> z.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticApiModelOutline$8$4040db42eee31e0dffc611f4262064d82aabc27656b2b5c21cb0db96ac9efbdc$0.m(android.media.MediaCodecInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$ExternalSyntheticApiModelOutline2 -> z.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticApiModelOutline$8$74e739cf41c49b5dc9ff46d4357e9d6094123ee03263af1ef457cd24491de5f2$0.m(android.media.MediaCodecInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$ExternalSyntheticApiModelOutline3 -> z.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticApiModelOutline$8$b1ca36ed4737dc04c66d87c664db31acfdf336005c22ef1d74aa2541951ff734$0.m(android.media.MediaCodecInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$ExternalSyntheticLambda4 -> z.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.common.Format androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticLambda$8$8a59d8c1e236a6dbabfc9282fb7e4f64b509b88ffb1d10c5e3ded765cf8bd343$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticLambda$8$8a59d8c1e236a6dbabfc9282fb7e4f64b509b88ffb1d10c5e3ded765cf8bd343$0.<init>(androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:int androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticLambda$8$8a59d8c1e236a6dbabfc9282fb7e4f64b509b88ffb1d10c5e3ded765cf8bd343$0.getScore(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$ExternalSyntheticLambda5 -> z.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticLambda$8$d67397cf25ab9a2f6da8d8d136f810f49cd7760cc070e70375c23b252bcd58f0$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticLambda$8$d67397cf25ab9a2f6da8d8d136f810f49cd7760cc070e70375c23b252bcd58f0$0.getScore(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$ExternalSyntheticLambda6 -> z.l0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticLambda$8$d67397cf25ab9a2f6da8d8d136f810f49cd7760cc070e70375c23b252bcd58f0$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticLambda$8$d67397cf25ab9a2f6da8d8d136f810f49cd7760cc070e70375c23b252bcd58f0$1.getScore(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$ExternalSyntheticLambda7 -> z.m0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.mediacodec.MediaCodecUtil$ScoreProvider androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticLambda$9$a4a26e8e544665f47302615cc1be50748a12af314035d913e3e33dee9089d29b$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticLambda$9$a4a26e8e544665f47302615cc1be50748a12af314035d913e3e33dee9089d29b$0.<init>(androidx.media3.exoplayer.mediacodec.MediaCodecUtil$ScoreProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/n0$g;)V"}
    1:1:int androidx.media3.exoplayer.mediacodec.MediaCodecUtil$$InternalSyntheticLambda$9$a4a26e8e544665f47302615cc1be50748a12af314035d913e3e33dee9089d29b$0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$1 -> z.n0$a:
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$CodecKey -> z.n0$b:
    java.lang.String mimeType -> a
    boolean secure -> b
    boolean tunneling -> c
    1:1:void <init>(java.lang.String,boolean,boolean):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$DecoderQueryException -> z.n0$c:
    1:1:void <init>(java.lang.Throwable):0:0 -> <init>
    2:2:void <init>(java.lang.Throwable,androidx.media3.exoplayer.mediacodec.MediaCodecUtil$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Lz/n0$a;)V"}
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$MediaCodecListCompat -> z.n0$d:
    int getCodecCount() -> a
    android.media.MediaCodecInfo getCodecInfoAt(int) -> b
    boolean isFeatureRequired(java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities) -> c
    boolean isFeatureSupported(java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities) -> d
    boolean secureDecodersExplicit() -> e
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$MediaCodecListCompatV16 -> z.n0$e:
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.exoplayer.mediacodec.MediaCodecUtil$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/n0$a;)V"}
    1:1:int getCodecCount():0:0 -> a
    1:1:android.media.MediaCodecInfo getCodecInfoAt(int):0:0 -> b
    1:1:boolean isFeatureRequired(java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities):0:0 -> c
    1:1:boolean isFeatureSupported(java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities):0:0 -> d
    1:1:boolean secureDecodersExplicit():0:0 -> e
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$MediaCodecListCompatV21 -> z.n0$f:
    int codecKind -> a
    android.media.MediaCodecInfo[] mediaCodecInfos -> b
    1:1:void <init>(boolean,boolean):0:0 -> <init>
    1:1:int getCodecCount():0:0 -> a
    1:1:android.media.MediaCodecInfo getCodecInfoAt(int):0:0 -> b
    1:1:boolean isFeatureRequired(java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities):0:0 -> c
    1:1:boolean isFeatureSupported(java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities):0:0 -> d
    1:1:boolean secureDecodersExplicit():0:0 -> e
    1:1:void ensureMediaCodecInfosInitialized():0:0 -> f
androidx.media3.exoplayer.mediacodec.MediaCodecUtil$ScoreProvider -> z.n0$g:
    int getScore(java.lang.Object) -> a
androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter -> z.p0:
    android.media.MediaCodec codec -> a
    java.nio.ByteBuffer[] inputByteBuffers -> b
    java.nio.ByteBuffer[] outputByteBuffers -> c
    1:1:void <init>(android.media.MediaCodec):0:0 -> <init>
    2:2:void <init>(android.media.MediaCodec,androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/MediaCodec;Lz/p0$a;)V"}
    1:1:void queueSecureInputBuffer(int,int,androidx.media3.decoder.CryptoInfo,long,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILp/c;JI)V"}
    1:1:void queueInputBuffer(int,int,int,long,int):0:0 -> b
    1:1:void setParameters(android.os.Bundle):0:0 -> c
    1:1:int dequeueOutputBufferIndex(android.media.MediaCodec$BufferInfo):0:0 -> d
    1:1:java.nio.ByteBuffer getInputBuffer(int):0:0 -> e
    1:1:void setOutputSurface(android.view.Surface):0:0 -> f
    1:1:void flush():0:0 -> flush
    1:1:boolean needsReconfiguration():0:0 -> g
    1:1:void releaseOutputBuffer(int,boolean):0:0 -> h
    1:1:java.nio.ByteBuffer getOutputBuffer(int):0:0 -> i
    1:1:void setOnFrameRenderedListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener,android.os.Handler):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$d;Landroid/os/Handler;)V"}
    1:1:void releaseOutputBuffer(int,long):0:0 -> k
    1:1:int dequeueInputBufferIndex():0:0 -> l
    1:1:void setVideoScalingMode(int):0:0 -> m
    1:1:boolean registerOnBufferAvailableListener(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnBufferAvailableListener):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$c;)Z"}
    1:1:android.media.MediaFormat getOutputFormat():0:0 -> o
    1:1:void $r8$lambda$x7ooWWJbJoGM3tOULji8_-JOl8M(androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener,android.media.MediaCodec,long,long):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p0;Lz/p$d;Landroid/media/MediaCodec;JJ)V"}
    1:1:void lambda$setOnFrameRenderedListener$0(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener,android.media.MediaCodec,long,long):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$d;Landroid/media/MediaCodec;JJ)V"}
    1:1:void release():0:0 -> release
androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$$ExternalSyntheticLambda0 -> z.o0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$$InternalSyntheticLambda$8$18d7054c1f4118d120ed25a5404c8ad2dafec1dfa2b25b2e8a30be98fe075347$0.f$0 -> a
    androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$$InternalSyntheticLambda$8$18d7054c1f4118d120ed25a5404c8ad2dafec1dfa2b25b2e8a30be98fe075347$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$$InternalSyntheticLambda$8$18d7054c1f4118d120ed25a5404c8ad2dafec1dfa2b25b2e8a30be98fe075347$0.<init>(androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$OnFrameRenderedListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p0;Lz/p$d;)V"}
    1:1:void androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$$InternalSyntheticLambda$8$18d7054c1f4118d120ed25a5404c8ad2dafec1dfa2b25b2e8a30be98fe075347$0.onFrameRendered(android.media.MediaCodec,long,long):0:0 -> onFrameRendered
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$1 -> z.p0$a:
androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecAdapter$Factory -> z.p0$b:
    void <init>() -> <init>
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecAdapter createAdapter(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$a;)Lz/p;"}
    1:1:android.media.MediaCodec createCodec(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p$a;)Landroid/media/MediaCodec;"}
androidx.media3.exoplayer.mediacodec.SynchronousMediaCodecBufferEnqueuer -> z.q0:
    android.media.MediaCodec codec -> a
    1:1:void <init>(android.media.MediaCodec):0:0 -> <init>
    1:1:void queueSecureInputBuffer(int,int,androidx.media3.decoder.CryptoInfo,long,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILp/c;JI)V"}
    1:1:void queueInputBuffer(int,int,int,long,int):0:0 -> b
    1:1:void setParameters(android.os.Bundle):0:0 -> c
    1:1:void shutdown():0:0 -> d
    1:1:void maybeThrowException():0:0 -> e
    1:1:void start():0:0 -> f
    1:1:void flush():0:0 -> flush
androidx.media3.exoplayer.metadata.MetadataDecoderFactory -> a0.a:
    androidx.media3.exoplayer.metadata.MetadataDecoderFactory DEFAULT -> a
    1:1:void <clinit>():0:0 -> <clinit>
    boolean supportsFormat(androidx.media3.common.Format) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    androidx.media3.extractor.metadata.MetadataDecoder createDecoder(androidx.media3.common.Format) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lx0/a;"}
androidx.media3.exoplayer.metadata.MetadataDecoderFactory$1 -> a0.a$a:
    void <init>() -> <init>
    1:1:boolean supportsFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:androidx.media3.extractor.metadata.MetadataDecoder createDecoder(androidx.media3.common.Format):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lx0/a;"}
androidx.media3.exoplayer.metadata.MetadataOutput -> a0.b:
    void onMetadata(androidx.media3.common.Metadata) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)V"}
androidx.media3.exoplayer.metadata.MetadataRenderer -> a0.c:
    boolean outputMetadataEarly -> A
    androidx.media3.extractor.metadata.MetadataDecoder decoder -> B
    boolean inputStreamEnded -> C
    boolean outputStreamEnded -> D
    long subsampleOffsetUs -> E
    androidx.media3.common.Metadata pendingMetadata -> F
    long outputStreamOffsetUs -> G
    androidx.media3.exoplayer.metadata.MetadataDecoderFactory decoderFactory -> w
    androidx.media3.exoplayer.metadata.MetadataOutput output -> x
    android.os.Handler outputHandler -> y
    androidx.media3.extractor.metadata.MetadataInputBuffer buffer -> z
    1:1:void <init>(androidx.media3.exoplayer.metadata.MetadataOutput,android.os.Looper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La0/b;Landroid/os/Looper;)V"}
    2:2:void <init>(androidx.media3.exoplayer.metadata.MetadataOutput,android.os.Looper,androidx.media3.exoplayer.metadata.MetadataDecoderFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La0/b;Landroid/os/Looper;La0/a;)V"}
    3:3:void <init>(androidx.media3.exoplayer.metadata.MetadataOutput,android.os.Looper,androidx.media3.exoplayer.metadata.MetadataDecoderFactory,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La0/b;Landroid/os/Looper;La0/a;Z)V"}
    1:1:void onDisabled():0:0 -> W
    1:1:void onPositionReset(long,boolean):0:0 -> Z
    1:1:int supportsFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:boolean isEnded():0:0 -> c
    1:1:boolean isReady():0:0 -> e
    1:1:void onStreamChanged(androidx.media3.common.Format[],long,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/q;JJLg0/f0$b;)V"}
    1:1:boolean handleMessage(android.os.Message):0:0 -> handleMessage
    1:1:void decodeWrappedMetadata(androidx.media3.common.Metadata,java.util.List):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;Ljava/util/List;)V"}
    1:1:void render(long,long):0:0 -> l
    1:1:long getPresentationTimeUs(long):0:0 -> l0
    1:1:void invokeRenderer(androidx.media3.common.Metadata):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)V"}
    1:1:java.lang.String getName():0:0 -> n
    1:1:void invokeRendererInternal(androidx.media3.common.Metadata):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)V"}
    1:1:boolean outputMetadata(long):0:0 -> o0
    1:1:void readMetadata():0:0 -> p0
androidx.media3.exoplayer.offline.FilterableManifest -> b0.a:
    java.lang.Object copy(java.util.List) -> a
androidx.media3.exoplayer.offline.FilteringManifestParser -> b0.b:
    androidx.media3.exoplayer.upstream.ParsingLoadable$Parser parser -> a
    java.util.List streamKeys -> b
    1:1:void <init>(androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p$a;Ljava/util/List;)V"}
    1:1:java.lang.Object parse(android.net.Uri,java.io.InputStream):0:0 -> a
    1:1:androidx.media3.exoplayer.offline.FilterableManifest parse(android.net.Uri,java.io.InputStream):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/io/InputStream;)Lb0/a;"}
androidx.media3.exoplayer.rtsp.MediaDescription -> androidx.media3.exoplayer.rtsp.a:
    java.lang.String mediaType -> a
    int port -> b
    java.lang.String transportProtocol -> c
    int payloadType -> d
    int bitrate -> e
    java.lang.String mediaTitle -> f
    java.lang.String connection -> g
    java.lang.String key -> h
    com.google.common.collect.ImmutableMap attributes -> i
    androidx.media3.exoplayer.rtsp.MediaDescription$RtpMapAttribute rtpMapAttribute -> j
    1:1:void <init>(androidx.media3.exoplayer.rtsp.MediaDescription$Builder,com.google.common.collect.ImmutableMap,androidx.media3.exoplayer.rtsp.MediaDescription$RtpMapAttribute):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a$b;Ll2/x;Landroidx/media3/exoplayer/rtsp/a$c;)V"}
    2:2:void <init>(androidx.media3.exoplayer.rtsp.MediaDescription$Builder,com.google.common.collect.ImmutableMap,androidx.media3.exoplayer.rtsp.MediaDescription$RtpMapAttribute,androidx.media3.exoplayer.rtsp.MediaDescription$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a$b;Ll2/x;Landroidx/media3/exoplayer/rtsp/a$c;Landroidx/media3/exoplayer/rtsp/a$a;)V"}
    1:1:com.google.common.collect.ImmutableMap getFmtpParametersAsMap():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/x;"}
androidx.media3.exoplayer.rtsp.MediaDescription$1 -> androidx.media3.exoplayer.rtsp.a$a:
androidx.media3.exoplayer.rtsp.MediaDescription$Builder -> androidx.media3.exoplayer.rtsp.a$b:
    java.lang.String mediaType -> a
    int port -> b
    java.lang.String transportProtocol -> c
    int payloadType -> d
    java.util.HashMap attributes -> e
    int bitrate -> f
    java.lang.String mediaTitle -> g
    java.lang.String connection -> h
    java.lang.String key -> i
    1:1:java.lang.String access$100(androidx.media3.exoplayer.rtsp.MediaDescription$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a$b;)Ljava/lang/String;"}
    1:1:int access$200(androidx.media3.exoplayer.rtsp.MediaDescription$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a$b;)I"}
    1:1:java.lang.String access$300(androidx.media3.exoplayer.rtsp.MediaDescription$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a$b;)Ljava/lang/String;"}
    1:1:int access$400(androidx.media3.exoplayer.rtsp.MediaDescription$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a$b;)I"}
    1:1:java.lang.String access$500(androidx.media3.exoplayer.rtsp.MediaDescription$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a$b;)Ljava/lang/String;"}
    1:1:java.lang.String access$600(androidx.media3.exoplayer.rtsp.MediaDescription$Builder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a$b;)Ljava/lang/String;"}
    1:1:int access$700(androidx.media3.exoplayer.rtsp.MediaDescription$Builder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a$b;)I"}
    1:1:java.lang.String access$800(androidx.media3.exoplayer.rtsp.MediaDescription$Builder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a$b;)Ljava/lang/String;"}
    1:1:androidx.media3.exoplayer.rtsp.MediaDescription$Builder addAttribute(java.lang.String,java.lang.String):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/a$b;"}
    1:1:androidx.media3.exoplayer.rtsp.MediaDescription build():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/media3/exoplayer/rtsp/a;"}
    1:1:java.lang.String constructAudioRtpMap(int,java.lang.String,int,int):0:0 -> k
    1:1:java.lang.String getRtpMapStringByPayloadType(int):0:0 -> l
    1:1:androidx.media3.exoplayer.rtsp.MediaDescription$Builder setBitrate(int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/media3/exoplayer/rtsp/a$b;"}
    1:1:androidx.media3.exoplayer.rtsp.MediaDescription$Builder setConnection(java.lang.String):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/a$b;"}
    1:1:androidx.media3.exoplayer.rtsp.MediaDescription$Builder setKey(java.lang.String):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/a$b;"}
    1:1:androidx.media3.exoplayer.rtsp.MediaDescription$Builder setMediaTitle(java.lang.String):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/a$b;"}
androidx.media3.exoplayer.rtsp.MediaDescription$RtpMapAttribute -> androidx.media3.exoplayer.rtsp.a$c:
    int payloadType -> a
    java.lang.String mediaEncoding -> b
    int clockRate -> c
    int encodingParameters -> d
    1:1:androidx.media3.exoplayer.rtsp.MediaDescription$RtpMapAttribute parse(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/a$c;"}
androidx.media3.exoplayer.rtsp.RtpDataChannel -> androidx.media3.exoplayer.rtsp.b:
    java.lang.String getTransport() -> e
    boolean needsClosingOnLoadCompletion() -> g
    int getLocalPort() -> j
    androidx.media3.exoplayer.rtsp.RtspMessageChannel$InterleavedBinaryDataListener getInterleavedBinaryDataListener() -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/media3/exoplayer/rtsp/s$b;"}
androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory -> androidx.media3.exoplayer.rtsp.b$a:
    androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory createFallbackDataChannelFactory() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/media3/exoplayer/rtsp/b$a;"}
    androidx.media3.exoplayer.rtsp.RtpDataChannel createAndOpenDataChannel(int) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/media3/exoplayer/rtsp/b;"}
androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory$-CC -> c0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory $default$createFallbackDataChannelFactory(androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/b$a;)Landroidx/media3/exoplayer/rtsp/b$a;"}
androidx.media3.exoplayer.rtsp.RtpDataLoadable -> androidx.media3.exoplayer.rtsp.d:
    int trackId -> a
    androidx.media3.exoplayer.rtsp.RtspMediaTrack rtspMediaTrack -> b
    androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener eventListener -> c
    androidx.media3.extractor.ExtractorOutput output -> d
    android.os.Handler playbackThreadHandler -> e
    androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory rtpDataChannelFactory -> f
    androidx.media3.exoplayer.rtsp.RtpDataChannel dataChannel -> g
    androidx.media3.exoplayer.rtsp.RtpExtractor extractor -> h
    androidx.media3.extractor.DefaultExtractorInput extractorInput -> i
    boolean loadCancelled -> j
    long pendingSeekPositionUs -> k
    long nextRtpTimestamp -> l
    1:1:void <init>(int,androidx.media3.exoplayer.rtsp.RtspMediaTrack,androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener,androidx.media3.extractor.ExtractorOutput,androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroidx/media3/exoplayer/rtsp/r;Landroidx/media3/exoplayer/rtsp/d$a;Lo0/t;Landroidx/media3/exoplayer/rtsp/b$a;)V"}
    1:1:void load():0:0 -> a
    1:1:void cancelLoad():0:0 -> b
    1:1:void $r8$lambda$fyJPXkCiY6kON-XRB2qP5OZR2tU(androidx.media3.exoplayer.rtsp.RtpDataLoadable,java.lang.String,androidx.media3.exoplayer.rtsp.RtpDataChannel):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/d;Ljava/lang/String;Landroidx/media3/exoplayer/rtsp/b;)V"}
    1:1:void lambda$load$0(java.lang.String,androidx.media3.exoplayer.rtsp.RtpDataChannel):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/media3/exoplayer/rtsp/b;)V"}
    1:1:void resetForSeek():0:0 -> e
    1:1:void seekToUs(long,long):0:0 -> f
    1:1:void setSequenceNumber(int):0:0 -> g
    1:1:void setTimestamp(long):0:0 -> h
androidx.media3.exoplayer.rtsp.RtpDataLoadable$$ExternalSyntheticLambda0 -> androidx.media3.exoplayer.rtsp.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.rtsp.RtpDataLoadable androidx.media3.exoplayer.rtsp.RtpDataLoadable$$InternalSyntheticLambda$10$b1989d93597187b0015fc77fe0777b7c6de6c5146839fa6fc350bec5a3c8ceca$0.f$0 -> f
    java.lang.String androidx.media3.exoplayer.rtsp.RtpDataLoadable$$InternalSyntheticLambda$10$b1989d93597187b0015fc77fe0777b7c6de6c5146839fa6fc350bec5a3c8ceca$0.f$1 -> g
    androidx.media3.exoplayer.rtsp.RtpDataChannel androidx.media3.exoplayer.rtsp.RtpDataLoadable$$InternalSyntheticLambda$10$b1989d93597187b0015fc77fe0777b7c6de6c5146839fa6fc350bec5a3c8ceca$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.rtsp.RtpDataLoadable$$InternalSyntheticLambda$10$b1989d93597187b0015fc77fe0777b7c6de6c5146839fa6fc350bec5a3c8ceca$0.<init>(androidx.media3.exoplayer.rtsp.RtpDataLoadable,java.lang.String,androidx.media3.exoplayer.rtsp.RtpDataChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/d;Ljava/lang/String;Landroidx/media3/exoplayer/rtsp/b;)V"}
    1:1:void androidx.media3.exoplayer.rtsp.RtpDataLoadable$$InternalSyntheticLambda$10$b1989d93597187b0015fc77fe0777b7c6de6c5146839fa6fc350bec5a3c8ceca$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.rtsp.RtpDataLoadable$EventListener -> androidx.media3.exoplayer.rtsp.d$a:
    void onTransportReady(java.lang.String,androidx.media3.exoplayer.rtsp.RtpDataChannel) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/media3/exoplayer/rtsp/b;)V"}
androidx.media3.exoplayer.rtsp.RtpExtractor -> androidx.media3.exoplayer.rtsp.e:
    androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader payloadReader -> a
    androidx.media3.common.util.ParsableByteArray rtpPacketScratchBuffer -> b
    androidx.media3.common.util.ParsableByteArray rtpPacketDataBuffer -> c
    int trackId -> d
    java.lang.Object lock -> e
    androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue reorderingQueue -> f
    androidx.media3.extractor.ExtractorOutput output -> g
    boolean firstPacketRead -> h
    long firstTimestamp -> i
    int firstSequenceNumber -> j
    boolean isSeekPending -> k
    long nextRtpTimestamp -> l
    long playbackStartTimeUs -> m
    1:1:void seek(long,long):0:0 -> a
    1:1:long getCutoffTimeMs(long):0:0 -> b
    1:1:boolean hasReadFirstRtpPacket():0:0 -> c
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void preSeek():0:0 -> g
    1:1:void setFirstSequenceNumber(int):0:0 -> h
    1:1:void setFirstTimestamp(long):0:0 -> i
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.rtsp.RtpPacket -> c0.b:
    byte version -> a
    boolean padding -> b
    boolean extension -> c
    byte csrcCount -> d
    boolean marker -> e
    byte payloadType -> f
    int sequenceNumber -> g
    long timestamp -> h
    int ssrc -> i
    byte[] csrc -> j
    byte[] payloadData -> k
    byte[] EMPTY -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPacket$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b$b;)V"}
    2:2:void <init>(androidx.media3.exoplayer.rtsp.RtpPacket$Builder,androidx.media3.exoplayer.rtsp.RtpPacket$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b$b;Lc0/b$a;)V"}
    1:1:byte[] access$000():0:0 -> a
    1:1:int getNextSequenceNumber(int):0:0 -> b
    1:1:int getPreviousSequenceNumber(int):0:0 -> c
    1:1:androidx.media3.exoplayer.rtsp.RtpPacket parse(androidx.media3.common.util.ParsableByteArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lc0/b;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.exoplayer.rtsp.RtpPacket$1 -> c0.b$a:
androidx.media3.exoplayer.rtsp.RtpPacket$Builder -> c0.b$b:
    boolean padding -> a
    boolean marker -> b
    byte payloadType -> c
    int sequenceNumber -> d
    long timestamp -> e
    int ssrc -> f
    byte[] csrc -> g
    byte[] payloadData -> h
    1:1:void <init>():0:0 -> <init>
    1:1:boolean access$200(androidx.media3.exoplayer.rtsp.RtpPacket$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b$b;)Z"}
    1:1:boolean access$300(androidx.media3.exoplayer.rtsp.RtpPacket$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b$b;)Z"}
    1:1:byte access$400(androidx.media3.exoplayer.rtsp.RtpPacket$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b$b;)B"}
    1:1:int access$500(androidx.media3.exoplayer.rtsp.RtpPacket$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b$b;)I"}
    1:1:long access$600(androidx.media3.exoplayer.rtsp.RtpPacket$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b$b;)J"}
    1:1:int access$700(androidx.media3.exoplayer.rtsp.RtpPacket$Builder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b$b;)I"}
    1:1:byte[] access$800(androidx.media3.exoplayer.rtsp.RtpPacket$Builder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b$b;)[B"}
    1:1:byte[] access$900(androidx.media3.exoplayer.rtsp.RtpPacket$Builder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b$b;)[B"}
    1:1:androidx.media3.exoplayer.rtsp.RtpPacket build():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc0/b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpPacket$Builder setCsrc(byte[]):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lc0/b$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpPacket$Builder setMarker(boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lc0/b$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpPacket$Builder setPadding(boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lc0/b$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpPacket$Builder setPayloadData(byte[]):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lc0/b$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpPacket$Builder setPayloadType(byte):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(B)Lc0/b$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpPacket$Builder setSequenceNumber(int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lc0/b$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpPacket$Builder setSsrc(int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lc0/b$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpPacket$Builder setTimestamp(long):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lc0/b$b;"}
androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue -> androidx.media3.exoplayer.rtsp.g:
    java.util.TreeSet packetQueue -> a
    int lastReceivedSequenceNumber -> b
    int lastDequeuedSequenceNumber -> c
    boolean started -> d
    1:1:int $r8$lambda$KH4jVACxCE25AKwMvI4rTJ8X0Ag(androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue$RtpPacketContainer,androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue$RtpPacketContainer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/g$a;Landroidx/media3/exoplayer/rtsp/g$a;)I"}
    1:1:void addToQueue(androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue$RtpPacketContainer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/g$a;)V"}
    1:1:int calculateSequenceNumberShift(int,int):0:0 -> c
    1:1:int lambda$new$0(androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue$RtpPacketContainer,androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue$RtpPacketContainer):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/g$a;Landroidx/media3/exoplayer/rtsp/g$a;)I"}
    1:1:boolean offer(androidx.media3.exoplayer.rtsp.RtpPacket,long):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b;J)Z"}
    1:1:androidx.media3.exoplayer.rtsp.RtpPacket poll(long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lc0/b;"}
    1:1:void reset():0:0 -> g
androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue$$ExternalSyntheticLambda0 -> androidx.media3.exoplayer.rtsp.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue$$InternalSyntheticLambda$11$7a93ddcc7c8d96da964d3608746b624b2cf7af667f5d895829eb850d101b1de2$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue$$InternalSyntheticLambda$11$7a93ddcc7c8d96da964d3608746b624b2cf7af667f5d895829eb850d101b1de2$0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.rtsp.RtpPacketReorderingQueue$RtpPacketContainer -> androidx.media3.exoplayer.rtsp.g$a:
    androidx.media3.exoplayer.rtsp.RtpPacket packet -> a
    long receivedTimestampMs -> b
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPacket,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc0/b;J)V"}
androidx.media3.exoplayer.rtsp.RtpPayloadFormat -> androidx.media3.exoplayer.rtsp.h:
    int rtpPayloadType -> a
    int clockRate -> b
    androidx.media3.common.Format format -> c
    com.google.common.collect.ImmutableMap fmtpParameters -> d
    java.lang.String mediaEncoding -> e
    1:1:void <init>(androidx.media3.common.Format,int,int,java.util.Map,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;IILjava/util/Map;Ljava/lang/String;)V"}
    1:1:java.lang.String getMimeTypeFromRtpMediaType(java.lang.String):0:0 -> a
    1:1:int getRawPcmEncodingType(java.lang.String):0:0 -> b
    1:1:boolean isFormatSupported(androidx.media3.exoplayer.rtsp.MediaDescription):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a;)Z"}
androidx.media3.exoplayer.rtsp.RtpUtils -> c0.c:
    1:1:androidx.media3.datasource.DataSpec getIncomingRtpDataSpec(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lo/k;"}
androidx.media3.exoplayer.rtsp.RtspAuthenticationInfo -> androidx.media3.exoplayer.rtsp.i:
    int authenticationMechanism -> a
    java.lang.String realm -> b
    java.lang.String nonce -> c
    java.lang.String opaque -> d
    1:1:java.lang.String getAuthorizationHeaderValue(androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspAuthUserInfo,android.net.Uri,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/u$a;Landroid/net/Uri;I)Ljava/lang/String;"}
    1:1:java.lang.String getBasicAuthorizationHeaderValue(androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspAuthUserInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/u$a;)Ljava/lang/String;"}
    1:1:java.lang.String getDigestAuthorizationHeaderValue(androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspAuthUserInfo,android.net.Uri,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/u$a;Landroid/net/Uri;I)Ljava/lang/String;"}
androidx.media3.exoplayer.rtsp.RtspClient -> androidx.media3.exoplayer.rtsp.j:
    androidx.media3.exoplayer.rtsp.RtspClient$SessionInfoListener sessionInfoListener -> f
    androidx.media3.exoplayer.rtsp.RtspClient$PlaybackEventListener playbackEventListener -> g
    java.lang.String userAgent -> h
    javax.net.SocketFactory socketFactory -> i
    boolean debugLoggingEnabled -> j
    java.util.ArrayDeque pendingSetupRtpLoadInfos -> k
    android.util.SparseArray pendingRequests -> l
    androidx.media3.exoplayer.rtsp.RtspClient$MessageSender messageSender -> m
    android.net.Uri uri -> n
    androidx.media3.exoplayer.rtsp.RtspMessageChannel messageChannel -> o
    androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspAuthUserInfo rtspAuthUserInfo -> p
    java.lang.String sessionId -> q
    long sessionTimeoutMs -> r
    androidx.media3.exoplayer.rtsp.RtspClient$KeepAliveMonitor keepAliveMonitor -> s
    androidx.media3.exoplayer.rtsp.RtspAuthenticationInfo rtspAuthenticationInfo -> t
    int rtspState -> u
    boolean hasUpdatedTimelineAndTracks -> v
    boolean receivedAuthorizationRequest -> w
    boolean hasPendingPauseRequest -> x
    long pendingSeekPositionUs -> y
    1:1:androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspAuthUserInfo access$600(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Landroidx/media3/exoplayer/rtsp/u$a;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspAuthUserInfo access$602(androidx.media3.exoplayer.rtsp.RtspClient,androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspAuthUserInfo):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;Landroidx/media3/exoplayer/rtsp/u$a;)Landroidx/media3/exoplayer/rtsp/u$a;"}
    1:1:void access$700(androidx.media3.exoplayer.rtsp.RtspClient,java.lang.Throwable):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;Ljava/lang/Throwable;)V"}
    1:1:android.util.SparseArray access$800(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Landroid/util/SparseArray;"}
    1:1:void access$900(androidx.media3.exoplayer.rtsp.RtspClient,java.util.List):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;Ljava/util/List;)V"}
    1:1:com.google.common.collect.ImmutableList buildTrackList(androidx.media3.exoplayer.rtsp.RtspDescribeResponse,android.net.Uri):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/l;Landroid/net/Uri;)Ll2/v;"}
    1:1:void continueSetupRtspTrack():0:0 -> G
    1:1:void dispatchRtspError(java.lang.Throwable):0:0 -> H
    1:1:java.net.Socket getSocket(android.net.Uri):0:0 -> I
    1:1:int getState():0:0 -> J
    1:1:void maybeLogMessage(java.util.List):0:0 -> K
    1:1:void registerInterleavedDataChannel(int,androidx.media3.exoplayer.rtsp.RtspMessageChannel$InterleavedBinaryDataListener):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroidx/media3/exoplayer/rtsp/s$b;)V"}
    1:1:void retryWithRtpTcp():0:0 -> M
    1:1:void seekToUs(long):0:0 -> N
    1:1:boolean serverSupportsDescribe(java.util.List):0:0 -> O
    1:1:void setupSelectedTracks(java.util.List):0:0 -> P
    1:1:void signalPlaybackEnded():0:0 -> Q
    1:1:void start():0:0 -> R
    1:1:void startPlayback(long):0:0 -> S
    1:1:int access$100(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)I"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMessageChannel access$1000(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Landroidx/media3/exoplayer/rtsp/s;"}
    1:1:int access$102(androidx.media3.exoplayer.rtsp.RtspClient,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;I)I"}
    1:1:androidx.media3.exoplayer.rtsp.RtspClient$MessageSender access$1100(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Landroidx/media3/exoplayer/rtsp/j$d;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspClient$SessionInfoListener access$1200(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Landroidx/media3/exoplayer/rtsp/j$f;"}
    1:1:android.net.Uri access$1300(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Landroid/net/Uri;"}
    1:1:android.net.Uri access$1302(androidx.media3.exoplayer.rtsp.RtspClient,android.net.Uri):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;Landroid/net/Uri;)Landroid/net/Uri;"}
    1:1:boolean access$1400(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Z"}
    1:1:boolean access$1402(androidx.media3.exoplayer.rtsp.RtspClient,boolean):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;Z)Z"}
    1:1:androidx.media3.exoplayer.rtsp.RtspClient$KeepAliveMonitor access$1500(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Landroidx/media3/exoplayer/rtsp/j$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspClient$KeepAliveMonitor access$1502(androidx.media3.exoplayer.rtsp.RtspClient,androidx.media3.exoplayer.rtsp.RtspClient$KeepAliveMonitor):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;Landroidx/media3/exoplayer/rtsp/j$b;)Landroidx/media3/exoplayer/rtsp/j$b;"}
    1:1:boolean access$1600(java.util.List):0:0 -> l
    1:1:com.google.common.collect.ImmutableList access$1700(androidx.media3.exoplayer.rtsp.RtspDescribeResponse,android.net.Uri):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/l;Landroid/net/Uri;)Ll2/v;"}
    1:1:boolean access$1802(androidx.media3.exoplayer.rtsp.RtspClient,boolean):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;Z)Z"}
    1:1:long access$1900(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)J"}
    1:1:long access$1902(androidx.media3.exoplayer.rtsp.RtspClient,long):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;J)J"}
    1:1:void access$2000(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)V"}
    1:1:boolean access$202(androidx.media3.exoplayer.rtsp.RtspClient,boolean):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;Z)Z"}
    1:1:long access$2100(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)J"}
    1:1:long access$2102(androidx.media3.exoplayer.rtsp.RtspClient,long):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;J)J"}
    1:1:androidx.media3.exoplayer.rtsp.RtspClient$PlaybackEventListener access$2200(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Landroidx/media3/exoplayer/rtsp/j$e;"}
    1:1:java.lang.String access$300(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Ljava/lang/String;"}
    1:1:java.lang.String access$302(androidx.media3.exoplayer.rtsp.RtspClient,java.lang.String):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:java.lang.String access$400(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Ljava/lang/String;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspAuthenticationInfo access$500(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)Landroidx/media3/exoplayer/rtsp/i;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspAuthenticationInfo access$502(androidx.media3.exoplayer.rtsp.RtspClient,androidx.media3.exoplayer.rtsp.RtspAuthenticationInfo):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;Landroidx/media3/exoplayer/rtsp/i;)Landroidx/media3/exoplayer/rtsp/i;"}
androidx.media3.exoplayer.rtsp.RtspClient$1 -> androidx.media3.exoplayer.rtsp.j$a:
androidx.media3.exoplayer.rtsp.RtspClient$KeepAliveMonitor -> androidx.media3.exoplayer.rtsp.j$b:
    android.os.Handler keepAliveHandler -> f
    long intervalMs -> g
    boolean isStarted -> h
    androidx.media3.exoplayer.rtsp.RtspClient this$0 -> i
    1:1:void start():0:0 -> a
androidx.media3.exoplayer.rtsp.RtspClient$MessageListener -> androidx.media3.exoplayer.rtsp.j$c:
    android.os.Handler messageHandler -> a
    androidx.media3.exoplayer.rtsp.RtspClient this$0 -> b
    1:1:void onReceivingFailed(java.lang.Exception):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onSendingFailed(java.util.List,java.lang.Exception):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onRtspMessageReceived(java.util.List):0:0 -> c
    1:1:void $r8$lambda$qOKxm-j2xuCWyXrkkUSx-6j1roY(androidx.media3.exoplayer.rtsp.RtspClient$MessageListener,java.util.List):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j$c;Ljava/util/List;)V"}
    1:1:void handleRtspMessage(java.util.List):0:0 -> e
    1:1:void handleRtspRequest(java.util.List):0:0 -> f
    1:1:void handleRtspResponse(java.util.List):0:0 -> g
    1:1:void lambda$onRtspMessageReceived$0(java.util.List):0:0 -> h
    1:1:void onDescribeResponseReceived(androidx.media3.exoplayer.rtsp.RtspDescribeResponse):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/l;)V"}
    1:1:void onOptionsResponseReceived(androidx.media3.exoplayer.rtsp.RtspOptionsResponse):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/v;)V"}
    1:1:void onPauseResponseReceived():0:0 -> k
    1:1:void onPlayResponseReceived(androidx.media3.exoplayer.rtsp.RtspPlayResponse):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/w;)V"}
    1:1:void onSetupResponseReceived(androidx.media3.exoplayer.rtsp.RtspSetupResponse):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a0;)V"}
androidx.media3.exoplayer.rtsp.RtspClient$MessageListener$$ExternalSyntheticLambda0 -> androidx.media3.exoplayer.rtsp.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.rtsp.RtspClient$MessageListener androidx.media3.exoplayer.rtsp.RtspClient$MessageListener$$InternalSyntheticLambda$9$986cf480c42ab9264db024a63c0cc7e93eba5b89657ef3f35c9512b4af76af1c$0.f$0 -> f
    java.util.List androidx.media3.exoplayer.rtsp.RtspClient$MessageListener$$InternalSyntheticLambda$9$986cf480c42ab9264db024a63c0cc7e93eba5b89657ef3f35c9512b4af76af1c$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.rtsp.RtspClient$MessageListener$$InternalSyntheticLambda$9$986cf480c42ab9264db024a63c0cc7e93eba5b89657ef3f35c9512b4af76af1c$0.<init>(androidx.media3.exoplayer.rtsp.RtspClient$MessageListener,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j$c;Ljava/util/List;)V"}
    1:1:void androidx.media3.exoplayer.rtsp.RtspClient$MessageListener$$InternalSyntheticLambda$9$986cf480c42ab9264db024a63c0cc7e93eba5b89657ef3f35c9512b4af76af1c$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.rtsp.RtspClient$MessageSender -> androidx.media3.exoplayer.rtsp.j$d:
    int cSeq -> a
    androidx.media3.exoplayer.rtsp.RtspRequest lastRequest -> b
    androidx.media3.exoplayer.rtsp.RtspClient this$0 -> c
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtspClient):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;)V"}
    2:2:void <init>(androidx.media3.exoplayer.rtsp.RtspClient,androidx.media3.exoplayer.rtsp.RtspClient$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/j;Landroidx/media3/exoplayer/rtsp/j$a;)V"}
    1:1:androidx.media3.exoplayer.rtsp.RtspRequest getRequestWithCommonHeaders(int,java.lang.String,java.util.Map,android.net.Uri):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Ljava/util/Map;Landroid/net/Uri;)Landroidx/media3/exoplayer/rtsp/x;"}
    1:1:void retryLastRequest():0:0 -> b
    1:1:void sendDescribeRequest(android.net.Uri,java.lang.String):0:0 -> c
    1:1:void sendMethodNotAllowedResponse(int):0:0 -> d
    1:1:void sendOptionsRequest(android.net.Uri,java.lang.String):0:0 -> e
    1:1:void sendPauseRequest(android.net.Uri,java.lang.String):0:0 -> f
    1:1:void sendPlayRequest(android.net.Uri,long,java.lang.String):0:0 -> g
    1:1:void sendRequest(androidx.media3.exoplayer.rtsp.RtspRequest):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/x;)V"}
    1:1:void sendResponse(androidx.media3.exoplayer.rtsp.RtspResponse):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/y;)V"}
    1:1:void sendSetupRequest(android.net.Uri,java.lang.String,java.lang.String):0:0 -> j
    1:1:void sendTeardownRequest(android.net.Uri,java.lang.String):0:0 -> k
androidx.media3.exoplayer.rtsp.RtspClient$PlaybackEventListener -> androidx.media3.exoplayer.rtsp.j$e:
    void onRtspSetupCompleted() -> a
    void onPlaybackError(androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/RtspMediaSource$c;)V"}
    void onPlaybackStarted(long,com.google.common.collect.ImmutableList) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLl2/v;)V"}
androidx.media3.exoplayer.rtsp.RtspClient$SessionInfoListener -> androidx.media3.exoplayer.rtsp.j$f:
    void onSessionTimelineUpdated(androidx.media3.exoplayer.rtsp.RtspSessionTiming,com.google.common.collect.ImmutableList) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/z;Ll2/v;)V"}
    void onSessionTimelineRequestFailed(java.lang.String,java.lang.Throwable) -> d
androidx.media3.exoplayer.rtsp.RtspDescribeResponse -> androidx.media3.exoplayer.rtsp.l:
    androidx.media3.exoplayer.rtsp.RtspHeaders headers -> a
    int status -> b
    androidx.media3.exoplayer.rtsp.SessionDescription sessionDescription -> c
androidx.media3.exoplayer.rtsp.RtspHeaders -> androidx.media3.exoplayer.rtsp.m:
    com.google.common.collect.ImmutableListMultimap namesAndValues -> a
    androidx.media3.exoplayer.rtsp.RtspHeaders EMPTY -> b
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtspHeaders$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/m$b;)V"}
    2:2:void <init>(androidx.media3.exoplayer.rtsp.RtspHeaders$Builder,androidx.media3.exoplayer.rtsp.RtspHeaders$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/m$b;Landroidx/media3/exoplayer/rtsp/m$a;)V"}
    1:1:java.lang.String access$000(java.lang.String):0:0 -> a
    1:1:com.google.common.collect.ImmutableListMultimap asMultiMap():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/w;"}
    1:1:java.lang.String convertToStandardHeaderName(java.lang.String):0:0 -> c
    1:1:java.lang.String get(java.lang.String):0:0 -> d
    1:1:com.google.common.collect.ImmutableList values(java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll2/v;"}
androidx.media3.exoplayer.rtsp.RtspHeaders$1 -> androidx.media3.exoplayer.rtsp.m$a:
androidx.media3.exoplayer.rtsp.RtspHeaders$Builder -> androidx.media3.exoplayer.rtsp.m$b:
    com.google.common.collect.ImmutableListMultimap$Builder namesAndValuesBuilder -> a
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,int):0:0 -> <init>
    1:1:com.google.common.collect.ImmutableListMultimap$Builder access$300(androidx.media3.exoplayer.rtsp.RtspHeaders$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/m$b;)Ll2/w$a;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspHeaders$Builder add(java.lang.String,java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/m$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspHeaders$Builder addAll(java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Landroidx/media3/exoplayer/rtsp/m$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspHeaders$Builder addAll(java.util.Map):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;)Landroidx/media3/exoplayer/rtsp/m$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspHeaders build():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/media3/exoplayer/rtsp/m;"}
androidx.media3.exoplayer.rtsp.RtspMediaPeriod -> androidx.media3.exoplayer.rtsp.n:
    boolean isUsingRtpTcp -> A
    androidx.media3.exoplayer.upstream.Allocator allocator -> f
    android.os.Handler handler -> g
    androidx.media3.exoplayer.rtsp.RtspMediaPeriod$InternalListener internalListener -> h
    androidx.media3.exoplayer.rtsp.RtspClient rtspClient -> i
    java.util.List rtspLoaderWrappers -> j
    java.util.List selectedLoadInfos -> k
    androidx.media3.exoplayer.rtsp.RtspMediaPeriod$Listener listener -> l
    androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory rtpDataChannelFactory -> m
    androidx.media3.exoplayer.source.MediaPeriod$Callback callback -> n
    com.google.common.collect.ImmutableList trackGroups -> o
    java.io.IOException preparationError -> p
    androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException playbackException -> q
    long requestedSeekPositionUs -> r
    long pendingSeekPositionUs -> s
    long pendingSeekPositionUsForTcpRetry -> t
    boolean loadingFinished -> u
    boolean notifyDiscontinuity -> v
    boolean released -> w
    boolean prepared -> x
    boolean trackSelected -> y
    int portBindingRetryCount -> z
    1:1:void <init>(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory,android.net.Uri,androidx.media3.exoplayer.rtsp.RtspMediaPeriod$Listener,java.lang.String,javax.net.SocketFactory,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b;Landroidx/media3/exoplayer/rtsp/b$a;Landroid/net/Uri;Landroidx/media3/exoplayer/rtsp/n$d;Ljava/lang/String;Ljavax/net/SocketFactory;Z)V"}
    1:1:long access$2000(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)J"}
    1:1:long access$2002(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,long):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;J)J"}
    1:1:androidx.media3.exoplayer.rtsp.RtpDataLoadable access$2100(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,android.net.Uri):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;Landroid/net/Uri;)Landroidx/media3/exoplayer/rtsp/d;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory access$2200(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Landroidx/media3/exoplayer/rtsp/b$a;"}
    1:1:androidx.media3.exoplayer.upstream.Allocator access$2300(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Lk0/b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMediaPeriod$InternalListener access$2400(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Landroidx/media3/exoplayer/rtsp/n$c;"}
    1:1:void access$2500(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)V"}
    1:1:void access$2700(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)V"}
    1:1:android.os.Handler access$400(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Landroid/os/Handler;"}
    1:1:void access$500(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)V"}
    1:1:boolean access$600(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Z"}
    1:1:boolean access$602(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,boolean):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;Z)Z"}
    1:1:void access$700(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)V"}
    1:1:java.util.List access$800(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Ljava/util/List;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspClient access$900(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Landroidx/media3/exoplayer/rtsp/j;"}
    1:1:com.google.common.collect.ImmutableList buildTrackGroups(com.google.common.collect.ImmutableList):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/v;)Ll2/v;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpDataLoadable getLoadableByTrackUri(android.net.Uri):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Landroidx/media3/exoplayer/rtsp/d;"}
    1:1:boolean isReady(int):0:0 -> R
    1:1:boolean isSeekPending():0:0 -> S
    1:1:void maybeFinishPrepare():0:0 -> T
    1:1:void maybeSetupTracks():0:0 -> U
    1:1:int readData(int,androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILq/u1;Lp/i;I)I"}
    1:1:void release():0:0 -> W
    1:1:void retryWithRtpTcp():0:0 -> X
    1:1:boolean seekInsideBufferUs(long):0:0 -> Y
    1:1:int skipData(int,long):0:0 -> Z
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:boolean suppressRead():0:0 -> a0
    1:1:boolean isLoading():0:0 -> b
    1:1:void updateLoadingFinished():0:0 -> b0
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:boolean access$1000(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Z"}
    1:1:java.io.IOException access$1102(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,java.io.IOException):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;Ljava/io/IOException;)Ljava/io/IOException;"}
    1:1:int access$1208(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)I"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException access$1300(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Landroidx/media3/exoplayer/rtsp/RtspMediaSource$c;"}
    1:1:void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException access$1302(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;Landroidx/media3/exoplayer/rtsp/RtspMediaSource$c;)Landroidx/media3/exoplayer/rtsp/RtspMediaSource$c;"}
    1:1:long access$1400(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)J"}
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:long seekToUs(long):0:0 -> r
    1:1:long access$1402(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;J)J"}
    1:1:long access$1500(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)J"}
    1:1:long access$1502(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,long):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;J)J"}
    1:1:long readDiscontinuity():0:0 -> v
    1:1:java.util.List access$1600(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Ljava/util/List;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMediaPeriod$Listener access$1700(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Landroidx/media3/exoplayer/rtsp/n$d;"}
    1:1:boolean access$1800(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)Z"}
    1:1:boolean access$1902(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,boolean):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;Z)Z"}
androidx.media3.exoplayer.rtsp.RtspMediaPeriod$1 -> androidx.media3.exoplayer.rtsp.n$a:
androidx.media3.exoplayer.rtsp.RtspMediaPeriod$ExtractorOutputImpl -> androidx.media3.exoplayer.rtsp.n$b:
    androidx.media3.extractor.TrackOutput trackOutput -> f
    androidx.media3.exoplayer.rtsp.RtspMediaPeriod this$0 -> g
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,androidx.media3.extractor.TrackOutput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;Lo0/s0;)V"}
    2:2:void <init>(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,androidx.media3.extractor.TrackOutput,androidx.media3.exoplayer.rtsp.RtspMediaPeriod$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;Lo0/s0;Landroidx/media3/exoplayer/rtsp/n$a;)V"}
    1:1:void $r8$lambda$nzBpg0xdwAtZEmpUTs_VHwPi1hc(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)V"}
    1:1:void lambda$endTracks$0(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)V"}
    1:1:androidx.media3.extractor.TrackOutput track(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
    1:1:void endTracks():0:0 -> f
    1:1:void seekMap(androidx.media3.extractor.SeekMap):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
androidx.media3.exoplayer.rtsp.RtspMediaPeriod$ExtractorOutputImpl$$ExternalSyntheticLambda0 -> androidx.media3.exoplayer.rtsp.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.rtsp.RtspMediaPeriod androidx.media3.exoplayer.rtsp.RtspMediaPeriod$ExtractorOutputImpl$$InternalSyntheticLambda$10$4eb54cbb50d97e3f55b64eb6ed70325d84b3bc1e659483ba23b77bfd2b73f1de$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.rtsp.RtspMediaPeriod$ExtractorOutputImpl$$InternalSyntheticLambda$10$4eb54cbb50d97e3f55b64eb6ed70325d84b3bc1e659483ba23b77bfd2b73f1de$0.<init>(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)V"}
    1:1:void androidx.media3.exoplayer.rtsp.RtspMediaPeriod$ExtractorOutputImpl$$InternalSyntheticLambda$10$4eb54cbb50d97e3f55b64eb6ed70325d84b3bc1e659483ba23b77bfd2b73f1de$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.rtsp.RtspMediaPeriod$InternalListener -> androidx.media3.exoplayer.rtsp.n$c:
    androidx.media3.exoplayer.rtsp.RtspMediaPeriod this$0 -> f
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)V"}
    2:2:void <init>(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,androidx.media3.exoplayer.rtsp.RtspMediaPeriod$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;Landroidx/media3/exoplayer/rtsp/n$a;)V"}
    1:1:void onRtspSetupCompleted():0:0 -> a
    1:1:void onPlaybackError(androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/RtspMediaSource$c;)V"}
    1:1:void onSessionTimelineUpdated(androidx.media3.exoplayer.rtsp.RtspSessionTiming,com.google.common.collect.ImmutableList):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/z;Ll2/v;)V"}
    1:1:void onSessionTimelineRequestFailed(java.lang.String,java.lang.Throwable):0:0 -> d
    1:1:void onUpstreamFormatChanged(androidx.media3.common.Format):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:void onPlaybackStarted(long,com.google.common.collect.ImmutableList):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLl2/v;)V"}
    1:1:void $r8$lambda$vLFUr84dj6zySZN442kTEfKaHvU(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)V"}
    1:1:void lambda$onUpstreamFormatChanged$0(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)V"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.rtsp.RtpDataLoadable,long,long,boolean):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/d;JJZ)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.rtsp.RtpDataLoadable,long,long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/d;JJ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.rtsp.RtpDataLoadable,long,long,java.io.IOException,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/d;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
androidx.media3.exoplayer.rtsp.RtspMediaPeriod$InternalListener$$ExternalSyntheticLambda0 -> androidx.media3.exoplayer.rtsp.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.rtsp.RtspMediaPeriod androidx.media3.exoplayer.rtsp.RtspMediaPeriod$InternalListener$$InternalSyntheticLambda$9$b992405bf5f5ae6eda13a991fdf6a4e9e9a3f7dfd1ec5019db60dd6195e52545$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.rtsp.RtspMediaPeriod$InternalListener$$InternalSyntheticLambda$9$b992405bf5f5ae6eda13a991fdf6a4e9e9a3f7dfd1ec5019db60dd6195e52545$0.<init>(androidx.media3.exoplayer.rtsp.RtspMediaPeriod):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;)V"}
    1:1:void androidx.media3.exoplayer.rtsp.RtspMediaPeriod$InternalListener$$InternalSyntheticLambda$9$b992405bf5f5ae6eda13a991fdf6a4e9e9a3f7dfd1ec5019db60dd6195e52545$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.rtsp.RtspMediaPeriod$Listener -> androidx.media3.exoplayer.rtsp.n$d:
    void onSeekingUnsupported() -> a
    void onSourceInfoRefreshed(androidx.media3.exoplayer.rtsp.RtspSessionTiming) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/z;)V"}
androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtpLoadInfo -> androidx.media3.exoplayer.rtsp.n$e:
    androidx.media3.exoplayer.rtsp.RtspMediaTrack mediaTrack -> a
    androidx.media3.exoplayer.rtsp.RtpDataLoadable loadable -> b
    java.lang.String transport -> c
    androidx.media3.exoplayer.rtsp.RtspMediaPeriod this$0 -> d
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtspMediaPeriod,androidx.media3.exoplayer.rtsp.RtspMediaTrack,int,androidx.media3.extractor.TrackOutput,androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n;Landroidx/media3/exoplayer/rtsp/r;ILo0/s0;Landroidx/media3/exoplayer/rtsp/b$a;)V"}
    1:1:void $r8$lambda$u1jp3aAkUMU58F3o8LoPsgDW9CY(androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtpLoadInfo,java.lang.String,androidx.media3.exoplayer.rtsp.RtpDataChannel):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n$e;Ljava/lang/String;Landroidx/media3/exoplayer/rtsp/b;)V"}
    1:1:androidx.media3.exoplayer.rtsp.RtpDataLoadable access$300(androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtpLoadInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n$e;)Landroidx/media3/exoplayer/rtsp/d;"}
    1:1:android.net.Uri getTrackUri():0:0 -> c
    1:1:java.lang.String getTransport():0:0 -> d
    1:1:boolean isTransportReady():0:0 -> e
    1:1:void lambda$new$0(java.lang.String,androidx.media3.exoplayer.rtsp.RtpDataChannel):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/media3/exoplayer/rtsp/b;)V"}
androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtpLoadInfo$$ExternalSyntheticLambda0 -> androidx.media3.exoplayer.rtsp.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtpLoadInfo androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtpLoadInfo$$InternalSyntheticLambda$9$56d2b0588e0b664e0a1f2dc3f9541b8f276baef8c05edbe3f38aef3a4aef904b$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtpLoadInfo$$InternalSyntheticLambda$9$56d2b0588e0b664e0a1f2dc3f9541b8f276baef8c05edbe3f38aef3a4aef904b$0.<init>(androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtpLoadInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n$e;)V"}
    1:1:void androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtpLoadInfo$$InternalSyntheticLambda$9$56d2b0588e0b664e0a1f2dc3f9541b8f276baef8c05edbe3f38aef3a4aef904b$0.onTransportReady(java.lang.String,androidx.media3.exoplayer.rtsp.RtpDataChannel):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/media3/exoplayer/rtsp/b;)V"}
androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtspLoaderWrapper -> androidx.media3.exoplayer.rtsp.n$f:
    androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtpLoadInfo loadInfo -> a
    androidx.media3.exoplayer.upstream.Loader loader -> b
    androidx.media3.exoplayer.source.SampleQueue sampleQueue -> c
    boolean canceled -> d
    boolean released -> e
    androidx.media3.exoplayer.rtsp.RtspMediaPeriod this$0 -> f
    1:1:boolean access$100(androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtspLoaderWrapper):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n$f;)Z"}
    1:1:androidx.media3.exoplayer.source.SampleQueue access$200(androidx.media3.exoplayer.rtsp.RtspMediaPeriod$RtspLoaderWrapper):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/n$f;)Lg0/a1;"}
    1:1:void cancelLoad():0:0 -> c
    1:1:long getBufferedPositionUs():0:0 -> d
    1:1:boolean isSampleQueueReady():0:0 -> e
    1:1:int read(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
    1:1:void release():0:0 -> g
    1:1:void resumeLoad():0:0 -> h
    1:1:void seekTo(long):0:0 -> i
    1:1:int skipData(long):0:0 -> j
    1:1:void startLoading():0:0 -> k
androidx.media3.exoplayer.rtsp.RtspMediaPeriod$SampleStreamImpl -> androidx.media3.exoplayer.rtsp.n$g:
    int track -> f
    androidx.media3.exoplayer.rtsp.RtspMediaPeriod this$0 -> g
    1:1:boolean isReady():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:int skipData(long):0:0 -> t
    1:1:int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
androidx.media3.exoplayer.rtsp.RtspMediaSource -> androidx.media3.exoplayer.rtsp.RtspMediaSource:
    androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory rtpDataChannelFactory -> m
    java.lang.String userAgent -> n
    android.net.Uri uri -> o
    javax.net.SocketFactory socketFactory -> p
    boolean debugLoggingEnabled -> q
    long timelineDurationUs -> r
    boolean timelineIsSeekable -> s
    boolean timelineIsLive -> t
    boolean timelineIsPlaceholder -> u
    androidx.media3.common.MediaItem mediaItem -> v
    1:1:void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory,java.lang.String,javax.net.SocketFactory,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Landroidx/media3/exoplayer/rtsp/b$a;Ljava/lang/String;Ljavax/net/SocketFactory;Z)V"}
    1:1:void prepareSourceInternal(androidx.media3.datasource.TransferListener):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:void releaseSourceInternal():0:0 -> E
    1:1:long access$002(androidx.media3.exoplayer.rtsp.RtspMediaSource,long):0:0 -> F
    1:1:boolean access$102(androidx.media3.exoplayer.rtsp.RtspMediaSource,boolean):0:0 -> G
    1:1:boolean access$202(androidx.media3.exoplayer.rtsp.RtspMediaSource,boolean):0:0 -> H
    1:1:boolean access$302(androidx.media3.exoplayer.rtsp.RtspMediaSource,boolean):0:0 -> I
    1:1:void access$400(androidx.media3.exoplayer.rtsp.RtspMediaSource):0:0 -> J
    1:1:void notifySourceInfoRefreshed():0:0 -> K
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:void updateMediaItem(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    1:1:void maybeThrowSourceInfoRefreshError():0:0 -> h
    1:1:void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
androidx.media3.exoplayer.rtsp.RtspMediaSource$1 -> androidx.media3.exoplayer.rtsp.RtspMediaSource$a:
    androidx.media3.exoplayer.rtsp.RtspMediaSource this$0 -> a
    1:1:void onSeekingUnsupported():0:0 -> a
    1:1:void onSourceInfoRefreshed(androidx.media3.exoplayer.rtsp.RtspSessionTiming):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/z;)V"}
androidx.media3.exoplayer.rtsp.RtspMediaSource$2 -> androidx.media3.exoplayer.rtsp.RtspMediaSource$b:
    androidx.media3.exoplayer.rtsp.RtspMediaSource this$0 -> f
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtspMediaSource,androidx.media3.common.Timeline):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/RtspMediaSource;Lj/i0;)V"}
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory -> androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory:
    long timeoutMs -> a
    java.lang.String userAgent -> b
    javax.net.SocketFactory socketFactory -> c
    boolean forceUseRtpTcp -> d
    boolean debugLoggingEnabled -> e
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lg0/f0;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Landroidx/media3/exoplayer/rtsp/RtspMediaSource;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Landroidx/media3/exoplayer/rtsp/RtspMediaSource$Factory;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Landroidx/media3/exoplayer/rtsp/RtspMediaSource$Factory;"}
androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspPlaybackException -> androidx.media3.exoplayer.rtsp.RtspMediaSource$c:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
    3:3:void <init>(java.lang.Throwable):0:0 -> <init>
androidx.media3.exoplayer.rtsp.RtspMediaSource$RtspUdpUnsupportedTransportException -> androidx.media3.exoplayer.rtsp.RtspMediaSource$d:
androidx.media3.exoplayer.rtsp.RtspMediaTrack -> androidx.media3.exoplayer.rtsp.r:
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> a
    android.net.Uri uri -> b
    1:1:android.net.Uri extractTrackUri(androidx.media3.exoplayer.rtsp.RtspHeaders,android.net.Uri,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/m;Landroid/net/Uri;Ljava/lang/String;)Landroid/net/Uri;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpPayloadFormat generatePayloadFormat(androidx.media3.exoplayer.rtsp.MediaDescription):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a;)Landroidx/media3/exoplayer/rtsp/h;"}
    1:1:byte[] getInitializationDataFromParameterSet(java.lang.String):0:0 -> c
    1:1:int inferChannelCount(int,java.lang.String):0:0 -> d
    1:1:androidx.media3.extractor.AacUtil$Config parseAacStreamMuxConfig(java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lo0/a$b;"}
    1:1:void processAacFmtpAttribute(androidx.media3.common.Format$Builder,com.google.common.collect.ImmutableMap,java.lang.String,int,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;Ll2/x;Ljava/lang/String;II)V"}
    1:1:void processH264FmtpAttribute(androidx.media3.common.Format$Builder,com.google.common.collect.ImmutableMap):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;Ll2/x;)V"}
    1:1:void processH265FmtpAttribute(androidx.media3.common.Format$Builder,com.google.common.collect.ImmutableMap):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;Ll2/x;)V"}
    1:1:void processMPEG4FmtpAttribute(androidx.media3.common.Format$Builder,com.google.common.collect.ImmutableMap):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q$b;Ll2/x;)V"}
androidx.media3.exoplayer.rtsp.RtspMessageChannel -> androidx.media3.exoplayer.rtsp.s:
    androidx.media3.exoplayer.rtsp.RtspMessageChannel$MessageListener messageListener -> f
    androidx.media3.exoplayer.upstream.Loader receiverLoader -> g
    java.util.Map interleavedBinaryDataListeners -> h
    androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender sender -> i
    java.net.Socket socket -> j
    boolean closed -> k
    java.nio.charset.Charset CHARSET -> l
    1:1:boolean access$100(androidx.media3.exoplayer.rtsp.RtspMessageChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s;)Z"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMessageChannel$MessageListener access$200(androidx.media3.exoplayer.rtsp.RtspMessageChannel):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s;)Landroidx/media3/exoplayer/rtsp/s$d;"}
    1:1:java.util.Map access$300(androidx.media3.exoplayer.rtsp.RtspMessageChannel):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s;)Ljava/util/Map;"}
    1:1:void open(java.net.Socket):0:0 -> d
    1:1:void registerInterleavedBinaryDataListener(int,androidx.media3.exoplayer.rtsp.RtspMessageChannel$InterleavedBinaryDataListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroidx/media3/exoplayer/rtsp/s$b;)V"}
    1:1:void send(java.util.List):0:0 -> f
androidx.media3.exoplayer.rtsp.RtspMessageChannel$1 -> androidx.media3.exoplayer.rtsp.s$a:
androidx.media3.exoplayer.rtsp.RtspMessageChannel$InterleavedBinaryDataListener -> androidx.media3.exoplayer.rtsp.s$b:
    void onInterleavedBinaryDataReceived(byte[]) -> h
androidx.media3.exoplayer.rtsp.RtspMessageChannel$LoaderCallbackImpl -> androidx.media3.exoplayer.rtsp.s$c:
    androidx.media3.exoplayer.rtsp.RtspMessageChannel this$0 -> f
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtspMessageChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s;)V"}
    2:2:void <init>(androidx.media3.exoplayer.rtsp.RtspMessageChannel,androidx.media3.exoplayer.rtsp.RtspMessageChannel$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s;Landroidx/media3/exoplayer/rtsp/s$a;)V"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.rtsp.RtspMessageChannel$Receiver,long,long,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s$f;JJZ)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.rtsp.RtspMessageChannel$Receiver,long,long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s$f;JJ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.rtsp.RtspMessageChannel$Receiver,long,long,java.io.IOException,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s$f;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
androidx.media3.exoplayer.rtsp.RtspMessageChannel$MessageListener -> androidx.media3.exoplayer.rtsp.s$d:
    void onReceivingFailed(java.lang.Exception) -> a
    void onSendingFailed(java.util.List,java.lang.Exception) -> b
    void onRtspMessageReceived(java.util.List) -> c
androidx.media3.exoplayer.rtsp.RtspMessageChannel$MessageListener$-CC -> c0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$onReceivingFailed(androidx.media3.exoplayer.rtsp.RtspMessageChannel$MessageListener,java.lang.Exception):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s$d;Ljava/lang/Exception;)V"}
    1:1:void $default$onSendingFailed(androidx.media3.exoplayer.rtsp.RtspMessageChannel$MessageListener,java.util.List,java.lang.Exception):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s$d;Ljava/util/List;Ljava/lang/Exception;)V"}
androidx.media3.exoplayer.rtsp.RtspMessageChannel$MessageParser -> androidx.media3.exoplayer.rtsp.s$e:
    java.util.List messageLines -> a
    int state -> b
    long messageBodyLength -> c
    1:1:com.google.common.collect.ImmutableList addMessageBody(byte[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Ll2/v;"}
    1:1:com.google.common.collect.ImmutableList addMessageLine(byte[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Ll2/v;"}
    1:1:com.google.common.collect.ImmutableList parseNext(byte,java.io.DataInputStream):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(BLjava/io/DataInputStream;)Ll2/v;"}
    1:1:byte[] parseNextLine(byte,java.io.DataInputStream):0:0 -> d
    1:1:void reset():0:0 -> e
androidx.media3.exoplayer.rtsp.RtspMessageChannel$Receiver -> androidx.media3.exoplayer.rtsp.s$f:
    java.io.DataInputStream dataInputStream -> a
    androidx.media3.exoplayer.rtsp.RtspMessageChannel$MessageParser messageParser -> b
    boolean loadCanceled -> c
    androidx.media3.exoplayer.rtsp.RtspMessageChannel this$0 -> d
    1:1:void load():0:0 -> a
    1:1:void cancelLoad():0:0 -> b
    1:1:void handleInterleavedBinaryData():0:0 -> c
    1:1:void handleRtspMessage(byte):0:0 -> d
androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender -> androidx.media3.exoplayer.rtsp.s$g:
    java.io.OutputStream outputStream -> f
    android.os.HandlerThread senderThread -> g
    android.os.Handler senderThreadHandler -> h
    androidx.media3.exoplayer.rtsp.RtspMessageChannel this$0 -> i
    1:1:void $r8$lambda$AdkFjKtOVg58SBP_Y7YzXxGn_3g(androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender,byte[],java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s$g;[BLjava/util/List;)V"}
    1:1:void lambda$send$0(byte[],java.util.List):0:0 -> b
    1:1:void send(java.util.List):0:0 -> c
androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender$$ExternalSyntheticLambda0 -> androidx.media3.exoplayer.rtsp.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender$$InternalSyntheticLambda$9$27d77fc6610a7ef9625f8ee59d67b6984af7c17c516e8345ecea63479731771f$0.f$0 -> f
    byte[] androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender$$InternalSyntheticLambda$9$27d77fc6610a7ef9625f8ee59d67b6984af7c17c516e8345ecea63479731771f$0.f$1 -> g
    java.util.List androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender$$InternalSyntheticLambda$9$27d77fc6610a7ef9625f8ee59d67b6984af7c17c516e8345ecea63479731771f$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender$$InternalSyntheticLambda$9$27d77fc6610a7ef9625f8ee59d67b6984af7c17c516e8345ecea63479731771f$0.<init>(androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender,byte[],java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/s$g;[BLjava/util/List;)V"}
    1:1:void androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender$$InternalSyntheticLambda$9$27d77fc6610a7ef9625f8ee59d67b6984af7c17c516e8345ecea63479731771f$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender$$ExternalSyntheticLambda1 -> c0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.os.HandlerThread androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender$$InternalSyntheticLambda$9$e060fa4452ad4f5c10b4d4adb0407ec91928530aff84f02245c724433141ad7e$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender$$InternalSyntheticLambda$9$e060fa4452ad4f5c10b4d4adb0407ec91928530aff84f02245c724433141ad7e$0.<init>(android.os.HandlerThread):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.rtsp.RtspMessageChannel$Sender$$InternalSyntheticLambda$9$e060fa4452ad4f5c10b4d4adb0407ec91928530aff84f02245c724433141ad7e$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.rtsp.RtspMessageUtil -> androidx.media3.exoplayer.rtsp.u:
    java.util.regex.Pattern REQUEST_LINE_PATTERN -> a
    java.util.regex.Pattern STATUS_LINE_PATTERN -> b
    java.util.regex.Pattern CONTENT_LENGTH_HEADER_PATTERN -> c
    java.util.regex.Pattern SESSION_HEADER_PATTERN -> d
    java.util.regex.Pattern WWW_AUTHENTICATION_HEADER_DIGEST_PATTERN -> e
    java.util.regex.Pattern WWW_AUTHENTICATION_HEADER_BASIC_PATTERN -> f
    java.lang.String LF -> g
    java.lang.String CRLF -> h
    1:1:void checkManifestExpression(boolean,java.lang.String):0:0 -> a
    1:1:byte[] convertMessageToByteArray(java.util.List):0:0 -> b
    1:1:java.lang.String getRtspStatusReasonPhrase(int):0:0 -> c
    1:1:byte[] getStringBytes(java.lang.String):0:0 -> d
    1:1:boolean isRtspResponse(java.util.List):0:0 -> e
    1:1:boolean isRtspStartLine(java.lang.String):0:0 -> f
    1:1:long parseContentLengthHeader(java.lang.String):0:0 -> g
    1:1:int parseInt(java.lang.String):0:0 -> h
    1:1:int parseMethodString(java.lang.String):0:0 -> i
    1:1:com.google.common.collect.ImmutableList parsePublicHeader(java.lang.String):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll2/v;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspRequest parseRequest(java.util.List):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Landroidx/media3/exoplayer/rtsp/x;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspResponse parseResponse(java.util.List):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Landroidx/media3/exoplayer/rtsp/y;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspSessionHeader parseSessionHeader(java.lang.String):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/u$b;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspAuthUserInfo parseUserInfo(android.net.Uri):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Landroidx/media3/exoplayer/rtsp/u$a;"}
    1:1:androidx.media3.exoplayer.rtsp.RtspAuthenticationInfo parseWwwAuthenticateHeader(java.lang.String):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/i;"}
    1:1:android.net.Uri removeUserInfo(android.net.Uri):0:0 -> p
    1:1:com.google.common.collect.ImmutableList serializeRequest(androidx.media3.exoplayer.rtsp.RtspRequest):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/x;)Ll2/v;"}
    1:1:com.google.common.collect.ImmutableList serializeResponse(androidx.media3.exoplayer.rtsp.RtspResponse):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/y;)Ll2/v;"}
    1:1:java.lang.String[] splitRtspMessageBody(java.lang.String):0:0 -> s
    1:1:java.lang.String toMethodString(int):0:0 -> t
androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspAuthUserInfo -> androidx.media3.exoplayer.rtsp.u$a:
    java.lang.String username -> a
    java.lang.String password -> b
androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspSessionHeader -> androidx.media3.exoplayer.rtsp.u$b:
    java.lang.String sessionId -> a
    long timeoutMs -> b
androidx.media3.exoplayer.rtsp.RtspOptionsResponse -> androidx.media3.exoplayer.rtsp.v:
    int status -> a
    com.google.common.collect.ImmutableList supportedMethods -> b
androidx.media3.exoplayer.rtsp.RtspPlayResponse -> androidx.media3.exoplayer.rtsp.w:
    int status -> a
    androidx.media3.exoplayer.rtsp.RtspSessionTiming sessionTiming -> b
    com.google.common.collect.ImmutableList trackTimingList -> c
androidx.media3.exoplayer.rtsp.RtspRequest -> androidx.media3.exoplayer.rtsp.x:
    android.net.Uri uri -> a
    int method -> b
    androidx.media3.exoplayer.rtsp.RtspHeaders headers -> c
    java.lang.String messageBody -> d
androidx.media3.exoplayer.rtsp.RtspResponse -> androidx.media3.exoplayer.rtsp.y:
    int status -> a
    androidx.media3.exoplayer.rtsp.RtspHeaders headers -> b
    java.lang.String messageBody -> c
    1:1:void <init>(int,androidx.media3.exoplayer.rtsp.RtspHeaders):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroidx/media3/exoplayer/rtsp/m;)V"}
    2:2:void <init>(int,androidx.media3.exoplayer.rtsp.RtspHeaders,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILandroidx/media3/exoplayer/rtsp/m;Ljava/lang/String;)V"}
androidx.media3.exoplayer.rtsp.RtspSessionTiming -> androidx.media3.exoplayer.rtsp.z:
    long startTimeMs -> a
    long stopTimeMs -> b
    androidx.media3.exoplayer.rtsp.RtspSessionTiming DEFAULT -> c
    java.util.regex.Pattern NPT_RANGE_PATTERN -> d
    1:1:long getDurationMs():0:0 -> a
    1:1:java.lang.String getOffsetStartTimeTiming(long):0:0 -> b
    1:1:boolean isLive():0:0 -> c
    1:1:androidx.media3.exoplayer.rtsp.RtspSessionTiming parseTiming(java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/z;"}
androidx.media3.exoplayer.rtsp.RtspSetupResponse -> androidx.media3.exoplayer.rtsp.a0:
    int status -> a
    androidx.media3.exoplayer.rtsp.RtspMessageUtil$RtspSessionHeader sessionHeader -> b
    java.lang.String transport -> c
androidx.media3.exoplayer.rtsp.RtspTrackTiming -> androidx.media3.exoplayer.rtsp.b0:
    long rtpTimestamp -> a
    int sequenceNumber -> b
    android.net.Uri uri -> c
    1:1:com.google.common.collect.ImmutableList parseTrackTiming(java.lang.String,android.net.Uri):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroid/net/Uri;)Ll2/v;"}
    1:1:android.net.Uri resolveUri(java.lang.String,android.net.Uri):0:0 -> b
androidx.media3.exoplayer.rtsp.SessionDescription -> androidx.media3.exoplayer.rtsp.c0:
    com.google.common.collect.ImmutableMap attributes -> a
    com.google.common.collect.ImmutableList mediaDescriptionList -> b
    java.lang.String sessionName -> c
    java.lang.String origin -> d
    java.lang.String timing -> e
    int bitrate -> f
    android.net.Uri uri -> g
    java.lang.String connection -> h
    java.lang.String key -> i
    java.lang.String emailAddress -> j
    java.lang.String phoneNumber -> k
    java.lang.String sessionInfo -> l
    1:1:void <init>(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)V"}
    2:2:void <init>(androidx.media3.exoplayer.rtsp.SessionDescription$Builder,androidx.media3.exoplayer.rtsp.SessionDescription$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;Landroidx/media3/exoplayer/rtsp/c0$a;)V"}
androidx.media3.exoplayer.rtsp.SessionDescription$1 -> androidx.media3.exoplayer.rtsp.c0$a:
androidx.media3.exoplayer.rtsp.SessionDescription$Builder -> androidx.media3.exoplayer.rtsp.c0$b:
    java.util.HashMap attributes -> a
    com.google.common.collect.ImmutableList$Builder mediaDescriptionListBuilder -> b
    int bitrate -> c
    java.lang.String sessionName -> d
    java.lang.String origin -> e
    java.lang.String timing -> f
    android.net.Uri uri -> g
    java.lang.String connection -> h
    java.lang.String key -> i
    java.lang.String sessionInfo -> j
    java.lang.String emailAddress -> k
    java.lang.String phoneNumber -> l
    1:1:java.util.HashMap access$100(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)Ljava/util/HashMap;"}
    1:1:java.lang.String access$1000(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)Ljava/lang/String;"}
    1:1:java.lang.String access$1100(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)Ljava/lang/String;"}
    1:1:java.lang.String access$1200(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)Ljava/lang/String;"}
    1:1:com.google.common.collect.ImmutableList$Builder access$200(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)Ll2/v$a;"}
    1:1:java.lang.String access$300(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)Ljava/lang/String;"}
    1:1:java.lang.String access$400(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)Ljava/lang/String;"}
    1:1:java.lang.String access$500(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)Ljava/lang/String;"}
    1:1:android.net.Uri access$600(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)Landroid/net/Uri;"}
    1:1:java.lang.String access$700(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)Ljava/lang/String;"}
    1:1:int access$800(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)I"}
    1:1:java.lang.String access$900(androidx.media3.exoplayer.rtsp.SessionDescription$Builder):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;)Ljava/lang/String;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder addAttribute(java.lang.String,java.lang.String):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/c0$b;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder addMediaDescription(androidx.media3.exoplayer.rtsp.MediaDescription):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/a;)Landroidx/media3/exoplayer/rtsp/c0$b;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription build():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/media3/exoplayer/rtsp/c0;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder setBitrate(int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/media3/exoplayer/rtsp/c0$b;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder setConnection(java.lang.String):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/c0$b;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder setEmailAddress(java.lang.String):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/c0$b;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder setKey(java.lang.String):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/c0$b;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder setOrigin(java.lang.String):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/c0$b;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder setPhoneNumber(java.lang.String):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/c0$b;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder setSessionInfo(java.lang.String):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/c0$b;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder setSessionName(java.lang.String):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/c0$b;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder setTiming(java.lang.String):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/c0$b;"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription$Builder setUri(android.net.Uri):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;)Landroidx/media3/exoplayer/rtsp/c0$b;"}
androidx.media3.exoplayer.rtsp.SessionDescriptionParser -> androidx.media3.exoplayer.rtsp.d0:
    java.util.regex.Pattern SDP_LINE_PATTERN -> a
    java.util.regex.Pattern SDP_LINE_WITH_EMPTY_VALUE_PATTERN -> b
    java.util.regex.Pattern ATTRIBUTE_PATTERN -> c
    java.util.regex.Pattern MEDIA_DESCRIPTION_PATTERN -> d
    1:1:void addMediaDescriptionToSession(androidx.media3.exoplayer.rtsp.SessionDescription$Builder,androidx.media3.exoplayer.rtsp.MediaDescription$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/c0$b;Landroidx/media3/exoplayer/rtsp/a$b;)V"}
    1:1:androidx.media3.exoplayer.rtsp.SessionDescription parse(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/c0;"}
    1:1:androidx.media3.exoplayer.rtsp.MediaDescription$Builder parseMediaDescriptionLine(java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Landroidx/media3/exoplayer/rtsp/a$b;"}
androidx.media3.exoplayer.rtsp.TransferRtpDataChannel -> androidx.media3.exoplayer.rtsp.e0:
    java.util.concurrent.LinkedBlockingQueue packetQueue -> e
    long pollTimeoutMs -> f
    byte[] unreadData -> g
    int channelNumber -> h
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:java.lang.String getTransport():0:0 -> e
    1:1:boolean needsClosingOnLoadCompletion():0:0 -> g
    1:1:void onInterleavedBinaryDataReceived(byte[]):0:0 -> h
    1:1:int getLocalPort():0:0 -> j
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
    1:1:androidx.media3.exoplayer.rtsp.RtspMessageChannel$InterleavedBinaryDataListener getInterleavedBinaryDataListener():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/media3/exoplayer/rtsp/s$b;"}
androidx.media3.exoplayer.rtsp.TransferRtpDataChannelFactory -> androidx.media3.exoplayer.rtsp.f0:
    long timeoutMs -> a
    1:1:androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory createFallbackDataChannelFactory():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/media3/exoplayer/rtsp/b$a;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpDataChannel createAndOpenDataChannel(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/media3/exoplayer/rtsp/b;"}
androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel -> androidx.media3.exoplayer.rtsp.g0:
    androidx.media3.datasource.UdpDataSource dataSource -> a
    androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel rtcpChannel -> b
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:java.lang.String getTransport():0:0 -> e
    1:1:boolean needsClosingOnLoadCompletion():0:0 -> g
    1:1:void setRtcpChannel(androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannel):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/g0;)V"}
    1:1:int getLocalPort():0:0 -> j
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
    1:1:androidx.media3.exoplayer.rtsp.RtspMessageChannel$InterleavedBinaryDataListener getInterleavedBinaryDataListener():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/media3/exoplayer/rtsp/s$b;"}
    1:1:void addTransferListener(androidx.media3.datasource.TransferListener):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:java.util.Map getResponseHeaders():0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.rtsp.UdpDataSourceRtpDataChannelFactory -> androidx.media3.exoplayer.rtsp.h0:
    long socketTimeoutMs -> a
    1:1:androidx.media3.exoplayer.rtsp.RtpDataChannel$Factory createFallbackDataChannelFactory():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/media3/exoplayer/rtsp/b$a;"}
    1:1:androidx.media3.exoplayer.rtsp.RtpDataChannel createAndOpenDataChannel(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroidx/media3/exoplayer/rtsp/b;"}
androidx.media3.exoplayer.rtsp.reader.DefaultRtpPayloadReaderFactory -> d0.a:
    void <init>() -> <init>
    1:1:androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader createPayloadReader(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)Ld0/k;"}
androidx.media3.exoplayer.rtsp.reader.RtpAacReader -> d0.b:
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> a
    androidx.media3.common.util.ParsableBitArray auHeaderScratchBit -> b
    int sampleRate -> c
    int auSizeFieldBitSize -> d
    int auIndexFieldBitSize -> e
    int numBitsInAuHeader -> f
    long firstReceivedTimestamp -> g
    androidx.media3.extractor.TrackOutput trackOutput -> h
    long startTimeOffsetUs -> i
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
    1:1:void outputSampleMetadata(androidx.media3.extractor.TrackOutput,long,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;JI)V"}
androidx.media3.exoplayer.rtsp.reader.RtpAc3Reader -> d0.c:
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> a
    androidx.media3.common.util.ParsableBitArray scratchBitBuffer -> b
    androidx.media3.extractor.TrackOutput trackOutput -> c
    int numBytesPendingMetadataOutput -> d
    long firstReceivedTimestamp -> e
    long sampleTimeUsOfFramePendingMetadataOutput -> f
    long startTimeOffsetUs -> g
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
    1:1:void maybeOutputSampleMetadata():0:0 -> e
    1:1:void outputSampleMetadataForFragmentedPackets():0:0 -> f
    1:1:void processFragmentedPacket(androidx.media3.common.util.ParsableByteArray,boolean,int,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;ZIJ)V"}
    1:1:void processMultiFramePacket(androidx.media3.common.util.ParsableByteArray,int,long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;IJ)V"}
    1:1:void processSingleFramePacket(androidx.media3.common.util.ParsableByteArray,long):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;J)V"}
androidx.media3.exoplayer.rtsp.reader.RtpAmrReader -> d0.d:
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> a
    boolean isWideBand -> b
    int sampleRate -> c
    androidx.media3.extractor.TrackOutput trackOutput -> d
    long firstReceivedTimestamp -> e
    long startTimeOffsetUs -> f
    int previousSequenceNumber -> g
    int[] AMR_NB_FRAME_TYPE_INDEX_TO_FRAME_SIZE -> h
    int[] AMR_WB_FRAME_TYPE_INDEX_TO_FRAME_SIZE -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
    1:1:int getFrameSize(int,boolean):0:0 -> e
androidx.media3.exoplayer.rtsp.reader.RtpH263Reader -> d0.e:
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> a
    androidx.media3.extractor.TrackOutput trackOutput -> b
    long firstReceivedTimestamp -> c
    int fragmentedSampleSizeBytes -> d
    int previousSequenceNumber -> e
    int width -> f
    int height -> g
    boolean isKeyFrame -> h
    boolean isOutputFormatSet -> i
    long startTimeOffsetUs -> j
    long fragmentedSampleTimeUs -> k
    boolean gotFirstPacketOfH263Frame -> l
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
    1:1:void outputSampleMetadataForFragmentedPackets():0:0 -> e
    1:1:void parseVopHeader(androidx.media3.common.util.ParsableByteArray,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Z)V"}
androidx.media3.exoplayer.rtsp.reader.RtpH264Reader -> d0.f:
    androidx.media3.common.util.ParsableByteArray fuScratchBuffer -> a
    androidx.media3.common.util.ParsableByteArray nalStartCodeArray -> b
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> c
    androidx.media3.extractor.TrackOutput trackOutput -> d
    int bufferFlags -> e
    long firstReceivedTimestamp -> f
    int previousSequenceNumber -> g
    int fragmentedSampleSizeBytes -> h
    long startTimeOffsetUs -> i
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
    1:1:int getBufferFlagsFromNalType(int):0:0 -> e
    1:1:void processFragmentationUnitPacket(androidx.media3.common.util.ParsableByteArray,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:void processSingleNalUnitPacket(androidx.media3.common.util.ParsableByteArray):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void processSingleTimeAggregationPacket(androidx.media3.common.util.ParsableByteArray):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:int writeStartCode():0:0 -> i
androidx.media3.exoplayer.rtsp.reader.RtpH265Reader -> d0.g:
    androidx.media3.common.util.ParsableByteArray fuScratchBuffer -> a
    androidx.media3.common.util.ParsableByteArray nalStartCodeArray -> b
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> c
    androidx.media3.extractor.TrackOutput trackOutput -> d
    int bufferFlags -> e
    long firstReceivedTimestamp -> f
    int previousSequenceNumber -> g
    int fragmentedSampleSizeBytes -> h
    long startTimeOffsetUs -> i
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
    1:1:int getBufferFlagsFromNalType(int):0:0 -> e
    1:1:void processFragmentationUnitPacket(androidx.media3.common.util.ParsableByteArray,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:void processSingleNalUnitPacket(androidx.media3.common.util.ParsableByteArray):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:int writeStartCode():0:0 -> h
androidx.media3.exoplayer.rtsp.reader.RtpMp4aReader -> d0.h:
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> a
    int numberOfSubframes -> b
    androidx.media3.extractor.TrackOutput trackOutput -> c
    long firstReceivedTimestamp -> d
    int previousSequenceNumber -> e
    int fragmentedSampleSizeBytes -> f
    long startTimeOffsetUs -> g
    long fragmentedSampleTimeUs -> h
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
    1:1:int getNumOfSubframesFromMpeg4AudioConfig(com.google.common.collect.ImmutableMap):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/x;)I"}
    1:1:void outputSampleMetadataForFragmentedPackets():0:0 -> f
androidx.media3.exoplayer.rtsp.reader.RtpMpeg4Reader -> d0.i:
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> a
    androidx.media3.extractor.TrackOutput trackOutput -> b
    int bufferFlags -> c
    long firstReceivedTimestamp -> d
    int previousSequenceNumber -> e
    long startTimeOffsetUs -> f
    int sampleLength -> g
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
    1:1:int getBufferFlagsFromVop(androidx.media3.common.util.ParsableByteArray):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)I"}
androidx.media3.exoplayer.rtsp.reader.RtpOpusReader -> d0.j:
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> a
    androidx.media3.extractor.TrackOutput trackOutput -> b
    long firstReceivedTimestamp -> c
    long startTimeOffsetUs -> d
    int previousSequenceNumber -> e
    boolean foundOpusIDHeader -> f
    boolean foundOpusCommentHeader -> g
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
    1:1:void validateOpusIdHeader(androidx.media3.common.util.ParsableByteArray):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.exoplayer.rtsp.reader.RtpPayloadReader -> d0.k:
    void seek(long,long) -> a
    void onReceivingFirstPacket(long,int) -> b
    void createTracks(androidx.media3.extractor.ExtractorOutput,int) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
androidx.media3.exoplayer.rtsp.reader.RtpPcmReader -> d0.l:
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> a
    androidx.media3.extractor.TrackOutput trackOutput -> b
    long firstReceivedTimestamp -> c
    long startTimeOffsetUs -> d
    int previousSequenceNumber -> e
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
androidx.media3.exoplayer.rtsp.reader.RtpReaderUtils -> d0.m:
    1:1:long toSampleTimeUs(long,long,long,int):0:0 -> a
androidx.media3.exoplayer.rtsp.reader.RtpVp8Reader -> d0.n:
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> a
    androidx.media3.extractor.TrackOutput trackOutput -> b
    long firstReceivedTimestamp -> c
    int previousSequenceNumber -> d
    int fragmentedSampleSizeBytes -> e
    long fragmentedSampleTimeUs -> f
    long startTimeOffsetUs -> g
    boolean gotFirstPacketOfVp8Frame -> h
    boolean isKeyFrame -> i
    boolean isOutputFormatSet -> j
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
    1:1:void outputSampleMetadataForFragmentedPackets():0:0 -> e
    1:1:boolean validateVp8Descriptor(androidx.media3.common.util.ParsableByteArray,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Z"}
androidx.media3.exoplayer.rtsp.reader.RtpVp9Reader -> d0.o:
    androidx.media3.exoplayer.rtsp.RtpPayloadFormat payloadFormat -> a
    androidx.media3.extractor.TrackOutput trackOutput -> b
    long firstReceivedTimestamp -> c
    long startTimeOffsetUs -> d
    int previousSequenceNumber -> e
    int fragmentedSampleSizeBytes -> f
    long fragmentedSampleTimeUs -> g
    int width -> h
    int height -> i
    boolean gotFirstPacketOfVp9Frame -> j
    boolean reportedOutputFormat -> k
    boolean isKeyFrame -> l
    1:1:void <init>(androidx.media3.exoplayer.rtsp.RtpPayloadFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/rtsp/h;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void onReceivingFirstPacket(long,int):0:0 -> b
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,long,int,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JIZ)V"}
    1:1:void outputSampleMetadataForFragmentedPackets():0:0 -> e
    1:1:boolean validateVp9Descriptor(androidx.media3.common.util.ParsableByteArray,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Z"}
androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource -> androidx.media3.exoplayer.smoothstreaming.a:
    androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower -> a
    int streamElementIndex -> b
    androidx.media3.exoplayer.source.chunk.ChunkExtractor[] chunkExtractors -> c
    androidx.media3.datasource.DataSource dataSource -> d
    androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection -> e
    androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest -> f
    int currentManifestChunkOffset -> g
    java.io.IOException fatalError -> h
    long lastChunkRequestRealtimeMs -> i
    1:1:void <init>(androidx.media3.exoplayer.upstream.LoaderErrorThrower,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,int,androidx.media3.exoplayer.trackselection.ExoTrackSelection,androidx.media3.datasource.DataSource,androidx.media3.exoplayer.upstream.CmcdConfiguration,androidx.media3.extractor.text.SubtitleParser$Factory,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/o;Lf0/a;ILj0/y;Lo/g;Lk0/f;Ll1/t$a;Z)V"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:void updateTrackSelection(androidx.media3.exoplayer.trackselection.ExoTrackSelection):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;)V"}
    1:1:boolean onChunkLoadError(androidx.media3.exoplayer.source.chunk.Chunk,boolean,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;ZLk0/m$c;Lk0/m;)Z"}
    1:1:void onChunkLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;)V"}
    1:1:void maybeThrowError():0:0 -> f
    1:1:void updateManifest(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;)V"}
    1:1:int getPreferredQueueSize(long,java.util.List):0:0 -> h
    1:1:void getNextChunk(androidx.media3.exoplayer.LoadingInfo,long,java.util.List,androidx.media3.exoplayer.source.chunk.ChunkHolder):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;JLjava/util/List;Lh0/g;)V"}
    1:1:boolean shouldCancelLoad(long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLh0/e;Ljava/util/List;)Z"}
    1:1:androidx.media3.exoplayer.source.chunk.MediaChunk newMediaChunk(androidx.media3.common.Format,androidx.media3.datasource.DataSource,android.net.Uri,int,long,long,long,int,java.lang.Object,androidx.media3.exoplayer.source.chunk.ChunkExtractor,androidx.media3.exoplayer.upstream.CmcdData$Factory):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lo/g;Landroid/net/Uri;IJJJILjava/lang/Object;Lh0/f;Lk0/g$a;)Lh0/m;"}
    1:1:long resolveTimeToLiveEdgeUs(long):0:0 -> l
androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory -> androidx.media3.exoplayer.smoothstreaming.a$a:
    androidx.media3.datasource.DataSource$Factory dataSourceFactory -> a
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> b
    boolean parseSubtitlesDuringExtraction -> c
    1:1:void <init>(androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;)V"}
    1:1:androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Landroidx/media3/exoplayer/smoothstreaming/b$a;"}
    1:1:androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroidx/media3/exoplayer/smoothstreaming/b$a;"}
    1:1:androidx.media3.common.Format getOutputTextFormat(androidx.media3.common.Format):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
    1:1:androidx.media3.exoplayer.smoothstreaming.SsChunkSource createChunkSource(androidx.media3.exoplayer.upstream.LoaderErrorThrower,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,int,androidx.media3.exoplayer.trackselection.ExoTrackSelection,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.upstream.CmcdConfiguration):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/o;Lf0/a;ILj0/y;Lo/y;Lk0/f;)Landroidx/media3/exoplayer/smoothstreaming/b;"}
    1:1:androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroidx/media3/exoplayer/smoothstreaming/a$a;"}
    1:1:androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Landroidx/media3/exoplayer/smoothstreaming/a$a;"}
androidx.media3.exoplayer.smoothstreaming.DefaultSsChunkSource$StreamElementIterator -> androidx.media3.exoplayer.smoothstreaming.a$b:
    androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement streamElement -> e
    int trackIndex -> f
    1:1:void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a$b;II)V"}
    1:1:long getChunkEndTimeUs():0:0 -> a
    1:1:long getChunkStartTimeUs():0:0 -> b
androidx.media3.exoplayer.smoothstreaming.SsChunkSource -> androidx.media3.exoplayer.smoothstreaming.b:
    void updateTrackSelection(androidx.media3.exoplayer.trackselection.ExoTrackSelection) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;)V"}
    void updateManifest(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;)V"}
androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory -> androidx.media3.exoplayer.smoothstreaming.b$a:
    androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Landroidx/media3/exoplayer/smoothstreaming/b$a;"}
    androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory experimentalParseSubtitlesDuringExtraction(boolean) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Landroidx/media3/exoplayer/smoothstreaming/b$a;"}
    androidx.media3.common.Format getOutputTextFormat(androidx.media3.common.Format) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
    androidx.media3.exoplayer.smoothstreaming.SsChunkSource createChunkSource(androidx.media3.exoplayer.upstream.LoaderErrorThrower,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,int,androidx.media3.exoplayer.trackselection.ExoTrackSelection,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.upstream.CmcdConfiguration) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/o;Lf0/a;ILj0/y;Lo/y;Lk0/f;)Landroidx/media3/exoplayer/smoothstreaming/b;"}
androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod -> androidx.media3.exoplayer.smoothstreaming.d:
    androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory chunkSourceFactory -> f
    androidx.media3.datasource.TransferListener transferListener -> g
    androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower -> h
    androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager -> i
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher -> j
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> k
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher -> l
    androidx.media3.exoplayer.upstream.Allocator allocator -> m
    androidx.media3.exoplayer.source.TrackGroupArray trackGroups -> n
    androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory -> o
    androidx.media3.exoplayer.source.MediaPeriod$Callback callback -> p
    androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest -> q
    androidx.media3.exoplayer.source.chunk.ChunkSampleStream[] sampleStreams -> r
    androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader -> s
    1:1:void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.upstream.CmcdConfiguration,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.LoaderErrorThrower,androidx.media3.exoplayer.upstream.Allocator):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;Landroidx/media3/exoplayer/smoothstreaming/b$a;Lo/y;Lg0/j;Lk0/f;Lv/x;Lv/v$a;Lk0/m;Lg0/m0$a;Lk0/o;Lk0/b;)V"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c1;)V"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:java.util.List $r8$lambda$UQ0bkoN_F4MTfpCcyQbMmpC8q3c(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)Ljava/util/List;"}
    1:1:void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    1:1:androidx.media3.exoplayer.source.chunk.ChunkSampleStream buildSampleStream(androidx.media3.exoplayer.trackselection.ExoTrackSelection,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;J)Lh0/h;"}
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:long seekToUs(long):0:0 -> r
    1:1:androidx.media3.exoplayer.source.TrackGroupArray buildTrackGroups(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;Lv/x;Landroidx/media3/exoplayer/smoothstreaming/b$a;)Lg0/l1;"}
    1:1:java.util.List lambda$selectTracks$0(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)Ljava/util/List;"}
    1:1:androidx.media3.exoplayer.source.chunk.ChunkSampleStream[] newSampleStreamArray(int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lh0/h;"}
    1:1:long readDiscontinuity():0:0 -> v
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)V"}
    1:1:void release():0:0 -> x
    1:1:void updateManifest(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/a;)V"}
androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod$$ExternalSyntheticLambda0 -> androidx.media3.exoplayer.smoothstreaming.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod$$InternalSyntheticLambda$9$4d0b6ff1131d654a4682151469f6f305e2dd8daddade7ae6fb055b22120b5f92$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.smoothstreaming.SsMediaPeriod$$InternalSyntheticLambda$9$4d0b6ff1131d654a4682151469f6f305e2dd8daddade7ae6fb055b22120b5f92$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.smoothstreaming.SsMediaSource -> androidx.media3.exoplayer.smoothstreaming.SsMediaSource:
    androidx.media3.datasource.TransferListener mediaTransferListener -> A
    long manifestLoadStartTimestamp -> B
    androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest manifest -> C
    android.os.Handler manifestRefreshHandler -> D
    androidx.media3.common.MediaItem mediaItem -> E
    boolean sideloadedManifest -> m
    android.net.Uri manifestUri -> n
    androidx.media3.datasource.DataSource$Factory manifestDataSourceFactory -> o
    androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory chunkSourceFactory -> p
    androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory -> q
    androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager -> r
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> s
    long livePresentationDelayMs -> t
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher manifestEventDispatcher -> u
    androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser -> v
    java.util.ArrayList mediaPeriods -> w
    androidx.media3.datasource.DataSource manifestDataSource -> x
    androidx.media3.exoplayer.upstream.Loader manifestLoader -> y
    androidx.media3.exoplayer.upstream.LoaderErrorThrower manifestLoaderErrorThrower -> z
    1:1:void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.upstream.CmcdConfiguration,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Lf0/a;Lo/g$a;Lk0/p$a;Landroidx/media3/exoplayer/smoothstreaming/b$a;Lg0/j;Lk0/f;Lv/x;Lk0/m;J)V"}
    2:2:void <init>(androidx.media3.common.MediaItem,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest,androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser,androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.upstream.CmcdConfiguration,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,long,androidx.media3.exoplayer.smoothstreaming.SsMediaSource$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Lf0/a;Lo/g$a;Lk0/p$a;Landroidx/media3/exoplayer/smoothstreaming/b$a;Lg0/j;Lk0/f;Lv/x;Lk0/m;JLandroidx/media3/exoplayer/smoothstreaming/SsMediaSource$a;)V"}
    1:1:void prepareSourceInternal(androidx.media3.datasource.TransferListener):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:void releaseSourceInternal():0:0 -> E
    1:1:void $r8$lambda$W1eUszxthPIjGJ9Snc-jdv_b04Q(androidx.media3.exoplayer.smoothstreaming.SsMediaSource):0:0 -> F
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,boolean):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJZ)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.ParsingLoadable,long,long,java.io.IOException,int):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/p;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void processManifest():0:0 -> J
    1:1:void scheduleManifestRefresh():0:0 -> K
    1:1:void startLoadingManifest():0:0 -> L
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:void updateMediaItem(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    1:1:void maybeThrowSourceInfoRefreshError():0:0 -> h
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
androidx.media3.exoplayer.smoothstreaming.SsMediaSource$$ExternalSyntheticLambda0 -> e0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.smoothstreaming.SsMediaSource androidx.media3.exoplayer.smoothstreaming.SsMediaSource$$InternalSyntheticLambda$9$de67945c347070b440d3daed481327b77416f8e8c7e2f0fcc7169313987b5a41$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.smoothstreaming.SsMediaSource$$InternalSyntheticLambda$9$de67945c347070b440d3daed481327b77416f8e8c7e2f0fcc7169313987b5a41$0.<init>(androidx.media3.exoplayer.smoothstreaming.SsMediaSource):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.smoothstreaming.SsMediaSource$$InternalSyntheticLambda$9$de67945c347070b440d3daed481327b77416f8e8c7e2f0fcc7169313987b5a41$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.smoothstreaming.SsMediaSource$1 -> androidx.media3.exoplayer.smoothstreaming.SsMediaSource$a:
androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory -> androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory:
    androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory chunkSourceFactory -> a
    androidx.media3.datasource.DataSource$Factory manifestDataSourceFactory -> b
    androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory -> c
    androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider -> d
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> e
    long livePresentationDelayMs -> f
    androidx.media3.exoplayer.upstream.ParsingLoadable$Parser manifestParser -> g
    1:1:void <init>(androidx.media3.exoplayer.smoothstreaming.SsChunkSource$Factory,androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/media3/exoplayer/smoothstreaming/b$a;Lo/g$a;)V"}
    2:2:void <init>(androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lg0/f0;"}
    1:1:androidx.media3.exoplayer.smoothstreaming.SsMediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Landroidx/media3/exoplayer/smoothstreaming/SsMediaSource;"}
    1:1:androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> g
    1:1:androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Landroidx/media3/exoplayer/smoothstreaming/SsMediaSource$Factory;"}
    1:1:androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Landroidx/media3/exoplayer/smoothstreaming/SsMediaSource$Factory;"}
    1:1:androidx.media3.exoplayer.smoothstreaming.SsMediaSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Landroidx/media3/exoplayer/smoothstreaming/SsMediaSource$Factory;"}
androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest -> f0.a:
    int majorVersion -> a
    int minorVersion -> b
    int lookAheadCount -> c
    boolean isLive -> d
    androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement protectionElement -> e
    androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[] streamElements -> f
    long durationUs -> g
    long dvrWindowLengthUs -> h
    1:1:void <init>(int,int,long,long,int,boolean,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIJJIZLf0/a$a;[Lf0/a$b;)V"}
    2:2:void <init>(int,int,long,long,long,int,boolean,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement,androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIJJJIZLf0/a$a;[Lf0/a$b;)V"}
    1:1:java.lang.Object copy(java.util.List):0:0 -> a
    1:1:androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest copy(java.util.List):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lf0/a;"}
androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement -> f0.a$a:
    java.util.UUID uuid -> a
    byte[] data -> b
    androidx.media3.extractor.mp4.TrackEncryptionBox[] trackEncryptionBoxes -> c
    1:1:void <init>(java.util.UUID,byte[],androidx.media3.extractor.mp4.TrackEncryptionBox[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/UUID;[B[Li1/t;)V"}
androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement -> f0.a$b:
    int type -> a
    java.lang.String subType -> b
    long timescale -> c
    java.lang.String name -> d
    int maxWidth -> e
    int maxHeight -> f
    int displayWidth -> g
    int displayHeight -> h
    java.lang.String language -> i
    androidx.media3.common.Format[] formats -> j
    int chunkCount -> k
    java.lang.String baseUri -> l
    java.lang.String chunkTemplate -> m
    java.util.List chunkStartTimes -> n
    long[] chunkStartTimesUs -> o
    long lastChunkDurationUs -> p
    1:1:void <init>(java.lang.String,java.lang.String,int,java.lang.String,long,java.lang.String,int,int,int,int,java.lang.String,androidx.media3.common.Format[],java.util.List,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;JLjava/lang/String;IIIILjava/lang/String;[Lj/q;Ljava/util/List;J)V"}
    2:2:void <init>(java.lang.String,java.lang.String,int,java.lang.String,long,java.lang.String,int,int,int,int,java.lang.String,androidx.media3.common.Format[],java.util.List,long[],long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;JLjava/lang/String;IIIILjava/lang/String;[Lj/q;Ljava/util/List;[JJ)V"}
    1:1:android.net.Uri buildRequestUri(int,int):0:0 -> a
    1:1:androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$StreamElement copy(androidx.media3.common.Format[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/q;)Lf0/a$b;"}
    1:1:long getChunkDurationUs(int):0:0 -> c
    1:1:int getChunkIndex(long):0:0 -> d
    1:1:long getStartTimeUs(int):0:0 -> e
androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser -> f0.b:
    org.xmlpull.v1.XmlPullParserFactory xmlParserFactory -> a
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object parse(android.net.Uri,java.io.InputStream):0:0 -> a
    1:1:androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest parse(android.net.Uri,java.io.InputStream):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/io/InputStream;)Lf0/a;"}
androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser -> f0.b$a:
    java.lang.String baseUri -> a
    java.lang.String tag -> b
    androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser parent -> c
    java.util.List normalizedAttributes -> d
    1:1:void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/b$a;Ljava/lang/String;Ljava/lang/String;)V"}
    1:1:void addChild(java.lang.Object):0:0 -> a
    java.lang.Object build() -> b
    1:1:java.lang.Object getNormalizedAttribute(java.lang.String):0:0 -> c
    1:1:boolean handleChildInline(java.lang.String):0:0 -> d
    1:1:androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser newChildParser(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String,java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/b$a;Ljava/lang/String;Ljava/lang/String;)Lf0/b$a;"}
    1:1:java.lang.Object parse(org.xmlpull.v1.XmlPullParser):0:0 -> f
    1:1:boolean parseBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean):0:0 -> g
    1:1:void parseEndTag(org.xmlpull.v1.XmlPullParser):0:0 -> h
    1:1:int parseInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int):0:0 -> i
    1:1:long parseLong(org.xmlpull.v1.XmlPullParser,java.lang.String,long):0:0 -> j
    1:1:int parseRequiredInt(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> k
    1:1:long parseRequiredLong(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> l
    1:1:java.lang.String parseRequiredString(org.xmlpull.v1.XmlPullParser,java.lang.String):0:0 -> m
    void parseStartTag(org.xmlpull.v1.XmlPullParser) -> n
    1:1:void parseText(org.xmlpull.v1.XmlPullParser):0:0 -> o
    1:1:void putNormalizedAttribute(java.lang.String,java.lang.Object):0:0 -> p
androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$MissingFieldException -> f0.b$b:
    1:1:void <init>(java.lang.String):0:0 -> <init>
androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ProtectionParser -> f0.b$c:
    boolean inProtectionHeader -> e
    java.util.UUID uuid -> f
    byte[] initData -> g
    1:1:void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/b$a;Ljava/lang/String;)V"}
    1:1:java.lang.Object build():0:0 -> b
    1:1:boolean handleChildInline(java.lang.String):0:0 -> d
    1:1:void parseEndTag(org.xmlpull.v1.XmlPullParser):0:0 -> h
    1:1:void parseStartTag(org.xmlpull.v1.XmlPullParser):0:0 -> n
    1:1:void parseText(org.xmlpull.v1.XmlPullParser):0:0 -> o
    1:1:androidx.media3.extractor.mp4.TrackEncryptionBox[] buildTrackEncryptionBoxes(byte[]):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)[Li1/t;"}
    1:1:byte[] getProtectionElementKeyId(byte[]):0:0 -> r
    1:1:java.lang.String stripCurlyBraces(java.lang.String):0:0 -> s
    1:1:void swap(byte[],int,int):0:0 -> t
androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$QualityLevelParser -> f0.b$d:
    androidx.media3.common.Format format -> e
    1:1:void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/b$a;Ljava/lang/String;)V"}
    1:1:java.lang.Object build():0:0 -> b
    1:1:void parseStartTag(org.xmlpull.v1.XmlPullParser):0:0 -> n
    1:1:java.util.List buildCodecSpecificData(java.lang.String):0:0 -> q
    1:1:java.lang.String fourCCToMimeType(java.lang.String):0:0 -> r
androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$SmoothStreamingMediaParser -> f0.b$e:
    java.util.List streamElements -> e
    int majorVersion -> f
    int minorVersion -> g
    long timescale -> h
    long duration -> i
    long dvrWindowLength -> j
    int lookAheadCount -> k
    boolean isLive -> l
    androidx.media3.exoplayer.smoothstreaming.manifest.SsManifest$ProtectionElement protectionElement -> m
    1:1:void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/b$a;Ljava/lang/String;)V"}
    1:1:void addChild(java.lang.Object):0:0 -> a
    1:1:java.lang.Object build():0:0 -> b
    1:1:void parseStartTag(org.xmlpull.v1.XmlPullParser):0:0 -> n
androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$StreamIndexParser -> f0.b$f:
    java.lang.String baseUri -> e
    java.util.List formats -> f
    int type -> g
    java.lang.String subType -> h
    long timescale -> i
    java.lang.String name -> j
    java.lang.String url -> k
    int maxWidth -> l
    int maxHeight -> m
    int displayWidth -> n
    int displayHeight -> o
    java.lang.String language -> p
    java.util.ArrayList startTimes -> q
    long lastChunkDuration -> r
    1:1:void <init>(androidx.media3.exoplayer.smoothstreaming.manifest.SsManifestParser$ElementParser,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf0/b$a;Ljava/lang/String;)V"}
    1:1:void addChild(java.lang.Object):0:0 -> a
    1:1:java.lang.Object build():0:0 -> b
    1:1:boolean handleChildInline(java.lang.String):0:0 -> d
    1:1:void parseStartTag(org.xmlpull.v1.XmlPullParser):0:0 -> n
    1:1:void parseStreamElementStartTag(org.xmlpull.v1.XmlPullParser):0:0 -> q
    1:1:void parseStreamFragmentStartTag(org.xmlpull.v1.XmlPullParser):0:0 -> r
    1:1:int parseType(org.xmlpull.v1.XmlPullParser):0:0 -> s
androidx.media3.exoplayer.source.BaseMediaSource -> g0.a:
    java.util.ArrayList mediaSourceCallers -> f
    java.util.HashSet enabledMediaSourceCallers -> g
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher -> h
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher -> i
    android.os.Looper looper -> j
    androidx.media3.common.Timeline timeline -> k
    androidx.media3.exoplayer.analytics.PlayerId playerId -> l
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.exoplayer.analytics.PlayerId getPlayerId():0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr/w3;"}
    1:1:boolean isEnabled():0:0 -> B
    void prepareSourceInternal(androidx.media3.datasource.TransferListener) -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:void refreshSourceInfo(androidx.media3.common.Timeline):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
    void releaseSourceInternal() -> E
    1:1:void prepareSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$c;Lo/y;Lr/w3;)V"}
    1:1:void removeDrmEventListener(androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v;)V"}
    1:1:void releaseSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$c;)V"}
    1:1:void updateMediaItem(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:void addEventListener(android.os.Handler,androidx.media3.exoplayer.source.MediaSourceEventListener):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lg0/m0;)V"}
    1:1:void removeEventListener(androidx.media3.exoplayer.source.MediaSourceEventListener):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0;)V"}
    1:1:boolean isSingleWindow():0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void disable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$c;)V"}
    1:1:androidx.media3.common.Timeline getInitialTimeline():0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
    1:1:void enable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$c;)V"}
    1:1:void addDrmEventListener(android.os.Handler,androidx.media3.exoplayer.drm.DrmSessionEventListener):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lv/v;)V"}
    1:1:androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher createDrmEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)Lv/v$a;"}
    1:1:androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher createDrmEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;)Lv/v$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)Lg0/m0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;)Lg0/m0$a;"}
    1:1:void disableInternal():0:0 -> y
    1:1:void enableInternal():0:0 -> z
androidx.media3.exoplayer.source.BehindLiveWindowException -> g0.b:
    void <init>() -> <init>
androidx.media3.exoplayer.source.BundledExtractorsAdapter -> g0.d:
    androidx.media3.extractor.ExtractorsFactory extractorsFactory -> a
    androidx.media3.extractor.Extractor extractor -> b
    androidx.media3.extractor.ExtractorInput extractorInput -> c
    1:1:void <init>(androidx.media3.extractor.ExtractorsFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/x;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void init(androidx.media3.common.DataReader,android.net.Uri,java.util.Map,long,long,androidx.media3.extractor.ExtractorOutput):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;Landroid/net/Uri;Ljava/util/Map;JJLo0/t;)V"}
    1:1:int read(androidx.media3.extractor.PositionHolder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/l0;)I"}
    1:1:long getCurrentInputPosition():0:0 -> d
    1:1:void disableSeekingOnMp3Streams():0:0 -> e
    1:1:java.lang.String $r8$lambda$fLRjjLBqNQE6OEmPal2H1TlDnTQ(androidx.media3.extractor.Extractor):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/r;)Ljava/lang/String;"}
    1:1:java.lang.String lambda$init$0(androidx.media3.extractor.Extractor):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/r;)Ljava/lang/String;"}
    1:1:void release():0:0 -> release
androidx.media3.exoplayer.source.BundledExtractorsAdapter$$ExternalSyntheticLambda0 -> g0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.source.BundledExtractorsAdapter$$InternalSyntheticLambda$9$ec83cd0c8d3375d8fb5a75210062f9d09556f02527a15eb98a9e66df3c094ebb$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.source.BundledExtractorsAdapter$$InternalSyntheticLambda$9$ec83cd0c8d3375d8fb5a75210062f9d09556f02527a15eb98a9e66df3c094ebb$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.ClippingMediaPeriod -> g0.e:
    androidx.media3.exoplayer.source.MediaPeriod mediaPeriod -> f
    androidx.media3.exoplayer.source.MediaPeriod$Callback callback -> g
    androidx.media3.exoplayer.source.ClippingMediaPeriod$ClippingSampleStream[] sampleStreams -> h
    long pendingInitialDiscontinuityPositionUs -> i
    long startUs -> j
    long endUs -> k
    androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException clippingError -> l
    1:1:void <init>(androidx.media3.exoplayer.source.MediaPeriod,boolean,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;ZJJ)V"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:void onPrepared(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c1;)V"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:androidx.media3.exoplayer.SeekParameters clipSeekParameters(long,androidx.media3.exoplayer.SeekParameters):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)Lq/c3;"}
    1:1:void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    1:1:boolean isPendingInitialDiscontinuity():0:0 -> o
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:long seekToUs(long):0:0 -> r
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void setClippingError(androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f$b;)V"}
    1:1:boolean shouldKeepInitialDiscontinuity(long,androidx.media3.exoplayer.trackselection.ExoTrackSelection[]):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J[Lj0/y;)Z"}
    1:1:long readDiscontinuity():0:0 -> v
    1:1:void updateClipping(long,long):0:0 -> w
androidx.media3.exoplayer.source.ClippingMediaPeriod$ClippingSampleStream -> g0.e$a:
    androidx.media3.exoplayer.source.SampleStream childStream -> f
    boolean sentEos -> g
    androidx.media3.exoplayer.source.ClippingMediaPeriod this$0 -> h
    1:1:void <init>(androidx.media3.exoplayer.source.ClippingMediaPeriod,androidx.media3.exoplayer.source.SampleStream):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/e;Lg0/b1;)V"}
    1:1:void clearSentEos():0:0 -> a
    1:1:boolean isReady():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:int skipData(long):0:0 -> t
    1:1:int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
androidx.media3.exoplayer.source.ClippingMediaSource -> g0.f:
    long periodStartUs -> A
    long periodEndUs -> B
    long startUs -> r
    long endUs -> s
    boolean enableInitialDiscontinuity -> t
    boolean allowDynamicClippingUpdates -> u
    boolean relativeToDefaultPosition -> v
    java.util.ArrayList mediaPeriods -> w
    androidx.media3.common.Timeline$Window window -> x
    androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline clippingTimeline -> y
    androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException clippingError -> z
    1:1:void <init>(androidx.media3.exoplayer.source.MediaSource,long,long,boolean,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;JJZZZ)V"}
    1:1:void releaseSourceInternal():0:0 -> E
    1:1:void onChildSourceInfoRefreshed(androidx.media3.common.Timeline):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
    1:1:void refreshClippedTimeline(androidx.media3.common.Timeline):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    1:1:void maybeThrowSourceInfoRefreshError():0:0 -> h
    1:1:void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
androidx.media3.exoplayer.source.ClippingMediaSource$ClippingTimeline -> g0.f$a:
    long startUs -> f
    long endUs -> g
    long durationUs -> h
    boolean isDynamic -> i
    1:1:void <init>(androidx.media3.common.Timeline,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;JJ)V"}
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
androidx.media3.exoplayer.source.ClippingMediaSource$IllegalClippingException -> g0.f$b:
    int reason -> f
    1:1:void <init>(int):0:0 -> <init>
    1:1:java.lang.String getReasonDescription(int):0:0 -> a
androidx.media3.exoplayer.source.CompositeMediaSource -> g0.h:
    java.util.HashMap childSources -> m
    android.os.Handler eventHandler -> n
    androidx.media3.datasource.TransferListener mediaTransferListener -> o
    1:1:void <init>():0:0 -> <init>
    1:1:void prepareSourceInternal(androidx.media3.datasource.TransferListener):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:void releaseSourceInternal():0:0 -> E
    1:1:void $r8$lambda$nBeObOK-BbGEVOx72vVSHx3OSCA(androidx.media3.exoplayer.source.CompositeMediaSource,java.lang.Object,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline):0:0 -> F
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/h;Ljava/lang/Object;Lg0/f0;Lj/i0;)V"}
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Object,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lg0/f0$b;)Lg0/f0$b;"}
    1:1:long getMediaTimeForChildMediaTime(java.lang.Object,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;JLg0/f0$b;)J"}
    1:1:int getWindowIndexForChildWindowIndex(java.lang.Object,int):0:0 -> I
    1:1:void lambda$prepareChildSource$0(java.lang.Object,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lg0/f0;Lj/i0;)V"}
    void onChildSourceInfoRefreshed(java.lang.Object,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline) -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lg0/f0;Lj/i0;)V"}
    1:1:void prepareChildSource(java.lang.Object,androidx.media3.exoplayer.source.MediaSource):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lg0/f0;)V"}
    1:1:void maybeThrowSourceInfoRefreshError():0:0 -> h
    1:1:void disableInternal():0:0 -> y
    1:1:void enableInternal():0:0 -> z
androidx.media3.exoplayer.source.CompositeMediaSource$$ExternalSyntheticLambda0 -> g0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.CompositeMediaSource androidx.media3.exoplayer.source.CompositeMediaSource$$InternalSyntheticLambda$9$d2e07a7bd726aeaf3f05ca62c7cd53a5b485f46b7305109b1328ed36738b81be$0.f$0 -> a
    java.lang.Object androidx.media3.exoplayer.source.CompositeMediaSource$$InternalSyntheticLambda$9$d2e07a7bd726aeaf3f05ca62c7cd53a5b485f46b7305109b1328ed36738b81be$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.source.CompositeMediaSource$$InternalSyntheticLambda$9$d2e07a7bd726aeaf3f05ca62c7cd53a5b485f46b7305109b1328ed36738b81be$0.<init>(androidx.media3.exoplayer.source.CompositeMediaSource,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/h;Ljava/lang/Object;)V"}
    1:1:void androidx.media3.exoplayer.source.CompositeMediaSource$$InternalSyntheticLambda$9$d2e07a7bd726aeaf3f05ca62c7cd53a5b485f46b7305109b1328ed36738b81be$0.onSourceInfoRefreshed(androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;Lj/i0;)V"}
androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener -> g0.h$a:
    java.lang.Object id -> a
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher -> b
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher -> c
    androidx.media3.exoplayer.source.CompositeMediaSource this$0 -> d
    1:1:void <init>(androidx.media3.exoplayer.source.CompositeMediaSource,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/h;Ljava/lang/Object;)V"}
    1:1:void onLoadStarted(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
    1:1:void onUpstreamDiscarded(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/b0;)V"}
    1:1:void onDownstreamFormatChanged(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/b0;)V"}
    1:1:void onDrmKeysLoaded(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void onDrmSessionReleased(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void onDrmSessionManagerError(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,java.lang.Exception):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Ljava/lang/Exception;)V"}
    1:1:void onDrmKeysRemoved(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void onLoadCompleted(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
    1:1:boolean maybeUpdateEventDispatcher(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)Z"}
    1:1:androidx.media3.exoplayer.source.MediaLoadData maybeUpdateMediaLoadData(androidx.media3.exoplayer.source.MediaLoadData,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/b0;Lg0/f0$b;)Lg0/b0;"}
    1:1:void onDrmKeysRestored(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> g0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void onLoadError(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    1:1:void onDrmSessionAcquired(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> i0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)V"}
    1:1:void onLoadCanceled(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
    1:1:void onDrmSessionAcquired(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,int):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;I)V"}
androidx.media3.exoplayer.source.CompositeMediaSource$MediaSourceAndListener -> g0.h$b:
    androidx.media3.exoplayer.source.MediaSource mediaSource -> a
    androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller caller -> b
    androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener eventListener -> c
    1:1:void <init>(androidx.media3.exoplayer.source.MediaSource,androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller,androidx.media3.exoplayer.source.CompositeMediaSource$ForwardingEventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;Lg0/f0$c;Lg0/h$a;)V"}
androidx.media3.exoplayer.source.CompositeSequenceableLoader -> g0.i:
    com.google.common.collect.ImmutableList loadersWithTrackTypes -> f
    long lastAudioVideoBufferedPositionUs -> g
    1:1:void <init>(java.util.List,java.util.List):0:0 -> <init>
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
androidx.media3.exoplayer.source.CompositeSequenceableLoader$SequenceableLoaderWithTrackTypes -> g0.i$a:
    androidx.media3.exoplayer.source.SequenceableLoader loader -> f
    com.google.common.collect.ImmutableList trackTypes -> g
    1:1:void <init>(androidx.media3.exoplayer.source.SequenceableLoader,java.util.List):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c1;Ljava/util/List;)V"}
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:com.google.common.collect.ImmutableList getTrackTypes():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory -> g0.j:
    androidx.media3.exoplayer.source.SequenceableLoader empty() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/c1;"}
    androidx.media3.exoplayer.source.SequenceableLoader create(java.util.List,java.util.List) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ljava/util/List;)Lg0/c1;"}
androidx.media3.exoplayer.source.DefaultCompositeSequenceableLoaderFactory -> g0.k:
    void <init>() -> <init>
    1:1:androidx.media3.exoplayer.source.SequenceableLoader empty():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/c1;"}
    1:1:androidx.media3.exoplayer.source.SequenceableLoader create(java.util.List,java.util.List):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ljava/util/List;)Lg0/c1;"}
androidx.media3.exoplayer.source.DefaultMediaSourceFactory -> g0.r:
    androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader delegateFactoryLoader -> a
    androidx.media3.datasource.DataSource$Factory dataSourceFactory -> b
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> c
    androidx.media3.exoplayer.source.MediaSource$Factory serverSideAdInsertionMediaSourceFactory -> d
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> e
    long liveTargetOffsetMs -> f
    long liveMinOffsetMs -> g
    long liveMaxOffsetMs -> h
    float liveMinSpeed -> i
    float liveMaxSpeed -> j
    boolean parseSubtitlesDuringExtraction -> k
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,androidx.media3.extractor.ExtractorsFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lo0/x;)V"}
    3:3:void <init>(androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;)V"}
    4:4:void <init>(androidx.media3.datasource.DataSource$Factory,androidx.media3.extractor.ExtractorsFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;Lo0/x;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lg0/f0;"}
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$r0sn082HjBGbWuMfk5GPbdliuZI(androidx.media3.exoplayer.source.DefaultMediaSourceFactory,androidx.media3.common.Format):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/r;Lj/q;)[Lo0/r;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory access$000(java.lang.Class):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory access$100(java.lang.Class,androidx.media3.datasource.DataSource$Factory):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/g$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.DefaultMediaSourceFactory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg0/r;"}
    1:1:androidx.media3.extractor.Extractor[] lambda$createMediaSource$0(androidx.media3.common.Format):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)[Lo0/r;"}
    1:1:androidx.media3.exoplayer.source.MediaSource maybeClipMediaSource(androidx.media3.common.MediaItem,androidx.media3.exoplayer.source.MediaSource):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Lg0/f0;)Lg0/f0;"}
    1:1:androidx.media3.exoplayer.source.MediaSource maybeWrapWithAdsMediaSource(androidx.media3.common.MediaItem,androidx.media3.exoplayer.source.MediaSource):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Lg0/f0;)Lg0/f0;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory newInstance(java.lang.Class):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory newInstance(java.lang.Class,androidx.media3.datasource.DataSource$Factory):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/g$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.DefaultMediaSourceFactory setDataSourceFactory(androidx.media3.datasource.DataSource$Factory):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;)Lg0/r;"}
    1:1:androidx.media3.exoplayer.source.DefaultMediaSourceFactory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Lg0/r;"}
    1:1:androidx.media3.exoplayer.source.DefaultMediaSourceFactory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lg0/r;"}
    1:1:androidx.media3.exoplayer.source.DefaultMediaSourceFactory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lg0/r;"}
androidx.media3.exoplayer.source.DefaultMediaSourceFactory$$ExternalSyntheticLambda0 -> g0.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.DefaultMediaSourceFactory androidx.media3.exoplayer.source.DefaultMediaSourceFactory$$InternalSyntheticLambda$7$cf7d477a07a5c5611caffd2f87b332ff1e3d74edb9288068a90c40a5b38a0725$0.f$0 -> b
    androidx.media3.common.Format androidx.media3.exoplayer.source.DefaultMediaSourceFactory$$InternalSyntheticLambda$7$cf7d477a07a5c5611caffd2f87b332ff1e3d74edb9288068a90c40a5b38a0725$0.f$1 -> c
    1:1:void androidx.media3.exoplayer.source.DefaultMediaSourceFactory$$InternalSyntheticLambda$7$cf7d477a07a5c5611caffd2f87b332ff1e3d74edb9288068a90c40a5b38a0725$0.<init>(androidx.media3.exoplayer.source.DefaultMediaSourceFactory,androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/r;Lj/q;)V"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.exoplayer.source.DefaultMediaSourceFactory$$InternalSyntheticLambda$7$cf7d477a07a5c5611caffd2f87b332ff1e3d74edb9288068a90c40a5b38a0725$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.exoplayer.source.DefaultMediaSourceFactory$$InternalSyntheticLambda$7$cf7d477a07a5c5611caffd2f87b332ff1e3d74edb9288068a90c40a5b38a0725$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.exoplayer.source.DefaultMediaSourceFactory$$InternalSyntheticLambda$7$cf7d477a07a5c5611caffd2f87b332ff1e3d74edb9288068a90c40a5b38a0725$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.exoplayer.source.DefaultMediaSourceFactory$$InternalSyntheticLambda$7$cf7d477a07a5c5611caffd2f87b332ff1e3d74edb9288068a90c40a5b38a0725$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader -> g0.r$a:
    androidx.media3.extractor.ExtractorsFactory extractorsFactory -> a
    java.util.Map mediaSourceFactorySuppliers -> b
    java.util.Map mediaSourceFactories -> c
    androidx.media3.datasource.DataSource$Factory dataSourceFactory -> d
    boolean parseSubtitlesDuringExtraction -> e
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> f
    androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider -> g
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> h
    1:1:void <init>(androidx.media3.extractor.ExtractorsFactory,androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/x;Ll1/t$a;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory $r8$lambda$GPgK_1bh8KXz5LNvlnBzVrl11lc(java.lang.Class,androidx.media3.datasource.DataSource$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/g$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory $r8$lambda$NCmn1A9JTsTxeKW_HGGpFVLWX9o(java.lang.Class,androidx.media3.datasource.DataSource$Factory):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/g$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory $r8$lambda$Qw-1dlm0H6T0cqgobs2mFVrFxjM(java.lang.Class,androidx.media3.datasource.DataSource$Factory):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/g$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory $r8$lambda$gQUYTyiioyBjoB-kV4UD2f3KSpc(java.lang.Class):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory $r8$lambda$j5z5OqqWlepvATgsuHA34DUd0l0(androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader,androidx.media3.datasource.DataSource$Factory):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/r$a;Lo/g$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory getMediaSourceFactory(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory lambda$loadSupplier$0(java.lang.Class,androidx.media3.datasource.DataSource$Factory):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/g$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory lambda$loadSupplier$1(java.lang.Class,androidx.media3.datasource.DataSource$Factory):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/g$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory lambda$loadSupplier$2(java.lang.Class,androidx.media3.datasource.DataSource$Factory):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/g$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory lambda$loadSupplier$3(java.lang.Class):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory lambda$loadSupplier$4(androidx.media3.datasource.DataSource$Factory):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;)Lg0/f0$a;"}
    1:1:com.google.common.base.Supplier loadSupplier(int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lk2/r;"}
    1:1:void setDataSourceFactory(androidx.media3.datasource.DataSource$Factory):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;)V"}
    1:1:void setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)V"}
    1:1:void setJpegExtractorFlags(int):0:0 -> o
    1:1:void setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)V"}
    1:1:void setParseSubtitlesDuringExtraction(boolean):0:0 -> q
    1:1:void setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)V"}
androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$ExternalSyntheticLambda0 -> g0.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Class androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$0.f$0 -> f
    androidx.media3.datasource.DataSource$Factory androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$0.<init>(java.lang.Class,androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/g$a;)V"}
    1:1:java.lang.Object androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$0.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$ExternalSyntheticLambda1 -> g0.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Class androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$1.f$0 -> f
    androidx.media3.datasource.DataSource$Factory androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$1.f$1 -> g
    1:1:void androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$1.<init>(java.lang.Class,androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/g$a;)V"}
    1:1:java.lang.Object androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$1.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$ExternalSyntheticLambda2 -> g0.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Class androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$2.f$0 -> f
    androidx.media3.datasource.DataSource$Factory androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$2.f$1 -> g
    1:1:void androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$2.<init>(java.lang.Class,androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Lo/g$a;)V"}
    1:1:java.lang.Object androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$2.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$ExternalSyntheticLambda3 -> g0.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Class androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$3.f$0 -> f
    1:1:void androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$3.<init>(java.lang.Class):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$3.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$ExternalSyntheticLambda4 -> g0.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$4.f$0 -> f
    androidx.media3.datasource.DataSource$Factory androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$4.f$1 -> g
    1:1:void androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$4.<init>(androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader,androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/r$a;Lo/g$a;)V"}
    1:1:java.lang.Object androidx.media3.exoplayer.source.DefaultMediaSourceFactory$DelegateFactoryLoader$$InternalSyntheticLambda$8$eef21c8a4614e727bbaecbdc269e54a549e76c0c923052b8f65772e94a7395c4$4.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.DefaultMediaSourceFactory$UnknownSubtitlesExtractor -> g0.r$b:
    androidx.media3.common.Format format -> a
    1:1:void <init>(androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.exoplayer.source.EmptySampleStream -> g0.s:
    void <init>() -> <init>
    1:1:boolean isReady():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:int skipData(long):0:0 -> t
    1:1:int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
androidx.media3.exoplayer.source.ExternalLoader -> g0.t:
androidx.media3.exoplayer.source.ExternalLoader$LoadRequest -> g0.t$a:
    android.net.Uri uri -> a
    1:1:void <init>(android.net.Uri):0:0 -> <init>
androidx.media3.exoplayer.source.ExternallyLoadedMediaPeriod -> g0.u:
    android.net.Uri uri -> f
    androidx.media3.exoplayer.source.TrackGroupArray tracks -> g
    byte[] sampleData -> h
    java.util.concurrent.atomic.AtomicBoolean loadingFinished -> i
    java.util.concurrent.atomic.AtomicReference loadingThrowable -> j
    com.google.common.util.concurrent.ListenableFuture loadingFuture -> k
    1:1:void <init>(android.net.Uri,java.lang.String,androidx.media3.exoplayer.source.ExternalLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/lang/String;Lg0/t;)V"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:java.util.concurrent.atomic.AtomicBoolean access$000(androidx.media3.exoplayer.source.ExternallyLoadedMediaPeriod):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/u;)Ljava/util/concurrent/atomic/AtomicBoolean;"}
    1:1:java.util.concurrent.atomic.AtomicReference access$100(androidx.media3.exoplayer.source.ExternallyLoadedMediaPeriod):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/u;)Ljava/util/concurrent/atomic/AtomicReference;"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray access$200(androidx.media3.exoplayer.source.ExternallyLoadedMediaPeriod):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/u;)Lg0/l1;"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:byte[] access$300(androidx.media3.exoplayer.source.ExternallyLoadedMediaPeriod):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/u;)[B"}
    1:1:void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    1:1:void releasePeriod():0:0 -> n
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:long seekToUs(long):0:0 -> r
    1:1:long readDiscontinuity():0:0 -> v
androidx.media3.exoplayer.source.ExternallyLoadedMediaPeriod$SampleStreamImpl -> g0.u$a:
    int streamState -> f
    androidx.media3.exoplayer.source.ExternallyLoadedMediaPeriod this$0 -> g
    1:1:void <init>(androidx.media3.exoplayer.source.ExternallyLoadedMediaPeriod):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/u;)V"}
    1:1:boolean isReady():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:int skipData(long):0:0 -> t
    1:1:int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
androidx.media3.exoplayer.source.ExternallyLoadedMediaSource -> g0.v:
    long timelineDurationUs -> m
    androidx.media3.common.MediaItem mediaItem -> n
    1:1:void <init>(androidx.media3.common.MediaItem,long,androidx.media3.exoplayer.source.ExternalLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;JLg0/t;)V"}
    2:2:void <init>(androidx.media3.common.MediaItem,long,androidx.media3.exoplayer.source.ExternalLoader,androidx.media3.exoplayer.source.ExternallyLoadedMediaSource$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;JLg0/t;Lg0/v$a;)V"}
    1:1:void prepareSourceInternal(androidx.media3.datasource.TransferListener):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:void releaseSourceInternal():0:0 -> E
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:void updateMediaItem(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    1:1:void maybeThrowSourceInfoRefreshError():0:0 -> h
    1:1:void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
androidx.media3.exoplayer.source.ExternallyLoadedMediaSource$1 -> g0.v$a:
androidx.media3.exoplayer.source.ExternallyLoadedMediaSource$Factory -> g0.v$b:
    long timelineDurationUs -> a
    1:1:void <init>(long,androidx.media3.exoplayer.source.ExternalLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLg0/t;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lg0/f0;"}
    1:1:androidx.media3.exoplayer.source.ExternallyLoadedMediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lg0/v;"}
androidx.media3.exoplayer.source.ForwardingTimeline -> g0.w:
    androidx.media3.common.Timeline timeline -> e
    1:1:void <init>(androidx.media3.common.Timeline):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
    1:1:int getFirstWindowIndex(boolean):0:0 -> a
    1:1:int getIndexOfPeriod(java.lang.Object):0:0 -> b
    1:1:int getLastWindowIndex(boolean):0:0 -> c
    1:1:int getNextWindowIndex(int,int,boolean):0:0 -> e
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:int getPeriodCount():0:0 -> i
    1:1:int getPreviousWindowIndex(int,int,boolean):0:0 -> l
    1:1:java.lang.Object getUidOfPeriod(int):0:0 -> m
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
    1:1:int getWindowCount():0:0 -> p
androidx.media3.exoplayer.source.IcyDataSource -> g0.x:
    androidx.media3.datasource.DataSource upstream -> a
    int metadataIntervalBytes -> b
    androidx.media3.exoplayer.source.IcyDataSource$Listener listener -> c
    byte[] metadataLengthByteHolder -> d
    int bytesUntilMetadata -> e
    1:1:void <init>(androidx.media3.datasource.DataSource,int,androidx.media3.exoplayer.source.IcyDataSource$Listener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;ILg0/x$a;)V"}
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:void close():0:0 -> close
    1:1:boolean readMetadata():0:0 -> h
    1:1:long open(androidx.media3.datasource.DataSpec):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)J"}
    1:1:android.net.Uri getUri():0:0 -> m
    1:1:void addTransferListener(androidx.media3.datasource.TransferListener):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:java.util.Map getResponseHeaders():0:0 -> s
androidx.media3.exoplayer.source.IcyDataSource$Listener -> g0.x$a:
    void onIcyMetadata(androidx.media3.common.util.ParsableByteArray) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.exoplayer.source.LoadEventInfo -> g0.y:
    long loadTaskId -> a
    androidx.media3.datasource.DataSpec dataSpec -> b
    android.net.Uri uri -> c
    java.util.Map responseHeaders -> d
    long elapsedRealtimeMs -> e
    long loadDurationMs -> f
    long bytesLoaded -> g
    java.util.concurrent.atomic.AtomicLong idSource -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,androidx.media3.datasource.DataSpec,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLo/k;J)V"}
    2:2:void <init>(long,androidx.media3.datasource.DataSpec,android.net.Uri,java.util.Map,long,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLo/k;Landroid/net/Uri;Ljava/util/Map;JJJ)V"}
    1:1:long getNewId():0:0 -> a
androidx.media3.exoplayer.source.MaskingMediaPeriod -> g0.z:
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId id -> f
    long preparePositionUs -> g
    androidx.media3.exoplayer.upstream.Allocator allocator -> h
    androidx.media3.exoplayer.source.MediaSource mediaSource -> i
    androidx.media3.exoplayer.source.MediaPeriod mediaPeriod -> j
    androidx.media3.exoplayer.source.MediaPeriod$Callback callback -> k
    androidx.media3.exoplayer.source.MaskingMediaPeriod$PrepareListener listener -> l
    boolean notifiedPrepareError -> m
    long preparePositionOverrideUs -> n
    1:1:void <init>(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)V"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:void onPrepared(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c1;)V"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:void createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;)V"}
    1:1:void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    1:1:long getPreparePositionOverrideUs():0:0 -> o
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:long seekToUs(long):0:0 -> r
    1:1:long getPreparePositionUs():0:0 -> s
    1:1:long getPreparePositionWithOverride(long):0:0 -> t
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:long readDiscontinuity():0:0 -> v
    1:1:void overridePreparePositionUs(long):0:0 -> w
    1:1:void releasePeriod():0:0 -> x
    1:1:void setMediaSource(androidx.media3.exoplayer.source.MediaSource):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;)V"}
androidx.media3.exoplayer.source.MaskingMediaPeriod$PrepareListener -> g0.z$a:
    void onPrepareComplete(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;)V"}
    void onPrepareError(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,java.io.IOException) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Ljava/io/IOException;)V"}
androidx.media3.exoplayer.source.MaskingMediaSource -> g0.a0:
    boolean useLazyPreparation -> r
    androidx.media3.common.Timeline$Window window -> s
    androidx.media3.common.Timeline$Period period -> t
    androidx.media3.exoplayer.source.MaskingMediaSource$MaskingTimeline timeline -> u
    androidx.media3.exoplayer.source.MaskingMediaPeriod unpreparedMaskingMediaPeriod -> v
    boolean hasStartedPreparing -> w
    boolean isPrepared -> x
    boolean hasRealTimeline -> y
    1:1:void <init>(androidx.media3.exoplayer.source.MediaSource,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;Z)V"}
    1:1:void releaseSourceInternal():0:0 -> E
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;)Lg0/f0$b;"}
    1:1:void onChildSourceInfoRefreshed(androidx.media3.common.Timeline):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
    1:1:void prepareSourceInternal():0:0 -> V
    1:1:androidx.media3.exoplayer.source.MaskingMediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/z;"}
    1:1:java.lang.Object getExternalPeriodUid(java.lang.Object):0:0 -> X
    1:1:java.lang.Object getInternalPeriodUid(java.lang.Object):0:0 -> Y
    1:1:androidx.media3.common.Timeline getTimeline():0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
    1:1:boolean setPreparePositionOverrideToUnpreparedMaskingPeriod(long):0:0 -> a0
    1:1:void updateMediaItem(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    1:1:void maybeThrowSourceInfoRefreshError():0:0 -> h
    1:1:void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
androidx.media3.exoplayer.source.MaskingMediaSource$MaskingTimeline -> g0.a0$a:
    java.lang.Object replacedInternalWindowUid -> f
    java.lang.Object replacedInternalPeriodUid -> g
    java.lang.Object MASKING_EXTERNAL_PERIOD_UID -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.Timeline,java.lang.Object,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/lang/Object;Ljava/lang/Object;)V"}
    1:1:int getIndexOfPeriod(java.lang.Object):0:0 -> b
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:java.lang.Object getUidOfPeriod(int):0:0 -> m
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
    1:1:java.lang.Object access$000(androidx.media3.exoplayer.source.MaskingMediaSource$MaskingTimeline):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/a0$a;)Ljava/lang/Object;"}
    1:1:androidx.media3.exoplayer.source.MaskingMediaSource$MaskingTimeline cloneWithUpdatedTimeline(androidx.media3.common.Timeline):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)Lg0/a0$a;"}
    1:1:androidx.media3.exoplayer.source.MaskingMediaSource$MaskingTimeline createWithPlaceholderTimeline(androidx.media3.common.MediaItem):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lg0/a0$a;"}
    1:1:androidx.media3.exoplayer.source.MaskingMediaSource$MaskingTimeline createWithRealTimeline(androidx.media3.common.Timeline,java.lang.Object,java.lang.Object):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/lang/Object;Ljava/lang/Object;)Lg0/a0$a;"}
androidx.media3.exoplayer.source.MaskingMediaSource$PlaceholderTimeline -> g0.a0$b:
    androidx.media3.common.MediaItem mediaItem -> e
    1:1:void <init>(androidx.media3.common.MediaItem):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:int getIndexOfPeriod(java.lang.Object):0:0 -> b
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:int getPeriodCount():0:0 -> i
    1:1:java.lang.Object getUidOfPeriod(int):0:0 -> m
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
    1:1:int getWindowCount():0:0 -> p
androidx.media3.exoplayer.source.MediaLoadData -> g0.b0:
    int dataType -> a
    int trackType -> b
    androidx.media3.common.Format trackFormat -> c
    int trackSelectionReason -> d
    java.lang.Object trackSelectionData -> e
    long mediaStartTimeMs -> f
    long mediaEndTimeMs -> g
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(int,int,androidx.media3.common.Format,int,java.lang.Object,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILj/q;ILjava/lang/Object;JJ)V"}
androidx.media3.exoplayer.source.MediaPeriod -> g0.c0:
    long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    boolean isLoading() -> b
    long getBufferedPositionUs() -> c
    long getNextLoadPositionUs() -> g
    void reevaluateBuffer(long) -> h
    boolean continueLoading(androidx.media3.exoplayer.LoadingInfo) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups() -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long) -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    void maybeThrowPrepareError() -> p
    void discardBuffer(long,boolean) -> q
    long seekToUs(long) -> r
    long readDiscontinuity() -> v
androidx.media3.exoplayer.source.MediaPeriod$Callback -> g0.c0$a:
    void onPrepared(androidx.media3.exoplayer.source.MediaPeriod) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
androidx.media3.exoplayer.source.MediaSource -> g0.f0:
    androidx.media3.common.MediaItem getMediaItem() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    void prepareSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller,androidx.media3.datasource.TransferListener,androidx.media3.exoplayer.analytics.PlayerId) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$c;Lo/y;Lr/w3;)V"}
    void removeDrmEventListener(androidx.media3.exoplayer.drm.DrmSessionEventListener) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/v;)V"}
    void releaseSource(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$c;)V"}
    void updateMediaItem(androidx.media3.common.MediaItem) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    void maybeThrowSourceInfoRefreshError() -> h
    void addEventListener(android.os.Handler,androidx.media3.exoplayer.source.MediaSourceEventListener) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lg0/m0;)V"}
    void removeEventListener(androidx.media3.exoplayer.source.MediaSourceEventListener) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0;)V"}
    boolean isSingleWindow() -> k
    void disable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller) -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$c;)V"}
    void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    androidx.media3.common.Timeline getInitialTimeline() -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
    void enable(androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller) -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$c;)V"}
    void addDrmEventListener(android.os.Handler,androidx.media3.exoplayer.drm.DrmSessionEventListener) -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lv/v;)V"}
androidx.media3.exoplayer.source.MediaSource$-CC -> g0.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Timeline $default$getInitialTimeline(androidx.media3.exoplayer.source.MediaSource):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;)Lj/i0;"}
    1:1:boolean $default$isSingleWindow(androidx.media3.exoplayer.source.MediaSource):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;)Z"}
    1:1:void $default$updateMediaItem(androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.MediaItem):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;Lj/u;)V"}
androidx.media3.exoplayer.source.MediaSource$Factory -> g0.f0$a:
    androidx.media3.exoplayer.source.MediaSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lg0/f0$a;"}
    androidx.media3.exoplayer.source.MediaSource$Factory experimentalParseSubtitlesDuringExtraction(boolean) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg0/f0$a;"}
    androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lg0/f0$a;"}
    androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Lg0/f0$a;"}
    androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lg0/f0;"}
androidx.media3.exoplayer.source.MediaSource$Factory$-CC -> g0.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory $default$experimentalParseSubtitlesDuringExtraction(androidx.media3.exoplayer.source.MediaSource$Factory,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$a;Z)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory $default$setSubtitleParserFactory(androidx.media3.exoplayer.source.MediaSource$Factory,androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$a;Ll1/t$a;)Lg0/f0$a;"}
androidx.media3.exoplayer.source.MediaSource$MediaPeriodId -> g0.f0$b:
    java.lang.Object periodUid -> a
    int adGroupIndex -> b
    int adIndexInAdGroup -> c
    long windowSequenceNumber -> d
    int nextAdGroupIndex -> e
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    2:2:void <init>(java.lang.Object,int,int,long):0:0 -> <init>
    3:3:void <init>(java.lang.Object,int,int,long,int):0:0 -> <init>
    4:4:void <init>(java.lang.Object,long):0:0 -> <init>
    5:5:void <init>(java.lang.Object,long,int):0:0 -> <init>
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId copyWithPeriodUid(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lg0/f0$b;"}
    1:1:boolean isAd():0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.source.MediaSource$MediaSourceCaller -> g0.f0$c:
    void onSourceInfoRefreshed(androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;Lj/i0;)V"}
androidx.media3.exoplayer.source.MediaSourceEventListener -> g0.m0:
    void onLoadStarted(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData) -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
    void onUpstreamDiscarded(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.MediaLoadData) -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/b0;)V"}
    void onDownstreamFormatChanged(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.MediaLoadData) -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/b0;)V"}
    void onLoadCompleted(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData) -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
    void onLoadError(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean) -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    void onLoadCanceled(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData) -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;Lg0/y;Lg0/b0;)V"}
androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher -> g0.m0$a:
    int windowIndex -> a
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId mediaPeriodId -> b
    java.util.concurrent.CopyOnWriteArrayList listenerAndHandlers -> c
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(java.util.concurrent.CopyOnWriteArrayList,int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/CopyOnWriteArrayList;ILg0/f0$b;)V"}
    1:1:void loadStarted(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;Lg0/b0;)V"}
    1:1:void removeEventListener(androidx.media3.exoplayer.source.MediaSourceEventListener):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0;)V"}
    1:1:void upstreamDiscarded(int,long,long):0:0 -> C
    1:1:void upstreamDiscarded(androidx.media3.exoplayer.source.MediaLoadData):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/b0;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher withParameters(int,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/f0$b;)Lg0/m0$a;"}
    1:1:void $r8$lambda$6oSxJEfeSvF2ceIBOzQ_zT006JU(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/y;Lg0/b0;)V"}
    1:1:void $r8$lambda$GsauLtV2nB6-CSOBb-gt5KY3Eds(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/f0$b;Lg0/b0;)V"}
    1:1:void $r8$lambda$H-0JOSrzi_KnwfnGJYgZDk34rkY(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/y;Lg0/b0;)V"}
    1:1:void $r8$lambda$YovBrCCeRVcoWG9DRg3BhtY3U2M(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    1:1:void $r8$lambda$ssnUqMQ2NM85mcrVP2qSUBZ3xpA(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/b0;)V"}
    1:1:void $r8$lambda$uqN0zD4wEl83rKQeEzyikza_Osw(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/y;Lg0/b0;)V"}
    1:1:void addEventListener(android.os.Handler,androidx.media3.exoplayer.source.MediaSourceEventListener):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lg0/m0;)V"}
    1:1:void downstreamFormatChanged(int,androidx.media3.common.Format,int,java.lang.Object,long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/q;ILjava/lang/Object;J)V"}
    1:1:void downstreamFormatChanged(androidx.media3.exoplayer.source.MediaLoadData):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/b0;)V"}
    1:1:void lambda$downstreamFormatChanged$5(androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0;Lg0/b0;)V"}
    1:1:void lambda$loadCanceled$2(androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0;Lg0/y;Lg0/b0;)V"}
    1:1:void lambda$loadCompleted$1(androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0;Lg0/y;Lg0/b0;)V"}
    1:1:void lambda$loadError$3(androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    1:1:void lambda$loadStarted$0(androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0;Lg0/y;Lg0/b0;)V"}
    1:1:void lambda$upstreamDiscarded$4(androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0;Lg0/f0$b;Lg0/b0;)V"}
    1:1:void loadCanceled(androidx.media3.exoplayer.source.LoadEventInfo,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;I)V"}
    1:1:void loadCanceled(androidx.media3.exoplayer.source.LoadEventInfo,int,int,androidx.media3.common.Format,int,java.lang.Object,long,long):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;IILj/q;ILjava/lang/Object;JJ)V"}
    1:1:void loadCanceled(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;Lg0/b0;)V"}
    1:1:void loadCompleted(androidx.media3.exoplayer.source.LoadEventInfo,int):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;I)V"}
    1:1:void loadCompleted(androidx.media3.exoplayer.source.LoadEventInfo,int,int,androidx.media3.common.Format,int,java.lang.Object,long,long):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;IILj/q;ILjava/lang/Object;JJ)V"}
    1:1:void loadCompleted(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;Lg0/b0;)V"}
    1:1:void loadError(androidx.media3.exoplayer.source.LoadEventInfo,int,int,androidx.media3.common.Format,int,java.lang.Object,long,long,java.io.IOException,boolean):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;IILj/q;ILjava/lang/Object;JJLjava/io/IOException;Z)V"}
    1:1:void loadError(androidx.media3.exoplayer.source.LoadEventInfo,int,java.io.IOException,boolean):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;ILjava/io/IOException;Z)V"}
    1:1:void loadError(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    1:1:void loadStarted(androidx.media3.exoplayer.source.LoadEventInfo,int):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;I)V"}
    1:1:void loadStarted(androidx.media3.exoplayer.source.LoadEventInfo,int,int,androidx.media3.common.Format,int,java.lang.Object,long,long):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;IILj/q;ILjava/lang/Object;JJ)V"}
androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$ExternalSyntheticLambda0 -> g0.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$8$f2c18ae83837a475834731df749416df8623ed39d5aa202b1d22c39ebb85fa4b$0.f$0 -> f
    androidx.media3.exoplayer.source.MediaSourceEventListener androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$8$f2c18ae83837a475834731df749416df8623ed39d5aa202b1d22c39ebb85fa4b$0.f$1 -> g
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$8$f2c18ae83837a475834731df749416df8623ed39d5aa202b1d22c39ebb85fa4b$0.f$2 -> h
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$8$f2c18ae83837a475834731df749416df8623ed39d5aa202b1d22c39ebb85fa4b$0.f$3 -> i
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$8$f2c18ae83837a475834731df749416df8623ed39d5aa202b1d22c39ebb85fa4b$0.<init>(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/y;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$8$f2c18ae83837a475834731df749416df8623ed39d5aa202b1d22c39ebb85fa4b$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$ExternalSyntheticLambda1 -> g0.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$3debb8263bc2e7f674a846c0bd4623143ac9d0f06f02799372d246ee24db4ace$0.f$0 -> f
    androidx.media3.exoplayer.source.MediaSourceEventListener androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$3debb8263bc2e7f674a846c0bd4623143ac9d0f06f02799372d246ee24db4ace$0.f$1 -> g
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$3debb8263bc2e7f674a846c0bd4623143ac9d0f06f02799372d246ee24db4ace$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$3debb8263bc2e7f674a846c0bd4623143ac9d0f06f02799372d246ee24db4ace$0.<init>(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$3debb8263bc2e7f674a846c0bd4623143ac9d0f06f02799372d246ee24db4ace$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$ExternalSyntheticLambda2 -> g0.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$8ac1776a8fe00b60fbfc36d9bb4bc5f2a7e26f54b1e1ebdb5b3e712fda7b97aa$0.f$0 -> f
    androidx.media3.exoplayer.source.MediaSourceEventListener androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$8ac1776a8fe00b60fbfc36d9bb4bc5f2a7e26f54b1e1ebdb5b3e712fda7b97aa$0.f$1 -> g
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$8ac1776a8fe00b60fbfc36d9bb4bc5f2a7e26f54b1e1ebdb5b3e712fda7b97aa$0.f$2 -> h
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$8ac1776a8fe00b60fbfc36d9bb4bc5f2a7e26f54b1e1ebdb5b3e712fda7b97aa$0.f$3 -> i
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$8ac1776a8fe00b60fbfc36d9bb4bc5f2a7e26f54b1e1ebdb5b3e712fda7b97aa$0.<init>(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/y;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$8ac1776a8fe00b60fbfc36d9bb4bc5f2a7e26f54b1e1ebdb5b3e712fda7b97aa$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$ExternalSyntheticLambda3 -> g0.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$93241b6a6ad7944c6747461f76d30990b65d8131ca3310fb43603458af76fe70$0.f$0 -> f
    androidx.media3.exoplayer.source.MediaSourceEventListener androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$93241b6a6ad7944c6747461f76d30990b65d8131ca3310fb43603458af76fe70$0.f$1 -> g
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$93241b6a6ad7944c6747461f76d30990b65d8131ca3310fb43603458af76fe70$0.f$2 -> h
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$93241b6a6ad7944c6747461f76d30990b65d8131ca3310fb43603458af76fe70$0.f$3 -> i
    java.io.IOException androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$93241b6a6ad7944c6747461f76d30990b65d8131ca3310fb43603458af76fe70$0.f$4 -> j
    boolean androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$93241b6a6ad7944c6747461f76d30990b65d8131ca3310fb43603458af76fe70$0.f$5 -> k
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$93241b6a6ad7944c6747461f76d30990b65d8131ca3310fb43603458af76fe70$0.<init>(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/y;Lg0/b0;Ljava/io/IOException;Z)V"}
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$93241b6a6ad7944c6747461f76d30990b65d8131ca3310fb43603458af76fe70$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$ExternalSyntheticLambda4 -> g0.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$b9acee0c41d94d08720b2d16138c584f19ced1020f3c8b1e6386fba41c4b1c82$0.f$0 -> f
    androidx.media3.exoplayer.source.MediaSourceEventListener androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$b9acee0c41d94d08720b2d16138c584f19ced1020f3c8b1e6386fba41c4b1c82$0.f$1 -> g
    androidx.media3.exoplayer.source.MediaSource$MediaPeriodId androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$b9acee0c41d94d08720b2d16138c584f19ced1020f3c8b1e6386fba41c4b1c82$0.f$2 -> h
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$b9acee0c41d94d08720b2d16138c584f19ced1020f3c8b1e6386fba41c4b1c82$0.f$3 -> i
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$b9acee0c41d94d08720b2d16138c584f19ced1020f3c8b1e6386fba41c4b1c82$0.<init>(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/f0$b;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$b9acee0c41d94d08720b2d16138c584f19ced1020f3c8b1e6386fba41c4b1c82$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$ExternalSyntheticLambda5 -> g0.l0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$f93e75c90bc2b9fa1077b89a6e8f72d1ab6cbd058e8d82b6486395f9a1ff7902$0.f$0 -> f
    androidx.media3.exoplayer.source.MediaSourceEventListener androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$f93e75c90bc2b9fa1077b89a6e8f72d1ab6cbd058e8d82b6486395f9a1ff7902$0.f$1 -> g
    androidx.media3.exoplayer.source.LoadEventInfo androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$f93e75c90bc2b9fa1077b89a6e8f72d1ab6cbd058e8d82b6486395f9a1ff7902$0.f$2 -> h
    androidx.media3.exoplayer.source.MediaLoadData androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$f93e75c90bc2b9fa1077b89a6e8f72d1ab6cbd058e8d82b6486395f9a1ff7902$0.f$3 -> i
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$f93e75c90bc2b9fa1077b89a6e8f72d1ab6cbd058e8d82b6486395f9a1ff7902$0.<init>(androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.MediaSourceEventListener,androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/m0$a;Lg0/m0;Lg0/y;Lg0/b0;)V"}
    1:1:void androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$$InternalSyntheticLambda$9$f93e75c90bc2b9fa1077b89a6e8f72d1ab6cbd058e8d82b6486395f9a1ff7902$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher$ListenerAndHandler -> g0.m0$a$a:
    android.os.Handler handler -> a
    androidx.media3.exoplayer.source.MediaSourceEventListener listener -> b
    1:1:void <init>(android.os.Handler,androidx.media3.exoplayer.source.MediaSourceEventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lg0/m0;)V"}
androidx.media3.exoplayer.source.MergingMediaPeriod -> g0.o0:
    androidx.media3.exoplayer.source.MediaPeriod[] periods -> f
    java.util.IdentityHashMap streamPeriodIndices -> g
    androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory -> h
    java.util.ArrayList childrenPendingPreparation -> i
    java.util.HashMap childTrackGroupByMergedTrackGroup -> j
    androidx.media3.exoplayer.source.MediaPeriod$Callback callback -> k
    androidx.media3.exoplayer.source.TrackGroupArray trackGroups -> l
    androidx.media3.exoplayer.source.MediaPeriod[] enabledPeriods -> m
    androidx.media3.exoplayer.source.SequenceableLoader compositeSequenceableLoader -> n
    1:1:void <init>(androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,long[],androidx.media3.exoplayer.source.MediaPeriod[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/j;[J[Lg0/c0;)V"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:void onPrepared(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c1;)V"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:java.util.List $r8$lambda$eHdvJD235_UBlUKnADUBK4dm6B8(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)Ljava/util/List;"}
    1:1:void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod getChildPeriod(int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lg0/c0;"}
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:long seekToUs(long):0:0 -> r
    1:1:java.util.List lambda$selectTracks$0(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)Ljava/util/List;"}
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:long readDiscontinuity():0:0 -> v
androidx.media3.exoplayer.source.MergingMediaPeriod$$ExternalSyntheticLambda0 -> g0.n0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.source.MergingMediaPeriod$$InternalSyntheticLambda$9$eda44683bb541a1dabe0d9864212fc728267e7fc4631685b64d449ee3316f163$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.source.MergingMediaPeriod$$InternalSyntheticLambda$9$eda44683bb541a1dabe0d9864212fc728267e7fc4631685b64d449ee3316f163$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.MergingMediaPeriod$ForwardingTrackSelection -> g0.o0$a:
    androidx.media3.exoplayer.trackselection.ExoTrackSelection trackSelection -> a
    androidx.media3.common.TrackGroup trackGroup -> b
    1:1:void <init>(androidx.media3.exoplayer.trackselection.ExoTrackSelection,androidx.media3.common.TrackGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Lj/j0;)V"}
    1:1:void updateSelectedTrack(long,long,long,java.util.List,androidx.media3.exoplayer.source.chunk.MediaChunkIterator[]):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJJLjava/util/List;[Lh0/n;)V"}
    1:1:void onRebuffer():0:0 -> B
    1:1:androidx.media3.common.TrackGroup getTrackGroup():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/j0;"}
    1:1:int indexOf(androidx.media3.common.Format):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:androidx.media3.common.Format getFormat(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q;"}
    1:1:int getIndexInTrackGroup(int):0:0 -> d
    1:1:int indexOf(int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:int length():0:0 -> length
    1:1:void disable():0:0 -> m
    1:1:int getSelectedIndexInTrackGroup():0:0 -> n
    1:1:boolean shouldCancelChunkLoad(long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLh0/e;Ljava/util/List;)Z"}
    1:1:void onPlayWhenReadyChanged(boolean):0:0 -> p
    1:1:androidx.media3.common.Format getSelectedFormat():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:boolean isTrackExcluded(int,long):0:0 -> r
    1:1:int getSelectionReason():0:0 -> s
    1:1:int getSelectedIndex():0:0 -> t
    1:1:boolean excludeTrack(int,long):0:0 -> u
    1:1:void enable():0:0 -> v
    1:1:void onPlaybackSpeed(float):0:0 -> w
    1:1:java.lang.Object getSelectionData():0:0 -> x
    1:1:void onDiscontinuity():0:0 -> y
    1:1:int evaluateQueueSize(long,java.util.List):0:0 -> z
androidx.media3.exoplayer.source.MergingMediaSource -> g0.p0:
    androidx.media3.common.MediaItem PLACEHOLDER_MEDIA_ITEM -> A
    boolean adjustPeriodTimeOffsets -> p
    boolean clipDurations -> q
    androidx.media3.exoplayer.source.MediaSource[] mediaSources -> r
    androidx.media3.common.Timeline[] timelines -> s
    java.util.ArrayList pendingTimelineSources -> t
    androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory -> u
    java.util.Map clippedDurationsUs -> v
    com.google.common.collect.Multimap clippedMediaPeriods -> w
    int periodCount -> x
    long[][] periodTimeOffsetsUs -> y
    androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException mergeError -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean,boolean,androidx.media3.exoplayer.source.CompositeSequenceableLoaderFactory,androidx.media3.exoplayer.source.MediaSource[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZLg0/j;[Lg0/f0;)V"}
    2:2:void <init>(boolean,boolean,androidx.media3.exoplayer.source.MediaSource[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZ[Lg0/f0;)V"}
    3:3:void <init>(boolean,androidx.media3.exoplayer.source.MediaSource[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z[Lg0/f0;)V"}
    4:4:void <init>(androidx.media3.exoplayer.source.MediaSource[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg0/f0;)V"}
    1:1:void prepareSourceInternal(androidx.media3.datasource.TransferListener):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:void releaseSourceInternal():0:0 -> E
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Object,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lg0/f0$b;)Lg0/f0$b;"}
    1:1:void onChildSourceInfoRefreshed(java.lang.Object,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lg0/f0;Lj/i0;)V"}
    1:1:void computePeriodTimeOffsets():0:0 -> M
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Integer,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;Lg0/f0$b;)Lg0/f0$b;"}
    1:1:void onChildSourceInfoRefreshed(java.lang.Integer,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;Lg0/f0;Lj/i0;)V"}
    1:1:void updateClippedDuration():0:0 -> P
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:void updateMediaItem(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    1:1:void maybeThrowSourceInfoRefreshError():0:0 -> h
    1:1:void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
androidx.media3.exoplayer.source.MergingMediaSource$ClippedTimeline -> g0.p0$a:
    long[] periodDurationsUs -> f
    long[] windowDurationsUs -> g
    1:1:void <init>(androidx.media3.common.Timeline,java.util.Map):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Ljava/util/Map;)V"}
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
androidx.media3.exoplayer.source.MergingMediaSource$IllegalMergeException -> g0.p0$b:
    int reason -> f
    1:1:void <init>(int):0:0 -> <init>
androidx.media3.exoplayer.source.ProgressiveMediaExtractor -> g0.q0:
    void seek(long,long) -> a
    void init(androidx.media3.common.DataReader,android.net.Uri,java.util.Map,long,long,androidx.media3.extractor.ExtractorOutput) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;Landroid/net/Uri;Ljava/util/Map;JJLo0/t;)V"}
    int read(androidx.media3.extractor.PositionHolder) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/l0;)I"}
    long getCurrentInputPosition() -> d
    void disableSeekingOnMp3Streams() -> e
    void release() -> release
androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory -> g0.q0$a:
    androidx.media3.exoplayer.source.ProgressiveMediaExtractor createProgressiveMediaExtractor(androidx.media3.exoplayer.analytics.PlayerId) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)Lg0/q0;"}
androidx.media3.exoplayer.source.ProgressiveMediaPeriod -> g0.v0:
    boolean sampleQueuesBuilt -> A
    boolean prepared -> B
    boolean haveAudioVideoTracks -> C
    boolean isSingleSample -> D
    androidx.media3.exoplayer.source.ProgressiveMediaPeriod$TrackState trackState -> E
    androidx.media3.extractor.SeekMap seekMap -> F
    long durationUs -> G
    boolean isLive -> H
    int dataType -> I
    boolean seenFirstTrackSelection -> J
    boolean notifyDiscontinuity -> K
    int enabledTrackCount -> L
    boolean isLengthKnown -> M
    long lastSeekPositionUs -> N
    long pendingResetPositionUs -> O
    boolean pendingDeferredRetry -> P
    int extractedSamplesCountAtStartOfLoad -> Q
    boolean loadingFinished -> R
    boolean released -> S
    java.util.Map ICY_METADATA_HEADERS -> T
    androidx.media3.common.Format ICY_FORMAT -> U
    android.net.Uri uri -> f
    androidx.media3.datasource.DataSource dataSource -> g
    androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager -> h
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> i
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher -> j
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher -> k
    androidx.media3.exoplayer.source.ProgressiveMediaPeriod$Listener listener -> l
    androidx.media3.exoplayer.upstream.Allocator allocator -> m
    java.lang.String customCacheKey -> n
    long continueLoadingCheckIntervalBytes -> o
    long singleSampleDurationUs -> p
    androidx.media3.exoplayer.upstream.Loader loader -> q
    androidx.media3.exoplayer.source.ProgressiveMediaExtractor progressiveMediaExtractor -> r
    androidx.media3.common.util.ConditionVariable loadCondition -> s
    java.lang.Runnable maybeFinishPrepareRunnable -> t
    java.lang.Runnable onContinueLoadingRequestedRunnable -> u
    android.os.Handler handler -> v
    androidx.media3.exoplayer.source.MediaPeriod$Callback callback -> w
    androidx.media3.extractor.metadata.icy.IcyHeaders icyHeaders -> x
    androidx.media3.exoplayer.source.SampleQueue[] sampleQueues -> y
    androidx.media3.exoplayer.source.ProgressiveMediaPeriod$TrackId[] sampleQueueTrackIds -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.net.Uri,androidx.media3.datasource.DataSource,androidx.media3.exoplayer.source.ProgressiveMediaExtractor,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,androidx.media3.exoplayer.source.ProgressiveMediaPeriod$Listener,androidx.media3.exoplayer.upstream.Allocator,java.lang.String,int,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Lo/g;Lg0/q0;Lv/x;Lv/v$a;Lk0/m;Lg0/m0$a;Lg0/v0$c;Lk0/b;Ljava/lang/String;IJ)V"}
    1:1:java.lang.Runnable access$1100(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)Ljava/lang/Runnable;"}
    1:1:android.os.Handler access$1200(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)Landroid/os/Handler;"}
    1:1:long access$1300(androidx.media3.exoplayer.source.ProgressiveMediaPeriod,boolean):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;Z)J"}
    1:1:java.util.Map access$1400():0:0 -> D
    1:1:java.lang.String access$1500(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)Ljava/lang/String;"}
    1:1:long access$500(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)J"}
    1:1:void access$700(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)V"}
    1:1:androidx.media3.extractor.metadata.icy.IcyHeaders access$800(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)Lb1/b;"}
    1:1:androidx.media3.extractor.metadata.icy.IcyHeaders access$802(androidx.media3.exoplayer.source.ProgressiveMediaPeriod,androidx.media3.extractor.metadata.icy.IcyHeaders):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;Lb1/b;)Lb1/b;"}
    1:1:androidx.media3.common.Format access$900():0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:void assertPrepared():0:0 -> K
    1:1:boolean configureRetry(androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable,int):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0$b;I)Z"}
    1:1:java.util.Map createIcyMetadataHeaders():0:0 -> M
    1:1:int getExtractedSamplesCount():0:0 -> N
    1:1:long getLargestQueuedTimestampUs(boolean):0:0 -> O
    1:1:androidx.media3.extractor.TrackOutput icyTrack():0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/s0;"}
    1:1:boolean isPendingReset():0:0 -> Q
    1:1:boolean isReady(int):0:0 -> R
    1:1:void lambda$new$0():0:0 -> S
    1:1:void lambda$onLengthKnown$2():0:0 -> T
    1:1:void lambda$seekMap$1(androidx.media3.extractor.SeekMap):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
    1:1:void maybeFinishPrepare():0:0 -> V
    1:1:void maybeNotifyDownstreamFormat(int):0:0 -> W
    1:1:void maybeStartDeferredRetry(int):0:0 -> X
    1:1:void maybeThrowError():0:0 -> Y
    1:1:void maybeThrowError(int):0:0 -> Z
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:void onLengthKnown():0:0 -> a0
    1:1:boolean isLoading():0:0 -> b
    1:1:void onLoadCanceled(androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable,long,long,boolean):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0$b;JJZ)V"}
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:void onLoadCompleted(androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable,long,long):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0$b;JJ)V"}
    1:1:androidx.media3.extractor.TrackOutput track(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable,long,long,java.io.IOException,int):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0$b;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onUpstreamFormatChanged(androidx.media3.common.Format):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:androidx.media3.extractor.TrackOutput prepareTrackOutput(androidx.media3.exoplayer.source.ProgressiveMediaPeriod$TrackId):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0$e;)Lo0/s0;"}
    1:1:void endTracks():0:0 -> f
    1:1:int readData(int,androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILq/u1;Lp/i;I)I"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void release():0:0 -> g0
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean seekInsideBufferUs(boolean[],long):0:0 -> h0
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:void setSeekMap(androidx.media3.extractor.SeekMap):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
    1:1:long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    1:1:int skipData(int,long):0:0 -> j0
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:void startLoading():0:0 -> k0
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:boolean suppressRead():0:0 -> l0
    1:1:void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onLoaderReleased():0:0 -> o
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:long seekToUs(long):0:0 -> r
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
    1:1:void seekMap(androidx.media3.extractor.SeekMap):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
    1:1:void $r8$lambda$UME9wo0vnnZOdagWwSK8ILcEMgY(androidx.media3.exoplayer.source.ProgressiveMediaPeriod,androidx.media3.extractor.SeekMap):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;Lo0/m0;)V"}
    1:1:long readDiscontinuity():0:0 -> v
    1:1:void $r8$lambda$YLOJRxyfXfojUItl-qJNlGyZVaA(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> w
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)V"}
    1:1:void $r8$lambda$f6avGSTSR4EHkiT5C2BLoacEBBo(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> x
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)V"}
    1:1:void $r8$lambda$fRLJj_pvmhUWdElszeJahaiDmb0(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> y
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)V"}
    1:1:long access$1000(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)J"}
androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$ExternalSyntheticLambda0 -> g0.r0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.ProgressiveMediaPeriod androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$34d1c04ebc5d7e6ecc30cfbfe130231fbac93db3858d85badbe20df696a900fd$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$34d1c04ebc5d7e6ecc30cfbfe130231fbac93db3858d85badbe20df696a900fd$0.<init>(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)V"}
    1:1:void androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$34d1c04ebc5d7e6ecc30cfbfe130231fbac93db3858d85badbe20df696a900fd$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$ExternalSyntheticLambda1 -> g0.s0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.ProgressiveMediaPeriod androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$34d1c04ebc5d7e6ecc30cfbfe130231fbac93db3858d85badbe20df696a900fd$1.f$0 -> f
    1:1:void androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$34d1c04ebc5d7e6ecc30cfbfe130231fbac93db3858d85badbe20df696a900fd$1.<init>(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)V"}
    1:1:void androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$34d1c04ebc5d7e6ecc30cfbfe130231fbac93db3858d85badbe20df696a900fd$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$ExternalSyntheticLambda2 -> g0.t0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.ProgressiveMediaPeriod androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$ca6e78e1bf4f4128c28d1a992c3f4f939e12dad321903d21736e69297c1bb179$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$ca6e78e1bf4f4128c28d1a992c3f4f939e12dad321903d21736e69297c1bb179$0.<init>(androidx.media3.exoplayer.source.ProgressiveMediaPeriod):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;)V"}
    1:1:void androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$ca6e78e1bf4f4128c28d1a992c3f4f939e12dad321903d21736e69297c1bb179$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$ExternalSyntheticLambda3 -> g0.u0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.source.ProgressiveMediaPeriod androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$f5bdc2a2e2a796c8cf5ee11bce2623baca6a429311ced398d790c24bec12d68a$0.f$0 -> f
    androidx.media3.extractor.SeekMap androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$f5bdc2a2e2a796c8cf5ee11bce2623baca6a429311ced398d790c24bec12d68a$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$f5bdc2a2e2a796c8cf5ee11bce2623baca6a429311ced398d790c24bec12d68a$0.<init>(androidx.media3.exoplayer.source.ProgressiveMediaPeriod,androidx.media3.extractor.SeekMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;Lo0/m0;)V"}
    1:1:void androidx.media3.exoplayer.source.ProgressiveMediaPeriod$$InternalSyntheticLambda$9$f5bdc2a2e2a796c8cf5ee11bce2623baca6a429311ced398d790c24bec12d68a$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.ProgressiveMediaPeriod$1 -> g0.v0$a:
    androidx.media3.exoplayer.source.ProgressiveMediaPeriod this$0 -> b
    1:1:void <init>(androidx.media3.exoplayer.source.ProgressiveMediaPeriod,androidx.media3.extractor.SeekMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;Lo0/m0;)V"}
    1:1:long getDurationUs():0:0 -> j
androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable -> g0.v0$b:
    long loadTaskId -> a
    android.net.Uri uri -> b
    androidx.media3.datasource.StatsDataSource dataSource -> c
    androidx.media3.exoplayer.source.ProgressiveMediaExtractor progressiveMediaExtractor -> d
    androidx.media3.extractor.ExtractorOutput extractorOutput -> e
    androidx.media3.common.util.ConditionVariable loadCondition -> f
    androidx.media3.extractor.PositionHolder positionHolder -> g
    boolean loadCanceled -> h
    boolean pendingExtractorSeek -> i
    long seekTimeUs -> j
    androidx.media3.datasource.DataSpec dataSpec -> k
    androidx.media3.extractor.TrackOutput icyTrackOutput -> l
    boolean seenIcyMetadata -> m
    androidx.media3.exoplayer.source.ProgressiveMediaPeriod this$0 -> n
    1:1:void <init>(androidx.media3.exoplayer.source.ProgressiveMediaPeriod,android.net.Uri,androidx.media3.datasource.DataSource,androidx.media3.exoplayer.source.ProgressiveMediaExtractor,androidx.media3.extractor.ExtractorOutput,androidx.media3.common.util.ConditionVariable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;Landroid/net/Uri;Lo/g;Lg0/q0;Lo0/t;Lm/f;)V"}
    1:1:void load():0:0 -> a
    1:1:void cancelLoad():0:0 -> b
    1:1:void onIcyMetadata(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:androidx.media3.datasource.StatsDataSource access$100(androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0$b;)Lo/x;"}
    1:1:long access$200(androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0$b;)J"}
    1:1:androidx.media3.datasource.DataSpec access$300(androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0$b;)Lo/k;"}
    1:1:long access$400(androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0$b;)J"}
    1:1:void access$600(androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable,long,long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0$b;JJ)V"}
    1:1:androidx.media3.datasource.DataSpec buildDataSpec(long):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo/k;"}
    1:1:void setLoadPosition(long,long):0:0 -> j
androidx.media3.exoplayer.source.ProgressiveMediaPeriod$Listener -> g0.v0$c:
    void onSourceInfoRefreshed(long,boolean,boolean) -> t
androidx.media3.exoplayer.source.ProgressiveMediaPeriod$SampleStreamImpl -> g0.v0$d:
    int track -> f
    androidx.media3.exoplayer.source.ProgressiveMediaPeriod this$0 -> g
    1:1:void <init>(androidx.media3.exoplayer.source.ProgressiveMediaPeriod,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0;I)V"}
    1:1:int access$000(androidx.media3.exoplayer.source.ProgressiveMediaPeriod$SampleStreamImpl):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/v0$d;)I"}
    1:1:boolean isReady():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:int skipData(long):0:0 -> t
    1:1:int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
androidx.media3.exoplayer.source.ProgressiveMediaPeriod$TrackId -> g0.v0$e:
    int id -> a
    boolean isIcyTrack -> b
    1:1:void <init>(int,boolean):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.source.ProgressiveMediaPeriod$TrackState -> g0.v0$f:
    androidx.media3.exoplayer.source.TrackGroupArray tracks -> a
    boolean[] trackIsAudioVideoFlags -> b
    boolean[] trackEnabledStates -> c
    boolean[] trackNotifiedDownstreamFormats -> d
    1:1:void <init>(androidx.media3.exoplayer.source.TrackGroupArray,boolean[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/l1;[Z)V"}
androidx.media3.exoplayer.source.ProgressiveMediaSource -> g0.w0:
    androidx.media3.datasource.DataSource$Factory dataSourceFactory -> m
    androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory progressiveMediaExtractorFactory -> n
    androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager -> o
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadableLoadErrorHandlingPolicy -> p
    int continueLoadingCheckIntervalBytes -> q
    boolean timelineIsPlaceholder -> r
    long timelineDurationUs -> s
    boolean timelineIsSeekable -> t
    boolean timelineIsLive -> u
    androidx.media3.datasource.TransferListener transferListener -> v
    androidx.media3.common.MediaItem mediaItem -> w
    1:1:void <init>(androidx.media3.common.MediaItem,androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Lo/g$a;Lg0/q0$a;Lv/x;Lk0/m;I)V"}
    2:2:void <init>(androidx.media3.common.MediaItem,androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,int,androidx.media3.exoplayer.source.ProgressiveMediaSource$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;Lo/g$a;Lg0/q0$a;Lv/x;Lk0/m;ILg0/w0$a;)V"}
    1:1:void prepareSourceInternal(androidx.media3.datasource.TransferListener):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:void releaseSourceInternal():0:0 -> E
    1:1:androidx.media3.common.MediaItem$LocalConfiguration getLocalConfiguration():0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u$h;"}
    1:1:void notifySourceInfoRefreshed():0:0 -> G
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:void updateMediaItem(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    1:1:void maybeThrowSourceInfoRefreshError():0:0 -> h
    1:1:void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void onSourceInfoRefreshed(long,boolean,boolean):0:0 -> t
androidx.media3.exoplayer.source.ProgressiveMediaSource$1 -> g0.w0$a:
    androidx.media3.exoplayer.source.ProgressiveMediaSource this$0 -> f
    1:1:void <init>(androidx.media3.exoplayer.source.ProgressiveMediaSource,androidx.media3.common.Timeline):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/w0;Lj/i0;)V"}
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory -> g0.w0$b:
    androidx.media3.datasource.DataSource$Factory dataSourceFactory -> a
    androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory progressiveMediaExtractorFactory -> b
    androidx.media3.exoplayer.drm.DrmSessionManagerProvider drmSessionManagerProvider -> c
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> d
    int continueLoadingCheckIntervalBytes -> e
    1:1:void <init>(androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;Lg0/q0$a;)V"}
    2:2:void <init>(androidx.media3.datasource.DataSource$Factory,androidx.media3.exoplayer.source.ProgressiveMediaExtractor$Factory,androidx.media3.exoplayer.drm.DrmSessionManagerProvider,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;Lg0/q0$a;Lv/a0;Lk0/m;I)V"}
    3:3:void <init>(androidx.media3.datasource.DataSource$Factory,androidx.media3.extractor.ExtractorsFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;Lo0/x;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lg0/f0;"}
    1:1:androidx.media3.exoplayer.source.ProgressiveMediaExtractor $r8$lambda$EthgGFq0BBguxCCp6eTuVDiRyuI(androidx.media3.extractor.ExtractorsFactory,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/x;Lr/w3;)Lg0/q0;"}
    1:1:androidx.media3.exoplayer.source.ProgressiveMediaSource createMediaSource(androidx.media3.common.MediaItem):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)Lg0/w0;"}
    1:1:androidx.media3.exoplayer.source.ProgressiveMediaExtractor lambda$new$0(androidx.media3.extractor.ExtractorsFactory,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/x;Lr/w3;)Lg0/q0;"}
    1:1:androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory setDrmSessionManagerProvider(androidx.media3.exoplayer.drm.DrmSessionManagerProvider):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv/a0;)Lg0/w0$b;"}
    1:1:androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lg0/w0$b;"}
androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory$$ExternalSyntheticLambda0 -> g0.x0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.extractor.ExtractorsFactory androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory$$InternalSyntheticLambda$8$aa855348d4081792435c0e417536d879494650d093f1ca9d971eb05835b8b709$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory$$InternalSyntheticLambda$8$aa855348d4081792435c0e417536d879494650d093f1ca9d971eb05835b8b709$0.<init>(androidx.media3.extractor.ExtractorsFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/x;)V"}
    1:1:androidx.media3.exoplayer.source.ProgressiveMediaExtractor androidx.media3.exoplayer.source.ProgressiveMediaSource$Factory$$InternalSyntheticLambda$8$aa855348d4081792435c0e417536d879494650d093f1ca9d971eb05835b8b709$0.createProgressiveMediaExtractor(androidx.media3.exoplayer.analytics.PlayerId):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/w3;)Lg0/q0;"}
androidx.media3.exoplayer.source.SampleDataQueue -> g0.y0:
    androidx.media3.exoplayer.upstream.Allocator allocator -> a
    int allocationLength -> b
    androidx.media3.common.util.ParsableByteArray scratch -> c
    androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode firstAllocationNode -> d
    androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode readAllocationNode -> e
    androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode writeAllocationNode -> f
    long totalBytesWritten -> g
    1:1:void <init>(androidx.media3.exoplayer.upstream.Allocator):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b;)V"}
    1:1:void clearAllocationNodes(androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y0$a;)V"}
    1:1:void discardDownstreamTo(long):0:0 -> b
    1:1:void discardUpstreamSampleBytes(long):0:0 -> c
    1:1:androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode getNodeContainingPosition(androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode,long):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y0$a;J)Lg0/y0$a;"}
    1:1:long getTotalBytesWritten():0:0 -> e
    1:1:void peekToBuffer(androidx.media3.decoder.DecoderInputBuffer,androidx.media3.exoplayer.source.SampleQueue$SampleExtrasHolder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;Lg0/a1$b;)V"}
    1:1:void postAppend(int):0:0 -> g
    1:1:int preAppend(int):0:0 -> h
    1:1:androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode readData(androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode,long,java.nio.ByteBuffer,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y0$a;JLjava/nio/ByteBuffer;I)Lg0/y0$a;"}
    1:1:androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode readData(androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode,long,byte[],int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y0$a;J[BI)Lg0/y0$a;"}
    1:1:androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode readEncryptionData(androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode,androidx.media3.decoder.DecoderInputBuffer,androidx.media3.exoplayer.source.SampleQueue$SampleExtrasHolder,androidx.media3.common.util.ParsableByteArray):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y0$a;Lp/i;Lg0/a1$b;Lm/z;)Lg0/y0$a;"}
    1:1:androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode readSampleData(androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode,androidx.media3.decoder.DecoderInputBuffer,androidx.media3.exoplayer.source.SampleQueue$SampleExtrasHolder,androidx.media3.common.util.ParsableByteArray):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y0$a;Lp/i;Lg0/a1$b;Lm/z;)Lg0/y0$a;"}
    1:1:void readToBuffer(androidx.media3.decoder.DecoderInputBuffer,androidx.media3.exoplayer.source.SampleQueue$SampleExtrasHolder):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;Lg0/a1$b;)V"}
    1:1:void reset():0:0 -> n
    1:1:void rewind():0:0 -> o
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZ)I"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode -> g0.y0$a:
    long startPosition -> a
    long endPosition -> b
    androidx.media3.exoplayer.upstream.Allocation allocation -> c
    androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode next -> d
    1:1:void <init>(long,int):0:0 -> <init>
    1:1:androidx.media3.exoplayer.upstream.Allocation getAllocation():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a;"}
    1:1:androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode clear():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/y0$a;"}
    1:1:void initialize(androidx.media3.exoplayer.upstream.Allocation,androidx.media3.exoplayer.source.SampleDataQueue$AllocationNode):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/a;Lg0/y0$a;)V"}
    1:1:void reset(long,int):0:0 -> d
    1:1:int translateOffset(long):0:0 -> e
    1:1:androidx.media3.exoplayer.upstream.Allocator$AllocationNode next():0:0 -> next
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/b$a;"}
androidx.media3.exoplayer.source.SampleQueue -> g0.a1:
    androidx.media3.common.Format unadjustedUpstreamFormat -> A
    androidx.media3.common.Format upstreamFormat -> B
    long upstreamSourceId -> C
    boolean allSamplesAreSyncSamples -> D
    boolean loggedUnexpectedNonSyncSample -> E
    long sampleOffsetUs -> F
    boolean pendingSplice -> G
    androidx.media3.exoplayer.source.SampleDataQueue sampleDataQueue -> a
    androidx.media3.exoplayer.source.SampleQueue$SampleExtrasHolder extrasHolder -> b
    androidx.media3.exoplayer.source.SpannedData sharedSampleMetadata -> c
    androidx.media3.exoplayer.drm.DrmSessionManager drmSessionManager -> d
    androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher drmEventDispatcher -> e
    androidx.media3.exoplayer.source.SampleQueue$UpstreamFormatChangedListener upstreamFormatChangeListener -> f
    androidx.media3.common.Format downstreamFormat -> g
    androidx.media3.exoplayer.drm.DrmSession currentDrmSession -> h
    int capacity -> i
    long[] sourceIds -> j
    long[] offsets -> k
    int[] sizes -> l
    int[] flags -> m
    long[] timesUs -> n
    androidx.media3.extractor.TrackOutput$CryptoData[] cryptoDatas -> o
    int length -> p
    int absoluteFirstIndex -> q
    int relativeFirstIndex -> r
    int readPosition -> s
    long startTimeUs -> t
    long largestDiscardedTimestampUs -> u
    long largestQueuedTimestampUs -> v
    boolean isLastSampleQueued -> w
    boolean upstreamKeyframeRequired -> x
    boolean upstreamFormatRequired -> y
    boolean upstreamFormatAdjustmentRequired -> z
    1:1:void <init>(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b;Lv/x;Lv/v$a;)V"}
    1:1:long getLargestQueuedTimestampUs():0:0 -> A
    1:1:long getLargestReadTimestampUs():0:0 -> B
    1:1:long getLargestTimestamp(int):0:0 -> C
    1:1:int getReadIndex():0:0 -> D
    1:1:int getRelativeIndex(int):0:0 -> E
    1:1:int getSkipCount(long,boolean):0:0 -> F
    1:1:androidx.media3.common.Format getUpstreamFormat():0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int getWriteIndex():0:0 -> H
    1:1:boolean hasNextSample():0:0 -> I
    1:1:void invalidateUpstreamFormatAdjustment():0:0 -> J
    1:1:boolean isLastSampleQueued():0:0 -> K
    1:1:boolean isReady(boolean):0:0 -> L
    1:1:void lambda$new$0(androidx.media3.exoplayer.source.SampleQueue$SharedSampleMetadata):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/a1$c;)V"}
    1:1:boolean mayReadSample(int):0:0 -> N
    1:1:void maybeThrowError():0:0 -> O
    1:1:void onFormatResult(androidx.media3.common.Format,androidx.media3.exoplayer.FormatHolder):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/u1;)V"}
    1:1:int peekSampleMetadata(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,boolean,boolean,androidx.media3.exoplayer.source.SampleQueue$SampleExtrasHolder):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;ZZLg0/a1$b;)I"}
    1:1:long peekSourceId():0:0 -> R
    1:1:void preRelease():0:0 -> S
    1:1:int read(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int,boolean):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;IZ)I"}
    1:1:void release():0:0 -> U
    1:1:void releaseDrmSessionReferences():0:0 -> V
    1:1:void reset():0:0 -> W
    1:1:void reset(boolean):0:0 -> X
    1:1:void rewind():0:0 -> Y
    1:1:boolean seekTo(int):0:0 -> Z
    1:1:void format(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:boolean seekTo(long,boolean):0:0 -> a0
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZI)I"}
    1:1:void setSampleOffsetUs(long):0:0 -> b0
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZ)I"}
    1:1:void setStartTimeUs(long):0:0 -> c0
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:boolean setUpstreamFormat(androidx.media3.common.Format):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JIIILo0/s0$a;)V"}
    1:1:void setUpstreamFormatChangeListener(androidx.media3.exoplayer.source.SampleQueue$UpstreamFormatChangedListener):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/a1$d;)V"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)V"}
    1:1:void skip(int):0:0 -> f0
    1:1:void $r8$lambda$Ox30muZzHM-B3uFbPP0oCk0b1T8(androidx.media3.exoplayer.source.SampleQueue$SharedSampleMetadata):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/a1$c;)V"}
    1:1:void sourceId(long):0:0 -> g0
    1:1:boolean attemptSplice(long):0:0 -> h
    1:1:void splice():0:0 -> h0
    1:1:void commitSample(long,int,long,int,androidx.media3.extractor.TrackOutput$CryptoData):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JIJILo0/s0$a;)V"}
    1:1:int countUnreadSamplesBefore(long):0:0 -> j
    1:1:androidx.media3.exoplayer.source.SampleQueue createWithDrm(androidx.media3.exoplayer.upstream.Allocator,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b;Lv/x;Lv/v$a;)Lg0/a1;"}
    1:1:androidx.media3.exoplayer.source.SampleQueue createWithoutDrm(androidx.media3.exoplayer.upstream.Allocator):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b;)Lg0/a1;"}
    1:1:long discardSampleMetadataTo(long,boolean,boolean):0:0 -> m
    1:1:long discardSampleMetadataToEnd():0:0 -> n
    1:1:long discardSampleMetadataToRead():0:0 -> o
    1:1:long discardSamples(int):0:0 -> p
    1:1:void discardTo(long,boolean,boolean):0:0 -> q
    1:1:void discardToEnd():0:0 -> r
    1:1:void discardToRead():0:0 -> s
    1:1:long discardUpstreamSampleMetadata(int):0:0 -> t
    1:1:void discardUpstreamSamples(int):0:0 -> u
    1:1:int findSampleAfter(int,int,long,boolean):0:0 -> v
    1:1:int findSampleBefore(int,int,long,boolean):0:0 -> w
    1:1:androidx.media3.common.Format getAdjustedUpstreamFormat(androidx.media3.common.Format):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
    1:1:int getFirstIndex():0:0 -> y
    1:1:long getFirstTimestampUs():0:0 -> z
androidx.media3.exoplayer.source.SampleQueue$$ExternalSyntheticLambda0 -> g0.z0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.source.SampleQueue$$InternalSyntheticLambda$9$f89c71bbd01983fad08ed796ca31c2efc162350f57301ee09efe39bf95f6e017$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.source.SampleQueue$$InternalSyntheticLambda$9$f89c71bbd01983fad08ed796ca31c2efc162350f57301ee09efe39bf95f6e017$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.SampleQueue$1 -> g0.a1$a:
androidx.media3.exoplayer.source.SampleQueue$SampleExtrasHolder -> g0.a1$b:
    int size -> a
    long offset -> b
    androidx.media3.extractor.TrackOutput$CryptoData cryptoData -> c
    void <init>() -> <init>
androidx.media3.exoplayer.source.SampleQueue$SharedSampleMetadata -> g0.a1$c:
    androidx.media3.common.Format format -> a
    androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference drmSessionReference -> b
    1:1:void <init>(androidx.media3.common.Format,androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lv/x$b;)V"}
    2:2:void <init>(androidx.media3.common.Format,androidx.media3.exoplayer.drm.DrmSessionManager$DrmSessionReference,androidx.media3.exoplayer.source.SampleQueue$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lv/x$b;Lg0/a1$a;)V"}
androidx.media3.exoplayer.source.SampleQueue$UpstreamFormatChangedListener -> g0.a1$d:
    void onUpstreamFormatChanged(androidx.media3.common.Format) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
androidx.media3.exoplayer.source.SampleStream -> g0.b1:
    boolean isReady() -> e
    void maybeThrowError() -> f
    int skipData(long) -> t
    int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
androidx.media3.exoplayer.source.SequenceableLoader -> g0.c1:
    boolean isLoading() -> b
    long getBufferedPositionUs() -> c
    long getNextLoadPositionUs() -> g
    void reevaluateBuffer(long) -> h
    boolean continueLoading(androidx.media3.exoplayer.LoadingInfo) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
androidx.media3.exoplayer.source.SequenceableLoader$Callback -> g0.c1$a:
    void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c1;)V"}
androidx.media3.exoplayer.source.ShuffleOrder -> g0.d1:
    int getLength() -> a
    androidx.media3.exoplayer.source.ShuffleOrder cloneAndRemove(int,int) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lg0/d1;"}
    int getNextIndex(int) -> c
    androidx.media3.exoplayer.source.ShuffleOrder cloneAndInsert(int,int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lg0/d1;"}
    int getPreviousIndex(int) -> e
    int getFirstIndex() -> f
    int getLastIndex() -> g
    androidx.media3.exoplayer.source.ShuffleOrder cloneAndClear() -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/d1;"}
androidx.media3.exoplayer.source.ShuffleOrder$DefaultShuffleOrder -> g0.d1$a:
    java.util.Random random -> a
    int[] shuffled -> b
    int[] indexInShuffled -> c
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(int,java.util.Random):0:0 -> <init>
    3:3:void <init>(int[],java.util.Random):0:0 -> <init>
    1:1:int getLength():0:0 -> a
    1:1:androidx.media3.exoplayer.source.ShuffleOrder cloneAndRemove(int,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lg0/d1;"}
    1:1:int getNextIndex(int):0:0 -> c
    1:1:androidx.media3.exoplayer.source.ShuffleOrder cloneAndInsert(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lg0/d1;"}
    1:1:int getPreviousIndex(int):0:0 -> e
    1:1:int getFirstIndex():0:0 -> f
    1:1:int getLastIndex():0:0 -> g
    1:1:androidx.media3.exoplayer.source.ShuffleOrder cloneAndClear():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/d1;"}
    1:1:int[] createShuffledList(int,java.util.Random):0:0 -> i
androidx.media3.exoplayer.source.SinglePeriodTimeline -> g0.e1:
    long presentationStartTimeMs -> e
    long windowStartTimeMs -> f
    long elapsedRealtimeEpochOffsetMs -> g
    long periodDurationUs -> h
    long windowDurationUs -> i
    long windowPositionInPeriodUs -> j
    long windowDefaultStartPositionUs -> k
    boolean isSeekable -> l
    boolean isDynamic -> m
    boolean suppressPositionProjection -> n
    java.lang.Object manifest -> o
    androidx.media3.common.MediaItem mediaItem -> p
    androidx.media3.common.MediaItem$LiveConfiguration liveConfiguration -> q
    java.lang.Object UID -> r
    androidx.media3.common.MediaItem MEDIA_ITEM -> s
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,long,long,long,long,long,long,boolean,boolean,boolean,java.lang.Object,androidx.media3.common.MediaItem,androidx.media3.common.MediaItem$LiveConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJJJJJJZZZLjava/lang/Object;Lj/u;Lj/u$g;)V"}
    2:2:void <init>(long,long,long,long,boolean,boolean,boolean,java.lang.Object,androidx.media3.common.MediaItem):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJJJZZZLjava/lang/Object;Lj/u;)V"}
    3:3:void <init>(long,boolean,boolean,boolean,java.lang.Object,androidx.media3.common.MediaItem):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JZZZLjava/lang/Object;Lj/u;)V"}
    1:1:int getIndexOfPeriod(java.lang.Object):0:0 -> b
    1:1:androidx.media3.common.Timeline$Period getPeriod(int,androidx.media3.common.Timeline$Period,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$b;Z)Lj/i0$b;"}
    1:1:int getPeriodCount():0:0 -> i
    1:1:java.lang.Object getUidOfPeriod(int):0:0 -> m
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
    1:1:int getWindowCount():0:0 -> p
androidx.media3.exoplayer.source.SingleSampleMediaPeriod -> g0.f1:
    androidx.media3.datasource.DataSpec dataSpec -> f
    androidx.media3.datasource.DataSource$Factory dataSourceFactory -> g
    androidx.media3.datasource.TransferListener transferListener -> h
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> i
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher eventDispatcher -> j
    androidx.media3.exoplayer.source.TrackGroupArray tracks -> k
    java.util.ArrayList sampleStreams -> l
    long durationUs -> m
    androidx.media3.exoplayer.upstream.Loader loader -> n
    androidx.media3.common.Format format -> o
    boolean treatLoadErrorsAsEndOfStream -> p
    boolean loadingFinished -> q
    byte[] sampleData -> r
    int sampleSize -> s
    1:1:void <init>(androidx.media3.datasource.DataSpec,androidx.media3.datasource.DataSource$Factory,androidx.media3.datasource.TransferListener,androidx.media3.common.Format,long,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Lo/g$a;Lo/y;Lj/q;JLk0/m;Lg0/m0$a;Z)V"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher access$300(androidx.media3.exoplayer.source.SingleSampleMediaPeriod):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f1;)Lg0/m0$a;"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.source.SingleSampleMediaPeriod$SourceLoadable,long,long,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f1$c;JJZ)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.source.SingleSampleMediaPeriod$SourceLoadable,long,long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f1$c;JJ)V"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.source.SingleSampleMediaPeriod$SourceLoadable,long,long,java.io.IOException,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f1$c;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:long seekToUs(long):0:0 -> r
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
    1:1:void release():0:0 -> t
    1:1:long readDiscontinuity():0:0 -> v
androidx.media3.exoplayer.source.SingleSampleMediaPeriod$1 -> g0.f1$a:
androidx.media3.exoplayer.source.SingleSampleMediaPeriod$SampleStreamImpl -> g0.f1$b:
    int streamState -> f
    boolean notifiedDownstreamFormat -> g
    androidx.media3.exoplayer.source.SingleSampleMediaPeriod this$0 -> h
    1:1:void <init>(androidx.media3.exoplayer.source.SingleSampleMediaPeriod):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f1;)V"}
    2:2:void <init>(androidx.media3.exoplayer.source.SingleSampleMediaPeriod,androidx.media3.exoplayer.source.SingleSampleMediaPeriod$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f1;Lg0/f1$a;)V"}
    1:1:void maybeNotifyDownstreamFormat():0:0 -> a
    1:1:void reset():0:0 -> b
    1:1:boolean isReady():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:int skipData(long):0:0 -> t
    1:1:int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
androidx.media3.exoplayer.source.SingleSampleMediaPeriod$SourceLoadable -> g0.f1$c:
    long loadTaskId -> a
    androidx.media3.datasource.DataSpec dataSpec -> b
    androidx.media3.datasource.StatsDataSource dataSource -> c
    byte[] sampleData -> d
    1:1:void <init>(androidx.media3.datasource.DataSpec,androidx.media3.datasource.DataSource):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Lo/g;)V"}
    1:1:void load():0:0 -> a
    1:1:void cancelLoad():0:0 -> b
    1:1:androidx.media3.datasource.StatsDataSource access$100(androidx.media3.exoplayer.source.SingleSampleMediaPeriod$SourceLoadable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f1$c;)Lo/x;"}
    1:1:byte[] access$200(androidx.media3.exoplayer.source.SingleSampleMediaPeriod$SourceLoadable):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f1$c;)[B"}
androidx.media3.exoplayer.source.SingleSampleMediaSource -> g0.g1:
    androidx.media3.datasource.DataSpec dataSpec -> m
    androidx.media3.datasource.DataSource$Factory dataSourceFactory -> n
    androidx.media3.common.Format format -> o
    long durationUs -> p
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> q
    boolean treatLoadErrorsAsEndOfStream -> r
    androidx.media3.common.Timeline timeline -> s
    androidx.media3.common.MediaItem mediaItem -> t
    androidx.media3.datasource.TransferListener transferListener -> u
    1:1:void <init>(java.lang.String,androidx.media3.common.MediaItem$SubtitleConfiguration,androidx.media3.datasource.DataSource$Factory,long,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,boolean,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lj/u$k;Lo/g$a;JLk0/m;ZLjava/lang/Object;)V"}
    2:2:void <init>(java.lang.String,androidx.media3.common.MediaItem$SubtitleConfiguration,androidx.media3.datasource.DataSource$Factory,long,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,boolean,java.lang.Object,androidx.media3.exoplayer.source.SingleSampleMediaSource$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lj/u$k;Lo/g$a;JLk0/m;ZLjava/lang/Object;Lg0/g1$a;)V"}
    1:1:void prepareSourceInternal(androidx.media3.datasource.TransferListener):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:void releaseSourceInternal():0:0 -> E
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod createPeriod(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.exoplayer.upstream.Allocator,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;Lk0/b;J)Lg0/c0;"}
    1:1:void maybeThrowSourceInfoRefreshError():0:0 -> h
    1:1:void releasePeriod(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
androidx.media3.exoplayer.source.SingleSampleMediaSource$1 -> g0.g1$a:
androidx.media3.exoplayer.source.SingleSampleMediaSource$Factory -> g0.g1$b:
    androidx.media3.datasource.DataSource$Factory dataSourceFactory -> a
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> b
    boolean treatLoadErrorsAsEndOfStream -> c
    java.lang.Object tag -> d
    java.lang.String trackId -> e
    1:1:void <init>(androidx.media3.datasource.DataSource$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g$a;)V"}
    1:1:androidx.media3.exoplayer.source.SingleSampleMediaSource createMediaSource(androidx.media3.common.MediaItem$SubtitleConfiguration,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u$k;J)Lg0/g1;"}
    1:1:androidx.media3.exoplayer.source.SingleSampleMediaSource$Factory setLoadErrorHandlingPolicy(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;)Lg0/g1$b;"}
androidx.media3.exoplayer.source.SpannedData -> g0.h1:
    int memoizedReadIndex -> a
    android.util.SparseArray spans -> b
    androidx.media3.common.util.Consumer removeCallback -> c
    1:1:void <init>(androidx.media3.common.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/g;)V"}
    1:1:void appendSpan(int,java.lang.Object):0:0 -> a
    1:1:void clear():0:0 -> b
    1:1:void discardFrom(int):0:0 -> c
    1:1:void discardTo(int):0:0 -> d
    1:1:java.lang.Object get(int):0:0 -> e
    1:1:java.lang.Object getEndValue():0:0 -> f
    1:1:boolean isEmpty():0:0 -> g
androidx.media3.exoplayer.source.TimeOffsetMediaPeriod -> g0.i1:
    androidx.media3.exoplayer.source.MediaPeriod mediaPeriod -> f
    long timeOffsetUs -> g
    androidx.media3.exoplayer.source.MediaPeriod$Callback callback -> h
    1:1:void <init>(androidx.media3.exoplayer.source.MediaPeriod,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;J)V"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:void onPrepared(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.SequenceableLoader):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c1;)V"}
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:long selectTracks(androidx.media3.exoplayer.trackselection.ExoTrackSelection[],boolean[],androidx.media3.exoplayer.source.SampleStream[],boolean[],long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y;[Z[Lg0/b1;[ZJ)J"}
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
    1:1:androidx.media3.exoplayer.source.MediaPeriod getWrappedMediaPeriod():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/c0;"}
    1:1:void prepare(androidx.media3.exoplayer.source.MediaPeriod$Callback,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0$a;J)V"}
    1:1:void onContinueLoadingRequested(androidx.media3.exoplayer.source.MediaPeriod):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/c0;)V"}
    1:1:void maybeThrowPrepareError():0:0 -> p
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:long seekToUs(long):0:0 -> r
    1:1:long readDiscontinuity():0:0 -> v
androidx.media3.exoplayer.source.TimeOffsetMediaPeriod$TimeOffsetSampleStream -> g0.i1$a:
    androidx.media3.exoplayer.source.SampleStream sampleStream -> f
    long timeOffsetUs -> g
    1:1:void <init>(androidx.media3.exoplayer.source.SampleStream,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/b1;J)V"}
    1:1:androidx.media3.exoplayer.source.SampleStream getChildStream():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/b1;"}
    1:1:boolean isReady():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:int skipData(long):0:0 -> t
    1:1:int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
androidx.media3.exoplayer.source.TimelineWithUpdatedMediaItem -> g0.j1:
    androidx.media3.common.MediaItem updatedMediaItem -> f
    1:1:void <init>(androidx.media3.common.Timeline,androidx.media3.common.MediaItem):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;Lj/u;)V"}
    1:1:androidx.media3.common.Timeline$Window getWindow(int,androidx.media3.common.Timeline$Window,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/i0$c;J)Lj/i0$c;"}
androidx.media3.exoplayer.source.TrackGroupArray -> g0.l1:
    int length -> a
    com.google.common.collect.ImmutableList trackGroups -> b
    int hashCode -> c
    androidx.media3.exoplayer.source.TrackGroupArray EMPTY -> d
    java.lang.String FIELD_TRACK_GROUPS -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.TrackGroup[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/j0;)V"}
    1:1:java.lang.Integer $r8$lambda$iEJy8sX2ftQJdZNQOEKRt5dzu6Q(androidx.media3.common.TrackGroup):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;)Ljava/lang/Integer;"}
    1:1:androidx.media3.common.TrackGroup get(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/j0;"}
    1:1:com.google.common.collect.ImmutableList getTrackTypes():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:int indexOf(androidx.media3.common.TrackGroup):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;)I"}
    1:1:java.lang.Integer lambda$getTrackTypes$0(androidx.media3.common.TrackGroup):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;)Ljava/lang/Integer;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:void verifyCorrectness():0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.source.TrackGroupArray$$ExternalSyntheticLambda0 -> g0.k1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.source.TrackGroupArray$$InternalSyntheticLambda$10$2ba8f79bbc989f13a55f9713802e5d8c630acd98a79a910ec140a43f41544056$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.source.TrackGroupArray$$InternalSyntheticLambda$10$2ba8f79bbc989f13a55f9713802e5d8c630acd98a79a910ec140a43f41544056$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.source.UnrecognizedInputFormatException -> g0.m1:
    android.net.Uri uri -> h
    com.google.common.collect.ImmutableList sniffFailures -> i
    1:1:void <init>(java.lang.String,android.net.Uri,java.util.List):0:0 -> <init>
androidx.media3.exoplayer.source.WrappingMediaSource -> g0.n1:
    androidx.media3.exoplayer.source.MediaSource mediaSource -> p
    java.lang.Void CHILD_SOURCE_ID -> q
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.exoplayer.source.MediaSource):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0;)V"}
    1:1:void prepareSourceInternal(androidx.media3.datasource.TransferListener):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/y;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Object,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lg0/f0$b;)Lg0/f0$b;"}
    1:1:long getMediaTimeForChildMediaTime(java.lang.Object,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;JLg0/f0$b;)J"}
    1:1:int getWindowIndexForChildWindowIndex(java.lang.Object,int):0:0 -> I
    1:1:void onChildSourceInfoRefreshed(java.lang.Object,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lg0/f0;Lj/i0;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/f0$b;)Lg0/f0$b;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Void,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Void;Lg0/f0$b;)Lg0/f0$b;"}
    1:1:long getMediaTimeForChildMediaTime(long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLg0/f0$b;)J"}
    1:1:long getMediaTimeForChildMediaTime(java.lang.Void,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Void;JLg0/f0$b;)J"}
    1:1:int getWindowIndexForChildWindowIndex(int):0:0 -> Q
    1:1:int getWindowIndexForChildWindowIndex(java.lang.Void,int):0:0 -> R
    void onChildSourceInfoRefreshed(androidx.media3.common.Timeline) -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;)V"}
    1:1:void onChildSourceInfoRefreshed(java.lang.Void,androidx.media3.exoplayer.source.MediaSource,androidx.media3.common.Timeline):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Void;Lg0/f0;Lj/i0;)V"}
    1:1:void prepareChildSource():0:0 -> U
    1:1:void prepareSourceInternal():0:0 -> V
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:void updateMediaItem(androidx.media3.common.MediaItem):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;)V"}
    1:1:boolean isSingleWindow():0:0 -> k
    1:1:androidx.media3.common.Timeline getInitialTimeline():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/i0;"}
androidx.media3.exoplayer.source.chunk.BaseMediaChunk -> h0.a:
    long clippedStartTimeUs -> k
    long clippedEndTimeUs -> l
    androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput output -> m
    int[] firstSampleIndices -> n
    1:1:void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,long,long,long,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Lj/q;ILjava/lang/Object;JJJJJ)V"}
    1:1:int getFirstSampleIndex(int):0:0 -> i
    1:1:androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput getOutput():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/c;"}
    1:1:void init(androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/c;)V"}
androidx.media3.exoplayer.source.chunk.BaseMediaChunkIterator -> h0.b:
    long fromIndex -> b
    long toIndex -> c
    long currentIndex -> d
    1:1:void <init>(long,long):0:0 -> <init>
    1:1:void checkInBounds():0:0 -> c
    1:1:long getCurrentIndex():0:0 -> d
    1:1:boolean isEnded():0:0 -> e
    1:1:void reset():0:0 -> f
    1:1:boolean next():0:0 -> next
androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput -> h0.c:
    int[] trackTypes -> a
    androidx.media3.exoplayer.source.SampleQueue[] sampleQueues -> b
    1:1:void <init>(int[],androidx.media3.exoplayer.source.SampleQueue[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([I[Lg0/a1;)V"}
    1:1:int[] getWriteIndices():0:0 -> a
    1:1:void setSampleOffsetUs(long):0:0 -> b
    1:1:androidx.media3.extractor.TrackOutput track(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
androidx.media3.exoplayer.source.chunk.BundledChunkExtractor -> h0.d:
    androidx.media3.extractor.Extractor extractor -> f
    int primaryTrackType -> g
    androidx.media3.common.Format primaryTrackManifestFormat -> h
    android.util.SparseArray bindingTrackOutputs -> i
    boolean extractorInitialized -> j
    androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider trackOutputProvider -> k
    long endTimeUs -> l
    androidx.media3.extractor.SeekMap seekMap -> m
    androidx.media3.common.Format[] sampleFormats -> n
    androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$Factory FACTORY -> o
    androidx.media3.extractor.PositionHolder POSITION_HOLDER -> p
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.extractor.Extractor,int,androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/r;ILj/q;)V"}
    1:1:void init(androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider,long,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/f$b;JJ)V"}
    1:1:androidx.media3.extractor.ChunkIndex getChunkIndex():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/h;"}
    1:1:boolean read(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:androidx.media3.extractor.TrackOutput track(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
    1:1:androidx.media3.common.Format[] getSampleFormats():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lj/q;"}
    1:1:void endTracks():0:0 -> f
    1:1:void release():0:0 -> release
    1:1:void seekMap(androidx.media3.extractor.SeekMap):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$BindingTrackOutput -> h0.d$a:
    int id -> a
    int type -> b
    androidx.media3.common.Format manifestFormat -> c
    androidx.media3.extractor.DiscardingTrackOutput fakeTrackOutput -> d
    androidx.media3.common.Format sampleFormat -> e
    androidx.media3.extractor.TrackOutput trackOutput -> f
    long endTimeUs -> g
    1:1:void <init>(int,int,androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILj/q;)V"}
    1:1:void format(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZI)I"}
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZ)I"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JIIILo0/s0$a;)V"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)V"}
    1:1:void bind(androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/f$b;J)V"}
androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$Factory -> h0.d$b:
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> a
    boolean parseSubtitlesDuringExtraction -> b
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lh0/f$a;"}
    1:1:androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lh0/f$a;"}
    1:1:androidx.media3.common.Format getOutputTextFormat(androidx.media3.common.Format):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
    1:1:androidx.media3.exoplayer.source.chunk.ChunkExtractor createProgressiveMediaExtractor(int,androidx.media3.common.Format,boolean,java.util.List,androidx.media3.extractor.TrackOutput,androidx.media3.exoplayer.analytics.PlayerId):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/q;ZLjava/util/List;Lo0/s0;Lr/w3;)Lh0/f;"}
    1:1:androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$Factory experimentalParseSubtitlesDuringExtraction(boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lh0/d$b;"}
    1:1:androidx.media3.exoplayer.source.chunk.BundledChunkExtractor$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lh0/d$b;"}
androidx.media3.exoplayer.source.chunk.Chunk -> h0.e:
    long loadTaskId -> a
    androidx.media3.datasource.DataSpec dataSpec -> b
    int type -> c
    androidx.media3.common.Format trackFormat -> d
    int trackSelectionReason -> e
    java.lang.Object trackSelectionData -> f
    long startTimeUs -> g
    long endTimeUs -> h
    androidx.media3.datasource.StatsDataSource dataSource -> i
    1:1:void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,int,androidx.media3.common.Format,int,java.lang.Object,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;ILj/q;ILjava/lang/Object;JJ)V"}
    1:1:long bytesLoaded():0:0 -> c
    1:1:long getDurationUs():0:0 -> d
    1:1:java.util.Map getResponseHeaders():0:0 -> e
    1:1:android.net.Uri getUri():0:0 -> f
androidx.media3.exoplayer.source.chunk.ChunkExtractor -> h0.f:
    void init(androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider,long,long) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/f$b;JJ)V"}
    androidx.media3.extractor.ChunkIndex getChunkIndex() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/h;"}
    boolean read(androidx.media3.extractor.ExtractorInput) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    androidx.media3.common.Format[] getSampleFormats() -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lj/q;"}
    void release() -> release
androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory -> h0.f$a:
    androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lh0/f$a;"}
    androidx.media3.exoplayer.source.chunk.ChunkExtractor$Factory experimentalParseSubtitlesDuringExtraction(boolean) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lh0/f$a;"}
    androidx.media3.common.Format getOutputTextFormat(androidx.media3.common.Format) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/q;"}
    androidx.media3.exoplayer.source.chunk.ChunkExtractor createProgressiveMediaExtractor(int,androidx.media3.common.Format,boolean,java.util.List,androidx.media3.extractor.TrackOutput,androidx.media3.exoplayer.analytics.PlayerId) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/q;ZLjava/util/List;Lo0/s0;Lr/w3;)Lh0/f;"}
androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider -> h0.f$b:
    androidx.media3.extractor.TrackOutput track(int,int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
androidx.media3.exoplayer.source.chunk.ChunkHolder -> h0.g:
    androidx.media3.exoplayer.source.chunk.Chunk chunk -> a
    boolean endOfStream -> b
    void <init>() -> <init>
    1:1:void clear():0:0 -> a
androidx.media3.exoplayer.source.chunk.ChunkSampleStream -> h0.h:
    androidx.media3.exoplayer.source.chunk.BaseMediaChunk canceledMediaChunk -> A
    boolean loadingFinished -> B
    int primaryTrackType -> f
    int[] embeddedTrackTypes -> g
    androidx.media3.common.Format[] embeddedTrackFormats -> h
    boolean[] embeddedTracksSelected -> i
    androidx.media3.exoplayer.source.chunk.ChunkSource chunkSource -> j
    androidx.media3.exoplayer.source.SequenceableLoader$Callback callback -> k
    androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher mediaSourceEventDispatcher -> l
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy -> m
    androidx.media3.exoplayer.upstream.Loader loader -> n
    androidx.media3.exoplayer.source.chunk.ChunkHolder nextChunkHolder -> o
    java.util.ArrayList mediaChunks -> p
    java.util.List readOnlyMediaChunks -> q
    androidx.media3.exoplayer.source.SampleQueue primarySampleQueue -> r
    androidx.media3.exoplayer.source.SampleQueue[] embeddedSampleQueues -> s
    androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput chunkOutput -> t
    androidx.media3.exoplayer.source.chunk.Chunk loadingChunk -> u
    androidx.media3.common.Format primaryDownstreamTrackFormat -> v
    androidx.media3.exoplayer.source.chunk.ChunkSampleStream$ReleaseCallback releaseCallback -> w
    long pendingResetPositionUs -> x
    long lastSeekPositionUs -> y
    int nextNotifyPrimaryFormatMediaChunkIndex -> z
    1:1:void <init>(int,int[],androidx.media3.common.Format[],androidx.media3.exoplayer.source.chunk.ChunkSource,androidx.media3.exoplayer.source.SequenceableLoader$Callback,androidx.media3.exoplayer.upstream.Allocator,long,androidx.media3.exoplayer.drm.DrmSessionManager,androidx.media3.exoplayer.drm.DrmSessionEventListener$EventDispatcher,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[I[Lj/q;Lh0/i;Lg0/c1$a;Lk0/b;JLv/x;Lv/v$a;Lk0/m;Lg0/m0$a;)V"}
    1:1:androidx.media3.exoplayer.source.MediaSourceEventListener$EventDispatcher access$500(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)Lg0/m0$a;"}
    1:1:void discardDownstreamMediaChunks(int):0:0 -> B
    1:1:void discardUpstream(int):0:0 -> C
    1:1:androidx.media3.exoplayer.source.chunk.BaseMediaChunk discardUpstreamMediaChunksFromIndex(int):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lh0/a;"}
    1:1:androidx.media3.exoplayer.source.chunk.ChunkSource getChunkSource():0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/i;"}
    1:1:androidx.media3.exoplayer.source.chunk.BaseMediaChunk getLastMediaChunk():0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh0/a;"}
    1:1:boolean haveReadFromMediaChunk(int):0:0 -> G
    1:1:boolean isMediaChunk(androidx.media3.exoplayer.source.chunk.Chunk):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;)Z"}
    1:1:boolean isPendingReset():0:0 -> I
    1:1:void maybeNotifyPrimaryTrackFormatChanged():0:0 -> J
    1:1:void maybeNotifyPrimaryTrackFormatChanged(int):0:0 -> K
    1:1:void onLoadCanceled(androidx.media3.exoplayer.source.chunk.Chunk,long,long,boolean):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;JJZ)V"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk,long,long):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;JJ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.source.chunk.Chunk,long,long,java.io.IOException,int):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:int primarySampleIndexToMediaChunkIndex(int,int):0:0 -> O
    1:1:void release():0:0 -> P
    1:1:void release(androidx.media3.exoplayer.source.chunk.ChunkSampleStream$ReleaseCallback):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h$b;)V"}
    1:1:void resetSampleQueues():0:0 -> R
    1:1:void seekToUs(long):0:0 -> S
    1:1:androidx.media3.exoplayer.source.chunk.ChunkSampleStream$EmbeddedSampleStream selectEmbeddedTrack(long,int):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JI)Lh0/h$a;"}
    1:1:long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    1:1:boolean isLoading():0:0 -> b
    1:1:long getBufferedPositionUs():0:0 -> c
    1:1:androidx.media3.exoplayer.source.chunk.BaseMediaChunk access$000(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)Lh0/a;"}
    1:1:boolean isReady():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:long getNextLoadPositionUs():0:0 -> g
    1:1:void reevaluateBuffer(long):0:0 -> h
    1:1:boolean continueLoading(androidx.media3.exoplayer.LoadingInfo):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;)Z"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onLoaderReleased():0:0 -> o
    1:1:void discardBuffer(long,boolean):0:0 -> q
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
    1:1:int skipData(long):0:0 -> t
    1:1:int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
    1:1:boolean[] access$100(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)[Z"}
    1:1:int[] access$200(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)[I"}
    1:1:androidx.media3.common.Format[] access$300(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)[Lj/q;"}
    1:1:long access$400(androidx.media3.exoplayer.source.chunk.ChunkSampleStream):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)J"}
androidx.media3.exoplayer.source.chunk.ChunkSampleStream$EmbeddedSampleStream -> h0.h$a:
    androidx.media3.exoplayer.source.chunk.ChunkSampleStream parent -> f
    androidx.media3.exoplayer.source.SampleQueue sampleQueue -> g
    int index -> h
    boolean notifiedDownstreamFormat -> i
    androidx.media3.exoplayer.source.chunk.ChunkSampleStream this$0 -> j
    1:1:void <init>(androidx.media3.exoplayer.source.chunk.ChunkSampleStream,androidx.media3.exoplayer.source.chunk.ChunkSampleStream,androidx.media3.exoplayer.source.SampleQueue,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;Lh0/h;Lg0/a1;I)V"}
    1:1:void maybeNotifyDownstreamFormat():0:0 -> a
    1:1:void release():0:0 -> b
    1:1:boolean isReady():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:int skipData(long):0:0 -> t
    1:1:int readData(androidx.media3.exoplayer.FormatHolder,androidx.media3.decoder.DecoderInputBuffer,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;Lp/i;I)I"}
androidx.media3.exoplayer.source.chunk.ChunkSampleStream$ReleaseCallback -> h0.h$b:
    void onSampleStreamReleased(androidx.media3.exoplayer.source.chunk.ChunkSampleStream) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/h;)V"}
androidx.media3.exoplayer.source.chunk.ChunkSource -> h0.i:
    long getAdjustedSeekPositionUs(long,androidx.media3.exoplayer.SeekParameters) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLq/c3;)J"}
    boolean onChunkLoadError(androidx.media3.exoplayer.source.chunk.Chunk,boolean,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;ZLk0/m$c;Lk0/m;)Z"}
    void onChunkLoadCompleted(androidx.media3.exoplayer.source.chunk.Chunk) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/e;)V"}
    void maybeThrowError() -> f
    int getPreferredQueueSize(long,java.util.List) -> h
    void getNextChunk(androidx.media3.exoplayer.LoadingInfo,long,java.util.List,androidx.media3.exoplayer.source.chunk.ChunkHolder) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x1;JLjava/util/List;Lh0/g;)V"}
    boolean shouldCancelLoad(long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLh0/e;Ljava/util/List;)Z"}
    void release() -> release
androidx.media3.exoplayer.source.chunk.ContainerMediaChunk -> h0.j:
    int chunkCount -> o
    long sampleOffsetUs -> p
    androidx.media3.exoplayer.source.chunk.ChunkExtractor chunkExtractor -> q
    long nextLoadPosition -> r
    boolean loadCanceled -> s
    boolean loadCompleted -> t
    1:1:void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,long,long,long,long,long,int,long,androidx.media3.exoplayer.source.chunk.ChunkExtractor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Lj/q;ILjava/lang/Object;JJJJJIJLh0/f;)V"}
    1:1:void load():0:0 -> a
    1:1:void cancelLoad():0:0 -> b
    1:1:long getNextChunkIndex():0:0 -> g
    1:1:boolean isLoadCompleted():0:0 -> h
    1:1:androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider getTrackOutputProvider(androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/c;)Lh0/f$b;"}
    1:1:void maybeWriteEmptySamples(androidx.media3.exoplayer.source.chunk.BaseMediaChunkOutput):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/c;)V"}
androidx.media3.exoplayer.source.chunk.DataChunk -> h0.k:
    byte[] data -> j
    boolean loadCanceled -> k
    1:1:void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,int,androidx.media3.common.Format,int,java.lang.Object,byte[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;ILj/q;ILjava/lang/Object;[B)V"}
    1:1:void load():0:0 -> a
    1:1:void cancelLoad():0:0 -> b
    void consume(byte[],int) -> g
    1:1:byte[] getDataHolder():0:0 -> h
    1:1:void maybeExpandData(int):0:0 -> i
androidx.media3.exoplayer.source.chunk.InitializationChunk -> h0.l:
    androidx.media3.exoplayer.source.chunk.ChunkExtractor chunkExtractor -> j
    androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider trackOutputProvider -> k
    long nextLoadPosition -> l
    boolean loadCanceled -> m
    1:1:void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,androidx.media3.exoplayer.source.chunk.ChunkExtractor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Lj/q;ILjava/lang/Object;Lh0/f;)V"}
    1:1:void load():0:0 -> a
    1:1:void cancelLoad():0:0 -> b
    1:1:void init(androidx.media3.exoplayer.source.chunk.ChunkExtractor$TrackOutputProvider):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh0/f$b;)V"}
androidx.media3.exoplayer.source.chunk.MediaChunk -> h0.m:
    long chunkIndex -> j
    1:1:void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,long,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Lj/q;ILjava/lang/Object;JJJ)V"}
    1:1:long getNextChunkIndex():0:0 -> g
    boolean isLoadCompleted() -> h
androidx.media3.exoplayer.source.chunk.MediaChunkIterator -> h0.n:
    androidx.media3.exoplayer.source.chunk.MediaChunkIterator EMPTY -> a
    1:1:void <clinit>():0:0 -> <clinit>
    long getChunkEndTimeUs() -> a
    long getChunkStartTimeUs() -> b
    boolean next() -> next
androidx.media3.exoplayer.source.chunk.MediaChunkIterator$1 -> h0.n$a:
    void <init>() -> <init>
    1:1:long getChunkEndTimeUs():0:0 -> a
    1:1:long getChunkStartTimeUs():0:0 -> b
    1:1:boolean next():0:0 -> next
androidx.media3.exoplayer.source.chunk.SingleSampleMediaChunk -> h0.o:
    int trackType -> o
    androidx.media3.common.Format sampleFormat -> p
    long nextLoadPosition -> q
    boolean loadCompleted -> r
    1:1:void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,androidx.media3.common.Format,int,java.lang.Object,long,long,long,int,androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Lj/q;ILjava/lang/Object;JJJILj/q;)V"}
    1:1:void load():0:0 -> a
    1:1:void cancelLoad():0:0 -> b
    1:1:boolean isLoadCompleted():0:0 -> h
androidx.media3.exoplayer.text.CuesResolver -> i0.a:
    com.google.common.collect.ImmutableList getCuesAtTimeUs(long) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Ll2/v;"}
    long getPreviousCueChangeTimeUs(long) -> b
    long getNextCueChangeTimeUs(long) -> c
    void clear() -> clear
    boolean addCues(androidx.media3.extractor.text.CuesWithTiming,long) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/e;J)Z"}
    void discardCuesBeforeTimeUs(long) -> e
androidx.media3.exoplayer.text.DelegatingSubtitleDecoder -> i0.b:
    androidx.media3.extractor.text.SubtitleParser subtitleParser -> p
    1:1:void <init>(java.lang.String,androidx.media3.extractor.text.SubtitleParser):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ll1/t;)V"}
    1:1:androidx.media3.extractor.text.Subtitle decode(byte[],int,boolean):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIZ)Ll1/k;"}
androidx.media3.exoplayer.text.MergingCuesResolver -> i0.e:
    java.util.List cuesWithTimingList -> a
    com.google.common.collect.Ordering CUES_DISPLAY_PRIORITY_COMPARATOR -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:com.google.common.collect.ImmutableList getCuesAtTimeUs(long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Ll2/v;"}
    1:1:long getPreviousCueChangeTimeUs(long):0:0 -> b
    1:1:long getNextCueChangeTimeUs(long):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean addCues(androidx.media3.extractor.text.CuesWithTiming,long):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/e;J)Z"}
    1:1:void discardCuesBeforeTimeUs(long):0:0 -> e
    1:1:java.lang.Long $r8$lambda$NQUG5YBo8dFVbdBhTyrHdcpt9yc(androidx.media3.extractor.text.CuesWithTiming):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/e;)Ljava/lang/Long;"}
    1:1:java.lang.Long $r8$lambda$hjWGvsjfpD6_nOQoSi0XfqQHxGk(androidx.media3.extractor.text.CuesWithTiming):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/e;)Ljava/lang/Long;"}
    1:1:java.lang.Long lambda$static$0(androidx.media3.extractor.text.CuesWithTiming):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/e;)Ljava/lang/Long;"}
    1:1:java.lang.Long lambda$static$1(androidx.media3.extractor.text.CuesWithTiming):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/e;)Ljava/lang/Long;"}
androidx.media3.exoplayer.text.MergingCuesResolver$$ExternalSyntheticLambda0 -> i0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.text.MergingCuesResolver$$InternalSyntheticLambda$8$504f082b493fd54bdb312d39d8accb8381ac1b999af64a5b5d08a67890876ebc$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.text.MergingCuesResolver$$InternalSyntheticLambda$8$504f082b493fd54bdb312d39d8accb8381ac1b999af64a5b5d08a67890876ebc$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.text.MergingCuesResolver$$ExternalSyntheticLambda1 -> i0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.text.MergingCuesResolver$$InternalSyntheticLambda$8$504f082b493fd54bdb312d39d8accb8381ac1b999af64a5b5d08a67890876ebc$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.text.MergingCuesResolver$$InternalSyntheticLambda$8$504f082b493fd54bdb312d39d8accb8381ac1b999af64a5b5d08a67890876ebc$1.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.text.ReplacingCuesResolver -> i0.f:
    java.util.ArrayList cuesWithTimingList -> a
    1:1:void <init>():0:0 -> <init>
    1:1:com.google.common.collect.ImmutableList getCuesAtTimeUs(long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Ll2/v;"}
    1:1:long getPreviousCueChangeTimeUs(long):0:0 -> b
    1:1:long getNextCueChangeTimeUs(long):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean addCues(androidx.media3.extractor.text.CuesWithTiming,long):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/e;J)Z"}
    1:1:void discardCuesBeforeTimeUs(long):0:0 -> e
    1:1:int getIndexOfCuesStartingAfter(long):0:0 -> f
androidx.media3.exoplayer.text.SubtitleDecoderFactory -> i0.g:
    androidx.media3.exoplayer.text.SubtitleDecoderFactory DEFAULT -> a
    1:1:void <clinit>():0:0 -> <clinit>
    boolean supportsFormat(androidx.media3.common.Format) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    androidx.media3.extractor.text.SubtitleDecoder createDecoder(androidx.media3.common.Format) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Ll1/l;"}
androidx.media3.exoplayer.text.SubtitleDecoderFactory$1 -> i0.g$a:
    androidx.media3.extractor.text.DefaultSubtitleParserFactory delegate -> b
    1:1:void <init>():0:0 -> <init>
    1:1:boolean supportsFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:androidx.media3.extractor.text.SubtitleDecoder createDecoder(androidx.media3.common.Format):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Ll1/l;"}
androidx.media3.exoplayer.text.TextOutput -> i0.h:
    void onCues(androidx.media3.common.text.CueGroup) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;)V"}
    void onCues(java.util.List) -> v
androidx.media3.exoplayer.text.TextRenderer -> i0.i:
    boolean waitingForKeyFrame -> A
    int decoderReplacementState -> B
    androidx.media3.extractor.text.SubtitleDecoder subtitleDecoder -> C
    androidx.media3.extractor.text.SubtitleInputBuffer nextSubtitleInputBuffer -> D
    androidx.media3.extractor.text.SubtitleOutputBuffer subtitle -> E
    androidx.media3.extractor.text.SubtitleOutputBuffer nextSubtitle -> F
    int nextSubtitleEventIndex -> G
    android.os.Handler outputHandler -> H
    androidx.media3.exoplayer.text.TextOutput output -> I
    androidx.media3.exoplayer.FormatHolder formatHolder -> J
    boolean inputStreamEnded -> K
    boolean outputStreamEnded -> L
    androidx.media3.common.Format streamFormat -> M
    long outputStreamOffsetUs -> N
    long lastRendererPositionUs -> O
    long finalStreamEndPositionUs -> P
    boolean legacyDecodingEnabled -> Q
    androidx.media3.extractor.text.CueDecoder cueDecoder -> w
    androidx.media3.decoder.DecoderInputBuffer cueDecoderInputBuffer -> x
    androidx.media3.exoplayer.text.CuesResolver cuesResolver -> y
    androidx.media3.exoplayer.text.SubtitleDecoderFactory subtitleDecoderFactory -> z
    1:1:void <init>(androidx.media3.exoplayer.text.TextOutput,android.os.Looper):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/h;Landroid/os/Looper;)V"}
    2:2:void <init>(androidx.media3.exoplayer.text.TextOutput,android.os.Looper,androidx.media3.exoplayer.text.SubtitleDecoderFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li0/h;Landroid/os/Looper;Li0/g;)V"}
    1:1:void updateOutput(androidx.media3.common.text.CueGroup):0:0 -> A0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;)V"}
    1:1:void onDisabled():0:0 -> W
    1:1:void onPositionReset(long,boolean):0:0 -> Z
    1:1:int supportsFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:boolean isEnded():0:0 -> c
    1:1:boolean isReady():0:0 -> e
    1:1:void onStreamChanged(androidx.media3.common.Format[],long,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/q;JJLg0/f0$b;)V"}
    1:1:boolean handleMessage(android.os.Message):0:0 -> handleMessage
    1:1:void assertLegacyDecodingEnabledIfRequired():0:0 -> k0
    1:1:void render(long,long):0:0 -> l
    1:1:void clearOutput():0:0 -> l0
    1:1:long getCurrentEventTimeUs(long):0:0 -> m0
    1:1:java.lang.String getName():0:0 -> n
    1:1:long getNextEventTime():0:0 -> n0
    1:1:long getPresentationTimeUs(long):0:0 -> o0
    1:1:void handleDecoderError(androidx.media3.extractor.text.SubtitleDecoderException):0:0 -> p0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/m;)V"}
    1:1:void initSubtitleDecoder():0:0 -> q0
    1:1:void invokeUpdateOutputInternal(androidx.media3.common.text.CueGroup):0:0 -> r0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;)V"}
    1:1:boolean isCuesWithTiming(androidx.media3.common.Format):0:0 -> s0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:boolean readAndDecodeCuesWithTiming(long):0:0 -> t0
    1:1:void releaseSubtitleBuffers():0:0 -> u0
    1:1:void releaseSubtitleDecoder():0:0 -> v0
    1:1:void renderFromCuesWithTiming(long):0:0 -> w0
    1:1:void renderFromSubtitles(long):0:0 -> x0
    1:1:void replaceSubtitleDecoder():0:0 -> y0
    1:1:void setFinalStreamEndPositionUs(long):0:0 -> z0
androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection -> j0.a:
    androidx.media3.exoplayer.upstream.BandwidthMeter bandwidthMeter -> h
    long minDurationForQualityIncreaseUs -> i
    long maxDurationForQualityDecreaseUs -> j
    long minDurationToRetainAfterDiscardUs -> k
    int maxWidthToDiscard -> l
    int maxHeightToDiscard -> m
    float bandwidthFraction -> n
    float bufferedFractionToLiveEdgeForQualityIncrease -> o
    com.google.common.collect.ImmutableList adaptationCheckpoints -> p
    androidx.media3.common.util.Clock clock -> q
    float playbackSpeed -> r
    int selectedIndex -> s
    int reason -> t
    long lastBufferEvaluationMs -> u
    androidx.media3.exoplayer.source.chunk.MediaChunk lastBufferEvaluationMediaChunk -> v
    long latestBitrateEstimate -> w
    1:1:void <init>(androidx.media3.common.TrackGroup,int[],int,androidx.media3.exoplayer.upstream.BandwidthMeter,long,long,long,int,int,float,float,java.util.List,androidx.media3.common.util.Clock):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;[IILk0/e;JJJIIFFLjava/util/List;Lm/c;)V"}
    1:1:void updateSelectedTrack(long,long,long,java.util.List,androidx.media3.exoplayer.source.chunk.MediaChunkIterator[]):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJJLjava/util/List;[Lh0/n;)V"}
    1:1:long getAllocatedBandwidth(long):0:0 -> C
    1:1:long getLastChunkDurationUs(java.util.List):0:0 -> D
    1:1:long getMinDurationToRetainAfterDiscardUs():0:0 -> E
    1:1:long getNextChunkDurationUs(androidx.media3.exoplayer.source.chunk.MediaChunkIterator[],java.util.List):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lh0/n;Ljava/util/List;)J"}
    1:1:long[][] getSortedTrackBitrates(androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[]):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y$a;)[[J"}
    1:1:com.google.common.collect.ImmutableList getSwitchOrder(long[][]):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"([[J)Ll2/v;"}
    1:1:long getTotalAllocatableBandwidth(long):0:0 -> I
    1:1:long minDurationForQualityIncreaseUs(long,long):0:0 -> J
    1:1:boolean shouldEvaluateQueueSize(long,java.util.List):0:0 -> K
    1:1:com.google.common.collect.ImmutableList access$000(androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[]):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y$a;)Ll2/v;"}
    1:1:void addCheckpoint(java.util.List,long[]):0:0 -> i
    1:1:boolean canSelectFormat(androidx.media3.common.Format,int,long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;IJ)Z"}
    1:1:int determineIdealSelectedIndex(long,long):0:0 -> k
    1:1:com.google.common.collect.ImmutableList getAdaptationCheckpoints(androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[]):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y$a;)Ll2/v;"}
    1:1:void disable():0:0 -> m
    1:1:int getSelectionReason():0:0 -> s
    1:1:int getSelectedIndex():0:0 -> t
    1:1:void enable():0:0 -> v
    1:1:void onPlaybackSpeed(float):0:0 -> w
    1:1:java.lang.Object getSelectionData():0:0 -> x
    1:1:int evaluateQueueSize(long,java.util.List):0:0 -> z
androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection$AdaptationCheckpoint -> j0.a$a:
    long totalBandwidth -> a
    long allocatedBandwidth -> b
    1:1:void <init>(long,long):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection$Factory -> j0.a$b:
    int minDurationForQualityIncreaseMs -> a
    int maxDurationForQualityDecreaseMs -> b
    int minDurationToRetainAfterDiscardMs -> c
    int maxWidthToDiscard -> d
    int maxHeightToDiscard -> e
    float bandwidthFraction -> f
    float bufferedFractionToLiveEdgeForQualityIncrease -> g
    androidx.media3.common.util.Clock clock -> h
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int,int,int,float):0:0 -> <init>
    3:3:void <init>(int,int,int,int,int,float,float,androidx.media3.common.util.Clock):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIIIIFFLm/c;)V"}
    1:1:androidx.media3.exoplayer.trackselection.ExoTrackSelection[] createTrackSelections(androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[],androidx.media3.exoplayer.upstream.BandwidthMeter,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y$a;Lk0/e;Lg0/f0$b;Lj/i0;)[Lj0/y;"}
    1:1:androidx.media3.exoplayer.trackselection.AdaptiveTrackSelection createAdaptiveTrackSelection(androidx.media3.common.TrackGroup,int[],int,androidx.media3.exoplayer.upstream.BandwidthMeter,com.google.common.collect.ImmutableList):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;[IILk0/e;Ll2/v;)Lj0/a;"}
androidx.media3.exoplayer.trackselection.BaseTrackSelection -> j0.c:
    androidx.media3.common.TrackGroup group -> a
    int length -> b
    int[] tracks -> c
    int type -> d
    androidx.media3.common.Format[] formats -> e
    long[] excludeUntilTimes -> f
    int hashCode -> g
    1:1:void <init>(androidx.media3.common.TrackGroup,int[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;[I)V"}
    2:2:void <init>(androidx.media3.common.TrackGroup,int[],int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;[II)V"}
    1:1:void onRebuffer():0:0 -> B
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.TrackGroup getTrackGroup():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/j0;"}
    1:1:int indexOf(androidx.media3.common.Format):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:androidx.media3.common.Format getFormat(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q;"}
    1:1:int getIndexInTrackGroup(int):0:0 -> d
    1:1:int indexOf(int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int $r8$lambda$N0PeJs9XEZWtL1vUb0QtZG1hh84(androidx.media3.common.Format,androidx.media3.common.Format):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lj/q;)I"}
    1:1:int lambda$new$0(androidx.media3.common.Format,androidx.media3.common.Format):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lj/q;)I"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:int length():0:0 -> length
    1:1:void disable():0:0 -> m
    1:1:int getSelectedIndexInTrackGroup():0:0 -> n
    1:1:boolean shouldCancelChunkLoad(long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List):0:0 -> o
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLh0/e;Ljava/util/List;)Z"}
    1:1:void onPlayWhenReadyChanged(boolean):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getSelectedFormat():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:boolean isTrackExcluded(int,long):0:0 -> r
    1:1:boolean excludeTrack(int,long):0:0 -> u
    1:1:void enable():0:0 -> v
    1:1:void onPlaybackSpeed(float):0:0 -> w
    1:1:void onDiscontinuity():0:0 -> y
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int evaluateQueueSize(long,java.util.List):0:0 -> z
androidx.media3.exoplayer.trackselection.BaseTrackSelection$$ExternalSyntheticLambda0 -> j0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.trackselection.BaseTrackSelection$$InternalSyntheticLambda$9$0f66713bd918d96a016024d5a54079029b083af8aa7cbd0f46be70fe48b438a2$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.trackselection.BaseTrackSelection$$InternalSyntheticLambda$9$0f66713bd918d96a016024d5a54079029b083af8aa7cbd0f46be70fe48b438a2$0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector -> j0.n:
    java.lang.Object lock -> d
    android.content.Context context -> e
    androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory trackSelectionFactory -> f
    boolean deviceIsTV -> g
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters -> h
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 spatializer -> i
    androidx.media3.common.AudioAttributes audioAttributes -> j
    com.google.common.collect.Ordering FORMAT_VALUE_ORDERING -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,androidx.media3.common.TrackSelectionParameters,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj/k0;Lj0/y$b;)V"}
    3:3:void <init>(android.content.Context,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj0/y$b;)V"}
    4:4:void <init>(androidx.media3.common.TrackSelectionParameters,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0;Lj0/y$b;Landroid/content/Context;)V"}
    1:1:void access$4600(androidx.media3.exoplayer.trackselection.DefaultTrackSelector):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)V"}
    1:1:void applyLegacyRendererOverrides(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[]):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;Lj0/n$e;[Lj0/y$a;)V"}
    1:1:void applyTrackSelectionOverrides(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,androidx.media3.common.TrackSelectionParameters,androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[]):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;Lj/k0;[Lj0/y$a;)V"}
    1:1:void collectTrackSelectionOverrides(androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.common.TrackSelectionParameters,java.util.Map):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/l1;Lj/k0;Ljava/util/Map;)V"}
    1:1:int getFormatLanguageScore(androidx.media3.common.Format,java.lang.String,boolean):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Ljava/lang/String;Z)I"}
    1:1:int getMaxVideoPixelsToRetainForViewport(androidx.media3.common.TrackGroup,int,int,boolean):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;IIZ)I"}
    1:1:android.graphics.Point getMaxVideoSizeInViewport(boolean,int,int,int,int):0:0 -> G
    1:1:int getRoleFlagMatchScore(int,int):0:0 -> H
    1:1:int getVideoCodecPreferenceScore(java.lang.String):0:0 -> I
    1:1:boolean isAudioFormatWithinAudioChannelCountConstraints(androidx.media3.common.Format):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:boolean isDolbyAudio(androidx.media3.common.Format):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:java.util.List lambda$selectAudioTrack$2(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,boolean,int[],int,androidx.media3.common.TrackGroup,int[]):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;Z[IILj/j0;[I)Ljava/util/List;"}
    1:1:java.util.List lambda$selectImageTrack$4(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int,androidx.media3.common.TrackGroup,int[]):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;ILj/j0;[I)Ljava/util/List;"}
    1:1:java.util.List lambda$selectTextTrack$3(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,java.lang.String,int,androidx.media3.common.TrackGroup,int[]):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;Ljava/lang/String;ILj/j0;[I)Ljava/util/List;"}
    1:1:java.util.List lambda$selectVideoTrack$1(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[],int,androidx.media3.common.TrackGroup,int[]):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;[IILj/j0;[I)Ljava/util/List;"}
    1:1:int lambda$static$0(java.lang.Integer,java.lang.Integer):0:0 -> P
    1:1:void maybeConfigureRendererForOffload(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],androidx.media3.exoplayer.RendererConfiguration[],androidx.media3.exoplayer.trackselection.ExoTrackSelection[]):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;Lj0/a0$a;[[[I[Lq/a3;[Lj0/y;)V"}
    1:1:void maybeConfigureRenderersForTunneling(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],androidx.media3.exoplayer.RendererConfiguration[],androidx.media3.exoplayer.trackselection.ExoTrackSelection[]):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;[[[I[Lq/a3;[Lj0/y;)V"}
    1:1:void maybeInvalidateForAudioChannelCountConstraints():0:0 -> S
    1:1:void maybeInvalidateForRendererCapabilitiesChange(androidx.media3.exoplayer.Renderer):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)V"}
    1:1:java.lang.String normalizeUndeterminedLanguageToNull(java.lang.String):0:0 -> U
    1:1:boolean rendererSupportsOffload(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int,androidx.media3.common.Format):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;ILj/q;)Z"}
    1:1:boolean rendererSupportsTunneling(int[][],androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.trackselection.ExoTrackSelection):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"([[ILg0/l1;Lj0/y;)Z"}
    1:1:androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[] selectAllTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;[[[I[ILj0/n$e;)[Lj0/y$a;"}
    1:1:android.util.Pair selectAudioTrack(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;[[[I[ILj0/n$e;)Landroid/util/Pair;"}
    1:1:android.util.Pair selectImageTrack(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;[[[ILj0/n$e;)Landroid/util/Pair;"}
    1:1:void onRendererCapabilitiesChanged(androidx.media3.exoplayer.Renderer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)V"}
    1:1:androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition selectOtherTrack(int,androidx.media3.exoplayer.source.TrackGroupArray,int[][],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/l1;[[ILj0/n$e;)Lj0/y$a;"}
    1:1:android.util.Pair selectTextTrack(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,java.lang.String):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;[[[ILj0/n$e;Ljava/lang/String;)Landroid/util/Pair;"}
    1:1:androidx.media3.exoplayer.RendererCapabilities$Listener getRendererCapabilitiesListener():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/z2$a;"}
    1:1:android.util.Pair selectTracksForType(int,androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory,java.util.Comparator):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj0/a0$a;[[[ILj0/n$i$a;Ljava/util/Comparator;)Landroid/util/Pair;"}
    1:1:android.util.Pair selectVideoTrack(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[],androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;[[[I[ILj0/n$e;)Landroid/util/Pair;"}
    1:1:boolean isSetParametersSupported():0:0 -> g
    1:1:void release():0:0 -> i
    1:1:void setAudioAttributes(androidx.media3.common.AudioAttributes):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:1:android.util.Pair selectTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[],androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;[[[I[ILg0/f0$b;Lj/i0;)Landroid/util/Pair;"}
    1:1:int $r8$lambda$1nvSsz_fYVL5dkTz_9iN-EJhAJY(java.lang.Integer,java.lang.Integer):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List $r8$lambda$24MewCmMX-Ab2Adj3ZGAx2R6pEc(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int,androidx.media3.common.TrackGroup,int[]):0:0 -> q
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;ILj/j0;[I)Ljava/util/List;"}
    1:1:java.util.List $r8$lambda$2uJrpjjcMkg069E9xBPJl1ObcDU(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,java.lang.String,int,androidx.media3.common.TrackGroup,int[]):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;Ljava/lang/String;ILj/j0;[I)Ljava/util/List;"}
    1:1:boolean $r8$lambda$38UNzDaPpwu3YUyf5lUz7V9eZlE(androidx.media3.exoplayer.trackselection.DefaultTrackSelector,androidx.media3.common.Format):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Lj/q;)Z"}
    1:1:java.util.List $r8$lambda$djmlv8Bff10otQ4hZHiHwYsO9kE(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[],int,androidx.media3.common.TrackGroup,int[]):0:0 -> t
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;[IILj/j0;[I)Ljava/util/List;"}
    1:1:java.util.List $r8$lambda$htXxucnGG-GRjMxqxHahjBTiuoI(androidx.media3.exoplayer.trackselection.DefaultTrackSelector,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,boolean,int[],int,androidx.media3.common.TrackGroup,int[]):0:0 -> u
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Lj0/n$e;Z[IILj/j0;[I)Ljava/util/List;"}
    1:1:int access$4100(androidx.media3.common.TrackGroup,int,int,boolean):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;IIZ)I"}
    1:1:int access$4200(int,int):0:0 -> w
    1:1:int access$4300(java.lang.String):0:0 -> x
    1:1:com.google.common.collect.Ordering access$4400():0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/m0;"}
    1:1:boolean access$4500(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int,androidx.media3.common.Format):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;ILj/q;)Z"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$ExternalSyntheticLambda0 -> j0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$10$9fdb53b39e0052ea191732a7e3c430086d265df3f792f78c89e066364577e966$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$10$9fdb53b39e0052ea191732a7e3c430086d265df3f792f78c89e066364577e966$0.<init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;)V"}
    1:1:boolean androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$10$9fdb53b39e0052ea191732a7e3c430086d265df3f792f78c89e066364577e966$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$ExternalSyntheticLambda1 -> j0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$5644587751eaf0cfca6fed4589de648624759a3aa5f59890aa827b9101359c46$0.f$0 -> a
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$5644587751eaf0cfca6fed4589de648624759a3aa5f59890aa827b9101359c46$0.f$1 -> b
    boolean androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$5644587751eaf0cfca6fed4589de648624759a3aa5f59890aa827b9101359c46$0.f$2 -> c
    int[] androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$5644587751eaf0cfca6fed4589de648624759a3aa5f59890aa827b9101359c46$0.f$3 -> d
    1:1:void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$5644587751eaf0cfca6fed4589de648624759a3aa5f59890aa827b9101359c46$0.<init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,boolean,int[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Lj0/n$e;Z[I)V"}
    1:1:java.util.List androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$5644587751eaf0cfca6fed4589de648624759a3aa5f59890aa827b9101359c46$0.create(int,androidx.media3.common.TrackGroup,int[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;[I)Ljava/util/List;"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$ExternalSyntheticLambda2 -> j0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$5644587751eaf0cfca6fed4589de648624759a3aa5f59890aa827b9101359c46$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$5644587751eaf0cfca6fed4589de648624759a3aa5f59890aa827b9101359c46$1.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$ExternalSyntheticLambda3 -> j0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$61c25057f64420531de5ebb8ce5173f139f0c7bade988bf237de8a2634ee059a$0.f$0 -> a
    int[] androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$61c25057f64420531de5ebb8ce5173f139f0c7bade988bf237de8a2634ee059a$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$61c25057f64420531de5ebb8ce5173f139f0c7bade988bf237de8a2634ee059a$0.<init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;[I)V"}
    1:1:java.util.List androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$61c25057f64420531de5ebb8ce5173f139f0c7bade988bf237de8a2634ee059a$0.create(int,androidx.media3.common.TrackGroup,int[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;[I)Ljava/util/List;"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$ExternalSyntheticLambda4 -> j0.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$61c25057f64420531de5ebb8ce5173f139f0c7bade988bf237de8a2634ee059a$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$61c25057f64420531de5ebb8ce5173f139f0c7bade988bf237de8a2634ee059a$1.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$ExternalSyntheticLambda5 -> j0.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$c65eb7b2fcfbedb641caad77d61e5cc1982e6d34a6b13abe2c564dd211f8ebcf$0.f$0 -> a
    java.lang.String androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$c65eb7b2fcfbedb641caad77d61e5cc1982e6d34a6b13abe2c564dd211f8ebcf$0.f$1 -> b
    1:1:void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$c65eb7b2fcfbedb641caad77d61e5cc1982e6d34a6b13abe2c564dd211f8ebcf$0.<init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;Ljava/lang/String;)V"}
    1:1:java.util.List androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$c65eb7b2fcfbedb641caad77d61e5cc1982e6d34a6b13abe2c564dd211f8ebcf$0.create(int,androidx.media3.common.TrackGroup,int[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;[I)Ljava/util/List;"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$ExternalSyntheticLambda6 -> j0.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$c65eb7b2fcfbedb641caad77d61e5cc1982e6d34a6b13abe2c564dd211f8ebcf$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$c65eb7b2fcfbedb641caad77d61e5cc1982e6d34a6b13abe2c564dd211f8ebcf$1.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$ExternalSyntheticLambda7 -> j0.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$cd2e250b28ba6a06d441d3bc6db3cfe742bbd53c13551f187bb7ba90cbb4b332$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$cd2e250b28ba6a06d441d3bc6db3cfe742bbd53c13551f187bb7ba90cbb4b332$0.<init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;)V"}
    1:1:java.util.List androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$cd2e250b28ba6a06d441d3bc6db3cfe742bbd53c13551f187bb7ba90cbb4b332$0.create(int,androidx.media3.common.TrackGroup,int[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;[I)Ljava/util/List;"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$ExternalSyntheticLambda8 -> j0.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$cd2e250b28ba6a06d441d3bc6db3cfe742bbd53c13551f187bb7ba90cbb4b332$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$cd2e250b28ba6a06d441d3bc6db3cfe742bbd53c13551f187bb7ba90cbb4b332$1.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$ExternalSyntheticLambda9 -> j0.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$d16b9484a1df8cc47b8bd66a8a4dc1486d5fe9025ac2eb1d0b08d6b6a7dfb93a$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.trackselection.DefaultTrackSelector$$InternalSyntheticLambda$9$d16b9484a1df8cc47b8bd66a8a4dc1486d5fe9025ac2eb1d0b08d6b6a7dfb93a$0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1 -> j0.n$a:
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo -> j0.n$b:
    boolean usesPrimaryDecoder -> A
    boolean usesHardwareAcceleration -> B
    int selectionEligibility -> j
    boolean isWithinConstraints -> k
    java.lang.String language -> l
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters -> m
    boolean isWithinRendererCapabilities -> n
    int preferredLanguageScore -> o
    int preferredLanguageIndex -> p
    int preferredRoleFlagsScore -> q
    boolean allowMixedMimeTypes -> r
    boolean hasMainOrNoRoleFlag -> s
    int localeLanguageMatchIndex -> t
    int localeLanguageScore -> u
    boolean isDefaultSelectionFlag -> v
    int channelCount -> w
    int sampleRate -> x
    int bitrate -> y
    int preferredMimeTypeMatchIndex -> z
    1:1:void <init>(int,androidx.media3.common.TrackGroup,int,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int,boolean,com.google.common.base.Predicate,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;ILj0/n$e;IZLk2/n;I)V"}
    1:1:int getSelectionEligibility():0:0 -> a
    1:1:boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$i;)Z"}
    1:1:int compareSelections(java.util.List,java.util.List):0:0 -> c
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
    1:1:int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$b;)I"}
    1:1:com.google.common.collect.ImmutableList createForTrackGroup(int,androidx.media3.common.TrackGroup,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[],boolean,com.google.common.base.Predicate,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;Lj0/n$e;[IZLk2/n;I)Ll2/v;"}
    1:1:int evaluateSelectionEligibility(int,boolean,int):0:0 -> f
    1:1:boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$AudioTrackInfo):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$b;)Z"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ImageTrackInfo -> j0.n$c:
    int selectionEligibility -> j
    int pixelCount -> k
    1:1:void <init>(int,androidx.media3.common.TrackGroup,int,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;ILj0/n$e;I)V"}
    1:1:int getSelectionEligibility():0:0 -> a
    1:1:boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$i;)Z"}
    1:1:int compareSelections(java.util.List,java.util.List):0:0 -> c
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
    1:1:int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ImageTrackInfo):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$c;)I"}
    1:1:com.google.common.collect.ImmutableList createForTrackGroup(int,androidx.media3.common.TrackGroup,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;Lj0/n$e;[I)Ll2/v;"}
    1:1:boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$ImageTrackInfo):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$c;)Z"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore -> j0.n$d:
    boolean isDefault -> f
    boolean isWithinRendererCapabilities -> g
    1:1:void <init>(androidx.media3.common.Format,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;I)V"}
    1:1:int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$OtherTrackScore):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$d;)I"}
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters -> j0.n$e:
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters DEFAULT_WITHOUT_CONTEXT -> A0
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters DEFAULT -> B0
    java.lang.String FIELD_EXCEED_VIDEO_CONSTRAINTS_IF_NECESSARY -> C0
    java.lang.String FIELD_ALLOW_VIDEO_MIXED_MIME_TYPE_ADAPTIVENESS -> D0
    java.lang.String FIELD_ALLOW_VIDEO_NON_SEAMLESS_ADAPTIVENESS -> E0
    java.lang.String FIELD_EXCEED_AUDIO_CONSTRAINTS_IF_NECESSARY -> F0
    java.lang.String FIELD_ALLOW_AUDIO_MIXED_MIME_TYPE_ADAPTIVENESS -> G0
    java.lang.String FIELD_ALLOW_AUDIO_MIXED_SAMPLE_RATE_ADAPTIVENESS -> H0
    java.lang.String FIELD_ALLOW_AUDIO_MIXED_CHANNEL_COUNT_ADAPTIVENESS -> I0
    java.lang.String FIELD_EXCEED_RENDERER_CAPABILITIES_IF_NECESSARY -> J0
    java.lang.String FIELD_TUNNELING_ENABLED -> K0
    java.lang.String FIELD_ALLOW_MULTIPLE_ADAPTIVE_SELECTIONS -> L0
    java.lang.String FIELD_SELECTION_OVERRIDES_RENDERER_INDICES -> M0
    java.lang.String FIELD_SELECTION_OVERRIDES_TRACK_GROUP_ARRAYS -> N0
    java.lang.String FIELD_SELECTION_OVERRIDES -> O0
    java.lang.String FIELD_RENDERER_DISABLED_INDICES -> P0
    java.lang.String FIELD_ALLOW_VIDEO_MIXED_DECODER_SUPPORT_ADAPTIVENESS -> Q0
    java.lang.String FIELD_ALLOW_AUDIO_MIXED_DECODER_SUPPORT_ADAPTIVENESS -> R0
    java.lang.String FIELD_CONSTRAIN_AUDIO_CHANNEL_COUNT_TO_DEVICE_CAPABILITIES -> S0
    java.lang.String FIELD_ALLOW_INVALIDATE_SELECTIONS_ON_RENDERER_CAPABILITIES_CHANGE -> T0
    java.lang.String FIELD_ALLOW_AUDIO_NON_SEAMLESS_ADAPTIVENESS -> U0
    boolean exceedVideoConstraintsIfNecessary -> j0
    boolean allowVideoMixedMimeTypeAdaptiveness -> k0
    boolean allowVideoNonSeamlessAdaptiveness -> l0
    boolean allowVideoMixedDecoderSupportAdaptiveness -> m0
    boolean exceedAudioConstraintsIfNecessary -> n0
    boolean allowAudioMixedMimeTypeAdaptiveness -> o0
    boolean allowAudioMixedSampleRateAdaptiveness -> p0
    boolean allowAudioMixedChannelCountAdaptiveness -> q0
    boolean allowAudioMixedDecoderSupportAdaptiveness -> r0
    boolean allowAudioNonSeamlessAdaptiveness -> s0
    boolean constrainAudioChannelCountToDeviceCapabilities -> t0
    boolean exceedRendererCapabilitiesIfNecessary -> u0
    boolean tunnelingEnabled -> v0
    boolean allowMultipleAdaptiveSelections -> w0
    boolean allowInvalidateSelectionsOnRendererCapabilitiesChange -> x0
    android.util.SparseArray selectionOverrides -> y0
    android.util.SparseBooleanArray rendererDisabledFlags -> z0
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)V"}
    2:2:void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;Lj0/n$a;)V"}
    1:1:android.util.SparseArray access$000(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;)Landroid/util/SparseArray;"}
    1:1:android.util.SparseBooleanArray access$100(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;)Landroid/util/SparseBooleanArray;"}
    1:1:boolean areRendererDisabledFlagsEqual(android.util.SparseBooleanArray,android.util.SparseBooleanArray):0:0 -> c
    1:1:boolean areSelectionOverridesEqual(android.util.SparseArray,android.util.SparseArray):0:0 -> d
    1:1:boolean areSelectionOverridesEqual(java.util.Map,java.util.Map):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder buildUpon():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/n$e$a;"}
    1:1:androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters getDefaults(android.content.Context):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lj0/n$e;"}
    1:1:boolean getRendererDisabled(int):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride getSelectionOverride(int,androidx.media3.exoplayer.source.TrackGroupArray):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/l1;)Lj0/n$f;"}
    1:1:boolean hasSelectionOverride(int,androidx.media3.exoplayer.source.TrackGroupArray):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILg0/l1;)Z"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder -> j0.n$e$a:
    boolean exceedVideoConstraintsIfNecessary -> C
    boolean allowVideoMixedMimeTypeAdaptiveness -> D
    boolean allowVideoNonSeamlessAdaptiveness -> E
    boolean allowVideoMixedDecoderSupportAdaptiveness -> F
    boolean exceedAudioConstraintsIfNecessary -> G
    boolean allowAudioMixedMimeTypeAdaptiveness -> H
    boolean allowAudioMixedSampleRateAdaptiveness -> I
    boolean allowAudioMixedChannelCountAdaptiveness -> J
    boolean allowAudioMixedDecoderSupportAdaptiveness -> K
    boolean allowAudioNonSeamlessAdaptiveness -> L
    boolean constrainAudioChannelCountToDeviceCapabilities -> M
    boolean exceedRendererCapabilitiesIfNecessary -> N
    boolean tunnelingEnabled -> O
    boolean allowMultipleAdaptiveSelections -> P
    boolean allowInvalidateSelectionsOnRendererCapabilitiesChange -> Q
    android.util.SparseArray selectionOverrides -> R
    android.util.SparseBooleanArray rendererDisabledFlags -> S
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(android.content.Context):0:0 -> <init>
    3:3:void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;)V"}
    4:4:void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e;Lj0/n$a;)V"}
    1:1:androidx.media3.common.TrackSelectionParameters build():0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/k0;"}
    1:1:androidx.media3.common.TrackSelectionParameters$Builder setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(android.content.Context):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lj/k0$c;"}
    1:1:androidx.media3.common.TrackSelectionParameters$Builder setViewportSize(int,int,boolean):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIZ)Lj/k0$c;"}
    1:1:androidx.media3.common.TrackSelectionParameters$Builder setViewportSizeToPhysicalDisplaySize(android.content.Context,boolean):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)Lj/k0$c;"}
    1:1:boolean access$2200(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$2300(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$2400(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$2500(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$2600(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$2700(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$2800(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$2900(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$3000(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$3100(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$3200(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$3300(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$3400(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$3500(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:boolean access$3600(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Z"}
    1:1:android.util.SparseArray access$3700(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Landroid/util/SparseArray;"}
    1:1:android.util.SparseBooleanArray access$3800(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$e$a;)Landroid/util/SparseBooleanArray;"}
    1:1:androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters build():0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj0/n$e;"}
    1:1:android.util.SparseArray cloneSelectionOverrides(android.util.SparseArray):0:0 -> a0
    1:1:void init():0:0 -> b0
    1:1:androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder set(androidx.media3.common.TrackSelectionParameters):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/k0;)Lj0/n$e$a;"}
    1:1:androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(android.content.Context):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lj0/n$e$a;"}
    1:1:androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setViewportSize(int,int,boolean):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIZ)Lj0/n$e$a;"}
    1:1:androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters$Builder setViewportSizeToPhysicalDisplaySize(android.content.Context,boolean):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)Lj0/n$e$a;"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SelectionOverride -> j0.n$f:
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 -> j0.n$g:
    android.media.Spatializer spatializer -> a
    boolean spatializationSupported -> b
    android.os.Handler handler -> c
    android.media.Spatializer$OnSpatializerStateChangedListener listener -> d
    1:1:void <init>(android.media.Spatializer):0:0 -> <init>
    1:1:boolean canBeSpatialized(androidx.media3.common.AudioAttributes,androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;Lj/q;)Z"}
    1:1:void ensureInitialized(androidx.media3.exoplayer.trackselection.DefaultTrackSelector,android.os.Looper):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n;Landroid/os/Looper;)V"}
    1:1:boolean isAvailable():0:0 -> c
    1:1:boolean isEnabled():0:0 -> d
    1:1:boolean isSpatializationSupported():0:0 -> e
    1:1:void release():0:0 -> f
    1:1:androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 tryCreateInstance(android.content.Context):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lj0/n$g;"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$ExternalSyntheticApiModelOutline0 -> j0.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$InternalSyntheticApiModelOutline$10$33caa4a64c1e1d5b405c7ba3feee109418d76c768546699693e7df700a0bc385$0.m(android.media.Spatializer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$ExternalSyntheticApiModelOutline1 -> j0.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$InternalSyntheticApiModelOutline$10$d502504a8bf3dee2bc6701c5c0f69b9550920be5a892789d833b530479583141$1.m(android.media.Spatializer,java.util.concurrent.Executor,android.media.Spatializer$OnSpatializerStateChangedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$ExternalSyntheticApiModelOutline2 -> j0.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$InternalSyntheticApiModelOutline$10$d5cd4afc5e4a43a2121b7820ca0f60a9a77954a987eaf21f64c1cdbb3d0d14e0$0.m(android.media.Spatializer,android.media.Spatializer$OnSpatializerStateChangedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$ExternalSyntheticApiModelOutline3 -> j0.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$InternalSyntheticApiModelOutline$11$3e93d7bd7d9167f06afc64e93a05321a3e7978586c9fb408c7d34dfa83323c9e$0.m(android.media.Spatializer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$ExternalSyntheticApiModelOutline4 -> j0.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$InternalSyntheticApiModelOutline$11$5915425a55a9219318b9a926a4d0b74cf526b6d3583a178017d2002ed7035fe5$0.m(android.media.Spatializer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$ExternalSyntheticApiModelOutline5 -> j0.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$InternalSyntheticApiModelOutline$11$63bd9b39d72ae2338ce168f1b42f18ff12d74458a6893107fdfc13afba3a5467$0.m(android.media.Spatializer,android.media.AudioAttributes,android.media.AudioFormat):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$ExternalSyntheticApiModelOutline6 -> j0.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.Spatializer androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$$InternalSyntheticApiModelOutline$9$0131f4e2f0fac8928baba07bee9b318a1146bed919764b262723c51369f35e32$0.m(android.media.AudioManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32$1 -> j0.n$g$a:
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector val$defaultTrackSelector -> a
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32 this$0 -> b
    1:1:void <init>(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$SpatializerWrapperV32,androidx.media3.exoplayer.trackselection.DefaultTrackSelector):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$g;Lj0/n;)V"}
    1:1:void onSpatializerAvailableChanged(android.media.Spatializer,boolean):0:0 -> onSpatializerAvailableChanged
    1:1:void onSpatializerEnabledChanged(android.media.Spatializer,boolean):0:0 -> onSpatializerEnabledChanged
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo -> j0.n$h:
    int selectionEligibility -> j
    boolean isWithinRendererCapabilities -> k
    boolean isDefault -> l
    boolean isForced -> m
    int preferredLanguageIndex -> n
    int preferredLanguageScore -> o
    int preferredRoleFlagsScore -> p
    int selectedAudioLanguageScore -> q
    boolean hasCaptionRoleFlags -> r
    1:1:void <init>(int,androidx.media3.common.TrackGroup,int,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;ILj0/n$e;ILjava/lang/String;)V"}
    1:1:int getSelectionEligibility():0:0 -> a
    1:1:boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$i;)Z"}
    1:1:int compareSelections(java.util.List,java.util.List):0:0 -> c
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
    1:1:int compareTo(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$h;)I"}
    1:1:com.google.common.collect.ImmutableList createForTrackGroup(int,androidx.media3.common.TrackGroup,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[],java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;Lj0/n$e;[ILjava/lang/String;)Ll2/v;"}
    1:1:boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TextTrackInfo):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$h;)Z"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo -> j0.n$i:
    int rendererIndex -> f
    androidx.media3.common.TrackGroup trackGroup -> g
    int trackIndex -> h
    androidx.media3.common.Format format -> i
    1:1:void <init>(int,androidx.media3.common.TrackGroup,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;I)V"}
    int getSelectionEligibility() -> a
    boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$i;)Z"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo$Factory -> j0.n$i$a:
    java.util.List create(int,androidx.media3.common.TrackGroup,int[]) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;[I)Ljava/util/List;"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo -> j0.n$j:
    boolean isWithinMaxConstraints -> j
    androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters parameters -> k
    boolean isWithinMinConstraints -> l
    boolean isWithinRendererCapabilities -> m
    boolean hasReasonableFrameRate -> n
    int bitrate -> o
    int pixelCount -> p
    int preferredMimeTypeMatchIndex -> q
    int preferredRoleFlagsScore -> r
    boolean hasMainOrNoRoleFlag -> s
    boolean allowMixedMimeTypes -> t
    int selectionEligibility -> u
    boolean usesPrimaryDecoder -> v
    boolean usesHardwareAcceleration -> w
    int codecPreferenceScore -> x
    1:1:void <init>(int,androidx.media3.common.TrackGroup,int,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int,int,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;ILj0/n$e;IIZ)V"}
    1:1:int getSelectionEligibility():0:0 -> a
    1:1:boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$TrackInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$i;)Z"}
    1:1:int $r8$lambda$PHcY5cRhUX-iKudpaWJEa198duE(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$j;Lj0/n$j;)I"}
    1:1:int $r8$lambda$zYuHKkFu1szcwTLsD7W8Cd7A9OE(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$j;Lj0/n$j;)I"}
    1:1:int compareNonQualityPreferences(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$j;Lj0/n$j;)I"}
    1:1:int compareQualityPreferences(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$j;Lj0/n$j;)I"}
    1:1:int compareSelections(java.util.List,java.util.List):0:0 -> g
    1:1:com.google.common.collect.ImmutableList createForTrackGroup(int,androidx.media3.common.TrackGroup,androidx.media3.exoplayer.trackselection.DefaultTrackSelector$Parameters,int[],int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/j0;Lj0/n$e;[II)Ll2/v;"}
    1:1:int evaluateSelectionEligibility(int,int):0:0 -> i
    1:1:boolean isCompatibleForAdaptationWith(androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/n$j;)Z"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo$$ExternalSyntheticLambda0 -> j0.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo$$InternalSyntheticLambda$10$5fa0747a53af50f61ceaf8185b4e1eac2450ee1c6870445e0b18f0f273af122a$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo$$InternalSyntheticLambda$10$5fa0747a53af50f61ceaf8185b4e1eac2450ee1c6870445e0b18f0f273af122a$0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo$$ExternalSyntheticLambda1 -> j0.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo$$InternalSyntheticLambda$10$5fa0747a53af50f61ceaf8185b4e1eac2450ee1c6870445e0b18f0f273af122a$3.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.trackselection.DefaultTrackSelector$VideoTrackInfo$$InternalSyntheticLambda$10$5fa0747a53af50f61ceaf8185b4e1eac2450ee1c6870445e0b18f0f273af122a$3.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.trackselection.ExoTrackSelection -> j0.y:
    void updateSelectedTrack(long,long,long,java.util.List,androidx.media3.exoplayer.source.chunk.MediaChunkIterator[]) -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJJLjava/util/List;[Lh0/n;)V"}
    void onRebuffer() -> B
    void disable() -> m
    int getSelectedIndexInTrackGroup() -> n
    boolean shouldCancelChunkLoad(long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLh0/e;Ljava/util/List;)Z"}
    void onPlayWhenReadyChanged(boolean) -> p
    androidx.media3.common.Format getSelectedFormat() -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    boolean isTrackExcluded(int,long) -> r
    int getSelectionReason() -> s
    int getSelectedIndex() -> t
    boolean excludeTrack(int,long) -> u
    void enable() -> v
    void onPlaybackSpeed(float) -> w
    java.lang.Object getSelectionData() -> x
    void onDiscontinuity() -> y
    int evaluateQueueSize(long,java.util.List) -> z
androidx.media3.exoplayer.trackselection.ExoTrackSelection$-CC -> j0.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$onDiscontinuity(androidx.media3.exoplayer.trackselection.ExoTrackSelection):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;)V"}
    1:1:void $default$onPlayWhenReadyChanged(androidx.media3.exoplayer.trackselection.ExoTrackSelection,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;Z)V"}
    1:1:void $default$onRebuffer(androidx.media3.exoplayer.trackselection.ExoTrackSelection):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;)V"}
    1:1:boolean $default$shouldCancelChunkLoad(androidx.media3.exoplayer.trackselection.ExoTrackSelection,long,androidx.media3.exoplayer.source.chunk.Chunk,java.util.List):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;JLh0/e;Ljava/util/List;)Z"}
androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition -> j0.y$a:
    androidx.media3.common.TrackGroup group -> a
    int[] tracks -> b
    int type -> c
    1:1:void <init>(androidx.media3.common.TrackGroup,int[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;[I)V"}
    2:2:void <init>(androidx.media3.common.TrackGroup,int[],int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;[II)V"}
androidx.media3.exoplayer.trackselection.ExoTrackSelection$Factory -> j0.y$b:
    androidx.media3.exoplayer.trackselection.ExoTrackSelection[] createTrackSelections(androidx.media3.exoplayer.trackselection.ExoTrackSelection$Definition[],androidx.media3.exoplayer.upstream.BandwidthMeter,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj0/y$a;Lk0/e;Lg0/f0$b;Lj/i0;)[Lj0/y;"}
androidx.media3.exoplayer.trackselection.FixedTrackSelection -> j0.z:
    int reason -> h
    java.lang.Object data -> i
    1:1:void <init>(androidx.media3.common.TrackGroup,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;II)V"}
    2:2:void <init>(androidx.media3.common.TrackGroup,int,int,int,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/j0;IIILjava/lang/Object;)V"}
    1:1:void updateSelectedTrack(long,long,long,java.util.List,androidx.media3.exoplayer.source.chunk.MediaChunkIterator[]):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJJLjava/util/List;[Lh0/n;)V"}
    1:1:int getSelectionReason():0:0 -> s
    1:1:int getSelectedIndex():0:0 -> t
    1:1:java.lang.Object getSelectionData():0:0 -> x
androidx.media3.exoplayer.trackselection.MappingTrackSelector -> j0.a0:
    androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo currentMappedTrackInfo -> c
    void <init>() -> <init>
    1:1:void onSelectionActivated(java.lang.Object):0:0 -> h
    1:1:androidx.media3.exoplayer.trackselection.TrackSelectorResult selectTracks(androidx.media3.exoplayer.RendererCapabilities[],androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lq/z2;Lg0/l1;Lg0/f0$b;Lj/i0;)Lj0/e0;"}
    1:1:int findRenderer(androidx.media3.exoplayer.RendererCapabilities[],androidx.media3.common.TrackGroup,int[],boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lq/z2;Lj/j0;[IZ)I"}
    1:1:int[] getFormatSupport(androidx.media3.exoplayer.RendererCapabilities,androidx.media3.common.TrackGroup):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/z2;Lj/j0;)[I"}
    1:1:int[] getMixedMimeTypeAdaptationSupports(androidx.media3.exoplayer.RendererCapabilities[]):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lq/z2;)[I"}
    android.util.Pair selectTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[],androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;[[[I[ILg0/f0$b;Lj/i0;)Landroid/util/Pair;"}
androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo -> j0.a0$a:
    int rendererCount -> a
    java.lang.String[] rendererNames -> b
    int[] rendererTrackTypes -> c
    androidx.media3.exoplayer.source.TrackGroupArray[] rendererTrackGroups -> d
    int[] rendererMixedMimeTypeAdaptiveSupports -> e
    int[][][] rendererFormatSupports -> f
    androidx.media3.exoplayer.source.TrackGroupArray unmappedTrackGroups -> g
    1:1:void <init>(java.lang.String[],int[],androidx.media3.exoplayer.source.TrackGroupArray[],int[],int[][][],androidx.media3.exoplayer.source.TrackGroupArray):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/String;[I[Lg0/l1;[I[[[ILg0/l1;)V"}
    1:1:int getAdaptiveSupport(int,int,boolean):0:0 -> a
    1:1:int getAdaptiveSupport(int,int,int[]):0:0 -> b
    1:1:int getCapabilities(int,int,int):0:0 -> c
    1:1:int getRendererCount():0:0 -> d
    1:1:int getRendererType(int):0:0 -> e
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getTrackGroups(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lg0/l1;"}
    1:1:int getTrackSupport(int,int,int):0:0 -> g
    1:1:androidx.media3.exoplayer.source.TrackGroupArray getUnmappedTrackGroups():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg0/l1;"}
androidx.media3.exoplayer.trackselection.TrackSelection -> j0.b0:
    androidx.media3.common.TrackGroup getTrackGroup() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/j0;"}
    int indexOf(androidx.media3.common.Format) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    androidx.media3.common.Format getFormat(int) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lj/q;"}
    int getIndexInTrackGroup(int) -> d
    int indexOf(int) -> e
    int length() -> length
androidx.media3.exoplayer.trackselection.TrackSelectionUtil -> j0.c0:
    1:1:androidx.media3.common.Tracks buildTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,androidx.media3.exoplayer.trackselection.TrackSelection[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;[Lj0/b0;)Lj/l0;"}
    1:1:androidx.media3.common.Tracks buildTracks(androidx.media3.exoplayer.trackselection.MappingTrackSelector$MappedTrackInfo,java.util.List[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/a0$a;[Ljava/util/List;)Lj/l0;"}
    1:1:androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions createFallbackOptions(androidx.media3.exoplayer.trackselection.ExoTrackSelection):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;)Lk0/m$a;"}
androidx.media3.exoplayer.trackselection.TrackSelector -> j0.d0:
    androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener listener -> a
    androidx.media3.exoplayer.upstream.BandwidthMeter bandwidthMeter -> b
    void <init>() -> <init>
    1:1:androidx.media3.exoplayer.upstream.BandwidthMeter getBandwidthMeter():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/e;"}
    androidx.media3.exoplayer.RendererCapabilities$Listener getRendererCapabilitiesListener() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/z2$a;"}
    1:1:void init(androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener,androidx.media3.exoplayer.upstream.BandwidthMeter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/d0$a;Lk0/e;)V"}
    1:1:void invalidate():0:0 -> e
    1:1:void invalidateForRendererCapabilitiesChange(androidx.media3.exoplayer.Renderer):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)V"}
    boolean isSetParametersSupported() -> g
    void onSelectionActivated(java.lang.Object) -> h
    1:1:void release():0:0 -> i
    androidx.media3.exoplayer.trackselection.TrackSelectorResult selectTracks(androidx.media3.exoplayer.RendererCapabilities[],androidx.media3.exoplayer.source.TrackGroupArray,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId,androidx.media3.common.Timeline) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lq/z2;Lg0/l1;Lg0/f0$b;Lj/i0;)Lj0/e0;"}
    void setAudioAttributes(androidx.media3.common.AudioAttributes) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
androidx.media3.exoplayer.trackselection.TrackSelector$InvalidationListener -> j0.d0$a:
    void onRendererCapabilitiesChanged(androidx.media3.exoplayer.Renderer) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/x2;)V"}
    void onTrackSelectionsInvalidated() -> g
androidx.media3.exoplayer.trackselection.TrackSelectorResult -> j0.e0:
    int length -> a
    androidx.media3.exoplayer.RendererConfiguration[] rendererConfigurations -> b
    androidx.media3.exoplayer.trackselection.ExoTrackSelection[] selections -> c
    androidx.media3.common.Tracks tracks -> d
    java.lang.Object info -> e
    1:1:void <init>(androidx.media3.exoplayer.RendererConfiguration[],androidx.media3.exoplayer.trackselection.ExoTrackSelection[],androidx.media3.common.Tracks,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lq/a3;[Lj0/y;Lj/l0;Ljava/lang/Object;)V"}
    1:1:boolean isEquivalent(androidx.media3.exoplayer.trackselection.TrackSelectorResult):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/e0;)Z"}
    1:1:boolean isEquivalent(androidx.media3.exoplayer.trackselection.TrackSelectorResult,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/e0;I)Z"}
    1:1:boolean isRendererEnabled(int):0:0 -> c
androidx.media3.exoplayer.upstream.Allocation -> k0.a:
    byte[] data -> a
    int offset -> b
    1:1:void <init>(byte[],int):0:0 -> <init>
androidx.media3.exoplayer.upstream.Allocator -> k0.b:
    void release(androidx.media3.exoplayer.upstream.Allocator$AllocationNode) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b$a;)V"}
    void trim() -> b
    void release(androidx.media3.exoplayer.upstream.Allocation) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/a;)V"}
    androidx.media3.exoplayer.upstream.Allocation allocate() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a;"}
    int getIndividualAllocationLength() -> e
androidx.media3.exoplayer.upstream.Allocator$AllocationNode -> k0.b$a:
    androidx.media3.exoplayer.upstream.Allocation getAllocation() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a;"}
    androidx.media3.exoplayer.upstream.Allocator$AllocationNode next() -> next
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/b$a;"}
androidx.media3.exoplayer.upstream.BandwidthMeter -> k0.e:
    long getBitrateEstimate() -> a
    androidx.media3.datasource.TransferListener getTransferListener() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/y;"}
    void addEventListener(android.os.Handler,androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lk0/e$a;)V"}
    void removeEventListener(androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/e$a;)V"}
    long getTimeToFirstByteEstimateUs() -> i
androidx.media3.exoplayer.upstream.BandwidthMeter$-CC -> k0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:long $default$getTimeToFirstByteEstimateUs(androidx.media3.exoplayer.upstream.BandwidthMeter):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/e;)J"}
androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener -> k0.e$a:
    void onBandwidthSample(int,long,long) -> N
androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher -> k0.e$a$a:
    java.util.concurrent.CopyOnWriteArrayList listeners -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void $r8$lambda$Mbwn2ga0EIE0XL-yT6DTuqKqjlA(androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$HandlerAndListener,int,long,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/e$a$a$a;IJJ)V"}
    1:1:void addListener(android.os.Handler,androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lk0/e$a;)V"}
    1:1:void bandwidthSample(int,long,long):0:0 -> c
    1:1:void lambda$bandwidthSample$0(androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$HandlerAndListener,int,long,long):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/e$a$a$a;IJJ)V"}
    1:1:void removeListener(androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/e$a;)V"}
androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$$ExternalSyntheticLambda0 -> k0.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$HandlerAndListener androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$$InternalSyntheticLambda$10$e7b072965b5a25b85c3e2498711ae64bf2eba6234323df2c96ea7a0d4d6ce5f1$0.f$0 -> f
    int androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$$InternalSyntheticLambda$10$e7b072965b5a25b85c3e2498711ae64bf2eba6234323df2c96ea7a0d4d6ce5f1$0.f$1 -> g
    long androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$$InternalSyntheticLambda$10$e7b072965b5a25b85c3e2498711ae64bf2eba6234323df2c96ea7a0d4d6ce5f1$0.f$2 -> h
    long androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$$InternalSyntheticLambda$10$e7b072965b5a25b85c3e2498711ae64bf2eba6234323df2c96ea7a0d4d6ce5f1$0.f$3 -> i
    1:1:void androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$$InternalSyntheticLambda$10$e7b072965b5a25b85c3e2498711ae64bf2eba6234323df2c96ea7a0d4d6ce5f1$0.<init>(androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$HandlerAndListener,int,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/e$a$a$a;IJJ)V"}
    1:1:void androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$$InternalSyntheticLambda$10$e7b072965b5a25b85c3e2498711ae64bf2eba6234323df2c96ea7a0d4d6ce5f1$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$HandlerAndListener -> k0.e$a$a$a:
    android.os.Handler handler -> a
    androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener listener -> b
    boolean released -> c
    1:1:void <init>(android.os.Handler,androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lk0/e$a;)V"}
    1:1:androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener access$000(androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$HandlerAndListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/e$a$a$a;)Lk0/e$a;"}
    1:1:boolean access$100(androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$HandlerAndListener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/e$a$a$a;)Z"}
    1:1:android.os.Handler access$200(androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher$HandlerAndListener):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/e$a$a$a;)Landroid/os/Handler;"}
    1:1:void release():0:0 -> d
androidx.media3.exoplayer.upstream.CmcdConfiguration -> k0.f:
androidx.media3.exoplayer.upstream.CmcdData -> k0.g:
    androidx.media3.datasource.DataSpec addToDataSpec(androidx.media3.datasource.DataSpec) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;)Lo/k;"}
androidx.media3.exoplayer.upstream.CmcdData$Factory -> k0.g$a:
    java.util.regex.Pattern CUSTOM_KEY_NAME_PATTERN -> a
    1:1:void <clinit>():0:0 -> <clinit>
    androidx.media3.exoplayer.upstream.CmcdData createCmcdData() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/g;"}
    1:1:java.lang.String getObjectType(androidx.media3.exoplayer.trackselection.ExoTrackSelection):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj0/y;)Ljava/lang/String;"}
    androidx.media3.exoplayer.upstream.CmcdData$Factory setChunkDurationUs(long) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lk0/g$a;"}
    androidx.media3.exoplayer.upstream.CmcdData$Factory setNextObjectRequest(java.lang.String) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lk0/g$a;"}
    androidx.media3.exoplayer.upstream.CmcdData$Factory setNextRangeRequest(java.lang.String) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lk0/g$a;"}
    androidx.media3.exoplayer.upstream.CmcdData$Factory setObjectType(java.lang.String) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lk0/g$a;"}
androidx.media3.exoplayer.upstream.DefaultAllocator -> k0.h:
    boolean trimOnReset -> a
    int individualAllocationSize -> b
    byte[] initialAllocationBlock -> c
    int targetBufferSize -> d
    int allocatedCount -> e
    int availableCount -> f
    androidx.media3.exoplayer.upstream.Allocation[] availableAllocations -> g
    1:1:void <init>(boolean,int):0:0 -> <init>
    2:2:void <init>(boolean,int,int):0:0 -> <init>
    1:1:void release(androidx.media3.exoplayer.upstream.Allocator$AllocationNode):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/b$a;)V"}
    1:1:void trim():0:0 -> b
    1:1:void release(androidx.media3.exoplayer.upstream.Allocation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/a;)V"}
    1:1:androidx.media3.exoplayer.upstream.Allocation allocate():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/a;"}
    1:1:int getIndividualAllocationLength():0:0 -> e
    1:1:int getTotalBytesAllocated():0:0 -> f
    1:1:void reset():0:0 -> g
    1:1:void setTargetBufferSize(int):0:0 -> h
androidx.media3.exoplayer.upstream.DefaultBandwidthMeter -> k0.j:
    com.google.common.collect.ImmutableMap initialBitrateEstimates -> a
    androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener$EventDispatcher eventDispatcher -> b
    androidx.media3.common.util.Clock clock -> c
    boolean resetOnNetworkTypeChange -> d
    androidx.media3.exoplayer.upstream.SlidingPercentile slidingPercentile -> e
    int streamCount -> f
    long sampleStartTimeMs -> g
    long sampleBytesTransferred -> h
    long totalElapsedTimeMs -> i
    long totalBytesTransferred -> j
    long bitrateEstimate -> k
    long lastReportedBitrateEstimate -> l
    int networkType -> m
    boolean networkTypeOverrideSet -> n
    int networkTypeOverride -> o
    com.google.common.collect.ImmutableList DEFAULT_INITIAL_BITRATE_ESTIMATES_WIFI -> p
    com.google.common.collect.ImmutableList DEFAULT_INITIAL_BITRATE_ESTIMATES_2G -> q
    com.google.common.collect.ImmutableList DEFAULT_INITIAL_BITRATE_ESTIMATES_3G -> r
    com.google.common.collect.ImmutableList DEFAULT_INITIAL_BITRATE_ESTIMATES_4G -> s
    com.google.common.collect.ImmutableList DEFAULT_INITIAL_BITRATE_ESTIMATES_5G_NSA -> t
    com.google.common.collect.ImmutableList DEFAULT_INITIAL_BITRATE_ESTIMATES_5G_SA -> u
    androidx.media3.exoplayer.upstream.DefaultBandwidthMeter singletonInstance -> v
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,java.util.Map,int,androidx.media3.common.util.Clock,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/Map;ILm/c;Z)V"}
    2:2:void <init>(android.content.Context,java.util.Map,int,androidx.media3.common.util.Clock,boolean,androidx.media3.exoplayer.upstream.DefaultBandwidthMeter$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/Map;ILm/c;ZLk0/j$a;)V"}
    1:1:long getBitrateEstimate():0:0 -> a
    1:1:void onTransferInitializing(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Z)V"}
    1:1:void onTransferStart(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Z)V"}
    1:1:androidx.media3.datasource.TransferListener getTransferListener():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo/y;"}
    1:1:void onTransferEnd(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;Z)V"}
    1:1:void addEventListener(android.os.Handler,androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lk0/e$a;)V"}
    1:1:void onBytesTransferred(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,boolean,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;ZI)V"}
    1:1:void removeEventListener(androidx.media3.exoplayer.upstream.BandwidthMeter$EventListener):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/e$a;)V"}
    1:1:long getTimeToFirstByteEstimateUs():0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$8vbqeEDAAIcRppX7lWd9C-LcIoU(androidx.media3.exoplayer.upstream.DefaultBandwidthMeter,int):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/j;I)V"}
    1:1:int[] access$100(java.lang.String):0:0 -> k
    1:1:int[] getInitialBitrateCountryGroupAssignment(java.lang.String):0:0 -> l
    1:1:long getInitialBitrateEstimateForNetworkType(int):0:0 -> m
    1:1:androidx.media3.exoplayer.upstream.DefaultBandwidthMeter getSingletonInstance(android.content.Context):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lk0/j;"}
    1:1:boolean isTransferAtFullNetworkSpeed(androidx.media3.datasource.DataSpec,boolean):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/k;Z)Z"}
    1:1:void maybeNotifyBandwidthSample(int,long,long):0:0 -> p
    1:1:void onNetworkTypeChanged(int):0:0 -> q
androidx.media3.exoplayer.upstream.DefaultBandwidthMeter$$ExternalSyntheticLambda0 -> k0.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.upstream.DefaultBandwidthMeter androidx.media3.exoplayer.upstream.DefaultBandwidthMeter$$InternalSyntheticLambda$9$118adc6f1abd2c5bb8605d2fc3050e0311539268d603cdf273a8ac45257c985e$0.f$0 -> a
    1:1:void androidx.media3.exoplayer.upstream.DefaultBandwidthMeter$$InternalSyntheticLambda$9$118adc6f1abd2c5bb8605d2fc3050e0311539268d603cdf273a8ac45257c985e$0.<init>(androidx.media3.exoplayer.upstream.DefaultBandwidthMeter):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/j;)V"}
    1:1:void androidx.media3.exoplayer.upstream.DefaultBandwidthMeter$$InternalSyntheticLambda$9$118adc6f1abd2c5bb8605d2fc3050e0311539268d603cdf273a8ac45257c985e$0.onNetworkTypeChanged(int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.upstream.DefaultBandwidthMeter$1 -> k0.j$a:
androidx.media3.exoplayer.upstream.DefaultBandwidthMeter$Builder -> k0.j$b:
    android.content.Context context -> a
    java.util.Map initialBitrateEstimates -> b
    int slidingWindowMaxWeight -> c
    androidx.media3.common.util.Clock clock -> d
    boolean resetOnNetworkTypeChange -> e
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:androidx.media3.exoplayer.upstream.DefaultBandwidthMeter build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk0/j;"}
    1:1:java.util.Map getInitialBitrateEstimatesForCountry(java.lang.String):0:0 -> b
androidx.media3.exoplayer.upstream.DefaultLoadErrorHandlingPolicy -> k0.k:
    int minimumLoadableRetryCount -> a
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:long getRetryDelayMsFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m$c;)J"}
    1:1:void onLoadTaskConcluded(long):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getMinimumLoadableRetryCount(int):0:0 -> c
    1:1:androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection getFallbackSelectionFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m$a;Lk0/m$c;)Lk0/m$b;"}
    1:1:boolean isEligibleForFallback(java.io.IOException):0:0 -> e
androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy -> k0.m:
    long getRetryDelayMsFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m$c;)J"}
    void onLoadTaskConcluded(long) -> b
    int getMinimumLoadableRetryCount(int) -> c
    androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection getFallbackSelectionFor(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions,androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m$a;Lk0/m$c;)Lk0/m$b;"}
androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$-CC -> k0.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$onLoadTaskConcluded(androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/m;J)V"}
androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackOptions -> k0.m$a:
    int numberOfLocations -> a
    int numberOfExcludedLocations -> b
    int numberOfTracks -> c
    int numberOfExcludedTracks -> d
    1:1:void <init>(int,int,int,int):0:0 -> <init>
    1:1:boolean isFallbackAvailable(int):0:0 -> a
androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$FallbackSelection -> k0.m$b:
    int type -> a
    long exclusionDurationMs -> b
    1:1:void <init>(int,long):0:0 -> <init>
androidx.media3.exoplayer.upstream.LoadErrorHandlingPolicy$LoadErrorInfo -> k0.m$c:
    androidx.media3.exoplayer.source.LoadEventInfo loadEventInfo -> a
    androidx.media3.exoplayer.source.MediaLoadData mediaLoadData -> b
    java.io.IOException exception -> c
    int errorCount -> d
    1:1:void <init>(androidx.media3.exoplayer.source.LoadEventInfo,androidx.media3.exoplayer.source.MediaLoadData,java.io.IOException,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg0/y;Lg0/b0;Ljava/io/IOException;I)V"}
androidx.media3.exoplayer.upstream.Loader -> k0.n:
    java.util.concurrent.ExecutorService downloadExecutorService -> a
    androidx.media3.exoplayer.upstream.Loader$LoadTask currentTask -> b
    java.io.IOException fatalError -> c
    androidx.media3.exoplayer.upstream.Loader$LoadErrorAction RETRY -> d
    androidx.media3.exoplayer.upstream.Loader$LoadErrorAction RETRY_RESET_ERROR_COUNT -> e
    androidx.media3.exoplayer.upstream.Loader$LoadErrorAction DONT_RETRY -> f
    androidx.media3.exoplayer.upstream.Loader$LoadErrorAction DONT_RETRY_FATAL -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadTask access$100(androidx.media3.exoplayer.upstream.Loader):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n;)Lk0/n$d;"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadTask access$102(androidx.media3.exoplayer.upstream.Loader,androidx.media3.exoplayer.upstream.Loader$LoadTask):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n;Lk0/n$d;)Lk0/n$d;"}
    1:1:java.io.IOException access$202(androidx.media3.exoplayer.upstream.Loader,java.io.IOException):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n;Ljava/io/IOException;)Ljava/io/IOException;"}
    1:1:java.util.concurrent.ExecutorService access$500(androidx.media3.exoplayer.upstream.Loader):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n;)Ljava/util/concurrent/ExecutorService;"}
    1:1:void cancelLoading():0:0 -> e
    1:1:void maybeThrowError():0:0 -> f
    1:1:void clearFatalError():0:0 -> g
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction createRetryAction(boolean,long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZJ)Lk0/n$c;"}
    1:1:boolean hasFatalError():0:0 -> i
    1:1:boolean isLoading():0:0 -> j
    1:1:void maybeThrowError(int):0:0 -> k
    1:1:void release():0:0 -> l
    1:1:void release(androidx.media3.exoplayer.upstream.Loader$ReleaseCallback):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$f;)V"}
    1:1:long startLoading(androidx.media3.exoplayer.upstream.Loader$Loadable,androidx.media3.exoplayer.upstream.Loader$Callback,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;Lk0/n$b;I)J"}
androidx.media3.exoplayer.upstream.Loader$1 -> k0.n$a:
androidx.media3.exoplayer.upstream.Loader$Callback -> k0.n$b:
    void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int) -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long) -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
androidx.media3.exoplayer.upstream.Loader$LoadErrorAction -> k0.n$c:
    int type -> a
    long retryDelayMillis -> b
    1:1:void <init>(int,long):0:0 -> <init>
    2:2:void <init>(int,long,androidx.media3.exoplayer.upstream.Loader$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJLk0/n$a;)V"}
    1:1:int access$300(androidx.media3.exoplayer.upstream.Loader$LoadErrorAction):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$c;)I"}
    1:1:long access$400(androidx.media3.exoplayer.upstream.Loader$LoadErrorAction):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$c;)J"}
    1:1:boolean isRetry():0:0 -> c
androidx.media3.exoplayer.upstream.Loader$LoadTask -> k0.n$d:
    int defaultMinRetryCount -> f
    androidx.media3.exoplayer.upstream.Loader$Loadable loadable -> g
    long startTimeMs -> h
    androidx.media3.exoplayer.upstream.Loader$Callback callback -> i
    java.io.IOException currentError -> j
    int errorCount -> k
    java.lang.Thread executorThread -> l
    boolean canceled -> m
    boolean released -> n
    androidx.media3.exoplayer.upstream.Loader this$0 -> o
    1:1:void <init>(androidx.media3.exoplayer.upstream.Loader,android.os.Looper,androidx.media3.exoplayer.upstream.Loader$Loadable,androidx.media3.exoplayer.upstream.Loader$Callback,int,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n;Landroid/os/Looper;Lk0/n$e;Lk0/n$b;IJ)V"}
    1:1:void cancel(boolean):0:0 -> a
    1:1:void execute():0:0 -> b
    1:1:void finish():0:0 -> c
    1:1:long getRetryDelayMillis():0:0 -> d
    1:1:void maybeThrowError(int):0:0 -> e
    1:1:void start(long):0:0 -> f
    1:1:void handleMessage(android.os.Message):0:0 -> handleMessage
    1:1:void run():0:0 -> run
androidx.media3.exoplayer.upstream.Loader$Loadable -> k0.n$e:
    void load() -> a
    void cancelLoad() -> b
androidx.media3.exoplayer.upstream.Loader$ReleaseCallback -> k0.n$f:
    void onLoaderReleased() -> o
androidx.media3.exoplayer.upstream.Loader$ReleaseTask -> k0.n$g:
    androidx.media3.exoplayer.upstream.Loader$ReleaseCallback callback -> f
    1:1:void <init>(androidx.media3.exoplayer.upstream.Loader$ReleaseCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$f;)V"}
    1:1:void run():0:0 -> run
androidx.media3.exoplayer.upstream.Loader$UnexpectedLoaderException -> k0.n$h:
    1:1:void <init>(java.lang.Throwable):0:0 -> <init>
androidx.media3.exoplayer.upstream.LoaderErrorThrower -> k0.o:
    void maybeThrowError() -> f
androidx.media3.exoplayer.upstream.LoaderErrorThrower$Placeholder -> k0.o$a:
    void <init>() -> <init>
    1:1:void maybeThrowError():0:0 -> f
androidx.media3.exoplayer.upstream.ParsingLoadable -> k0.p:
    long loadTaskId -> a
    androidx.media3.datasource.DataSpec dataSpec -> b
    int type -> c
    androidx.media3.datasource.StatsDataSource dataSource -> d
    androidx.media3.exoplayer.upstream.ParsingLoadable$Parser parser -> e
    java.lang.Object result -> f
    1:1:void <init>(androidx.media3.datasource.DataSource,android.net.Uri,int,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Landroid/net/Uri;ILk0/p$a;)V"}
    2:2:void <init>(androidx.media3.datasource.DataSource,androidx.media3.datasource.DataSpec,int,androidx.media3.exoplayer.upstream.ParsingLoadable$Parser):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/g;Lo/k;ILk0/p$a;)V"}
    1:1:void load():0:0 -> a
    1:1:void cancelLoad():0:0 -> b
    1:1:long bytesLoaded():0:0 -> c
    1:1:java.util.Map getResponseHeaders():0:0 -> d
    1:1:java.lang.Object getResult():0:0 -> e
    1:1:android.net.Uri getUri():0:0 -> f
androidx.media3.exoplayer.upstream.ParsingLoadable$Parser -> k0.p$a:
    java.lang.Object parse(android.net.Uri,java.io.InputStream) -> a
androidx.media3.exoplayer.upstream.SlidingPercentile -> k0.s:
    int maxWeight -> a
    java.util.ArrayList samples -> b
    androidx.media3.exoplayer.upstream.SlidingPercentile$Sample[] recycledSamples -> c
    int currentSortOrder -> d
    int nextSampleIndex -> e
    int totalWeight -> f
    int recycledSampleCount -> g
    java.util.Comparator INDEX_COMPARATOR -> h
    java.util.Comparator VALUE_COMPARATOR -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int):0:0 -> <init>
    1:1:int $r8$lambda$al-fS7GSDTZ70Tgj-EZJ4zsA1UY(androidx.media3.exoplayer.upstream.SlidingPercentile$Sample,androidx.media3.exoplayer.upstream.SlidingPercentile$Sample):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/s$b;Lk0/s$b;)I"}
    1:1:int $r8$lambda$mri05gYN9aq0_vAKzuvbWHLhxA4(androidx.media3.exoplayer.upstream.SlidingPercentile$Sample,androidx.media3.exoplayer.upstream.SlidingPercentile$Sample):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/s$b;Lk0/s$b;)I"}
    1:1:void addSample(int,float):0:0 -> c
    1:1:void ensureSortedByIndex():0:0 -> d
    1:1:void ensureSortedByValue():0:0 -> e
    1:1:float getPercentile(float):0:0 -> f
    1:1:int lambda$static$0(androidx.media3.exoplayer.upstream.SlidingPercentile$Sample,androidx.media3.exoplayer.upstream.SlidingPercentile$Sample):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/s$b;Lk0/s$b;)I"}
    1:1:int lambda$static$1(androidx.media3.exoplayer.upstream.SlidingPercentile$Sample,androidx.media3.exoplayer.upstream.SlidingPercentile$Sample):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/s$b;Lk0/s$b;)I"}
    1:1:void reset():0:0 -> i
androidx.media3.exoplayer.upstream.SlidingPercentile$$ExternalSyntheticLambda0 -> k0.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.upstream.SlidingPercentile$$InternalSyntheticLambda$10$ed7e9fb40ac2f9b299b8d16898e0d0dc2a6b34ec11dd11e006a5aebd593ba3bf$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.upstream.SlidingPercentile$$InternalSyntheticLambda$10$ed7e9fb40ac2f9b299b8d16898e0d0dc2a6b34ec11dd11e006a5aebd593ba3bf$0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.upstream.SlidingPercentile$$ExternalSyntheticLambda1 -> k0.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.upstream.SlidingPercentile$$InternalSyntheticLambda$10$ed7e9fb40ac2f9b299b8d16898e0d0dc2a6b34ec11dd11e006a5aebd593ba3bf$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.exoplayer.upstream.SlidingPercentile$$InternalSyntheticLambda$10$ed7e9fb40ac2f9b299b8d16898e0d0dc2a6b34ec11dd11e006a5aebd593ba3bf$1.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.upstream.SlidingPercentile$1 -> k0.s$a:
androidx.media3.exoplayer.upstream.SlidingPercentile$Sample -> k0.s$b:
    int index -> a
    int weight -> b
    float value -> c
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.exoplayer.upstream.SlidingPercentile$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/s$a;)V"}
androidx.media3.exoplayer.util.SntpClient -> l0.a:
    java.lang.Object loaderLock -> a
    java.lang.Object valueLock -> b
    boolean isInitialized -> c
    long elapsedRealtimeOffsetMs -> d
    java.lang.String ntpHost -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Object access$100():0:0 -> a
    1:1:java.lang.Object access$200():0:0 -> b
    1:1:boolean access$300():0:0 -> c
    1:1:boolean access$302(boolean):0:0 -> d
    1:1:long access$400():0:0 -> e
    1:1:long access$502(long):0:0 -> f
    1:1:void checkValidServerReply(byte,byte,int,long):0:0 -> g
    1:1:long getElapsedRealtimeOffsetMs():0:0 -> h
    1:1:java.lang.String getNtpHost():0:0 -> i
    1:1:void initialize(androidx.media3.exoplayer.upstream.Loader,androidx.media3.exoplayer.util.SntpClient$InitializationCallback):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n;Ll0/a$b;)V"}
    1:1:boolean isInitialized():0:0 -> k
    1:1:long loadNtpTimeOffsetMs():0:0 -> l
    1:1:long read32(byte[],int):0:0 -> m
    1:1:long readTimestamp(byte[],int):0:0 -> n
    1:1:void writeTimestamp(byte[],int,long):0:0 -> o
androidx.media3.exoplayer.util.SntpClient$1 -> l0.a$a:
androidx.media3.exoplayer.util.SntpClient$InitializationCallback -> l0.a$b:
    void onInitialized() -> a
    void onInitializationFailed(java.io.IOException) -> b
androidx.media3.exoplayer.util.SntpClient$NtpTimeCallback -> l0.a$c:
    androidx.media3.exoplayer.util.SntpClient$InitializationCallback callback -> f
    1:1:void <init>(androidx.media3.exoplayer.util.SntpClient$InitializationCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/a$b;)V"}
    1:1:void onLoadCanceled(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJZ)V"}
    1:1:androidx.media3.exoplayer.upstream.Loader$LoadErrorAction onLoadError(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long,java.io.IOException,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJLjava/io/IOException;I)Lk0/n$c;"}
    1:1:void onLoadCompleted(androidx.media3.exoplayer.upstream.Loader$Loadable,long,long):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk0/n$e;JJ)V"}
androidx.media3.exoplayer.util.SntpClient$NtpTimeLoadable -> l0.a$d:
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.exoplayer.util.SntpClient$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll0/a$a;)V"}
    1:1:void load():0:0 -> a
    1:1:void cancelLoad():0:0 -> b
androidx.media3.exoplayer.video.CompositingVideoSinkProvider -> m0.d:
    android.content.Context context -> a
    androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl videoSinkImpl -> b
    androidx.media3.exoplayer.video.VideoFrameReleaseControl videoFrameReleaseControl -> c
    androidx.media3.exoplayer.video.VideoFrameRenderControl videoFrameRenderControl -> d
    androidx.media3.common.PreviewingVideoGraph$Factory previewingVideoGraphFactory -> e
    androidx.media3.common.util.Clock clock -> f
    java.util.concurrent.CopyOnWriteArraySet listeners -> g
    androidx.media3.common.Format outputFormat -> h
    androidx.media3.exoplayer.video.VideoFrameMetadataListener videoFrameMetadataListener -> i
    androidx.media3.common.util.HandlerWrapper handler -> j
    android.util.Pair currentSurfaceAndSize -> k
    int pendingFlushCount -> l
    int state -> m
    java.util.concurrent.Executor NO_OP_EXECUTOR -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$b;)V"}
    2:2:void <init>(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$Builder,androidx.media3.exoplayer.video.CompositingVideoSinkProvider$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$b;Lm0/d$a;)V"}
    1:1:androidx.media3.common.VideoFrameProcessor initialize(androidx.media3.common.Format):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Lj/n0;"}
    1:1:boolean isInitialized():0:0 -> B
    1:1:boolean isReady():0:0 -> C
    1:1:void lambda$static$0(java.lang.Runnable):0:0 -> D
    1:1:void maybeSetOutputSurfaceInfo(android.view.Surface,int,int):0:0 -> E
    1:1:void release():0:0 -> F
    1:1:void render(long,long):0:0 -> G
    1:1:void setOutputSurfaceInfo(android.view.Surface,androidx.media3.common.util.Size):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/Surface;Lm/a0;)V"}
    1:1:void setPlaybackSpeed(float):0:0 -> I
    1:1:void setVideoFrameMetadataListener(androidx.media3.exoplayer.video.VideoFrameMetadataListener):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/p;)V"}
    1:1:androidx.media3.exoplayer.video.VideoSink getSink():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm0/f0;"}
    1:1:androidx.media3.exoplayer.video.VideoFrameReleaseControl getVideoFrameReleaseControl():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm0/q;"}
    1:1:void $r8$lambda$C_TRhHvhSQse4alG8Hf8VLsoiJE(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)V"}
    1:1:void $r8$lambda$PAuPzgrKyIjFhOFBwq7ImyMPyHk(java.lang.Runnable):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void access$1000(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)V"}
    1:1:boolean access$1100(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)Z"}
    1:1:boolean access$1200(androidx.media3.exoplayer.video.CompositingVideoSinkProvider,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;J)Z"}
    1:1:void access$1300(androidx.media3.exoplayer.video.CompositingVideoSinkProvider,androidx.media3.exoplayer.video.VideoFrameMetadataListener):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;Lm0/p;)V"}
    1:1:void access$1400(androidx.media3.exoplayer.video.CompositingVideoSinkProvider,float):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;F)V"}
    1:1:androidx.media3.common.ColorInfo access$1600(androidx.media3.common.ColorInfo):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/h;)Lj/h;"}
    1:1:androidx.media3.common.Format access$1700(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)Lj/q;"}
    1:1:androidx.media3.common.Format access$1702(androidx.media3.exoplayer.video.CompositingVideoSinkProvider,androidx.media3.common.Format):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;Lj/q;)Lj/q;"}
    1:1:java.util.concurrent.CopyOnWriteArraySet access$1800(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)Ljava/util/concurrent/CopyOnWriteArraySet;"}
    1:1:android.util.Pair access$1900(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)Landroid/util/Pair;"}
    1:1:androidx.media3.exoplayer.video.VideoFrameMetadataListener access$2000(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)Lm0/p;"}
    1:1:androidx.media3.common.util.Clock access$2100(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)Lm/c;"}
    1:1:androidx.media3.common.PreviewingVideoGraph access$2200(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)Lj/f0;"}
    1:1:java.util.concurrent.Executor access$700():0:0 -> r
    1:1:androidx.media3.exoplayer.video.VideoFrameReleaseControl access$800(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)Lm0/q;"}
    1:1:androidx.media3.common.VideoFrameProcessor access$900(androidx.media3.exoplayer.video.CompositingVideoSinkProvider,androidx.media3.common.Format):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;Lj/q;)Lj/n0;"}
    1:1:void addListener(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$Listener):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$d;)V"}
    1:1:void clearOutputSurfaceInfo():0:0 -> v
    1:1:void flush():0:0 -> w
    1:1:void flushInternal():0:0 -> x
    1:1:androidx.media3.common.ColorInfo getAdjustedInputColorInfo(androidx.media3.common.ColorInfo):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/h;)Lj/h;"}
    1:1:boolean hasReleasedFrame(long):0:0 -> z
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$$ExternalSyntheticLambda0 -> m0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.common.util.HandlerWrapper androidx.media3.exoplayer.video.CompositingVideoSinkProvider$$InternalSyntheticLambda$8$5acd2e6d1fb64c034bfa484d803021634d414c0f61ae467cd8367d95899018b2$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$$InternalSyntheticLambda$8$5acd2e6d1fb64c034bfa484d803021634d414c0f61ae467cd8367d95899018b2$0.<init>(androidx.media3.common.util.HandlerWrapper):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/k;)V"}
    1:1:void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$$InternalSyntheticLambda$8$5acd2e6d1fb64c034bfa484d803021634d414c0f61ae467cd8367d95899018b2$0.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$$ExternalSyntheticLambda1 -> m0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.CompositingVideoSinkProvider androidx.media3.exoplayer.video.CompositingVideoSinkProvider$$InternalSyntheticLambda$8$6b0734a2905a8197a04bc8ce8eae8ca49f83a30c65a102155be0cbf3c3acffc8$0.f$0 -> f
    1:1:void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$$InternalSyntheticLambda$8$6b0734a2905a8197a04bc8ce8eae8ca49f83a30c65a102155be0cbf3c3acffc8$0.<init>(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)V"}
    1:1:void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$$InternalSyntheticLambda$8$6b0734a2905a8197a04bc8ce8eae8ca49f83a30c65a102155be0cbf3c3acffc8$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$$ExternalSyntheticLambda2 -> m0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$$InternalSyntheticLambda$8$ee294a17aad8352723266b46bd17eb70ae05f1cfef2cc5e57ea35156e4ce2e83$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$$InternalSyntheticLambda$8$ee294a17aad8352723266b46bd17eb70ae05f1cfef2cc5e57ea35156e4ce2e83$0.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$1 -> m0.d$a:
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$Builder -> m0.d$b:
    android.content.Context context -> a
    androidx.media3.exoplayer.video.VideoFrameReleaseControl videoFrameReleaseControl -> b
    androidx.media3.common.VideoFrameProcessor$Factory videoFrameProcessorFactory -> c
    androidx.media3.common.PreviewingVideoGraph$Factory previewingVideoGraphFactory -> d
    androidx.media3.common.util.Clock clock -> e
    boolean built -> f
    1:1:void <init>(android.content.Context,androidx.media3.exoplayer.video.VideoFrameReleaseControl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lm0/q;)V"}
    1:1:android.content.Context access$200(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$b;)Landroid/content/Context;"}
    1:1:androidx.media3.common.util.Clock access$300(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$Builder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$b;)Lm/c;"}
    1:1:androidx.media3.exoplayer.video.VideoFrameReleaseControl access$400(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$b;)Lm0/q;"}
    1:1:androidx.media3.common.PreviewingVideoGraph$Factory access$600(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$Builder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$b;)Lj/f0$a;"}
    1:1:androidx.media3.exoplayer.video.CompositingVideoSinkProvider build():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm0/d;"}
    1:1:androidx.media3.exoplayer.video.CompositingVideoSinkProvider$Builder setClock(androidx.media3.common.util.Clock):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c;)Lm0/d$b;"}
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$FrameRendererImpl -> m0.d$c:
    androidx.media3.exoplayer.video.CompositingVideoSinkProvider this$0 -> a
    1:1:void <init>(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)V"}
    2:2:void <init>(androidx.media3.exoplayer.video.CompositingVideoSinkProvider,androidx.media3.exoplayer.video.CompositingVideoSinkProvider$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;Lm0/d$a;)V"}
    1:1:void renderFrame(long,long,long,boolean):0:0 -> a
    1:1:void dropFrame():0:0 -> b
    1:1:void onVideoSizeChanged(androidx.media3.common.VideoSize):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;)V"}
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$Listener -> m0.d$d:
    void onFirstFrameRendered(androidx.media3.exoplayer.video.CompositingVideoSinkProvider) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)V"}
    void onFrameDropped(androidx.media3.exoplayer.video.CompositingVideoSinkProvider) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)V"}
    void onVideoSizeChanged(androidx.media3.exoplayer.video.CompositingVideoSinkProvider,androidx.media3.common.VideoSize) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;Lj/p0;)V"}
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$ReflectiveDefaultVideoFrameProcessorFactory -> m0.d$e:
    com.google.common.base.Supplier VIDEO_FRAME_PROCESSOR_FACTORY_SUPPLIER -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$a;)V"}
    1:1:androidx.media3.common.VideoFrameProcessor$Factory $r8$lambda$3f_0TDjWXOqggxSg3skMG5NJ4zM():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/n0$a;"}
    1:1:androidx.media3.common.VideoFrameProcessor$Factory lambda$static$0():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/n0$a;"}
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$ReflectiveDefaultVideoFrameProcessorFactory$$ExternalSyntheticLambda0 -> m0.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$ReflectiveDefaultVideoFrameProcessorFactory$$InternalSyntheticLambda$8$f6e94ffc0670ac74e5a6845dc8134aa3718e14228b79eb6d4a71b4de94ce4885$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.exoplayer.video.CompositingVideoSinkProvider$ReflectiveDefaultVideoFrameProcessorFactory$$InternalSyntheticLambda$8$f6e94ffc0670ac74e5a6845dc8134aa3718e14228b79eb6d4a71b4de94ce4885$0.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$ReflectivePreviewingSingleInputVideoGraphFactory -> m0.d$f:
    androidx.media3.common.VideoFrameProcessor$Factory videoFrameProcessorFactory -> a
    1:1:void <init>(androidx.media3.common.VideoFrameProcessor$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/n0$a;)V"}
    1:1:androidx.media3.common.PreviewingVideoGraph create(android.content.Context,androidx.media3.common.ColorInfo,androidx.media3.common.DebugViewProvider,androidx.media3.common.VideoGraph$Listener,java.util.concurrent.Executor,java.util.List,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lj/h;Lj/k;Lj/o0;Ljava/util/concurrent/Executor;Ljava/util/List;J)Lj/f0;"}
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$ScaleAndRotateAccessor -> m0.d$g:
    java.lang.reflect.Constructor scaleAndRotateTransformationBuilderConstructor -> a
    java.lang.reflect.Method setRotationMethod -> b
    java.lang.reflect.Method buildScaleAndRotateTransformationMethod -> c
    1:1:androidx.media3.common.Effect createRotationEffect(float):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lj/n;"}
    1:1:void prepare():0:0 -> b
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl -> m0.d$h:
    android.content.Context context -> a
    int videoFrameProcessorMaxPendingFrameCount -> b
    java.util.ArrayList videoEffects -> c
    androidx.media3.common.Format inputFormat -> d
    int inputType -> e
    long inputStreamOffsetUs -> f
    long inputBufferTimestampAdjustmentUs -> g
    boolean pendingInputStreamOffsetChange -> h
    long finalBufferPresentationTimeUs -> i
    long lastBufferPresentationTimeUs -> j
    boolean hasRegisteredFirstInputStream -> k
    long pendingInputStreamBufferPresentationTimeUs -> l
    androidx.media3.exoplayer.video.VideoSink$Listener listener -> m
    java.util.concurrent.Executor listenerExecutor -> n
    androidx.media3.exoplayer.video.CompositingVideoSinkProvider this$0 -> o
    1:1:void <init>(androidx.media3.exoplayer.video.CompositingVideoSinkProvider,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;Landroid/content/Context;)V"}
    1:1:void onRendererDisabled():0:0 -> A
    1:1:void setOutputSurfaceInfo(android.view.Surface,androidx.media3.common.util.Size):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/Surface;Lm/a0;)V"}
    1:1:void setPlaybackSpeed(float):0:0 -> C
    1:1:boolean isFrameDropAllowedOnInput():0:0 -> D
    1:1:void lambda$onVideoSizeChanged$2(androidx.media3.exoplayer.video.VideoSink$Listener,androidx.media3.common.VideoSize):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0$a;Lj/p0;)V"}
    1:1:void maybeRegisterInputStream():0:0 -> F
    1:1:void setPendingVideoEffects(java.util.List):0:0 -> G
    1:1:void onFirstFrameRendered(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)V"}
    1:1:void onFrameDropped(androidx.media3.exoplayer.video.CompositingVideoSinkProvider):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;)V"}
    1:1:boolean isEnded():0:0 -> c
    1:1:void onVideoSizeChanged(androidx.media3.exoplayer.video.CompositingVideoSinkProvider,androidx.media3.common.VideoSize):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d;Lj/p0;)V"}
    1:1:boolean isReady():0:0 -> e
    1:1:void $r8$lambda$_C3jjTK7fptO8u4vVmQt9UNoxCA(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl,androidx.media3.exoplayer.video.VideoSink$Listener,androidx.media3.common.VideoSize):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$h;Lm0/f0$a;Lj/p0;)V"}
    1:1:void $r8$lambda$kj86CyO665OQfjK59k6YcrWQceQ(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl,androidx.media3.exoplayer.video.VideoSink$Listener):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$h;Lm0/f0$a;)V"}
    1:1:void $r8$lambda$ui5kAakkwGW7WPG8-c7Ko__GDI4(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl,androidx.media3.exoplayer.video.VideoSink$Listener):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$h;Lm0/f0$a;)V"}
    1:1:void enableMayRenderStartOfStream():0:0 -> i
    1:1:void lambda$onFirstFrameRendered$0(androidx.media3.exoplayer.video.VideoSink$Listener):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0$a;)V"}
    1:1:void lambda$onFrameDropped$1(androidx.media3.exoplayer.video.VideoSink$Listener):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0$a;)V"}
    1:1:void render(long,long):0:0 -> l
    1:1:void clearOutputSurfaceInfo():0:0 -> m
    1:1:void setListener(androidx.media3.exoplayer.video.VideoSink$Listener,java.util.concurrent.Executor):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0$a;Ljava/util/concurrent/Executor;)V"}
    1:1:long registerInputFrame(long,boolean):0:0 -> o
    1:1:android.view.Surface getInputSurface():0:0 -> p
    1:1:void onRendererStarted():0:0 -> q
    1:1:void registerInputStream(int,androidx.media3.common.Format):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/q;)V"}
    1:1:void release():0:0 -> release
    1:1:void flush(boolean):0:0 -> s
    1:1:void onRendererStopped():0:0 -> t
    1:1:void setVideoEffects(java.util.List):0:0 -> u
    1:1:void setStreamOffsetAndAdjustmentUs(long,long):0:0 -> v
    1:1:void setVideoFrameMetadataListener(androidx.media3.exoplayer.video.VideoFrameMetadataListener):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/p;)V"}
    1:1:boolean isInitialized():0:0 -> x
    1:1:void initialize(androidx.media3.common.Format):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:void onRendererEnabled(boolean):0:0 -> z
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$ExternalSyntheticLambda0 -> m0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$218bd1d3cfc71375ce1bff942cdbfcef2c93d4d97eca08079f1cfba556746e0b$0.f$0 -> f
    androidx.media3.exoplayer.video.VideoSink$Listener androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$218bd1d3cfc71375ce1bff942cdbfcef2c93d4d97eca08079f1cfba556746e0b$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$218bd1d3cfc71375ce1bff942cdbfcef2c93d4d97eca08079f1cfba556746e0b$0.<init>(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl,androidx.media3.exoplayer.video.VideoSink$Listener):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$h;Lm0/f0$a;)V"}
    1:1:void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$218bd1d3cfc71375ce1bff942cdbfcef2c93d4d97eca08079f1cfba556746e0b$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$ExternalSyntheticLambda1 -> m0.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$49358ae855be09973474cff5008bfc64918ff3cce91e1c8be995d171a348893f$0.f$0 -> f
    androidx.media3.exoplayer.video.VideoSink$Listener androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$49358ae855be09973474cff5008bfc64918ff3cce91e1c8be995d171a348893f$0.f$1 -> g
    androidx.media3.common.VideoSize androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$49358ae855be09973474cff5008bfc64918ff3cce91e1c8be995d171a348893f$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$49358ae855be09973474cff5008bfc64918ff3cce91e1c8be995d171a348893f$0.<init>(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl,androidx.media3.exoplayer.video.VideoSink$Listener,androidx.media3.common.VideoSize):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$h;Lm0/f0$a;Lj/p0;)V"}
    1:1:void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$49358ae855be09973474cff5008bfc64918ff3cce91e1c8be995d171a348893f$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$ExternalSyntheticLambda2 -> m0.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$fde024a65e2d9d31ac27d101aa10cf0a79a9113c1db31987c1d93a5aeb36ea1a$0.f$0 -> f
    androidx.media3.exoplayer.video.VideoSink$Listener androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$fde024a65e2d9d31ac27d101aa10cf0a79a9113c1db31987c1d93a5aeb36ea1a$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$fde024a65e2d9d31ac27d101aa10cf0a79a9113c1db31987c1d93a5aeb36ea1a$0.<init>(androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl,androidx.media3.exoplayer.video.VideoSink$Listener):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/d$h;Lm0/f0$a;)V"}
    1:1:void androidx.media3.exoplayer.video.CompositingVideoSinkProvider$VideoSinkImpl$$InternalSyntheticLambda$8$fde024a65e2d9d31ac27d101aa10cf0a79a9113c1db31987c1d93a5aeb36ea1a$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.FixedFrameRateEstimator -> m0.i:
    androidx.media3.exoplayer.video.FixedFrameRateEstimator$Matcher currentMatcher -> a
    androidx.media3.exoplayer.video.FixedFrameRateEstimator$Matcher candidateMatcher -> b
    boolean candidateMatcherActive -> c
    boolean switchToCandidateMatcherWhenSynced -> d
    long lastFramePresentationTimeNs -> e
    int framesWithoutSyncCount -> f
    1:1:void <init>():0:0 -> <init>
    1:1:long getFrameDurationNs():0:0 -> a
    1:1:float getFrameRate():0:0 -> b
    1:1:int getFramesWithoutSyncCount():0:0 -> c
    1:1:long getMatchingFrameDurationSumNs():0:0 -> d
    1:1:boolean isSynced():0:0 -> e
    1:1:void onNextFrame(long):0:0 -> f
    1:1:void reset():0:0 -> g
androidx.media3.exoplayer.video.FixedFrameRateEstimator$Matcher -> m0.i$a:
    long firstFramePresentationTimeNs -> a
    long firstFrameDurationNs -> b
    long lastFramePresentationTimeNs -> c
    long frameCount -> d
    long matchingFrameCount -> e
    long matchingFrameDurationSumNs -> f
    boolean[] recentFrameOutlierFlags -> g
    int recentFrameOutlierCount -> h
    1:1:void <init>():0:0 -> <init>
    1:1:long getFrameDurationNs():0:0 -> a
    1:1:long getMatchingFrameDurationSumNs():0:0 -> b
    1:1:int getRecentFrameOutlierIndex(long):0:0 -> c
    1:1:boolean isLastFrameOutlier():0:0 -> d
    1:1:boolean isSynced():0:0 -> e
    1:1:void onNextFrame(long):0:0 -> f
    1:1:void reset():0:0 -> g
androidx.media3.exoplayer.video.MediaCodecVideoDecoderException -> m0.j:
    int surfaceIdentityHashCode -> i
    boolean isSurfaceValid -> j
    1:1:void <init>(java.lang.Throwable,androidx.media3.exoplayer.mediacodec.MediaCodecInfo,android.view.Surface):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Lz/t;Landroid/view/Surface;)V"}
androidx.media3.exoplayer.video.MediaCodecVideoRenderer -> m0.k:
    android.content.Context context -> M0
    androidx.media3.exoplayer.video.VideoSinkProvider videoSinkProvider -> N0
    boolean ownsVideoSink -> O0
    androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher eventDispatcher -> P0
    int maxDroppedFramesToNotify -> Q0
    boolean deviceNeedsNoPostProcessWorkaround -> R0
    androidx.media3.exoplayer.video.VideoFrameReleaseControl videoFrameReleaseControl -> S0
    androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameReleaseInfo videoFrameReleaseInfo -> T0
    androidx.media3.exoplayer.video.MediaCodecVideoRenderer$CodecMaxValues codecMaxValues -> U0
    boolean codecNeedsSetOutputSurfaceWorkaround -> V0
    boolean codecHandlesHdr10PlusOutOfBandMetadata -> W0
    androidx.media3.exoplayer.video.VideoSink videoSink -> X0
    boolean hasSetVideoSink -> Y0
    java.util.List videoEffects -> Z0
    android.view.Surface displaySurface -> a1
    androidx.media3.exoplayer.video.PlaceholderSurface placeholderSurface -> b1
    androidx.media3.common.util.Size outputResolution -> c1
    boolean haveReportedFirstFrameRenderedForCurrentSurface -> d1
    int scalingMode -> e1
    long droppedFrameAccumulationStartTimeMs -> f1
    int droppedFrames -> g1
    int consecutiveDroppedFrameCount -> h1
    int buffersInCodecCount -> i1
    long totalVideoFrameProcessingOffsetUs -> j1
    int videoFrameProcessingOffsetCount -> k1
    long lastFrameReleaseTimeNs -> l1
    androidx.media3.common.VideoSize decodedVideoSize -> m1
    androidx.media3.common.VideoSize reportedVideoSize -> n1
    int rendererPriority -> o1
    boolean tunneling -> p1
    int tunnelingAudioSessionId -> q1
    androidx.media3.exoplayer.video.MediaCodecVideoRenderer$OnFrameRenderedListenerV23 tunnelingOnFrameRenderedListener -> r1
    androidx.media3.exoplayer.video.VideoFrameMetadataListener frameMetadataListener -> s1
    int[] STANDARD_LONG_EDGE_VIDEO_PX -> t1
    boolean evaluatedDeviceNeedsSetOutputSurfaceWorkaround -> u1
    boolean deviceNeedsSetOutputSurfaceWorkaround -> v1
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,long,boolean,android.os.Handler,androidx.media3.exoplayer.video.VideoRendererEventListener,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lz/p$b;Lz/e0;JZLandroid/os/Handler;Lm0/e0;I)V"}
    2:2:void <init>(android.content.Context,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,long,boolean,android.os.Handler,androidx.media3.exoplayer.video.VideoRendererEventListener,int,float):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lz/p$b;Lz/e0;JZLandroid/os/Handler;Lm0/e0;IF)V"}
    3:3:void <init>(android.content.Context,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Factory,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,long,boolean,android.os.Handler,androidx.media3.exoplayer.video.VideoRendererEventListener,int,float,androidx.media3.exoplayer.video.VideoSinkProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lz/p$b;Lz/e0;JZLandroid/os/Handler;Lm0/e0;IFLm0/g0;)V"}
    1:1:void onReadyToRegisterVideoSinkInputStream():0:0 -> A2
    1:1:void resetCodecStateForFlush():0:0 -> B1
    1:1:void releasePlaceholderSurface():0:0 -> B2
    1:1:void renderOutputBuffer(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,int,long):0:0 -> C2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;IJ)V"}
    1:1:void renderOutputBuffer(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,int,long,long):0:0 -> D2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;IJJ)V"}
    1:1:void renderOutputBufferV21(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,int,long,long):0:0 -> E2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;IJJ)V"}
    1:1:void setHdr10PlusInfoV29(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,byte[]):0:0 -> F2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;[B)V"}
    1:1:void setOutput(java.lang.Object):0:0 -> G2
    1:1:void handleMessage(int,java.lang.Object):0:0 -> H
    1:1:void setOutputSurfaceV23(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,android.view.Surface):0:0 -> H2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;Landroid/view/Surface;)V"}
    1:1:void setVideoEffects(java.util.List):0:0 -> I2
    1:1:int getCodecBufferFlags(androidx.media3.decoder.DecoderInputBuffer):0:0 -> J0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)I"}
    1:1:boolean shouldDropBuffersToKeyframe(long,long,boolean):0:0 -> J2
    1:1:boolean shouldDropOutputBuffer(long,long,boolean):0:0 -> K2
    1:1:void setPlaybackSpeed(float,float):0:0 -> L
    1:1:boolean getCodecNeedsEosPropagation():0:0 -> L0
    1:1:boolean shouldInitCodec(androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> L1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;)Z"}
    1:1:boolean shouldForceRenderOutputBuffer(long,long):0:0 -> L2
    1:1:float getCodecOperatingRateV23(float,androidx.media3.common.Format,androidx.media3.common.Format[]):0:0 -> M0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FLj/q;[Lj/q;)F"}
    1:1:boolean shouldSkipBuffersWithIdenticalReleaseTime():0:0 -> M2
    1:1:boolean shouldUsePlaceholderSurface(androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> N2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;)Z"}
    1:1:java.util.List getDecoderInfos(androidx.media3.exoplayer.mediacodec.MediaCodecSelector,androidx.media3.common.Format,boolean):0:0 -> O0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/e0;Lj/q;Z)Ljava/util/List;"}
    1:1:int supportsFormat(androidx.media3.exoplayer.mediacodec.MediaCodecSelector,androidx.media3.common.Format):0:0 -> O1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/e0;Lj/q;)I"}
    1:1:void skipOutputBuffer(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,int,long):0:0 -> O2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;IJ)V"}
    1:1:void updateCodecImportance():0:0 -> P2
    1:1:void updateDroppedBufferCounters(int,int):0:0 -> Q2
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration getMediaCodecConfiguration(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format,android.media.MediaCrypto,float):0:0 -> R0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;Landroid/media/MediaCrypto;F)Lz/p$a;"}
    1:1:void updateVideoFrameProcessingOffsetCounters(long):0:0 -> R2
    1:1:android.view.Surface access$000(androidx.media3.exoplayer.video.MediaCodecVideoRenderer):0:0 -> T1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/k;)Landroid/view/Surface;"}
    1:1:void access$100(androidx.media3.exoplayer.video.MediaCodecVideoRenderer):0:0 -> U1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/k;)V"}
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecAdapter access$400(androidx.media3.exoplayer.video.MediaCodecVideoRenderer):0:0 -> V1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/k;)Lz/p;"}
    1:1:void onDisabled():0:0 -> W
    1:1:void handleInputBufferSupplementalData(androidx.media3.decoder.DecoderInputBuffer):0:0 -> W0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)V"}
    1:1:void access$500(androidx.media3.exoplayer.video.MediaCodecVideoRenderer):0:0 -> W1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/k;)V"}
    1:1:void onEnabled(boolean,boolean):0:0 -> X
    1:1:void access$600(androidx.media3.exoplayer.video.MediaCodecVideoRenderer,androidx.media3.exoplayer.ExoPlaybackException):0:0 -> X1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/k;Lq/u;)V"}
    1:1:void onInit():0:0 -> Y
    1:1:boolean codecAppliesRotation():0:0 -> Y1
    1:1:void onPositionReset(long,boolean):0:0 -> Z
    1:1:boolean codecNeedsSetOutputSurfaceWorkaround(java.lang.String):0:0 -> Z1
    1:1:void onRelease():0:0 -> a0
    1:1:void configureTunnelingV21(android.media.MediaFormat,int):0:0 -> a2
    1:1:boolean deviceNeedsNoPostProcessWorkaround():0:0 -> b2
    1:1:boolean isEnded():0:0 -> c
    1:1:void onReset():0:0 -> c0
    1:1:void dropOutputBuffer(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,int,long):0:0 -> c2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;IJ)V"}
    1:1:void onStarted():0:0 -> d0
    1:1:boolean evaluateDeviceNeedsSetOutputSurfaceWorkaround():0:0 -> d2
    1:1:boolean isReady():0:0 -> e
    1:1:void onStopped():0:0 -> e0
    1:1:long getBufferTimestampAdjustmentUs():0:0 -> e2
    1:1:int getCodecMaxInputSize(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format):0:0 -> f2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;)I"}
    1:1:android.graphics.Point getCodecMaxSize(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format):0:0 -> g2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;)Landroid/graphics/Point;"}
    1:1:androidx.media3.exoplayer.video.MediaCodecVideoRenderer$CodecMaxValues getCodecMaxValues(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format,androidx.media3.common.Format[]):0:0 -> h2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;[Lj/q;)Lm0/k$c;"}
    1:1:void enableMayRenderStartOfStream():0:0 -> i
    1:1:java.util.List getDecoderInfos(android.content.Context,androidx.media3.exoplayer.mediacodec.MediaCodecSelector,androidx.media3.common.Format,boolean,boolean):0:0 -> i2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lz/e0;Lj/q;ZZ)Ljava/util/List;"}
    1:1:int getMaxInputSize(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format):0:0 -> j2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;)I"}
    1:1:void onCodecError(java.lang.Exception):0:0 -> k1
    1:1:int getMaxSampleSize(int,int):0:0 -> k2
    1:1:void render(long,long):0:0 -> l
    1:1:void onCodecInitialized(java.lang.String,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter$Configuration,long,long):0:0 -> l1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz/p$a;JJ)V"}
    1:1:android.media.MediaFormat getMediaFormat(androidx.media3.common.Format,java.lang.String,androidx.media3.exoplayer.video.MediaCodecVideoRenderer$CodecMaxValues,float,boolean,int):0:0 -> l2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Ljava/lang/String;Lm0/k$c;FZI)Landroid/media/MediaFormat;"}
    1:1:void onCodecReleased(java.lang.String):0:0 -> m1
    1:1:boolean maybeDropBuffersToKeyframe(long,boolean):0:0 -> m2
    1:1:java.lang.String getName():0:0 -> n
    1:1:androidx.media3.exoplayer.DecoderReuseEvaluation canReuseCodec(androidx.media3.exoplayer.mediacodec.MediaCodecInfo,androidx.media3.common.Format,androidx.media3.common.Format):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/t;Lj/q;Lj/q;)Lq/p;"}
    1:1:androidx.media3.exoplayer.DecoderReuseEvaluation onInputFormatChanged(androidx.media3.exoplayer.FormatHolder):0:0 -> n1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/u1;)Lq/p;"}
    1:1:void maybeNotifyDroppedFrames():0:0 -> n2
    1:1:void onOutputFormatChanged(androidx.media3.common.Format,android.media.MediaFormat):0:0 -> o1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Landroid/media/MediaFormat;)V"}
    1:1:void maybeNotifyRenderedFirstFrame():0:0 -> o2
    1:1:boolean shouldDropFrame(long,long,boolean):0:0 -> p
    1:1:void maybeNotifyVideoFrameProcessingOffset():0:0 -> p2
    1:1:boolean shouldIgnoreFrame(long,long,long,boolean,boolean):0:0 -> q
    1:1:void onProcessedOutputBuffer(long):0:0 -> q1
    1:1:void maybeNotifyVideoSizeChanged(androidx.media3.common.VideoSize):0:0 -> q2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;)V"}
    1:1:void onProcessedStreamChange():0:0 -> r1
    1:1:boolean maybeReleaseFrame(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,int,long,androidx.media3.common.Format):0:0 -> r2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;IJLj/q;)Z"}
    1:1:void onQueueInputBuffer(androidx.media3.decoder.DecoderInputBuffer):0:0 -> s1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;)V"}
    1:1:void maybeRenotifyRenderedFirstFrame():0:0 -> s2
    1:1:void onReadyToInitializeCodec(androidx.media3.common.Format):0:0 -> t1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:void maybeRenotifyVideoSizeChanged():0:0 -> t2
    1:1:void maybeSetKeyAllowFrameDrop(android.media.MediaFormat):0:0 -> u2
    1:1:boolean processOutputBuffer(long,long,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,java.nio.ByteBuffer,int,int,int,long,boolean,boolean,androidx.media3.common.Format):0:0 -> v1
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJLz/p;Ljava/nio/ByteBuffer;IIIJZZLj/q;)Z"}
    1:1:void maybeSetupTunnelingForFirstFrame():0:0 -> v2
    1:1:androidx.media3.exoplayer.mediacodec.MediaCodecDecoderException createDecoderException(java.lang.Throwable,androidx.media3.exoplayer.mediacodec.MediaCodecInfo):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Lz/t;)Lz/s;"}
    1:1:void notifyFrameMetadataListener(long,long,androidx.media3.common.Format):0:0 -> w2
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJLj/q;)V"}
    1:1:void notifyRenderedFirstFrame():0:0 -> x2
    1:1:void onProcessedTunneledBuffer(long):0:0 -> y2
    1:1:boolean shouldForceReleaseFrame(long,long):0:0 -> z
    1:1:void onProcessedTunneledEndOfStream():0:0 -> z2
androidx.media3.exoplayer.video.MediaCodecVideoRenderer$1 -> m0.k$a:
    androidx.media3.exoplayer.video.MediaCodecVideoRenderer this$0 -> b
    1:1:void <init>(androidx.media3.exoplayer.video.MediaCodecVideoRenderer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/k;)V"}
    1:1:void onFirstFrameRendered(androidx.media3.exoplayer.video.VideoSink):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0;)V"}
    1:1:void onFrameDropped(androidx.media3.exoplayer.video.VideoSink):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0;)V"}
    1:1:void onVideoSizeChanged(androidx.media3.exoplayer.video.VideoSink,androidx.media3.common.VideoSize):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0;Lj/p0;)V"}
androidx.media3.exoplayer.video.MediaCodecVideoRenderer$Api26 -> m0.k$b:
    1:1:boolean doesDisplaySupportDolbyVision(android.content.Context):0:0 -> a
androidx.media3.exoplayer.video.MediaCodecVideoRenderer$Api26$$ExternalSyntheticApiModelOutline0 -> m0.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.exoplayer.video.MediaCodecVideoRenderer$Api26$$InternalSyntheticApiModelOutline$8$71760a065e8558d64f37ec5f8a7eaad7b8cb6006f4f9337f62bb05b12376fb81$0.m(android.view.Display):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.MediaCodecVideoRenderer$Api26$$ExternalSyntheticApiModelOutline1 -> m0.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.Display$HdrCapabilities androidx.media3.exoplayer.video.MediaCodecVideoRenderer$Api26$$InternalSyntheticApiModelOutline$8$71760a065e8558d64f37ec5f8a7eaad7b8cb6006f4f9337f62bb05b12376fb81$1.m(android.view.Display):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.MediaCodecVideoRenderer$Api26$$ExternalSyntheticApiModelOutline2 -> m0.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int[] androidx.media3.exoplayer.video.MediaCodecVideoRenderer$Api26$$InternalSyntheticApiModelOutline$8$71760a065e8558d64f37ec5f8a7eaad7b8cb6006f4f9337f62bb05b12376fb81$2.m(android.view.Display$HdrCapabilities):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.MediaCodecVideoRenderer$CodecMaxValues -> m0.k$c:
    int width -> a
    int height -> b
    int inputSize -> c
    1:1:void <init>(int,int,int):0:0 -> <init>
androidx.media3.exoplayer.video.MediaCodecVideoRenderer$OnFrameRenderedListenerV23 -> m0.k$d:
    android.os.Handler handler -> f
    androidx.media3.exoplayer.video.MediaCodecVideoRenderer this$0 -> g
    1:1:void <init>(androidx.media3.exoplayer.video.MediaCodecVideoRenderer,androidx.media3.exoplayer.mediacodec.MediaCodecAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/k;Lz/p;)V"}
    1:1:void onFrameRendered(androidx.media3.exoplayer.mediacodec.MediaCodecAdapter,long,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz/p;JJ)V"}
    1:1:void handleFrameRendered(long):0:0 -> b
    1:1:boolean handleMessage(android.os.Message):0:0 -> handleMessage
androidx.media3.exoplayer.video.PlaceholderSurface -> m0.o:
    boolean secure -> f
    androidx.media3.exoplayer.video.PlaceholderSurface$PlaceholderSurfaceThread thread -> g
    boolean threadReleased -> h
    int secureMode -> i
    boolean secureModeInitialized -> j
    1:1:void <init>(androidx.media3.exoplayer.video.PlaceholderSurface$PlaceholderSurfaceThread,android.graphics.SurfaceTexture,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/o$b;Landroid/graphics/SurfaceTexture;Z)V"}
    2:2:void <init>(androidx.media3.exoplayer.video.PlaceholderSurface$PlaceholderSurfaceThread,android.graphics.SurfaceTexture,boolean,androidx.media3.exoplayer.video.PlaceholderSurface$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/o$b;Landroid/graphics/SurfaceTexture;ZLm0/o$a;)V"}
    1:1:int getSecureMode(android.content.Context):0:0 -> d
    1:1:boolean isSecureSupported(android.content.Context):0:0 -> e
    1:1:androidx.media3.exoplayer.video.PlaceholderSurface newInstance(android.content.Context,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)Lm0/o;"}
    1:1:void release():0:0 -> release
androidx.media3.exoplayer.video.PlaceholderSurface$1 -> m0.o$a:
androidx.media3.exoplayer.video.PlaceholderSurface$PlaceholderSurfaceThread -> m0.o$b:
    androidx.media3.common.util.EGLSurfaceTexture eglSurfaceTexture -> f
    android.os.Handler handler -> g
    java.lang.Error initError -> h
    java.lang.RuntimeException initException -> i
    androidx.media3.exoplayer.video.PlaceholderSurface surface -> j
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.exoplayer.video.PlaceholderSurface init(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lm0/o;"}
    1:1:void initInternal(int):0:0 -> b
    1:1:void release():0:0 -> c
    1:1:void releaseInternal():0:0 -> d
    1:1:boolean handleMessage(android.os.Message):0:0 -> handleMessage
androidx.media3.exoplayer.video.VideoFrameMetadataListener -> m0.p:
    void onVideoFrameAboutToBeRendered(long,long,androidx.media3.common.Format,android.media.MediaFormat) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJLj/q;Landroid/media/MediaFormat;)V"}
androidx.media3.exoplayer.video.VideoFrameReleaseControl -> m0.q:
    androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameTimingEvaluator frameTimingEvaluator -> a
    androidx.media3.exoplayer.video.VideoFrameReleaseHelper frameReleaseHelper -> b
    long allowedJoiningTimeMs -> c
    boolean started -> d
    int firstFrameState -> e
    long initialPositionUs -> f
    long lastReleaseRealtimeUs -> g
    long lastPresentationTimeUs -> h
    long joiningDeadlineMs -> i
    boolean joiningRenderNextFrameImmediately -> j
    float playbackSpeed -> k
    androidx.media3.common.util.Clock clock -> l
    1:1:void <init>(android.content.Context,androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameTimingEvaluator,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lm0/q$b;J)V"}
    1:1:void allowReleaseFirstFrameBeforeStarted():0:0 -> a
    1:1:long calculateEarlyTimeUs(long,long,long):0:0 -> b
    1:1:int getFrameReleaseAction(long,long,long,long,boolean,androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameReleaseInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJJJZLm0/q$a;)I"}
    1:1:boolean isReady(boolean):0:0 -> d
    1:1:void join(boolean):0:0 -> e
    1:1:void lowerFirstFrameState(int):0:0 -> f
    1:1:void onDisabled():0:0 -> g
    1:1:void onEnabled(boolean):0:0 -> h
    1:1:boolean onFrameReleasedIsFirstFrame():0:0 -> i
    1:1:void onProcessedStreamChange():0:0 -> j
    1:1:void onStarted():0:0 -> k
    1:1:void onStopped():0:0 -> l
    1:1:void reset():0:0 -> m
    1:1:void setChangeFrameRateStrategy(int):0:0 -> n
    1:1:void setClock(androidx.media3.common.util.Clock):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/c;)V"}
    1:1:void setFrameRate(float):0:0 -> p
    1:1:void setOutputSurface(android.view.Surface):0:0 -> q
    1:1:void setPlaybackSpeed(float):0:0 -> r
    1:1:boolean shouldForceRelease(long,long,long):0:0 -> s
androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameReleaseInfo -> m0.q$a:
    long earlyUs -> a
    long releaseTimeNs -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void access$000(androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameReleaseInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/q$a;)V"}
    1:1:long access$100(androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameReleaseInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/q$a;)J"}
    1:1:long access$102(androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameReleaseInfo,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/q$a;J)J"}
    1:1:long access$200(androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameReleaseInfo):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/q$a;)J"}
    1:1:long access$202(androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameReleaseInfo,long):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/q$a;J)J"}
    1:1:long getEarlyUs():0:0 -> f
    1:1:long getReleaseTimeNs():0:0 -> g
    1:1:void reset():0:0 -> h
androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameTimingEvaluator -> m0.q$b:
    boolean shouldDropFrame(long,long,boolean) -> p
    boolean shouldIgnoreFrame(long,long,long,boolean,boolean) -> q
    boolean shouldForceReleaseFrame(long,long) -> z
androidx.media3.exoplayer.video.VideoFrameReleaseHelper -> m0.s:
    androidx.media3.exoplayer.video.FixedFrameRateEstimator frameRateEstimator -> a
    androidx.media3.exoplayer.video.VideoFrameReleaseHelper$DisplayHelper displayHelper -> b
    androidx.media3.exoplayer.video.VideoFrameReleaseHelper$VSyncSampler vsyncSampler -> c
    boolean started -> d
    android.view.Surface surface -> e
    float formatFrameRate -> f
    float surfaceMediaFrameRate -> g
    float surfacePlaybackFrameRate -> h
    float playbackSpeed -> i
    int changeFrameRateStrategy -> j
    long vsyncDurationNs -> k
    long vsyncOffsetNs -> l
    long frameIndex -> m
    long pendingLastAdjustedFrameIndex -> n
    long pendingLastAdjustedReleaseTimeNs -> o
    long lastAdjustedFrameIndex -> p
    long lastAdjustedReleaseTimeNs -> q
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:void access$000(androidx.media3.exoplayer.video.VideoFrameReleaseHelper,android.view.Display):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/s;Landroid/view/Display;)V"}
    1:1:long adjustReleaseTime(long):0:0 -> b
    1:1:boolean adjustmentAllowed(long,long):0:0 -> c
    1:1:void clearSurfaceFrameRate():0:0 -> d
    1:1:long closestVsync(long,long,long):0:0 -> e
    1:1:androidx.media3.exoplayer.video.VideoFrameReleaseHelper$DisplayHelper maybeBuildDisplayHelper(android.content.Context):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lm0/s$b;"}
    1:1:void onFormatChanged(float):0:0 -> g
    1:1:void onNextFrame(long):0:0 -> h
    1:1:void onPlaybackSpeed(float):0:0 -> i
    1:1:void onPositionReset():0:0 -> j
    1:1:void onStarted():0:0 -> k
    1:1:void onStopped():0:0 -> l
    1:1:void onSurfaceChanged(android.view.Surface):0:0 -> m
    1:1:void resetAdjustment():0:0 -> n
    1:1:void setChangeFrameRateStrategy(int):0:0 -> o
    1:1:void updateDefaultDisplayRefreshRateParams(android.view.Display):0:0 -> p
    1:1:void updateSurfaceMediaFrameRate():0:0 -> q
    1:1:void updateSurfacePlaybackFrameRate(boolean):0:0 -> r
androidx.media3.exoplayer.video.VideoFrameReleaseHelper$Api30 -> m0.s$a:
    1:1:void setSurfaceFrameRate(android.view.Surface,float):0:0 -> a
androidx.media3.exoplayer.video.VideoFrameReleaseHelper$Api30$$ExternalSyntheticApiModelOutline0 -> m0.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.media3.exoplayer.video.VideoFrameReleaseHelper$Api30$$InternalSyntheticApiModelOutline$8$2d6c8b6d9c02d16d9538cbcc1a67be498bab288a4ba2f8d3fdcff0058c7577df$0.m(android.view.Surface,float,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.VideoFrameReleaseHelper$DisplayHelper -> m0.s$b:
    android.hardware.display.DisplayManager displayManager -> a
    androidx.media3.exoplayer.video.VideoFrameReleaseHelper this$0 -> b
    1:1:void <init>(androidx.media3.exoplayer.video.VideoFrameReleaseHelper,android.hardware.display.DisplayManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/s;Landroid/hardware/display/DisplayManager;)V"}
    1:1:android.view.Display getDefaultDisplay():0:0 -> a
    1:1:void register():0:0 -> b
    1:1:void unregister():0:0 -> c
    1:1:void onDisplayAdded(int):0:0 -> onDisplayAdded
    1:1:void onDisplayChanged(int):0:0 -> onDisplayChanged
    1:1:void onDisplayRemoved(int):0:0 -> onDisplayRemoved
androidx.media3.exoplayer.video.VideoFrameReleaseHelper$VSyncSampler -> m0.s$c:
    long sampledVsyncTimeNs -> f
    android.os.Handler handler -> g
    android.os.HandlerThread choreographerOwnerThread -> h
    android.view.Choreographer choreographer -> i
    int observerCount -> j
    androidx.media3.exoplayer.video.VideoFrameReleaseHelper$VSyncSampler INSTANCE -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void addObserver():0:0 -> a
    1:1:void addObserverInternal():0:0 -> b
    1:1:void createChoreographerInstanceInternal():0:0 -> c
    1:1:androidx.media3.exoplayer.video.VideoFrameReleaseHelper$VSyncSampler getInstance():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm0/s$c;"}
    1:1:void doFrame(long):0:0 -> doFrame
    1:1:void removeObserver():0:0 -> e
    1:1:void removeObserverInternal():0:0 -> f
    1:1:boolean handleMessage(android.os.Message):0:0 -> handleMessage
androidx.media3.exoplayer.video.VideoFrameRenderControl -> m0.t:
    androidx.media3.exoplayer.video.VideoFrameRenderControl$FrameRenderer frameRenderer -> a
    androidx.media3.exoplayer.video.VideoFrameReleaseControl videoFrameReleaseControl -> b
    androidx.media3.exoplayer.video.VideoFrameReleaseControl$FrameReleaseInfo videoFrameReleaseInfo -> c
    androidx.media3.common.util.TimedValueQueue videoSizeChanges -> d
    androidx.media3.common.util.TimedValueQueue streamOffsets -> e
    androidx.media3.common.util.LongArrayQueue presentationTimestampsUs -> f
    androidx.media3.common.VideoSize pendingOutputVideoSize -> g
    androidx.media3.common.VideoSize reportedVideoSize -> h
    long outputStreamOffsetUs -> i
    long lastPresentationTimeUs -> j
    1:1:void <init>(androidx.media3.exoplayer.video.VideoFrameRenderControl$FrameRenderer,androidx.media3.exoplayer.video.VideoFrameReleaseControl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/t$a;Lm0/q;)V"}
    1:1:void dropFrame():0:0 -> a
    1:1:void flush():0:0 -> b
    1:1:java.lang.Object getLastAndClear(androidx.media3.common.util.TimedValueQueue):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/d0;)Ljava/lang/Object;"}
    1:1:boolean hasReleasedFrame(long):0:0 -> d
    1:1:boolean isReady():0:0 -> e
    1:1:boolean maybeUpdateOutputStreamOffset(long):0:0 -> f
    1:1:boolean maybeUpdateVideoSize(long):0:0 -> g
    1:1:void render(long,long):0:0 -> h
    1:1:void renderFrame(boolean):0:0 -> i
    1:1:void setPlaybackSpeed(float):0:0 -> j
androidx.media3.exoplayer.video.VideoFrameRenderControl$FrameRenderer -> m0.t$a:
    void renderFrame(long,long,long,boolean) -> a
    void dropFrame() -> b
    void onVideoSizeChanged(androidx.media3.common.VideoSize) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;)V"}
androidx.media3.exoplayer.video.VideoRendererEventListener -> m0.e0:
    void onVideoSizeChanged(androidx.media3.common.VideoSize) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;)V"}
    void onVideoCodecError(java.lang.Exception) -> f
    void onVideoDecoderReleased(java.lang.String) -> g
    void onVideoDisabled(androidx.media3.exoplayer.DecoderCounters) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    void onRenderedFirstFrame(java.lang.Object,long) -> m
    void onVideoDecoderInitialized(java.lang.String,long,long) -> p
    void onVideoInputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation) -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    void onDroppedFrames(int,long) -> u
    void onVideoFrameProcessingOffset(long,int) -> x
    void onVideoEnabled(androidx.media3.exoplayer.DecoderCounters) -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher -> m0.e0$a:
    android.os.Handler handler -> a
    androidx.media3.exoplayer.video.VideoRendererEventListener listener -> b
    1:1:void <init>(android.os.Handler,androidx.media3.exoplayer.video.VideoRendererEventListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Lm0/e0;)V"}
    1:1:void renderedFirstFrame(java.lang.Object):0:0 -> A
    1:1:void reportVideoFrameProcessingOffset(long,int):0:0 -> B
    1:1:void videoCodecError(java.lang.Exception):0:0 -> C
    1:1:void videoSizeChanged(androidx.media3.common.VideoSize):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;)V"}
    1:1:void $r8$lambda$-7kJBJkDdLff1doRhwD5W3OUYNY(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,java.lang.String,long,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Ljava/lang/String;JJ)V"}
    1:1:void $r8$lambda$01t6g-u-s12hoq0qQoSqCfPVims(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Lj/q;Lq/p;)V"}
    1:1:void $r8$lambda$CVN62V7v5pQvDwilT0cT1thoiA0(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,java.lang.Object,long):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Ljava/lang/Object;J)V"}
    1:1:void $r8$lambda$PlbOhK0Oay-F9BJKLal1nxu2A9k(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,java.lang.Exception):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Ljava/lang/Exception;)V"}
    1:1:void $r8$lambda$W2g5JHXzPpTfAEhJrU0Fi7-KLlM(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,int,long):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;IJ)V"}
    1:1:void $r8$lambda$ks2NMXIs_U3i4Ow9fEGKryVA8cA(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,androidx.media3.common.VideoSize):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Lj/p0;)V"}
    1:1:void $r8$lambda$ks8_TPIDXWK7Jo4My_kMqKiMqqw(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,java.lang.String):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Ljava/lang/String;)V"}
    1:1:void $r8$lambda$ngvi57JB-vKDfcHD3eNng9ymLm4(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,long,int):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;JI)V"}
    1:1:void $r8$lambda$oW1eawo6zK-r0TPuYvI2KarPR48(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,androidx.media3.exoplayer.DecoderCounters):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Lq/o;)V"}
    1:1:void $r8$lambda$yXvS--4aEBztLUhlvWAbIgEDY3k(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,androidx.media3.exoplayer.DecoderCounters):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Lq/o;)V"}
    1:1:void decoderInitialized(java.lang.String,long,long):0:0 -> k
    1:1:void decoderReleased(java.lang.String):0:0 -> l
    1:1:void disabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void droppedFrames(int,long):0:0 -> n
    1:1:void enabled(androidx.media3.exoplayer.DecoderCounters):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void inputFormatChanged(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    1:1:void lambda$decoderInitialized$1(java.lang.String,long,long):0:0 -> q
    1:1:void lambda$decoderReleased$7(java.lang.String):0:0 -> r
    1:1:void lambda$disabled$8(androidx.media3.exoplayer.DecoderCounters):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void lambda$droppedFrames$3(int,long):0:0 -> t
    1:1:void lambda$enabled$0(androidx.media3.exoplayer.DecoderCounters):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/o;)V"}
    1:1:void lambda$inputFormatChanged$2(androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;Lq/p;)V"}
    1:1:void lambda$renderedFirstFrame$6(java.lang.Object,long):0:0 -> w
    1:1:void lambda$reportVideoFrameProcessingOffset$4(long,int):0:0 -> x
    1:1:void lambda$videoCodecError$9(java.lang.Exception):0:0 -> y
    1:1:void lambda$videoSizeChanged$5(androidx.media3.common.VideoSize):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;)V"}
androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$ExternalSyntheticLambda0 -> m0.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$0309433b8f49b11341d3982f0a6575c95d20e194eb6546b641082a7d2ab47582$0.f$0 -> f
    int androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$0309433b8f49b11341d3982f0a6575c95d20e194eb6546b641082a7d2ab47582$0.f$1 -> g
    long androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$0309433b8f49b11341d3982f0a6575c95d20e194eb6546b641082a7d2ab47582$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$0309433b8f49b11341d3982f0a6575c95d20e194eb6546b641082a7d2ab47582$0.<init>(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,int,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;IJ)V"}
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$0309433b8f49b11341d3982f0a6575c95d20e194eb6546b641082a7d2ab47582$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$ExternalSyntheticLambda1 -> m0.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$1114fce24d1e8a193e22fe92bbc748b3d81b699fc5fa06d5a8c9f98da662974b$0.f$0 -> f
    java.lang.Object androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$1114fce24d1e8a193e22fe92bbc748b3d81b699fc5fa06d5a8c9f98da662974b$0.f$1 -> g
    long androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$1114fce24d1e8a193e22fe92bbc748b3d81b699fc5fa06d5a8c9f98da662974b$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$1114fce24d1e8a193e22fe92bbc748b3d81b699fc5fa06d5a8c9f98da662974b$0.<init>(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,java.lang.Object,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Ljava/lang/Object;J)V"}
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$1114fce24d1e8a193e22fe92bbc748b3d81b699fc5fa06d5a8c9f98da662974b$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$ExternalSyntheticLambda2 -> m0.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$515a01a10c8293f596bf0b3fba0c3380ec4f4e5d1ee9d73276893f6172473578$0.f$0 -> f
    java.lang.Exception androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$515a01a10c8293f596bf0b3fba0c3380ec4f4e5d1ee9d73276893f6172473578$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$515a01a10c8293f596bf0b3fba0c3380ec4f4e5d1ee9d73276893f6172473578$0.<init>(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,java.lang.Exception):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Ljava/lang/Exception;)V"}
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$515a01a10c8293f596bf0b3fba0c3380ec4f4e5d1ee9d73276893f6172473578$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$ExternalSyntheticLambda3 -> m0.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$78ad9ad669b64ba8fdd9df351329db4f7f93ca56050fbf18ff09824675b90c60$0.f$0 -> f
    long androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$78ad9ad669b64ba8fdd9df351329db4f7f93ca56050fbf18ff09824675b90c60$0.f$1 -> g
    int androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$78ad9ad669b64ba8fdd9df351329db4f7f93ca56050fbf18ff09824675b90c60$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$78ad9ad669b64ba8fdd9df351329db4f7f93ca56050fbf18ff09824675b90c60$0.<init>(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,long,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;JI)V"}
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$78ad9ad669b64ba8fdd9df351329db4f7f93ca56050fbf18ff09824675b90c60$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$ExternalSyntheticLambda4 -> m0.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$81f606e0f37930bfaa5c285e4289767ef16487a82e95f9102227f99f81c12061$0.f$0 -> f
    androidx.media3.exoplayer.DecoderCounters androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$81f606e0f37930bfaa5c285e4289767ef16487a82e95f9102227f99f81c12061$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$81f606e0f37930bfaa5c285e4289767ef16487a82e95f9102227f99f81c12061$0.<init>(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,androidx.media3.exoplayer.DecoderCounters):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Lq/o;)V"}
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$81f606e0f37930bfaa5c285e4289767ef16487a82e95f9102227f99f81c12061$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$ExternalSyntheticLambda5 -> m0.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$8825ae71e6882804c632fdbdb07d3c26acc3b7297a46c390bc55925d74c12f16$0.f$0 -> f
    androidx.media3.exoplayer.DecoderCounters androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$8825ae71e6882804c632fdbdb07d3c26acc3b7297a46c390bc55925d74c12f16$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$8825ae71e6882804c632fdbdb07d3c26acc3b7297a46c390bc55925d74c12f16$0.<init>(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,androidx.media3.exoplayer.DecoderCounters):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Lq/o;)V"}
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$8825ae71e6882804c632fdbdb07d3c26acc3b7297a46c390bc55925d74c12f16$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$ExternalSyntheticLambda6 -> m0.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$8bb9f438d1464b897e51e015e93dab36befe6ed098247efede7c7038ffbd68d7$0.f$0 -> f
    java.lang.String androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$8bb9f438d1464b897e51e015e93dab36befe6ed098247efede7c7038ffbd68d7$0.f$1 -> g
    long androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$8bb9f438d1464b897e51e015e93dab36befe6ed098247efede7c7038ffbd68d7$0.f$2 -> h
    long androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$8bb9f438d1464b897e51e015e93dab36befe6ed098247efede7c7038ffbd68d7$0.f$3 -> i
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$8bb9f438d1464b897e51e015e93dab36befe6ed098247efede7c7038ffbd68d7$0.<init>(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,java.lang.String,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Ljava/lang/String;JJ)V"}
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$8bb9f438d1464b897e51e015e93dab36befe6ed098247efede7c7038ffbd68d7$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$ExternalSyntheticLambda7 -> m0.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9479a42d06fb7200f0936fe8beed26f9cd94522941ce87e1e7f06edca3919fa5$0.f$0 -> f
    androidx.media3.common.Format androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9479a42d06fb7200f0936fe8beed26f9cd94522941ce87e1e7f06edca3919fa5$0.f$1 -> g
    androidx.media3.exoplayer.DecoderReuseEvaluation androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9479a42d06fb7200f0936fe8beed26f9cd94522941ce87e1e7f06edca3919fa5$0.f$2 -> h
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9479a42d06fb7200f0936fe8beed26f9cd94522941ce87e1e7f06edca3919fa5$0.<init>(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,androidx.media3.common.Format,androidx.media3.exoplayer.DecoderReuseEvaluation):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Lj/q;Lq/p;)V"}
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$9479a42d06fb7200f0936fe8beed26f9cd94522941ce87e1e7f06edca3919fa5$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$ExternalSyntheticLambda8 -> m0.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$addb00ad739987ae763a60dda7905929b2874d7fcb20f40d4d76acc1171decc5$0.f$0 -> f
    androidx.media3.common.VideoSize androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$addb00ad739987ae763a60dda7905929b2874d7fcb20f40d4d76acc1171decc5$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$addb00ad739987ae763a60dda7905929b2874d7fcb20f40d4d76acc1171decc5$0.<init>(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,androidx.media3.common.VideoSize):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Lj/p0;)V"}
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$addb00ad739987ae763a60dda7905929b2874d7fcb20f40d4d76acc1171decc5$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$ExternalSyntheticLambda9 -> m0.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$fb5f22538a1bd4eb175077d0aab05fca48497a60f6bcab6f9a013e73933ee797$0.f$0 -> f
    java.lang.String androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$fb5f22538a1bd4eb175077d0aab05fca48497a60f6bcab6f9a013e73933ee797$0.f$1 -> g
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$fb5f22538a1bd4eb175077d0aab05fca48497a60f6bcab6f9a013e73933ee797$0.<init>(androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/e0$a;Ljava/lang/String;)V"}
    1:1:void androidx.media3.exoplayer.video.VideoRendererEventListener$EventDispatcher$$InternalSyntheticLambda$8$fb5f22538a1bd4eb175077d0aab05fca48497a60f6bcab6f9a013e73933ee797$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.exoplayer.video.VideoSink -> m0.f0:
    void onRendererDisabled() -> A
    void setOutputSurfaceInfo(android.view.Surface,androidx.media3.common.util.Size) -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/Surface;Lm/a0;)V"}
    void setPlaybackSpeed(float) -> C
    boolean isFrameDropAllowedOnInput() -> D
    boolean isEnded() -> c
    boolean isReady() -> e
    void enableMayRenderStartOfStream() -> i
    void render(long,long) -> l
    void clearOutputSurfaceInfo() -> m
    void setListener(androidx.media3.exoplayer.video.VideoSink$Listener,java.util.concurrent.Executor) -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0$a;Ljava/util/concurrent/Executor;)V"}
    long registerInputFrame(long,boolean) -> o
    android.view.Surface getInputSurface() -> p
    void onRendererStarted() -> q
    void registerInputStream(int,androidx.media3.common.Format) -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/q;)V"}
    void release() -> release
    void flush(boolean) -> s
    void onRendererStopped() -> t
    void setVideoEffects(java.util.List) -> u
    void setStreamOffsetAndAdjustmentUs(long,long) -> v
    void setVideoFrameMetadataListener(androidx.media3.exoplayer.video.VideoFrameMetadataListener) -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/p;)V"}
    boolean isInitialized() -> x
    void initialize(androidx.media3.common.Format) -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    void onRendererEnabled(boolean) -> z
androidx.media3.exoplayer.video.VideoSink$Listener -> m0.f0$a:
    androidx.media3.exoplayer.video.VideoSink$Listener NO_OP -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void onFirstFrameRendered(androidx.media3.exoplayer.video.VideoSink) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0;)V"}
    void onFrameDropped(androidx.media3.exoplayer.video.VideoSink) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0;)V"}
    void onVideoSizeChanged(androidx.media3.exoplayer.video.VideoSink,androidx.media3.common.VideoSize) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0;Lj/p0;)V"}
androidx.media3.exoplayer.video.VideoSink$Listener$1 -> m0.f0$a$a:
    void <init>() -> <init>
    1:1:void onFirstFrameRendered(androidx.media3.exoplayer.video.VideoSink):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0;)V"}
    1:1:void onFrameDropped(androidx.media3.exoplayer.video.VideoSink):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0;)V"}
    1:1:void onVideoSizeChanged(androidx.media3.exoplayer.video.VideoSink,androidx.media3.common.VideoSize):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm0/f0;Lj/p0;)V"}
androidx.media3.exoplayer.video.VideoSink$VideoSinkException -> m0.f0$b:
    androidx.media3.common.Format format -> f
    1:1:void <init>(java.lang.Throwable,androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Lj/q;)V"}
androidx.media3.exoplayer.video.VideoSinkProvider -> m0.g0:
    androidx.media3.exoplayer.video.VideoSink getSink() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm0/f0;"}
    androidx.media3.exoplayer.video.VideoFrameReleaseControl getVideoFrameReleaseControl() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm0/q;"}
androidx.media3.exoplayer.video.spherical.CameraMotionListener -> n0.a:
    void onCameraMotionReset() -> g
    void onCameraMotion(long,float[]) -> h
androidx.media3.exoplayer.video.spherical.CameraMotionRenderer -> n0.b:
    long lastTimestampUs -> A
    androidx.media3.decoder.DecoderInputBuffer buffer -> w
    androidx.media3.common.util.ParsableByteArray scratch -> x
    long offsetUs -> y
    androidx.media3.exoplayer.video.spherical.CameraMotionListener listener -> z
    1:1:void <init>():0:0 -> <init>
    1:1:void handleMessage(int,java.lang.Object):0:0 -> H
    1:1:void onDisabled():0:0 -> W
    1:1:void onPositionReset(long,boolean):0:0 -> Z
    1:1:int supportsFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:boolean isEnded():0:0 -> c
    1:1:boolean isReady():0:0 -> e
    1:1:void onStreamChanged(androidx.media3.common.Format[],long,long,androidx.media3.exoplayer.source.MediaSource$MediaPeriodId):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lj/q;JJLg0/f0$b;)V"}
    1:1:float[] parseMetadata(java.nio.ByteBuffer):0:0 -> k0
    1:1:void render(long,long):0:0 -> l
    1:1:void resetListener():0:0 -> l0
    1:1:java.lang.String getName():0:0 -> n
androidx.media3.extractor.AacUtil -> o0.a:
    int[] AUDIO_SPECIFIC_CONFIG_SAMPLING_RATE_TABLE -> a
    int[] AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:byte[] buildAacLcAudioSpecificConfig(int,int):0:0 -> a
    1:1:byte[] buildAudioSpecificConfig(int,int,int):0:0 -> b
    1:1:int getAudioObjectType(androidx.media3.common.util.ParsableBitArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)I"}
    1:1:int getSamplingFrequency(androidx.media3.common.util.ParsableBitArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)I"}
    1:1:androidx.media3.extractor.AacUtil$Config parseAudioSpecificConfig(androidx.media3.common.util.ParsableBitArray,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;Z)Lo0/a$b;"}
    1:1:androidx.media3.extractor.AacUtil$Config parseAudioSpecificConfig(byte[]):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lo0/a$b;"}
    1:1:void parseGaSpecificConfig(androidx.media3.common.util.ParsableBitArray,int,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;II)V"}
androidx.media3.extractor.AacUtil$1 -> o0.a$a:
androidx.media3.extractor.AacUtil$Config -> o0.a$b:
    int sampleRateHz -> a
    int channelCount -> b
    java.lang.String codecs -> c
    1:1:void <init>(int,int,java.lang.String):0:0 -> <init>
    2:2:void <init>(int,int,java.lang.String,androidx.media3.extractor.AacUtil$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILjava/lang/String;Lo0/a$a;)V"}
androidx.media3.extractor.Ac3Util -> o0.b:
    int[] BLOCKS_PER_SYNCFRAME_BY_NUMBLKSCOD -> a
    int[] SAMPLE_RATE_BY_FSCOD -> b
    int[] SAMPLE_RATE_BY_FSCOD2 -> c
    int[] CHANNEL_COUNT_BY_ACMOD -> d
    int[] BITRATE_BY_HALF_FRMSIZECOD -> e
    int[] SYNCFRAME_SIZE_WORDS_BY_HALF_FRMSIZECOD_44_1 -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int calculateEac3Bitrate(int,int,int):0:0 -> a
    1:1:int findTrueHdSyncframeOffset(java.nio.ByteBuffer):0:0 -> b
    1:1:int getAc3SyncframeSize(int,int):0:0 -> c
    1:1:androidx.media3.common.Format parseAc3AnnexFFormat(androidx.media3.common.util.ParsableByteArray,java.lang.String,java.lang.String,androidx.media3.common.DrmInitData):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/lang/String;Ljava/lang/String;Lj/m;)Lj/q;"}
    1:1:int parseAc3SyncframeAudioSampleCount(java.nio.ByteBuffer):0:0 -> e
    1:1:androidx.media3.extractor.Ac3Util$SyncFrameInfo parseAc3SyncframeInfo(androidx.media3.common.util.ParsableBitArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)Lo0/b$b;"}
    1:1:int parseAc3SyncframeSize(byte[]):0:0 -> g
    1:1:androidx.media3.common.Format parseEAc3AnnexFFormat(androidx.media3.common.util.ParsableByteArray,java.lang.String,java.lang.String,androidx.media3.common.DrmInitData):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/lang/String;Ljava/lang/String;Lj/m;)Lj/q;"}
    1:1:int parseTrueHdSyncframeAudioSampleCount(java.nio.ByteBuffer,int):0:0 -> i
    1:1:int parseTrueHdSyncframeAudioSampleCount(byte[]):0:0 -> j
androidx.media3.extractor.Ac3Util$1 -> o0.b$a:
androidx.media3.extractor.Ac3Util$SyncFrameInfo -> o0.b$b:
    java.lang.String mimeType -> a
    int streamType -> b
    int sampleRate -> c
    int channelCount -> d
    int frameSize -> e
    int sampleCount -> f
    int bitrate -> g
    1:1:void <init>(java.lang.String,int,int,int,int,int,int):0:0 -> <init>
    2:2:void <init>(java.lang.String,int,int,int,int,int,int,androidx.media3.extractor.Ac3Util$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;IIIIIILo0/b$a;)V"}
androidx.media3.extractor.Ac4Util -> o0.c:
    int[] SAMPLE_COUNT -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void getAc4SampleHeader(int,androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/z;)V"}
    1:1:androidx.media3.common.Format parseAc4AnnexEFormat(androidx.media3.common.util.ParsableByteArray,java.lang.String,java.lang.String,androidx.media3.common.DrmInitData):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/lang/String;Ljava/lang/String;Lj/m;)Lj/q;"}
    1:1:int parseAc4SyncframeAudioSampleCount(java.nio.ByteBuffer):0:0 -> c
    1:1:androidx.media3.extractor.Ac4Util$SyncFrameInfo parseAc4SyncframeInfo(androidx.media3.common.util.ParsableBitArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)Lo0/c$b;"}
    1:1:int parseAc4SyncframeSize(byte[],int):0:0 -> e
    1:1:int readVariableBits(androidx.media3.common.util.ParsableBitArray,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;I)I"}
androidx.media3.extractor.Ac4Util$1 -> o0.c$a:
androidx.media3.extractor.Ac4Util$SyncFrameInfo -> o0.c$b:
    int bitstreamVersion -> a
    int sampleRate -> b
    int channelCount -> c
    int frameSize -> d
    int sampleCount -> e
    1:1:void <init>(int,int,int,int,int):0:0 -> <init>
    2:2:void <init>(int,int,int,int,int,androidx.media3.extractor.Ac4Util$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIIIILo0/c$a;)V"}
androidx.media3.extractor.AvcConfig -> o0.d:
    java.util.List initializationData -> a
    int nalUnitLengthFieldLength -> b
    int width -> c
    int height -> d
    int bitdepthLuma -> e
    int bitdepthChroma -> f
    int colorSpace -> g
    int colorRange -> h
    int colorTransfer -> i
    int maxNumReorderFrames -> j
    float pixelWidthHeightRatio -> k
    java.lang.String codecs -> l
    1:1:void <init>(java.util.List,int,int,int,int,int,int,int,int,int,float,java.lang.String):0:0 -> <init>
    1:1:byte[] buildNalUnitForChild(androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)[B"}
    1:1:androidx.media3.extractor.AvcConfig parse(androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lo0/d;"}
androidx.media3.extractor.BinarySearchSeeker -> o0.e:
    androidx.media3.extractor.BinarySearchSeeker$BinarySearchSeekMap seekMap -> a
    androidx.media3.extractor.BinarySearchSeeker$TimestampSeeker timestampSeeker -> b
    androidx.media3.extractor.BinarySearchSeeker$SeekOperationParams seekOperationParams -> c
    int minimumSearchRange -> d
    1:1:void <init>(androidx.media3.extractor.BinarySearchSeeker$SeekTimestampConverter,androidx.media3.extractor.BinarySearchSeeker$TimestampSeeker,long,long,long,long,long,long,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$d;Lo0/e$f;JJJJJJI)V"}
    1:1:androidx.media3.extractor.BinarySearchSeeker$SeekOperationParams createSeekParamsForTargetTimeUs(long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/e$c;"}
    1:1:androidx.media3.extractor.SeekMap getSeekMap():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/m0;"}
    1:1:int handlePendingSeek(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:boolean isSeeking():0:0 -> d
    1:1:void markSeekOperationFinished(boolean,long):0:0 -> e
    1:1:void onSeekOperationFinished(boolean,long):0:0 -> f
    1:1:int seekToPosition(androidx.media3.extractor.ExtractorInput,long,androidx.media3.extractor.PositionHolder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;JLo0/l0;)I"}
    1:1:void setSeekTargetUs(long):0:0 -> h
    1:1:boolean skipInputUntilPosition(androidx.media3.extractor.ExtractorInput,long):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;J)Z"}
androidx.media3.extractor.BinarySearchSeeker$BinarySearchSeekMap -> o0.e$a:
    androidx.media3.extractor.BinarySearchSeeker$SeekTimestampConverter seekTimestampConverter -> a
    long durationUs -> b
    long floorTimePosition -> c
    long ceilingTimePosition -> d
    long floorBytePosition -> e
    long ceilingBytePosition -> f
    long approxBytesPerFrame -> g
    1:1:void <init>(androidx.media3.extractor.BinarySearchSeeker$SeekTimestampConverter,long,long,long,long,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$d;JJJJJJ)V"}
    1:1:long access$1000(androidx.media3.extractor.BinarySearchSeeker$BinarySearchSeekMap):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$a;)J"}
    1:1:boolean isSeekable():0:0 -> c
    1:1:long access$1100(androidx.media3.extractor.BinarySearchSeeker$BinarySearchSeekMap):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$a;)J"}
    1:1:long access$1200(androidx.media3.extractor.BinarySearchSeeker$BinarySearchSeekMap):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$a;)J"}
    1:1:long access$1300(androidx.media3.extractor.BinarySearchSeeker$BinarySearchSeekMap):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$a;)J"}
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
    1:1:long access$1400(androidx.media3.extractor.BinarySearchSeeker$BinarySearchSeekMap):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$a;)J"}
    1:1:long timeUsToTargetTime(long):0:0 -> l
androidx.media3.extractor.BinarySearchSeeker$DefaultSeekTimestampConverter -> o0.e$b:
    void <init>() -> <init>
    1:1:long timeUsToTargetTime(long):0:0 -> a
androidx.media3.extractor.BinarySearchSeeker$SeekOperationParams -> o0.e$c:
    long seekTimeUs -> a
    long targetTimePosition -> b
    long approxBytesPerFrame -> c
    long floorTimePosition -> d
    long ceilingTimePosition -> e
    long floorBytePosition -> f
    long ceilingBytePosition -> g
    long nextSearchBytePosition -> h
    1:1:void <init>(long,long,long,long,long,long,long):0:0 -> <init>
    1:1:long access$000(androidx.media3.extractor.BinarySearchSeeker$SeekOperationParams):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$c;)J"}
    1:1:long access$100(androidx.media3.extractor.BinarySearchSeeker$SeekOperationParams):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$c;)J"}
    1:1:long access$200(androidx.media3.extractor.BinarySearchSeeker$SeekOperationParams):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$c;)J"}
    1:1:long access$300(androidx.media3.extractor.BinarySearchSeeker$SeekOperationParams):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$c;)J"}
    1:1:long access$400(androidx.media3.extractor.BinarySearchSeeker$SeekOperationParams):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$c;)J"}
    1:1:void access$800(androidx.media3.extractor.BinarySearchSeeker$SeekOperationParams,long,long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$c;JJ)V"}
    1:1:void access$900(androidx.media3.extractor.BinarySearchSeeker$SeekOperationParams,long,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$c;JJ)V"}
    1:1:long calculateNextSearchBytePosition(long,long,long,long,long,long):0:0 -> h
    1:1:long getCeilingBytePosition():0:0 -> i
    1:1:long getFloorBytePosition():0:0 -> j
    1:1:long getNextSearchBytePosition():0:0 -> k
    1:1:long getSeekTimeUs():0:0 -> l
    1:1:long getTargetTimePosition():0:0 -> m
    1:1:void updateNextSearchBytePosition():0:0 -> n
    1:1:void updateSeekCeiling(long,long):0:0 -> o
    1:1:void updateSeekFloor(long,long):0:0 -> p
androidx.media3.extractor.BinarySearchSeeker$SeekTimestampConverter -> o0.e$d:
    long timeUsToTargetTime(long) -> a
androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult -> o0.e$e:
    int type -> a
    long timestampToUpdate -> b
    long bytePositionToUpdate -> c
    androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult NO_TIMESTAMP_IN_RANGE_RESULT -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,long,long):0:0 -> <init>
    1:1:int access$500(androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$e;)I"}
    1:1:long access$600(androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$e;)J"}
    1:1:long access$700(androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$e;)J"}
    1:1:androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult overestimatedResult(long,long):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJ)Lo0/e$e;"}
    1:1:androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult targetFoundResult(long):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/e$e;"}
    1:1:androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult underestimatedResult(long,long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJ)Lo0/e$e;"}
androidx.media3.extractor.BinarySearchSeeker$TimestampSeeker -> o0.e$f:
    void onSeekFinished() -> a
    androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult searchForTimestamp(androidx.media3.extractor.ExtractorInput,long) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;J)Lo0/e$e;"}
androidx.media3.extractor.BinarySearchSeeker$TimestampSeeker$-CC -> o0.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$onSeekFinished(androidx.media3.extractor.BinarySearchSeeker$TimestampSeeker):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/e$f;)V"}
androidx.media3.extractor.CeaUtil -> o0.g:
    1:1:void consume(long,androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.TrackOutput[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLm/z;[Lo0/s0;)V"}
    1:1:void consumeCcData(long,androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.TrackOutput[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLm/z;[Lo0/s0;)V"}
    1:1:int readNon255TerminatedValue(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)I"}
androidx.media3.extractor.ChunkIndex -> o0.h:
    int length -> a
    int[] sizes -> b
    long[] offsets -> c
    long[] durationsUs -> d
    long[] timesUs -> e
    long durationUs -> f
    1:1:void <init>(int[],long[],long[],long[]):0:0 -> <init>
    1:1:int getChunkIndex(long):0:0 -> a
    1:1:boolean isSeekable():0:0 -> c
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.extractor.ConstantBitrateSeekMap -> o0.i:
    long inputLength -> a
    long firstFrameBytePosition -> b
    int frameSize -> c
    long dataSize -> d
    int bitrate -> e
    long durationUs -> f
    boolean allowSeeksIfLengthUnknown -> g
    1:1:void <init>(long,long,int,int,boolean):0:0 -> <init>
    1:1:long getFramePositionForTimeUs(long):0:0 -> a
    1:1:boolean isSeekable():0:0 -> c
    1:1:long getTimeUsAtPosition(long):0:0 -> d
    1:1:long getTimeUsAtPosition(long,long,int):0:0 -> e
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.DefaultExtractorInput -> o0.j:
    byte[] scratchSpace -> a
    androidx.media3.common.DataReader dataReader -> b
    long streamLength -> c
    long position -> d
    byte[] peekBuffer -> e
    int peekBufferPosition -> f
    int peekBufferLength -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.common.DataReader,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;JJ)V"}
    1:1:boolean skipFully(int,boolean):0:0 -> A
    1:1:void updatePeekBuffer(int):0:0 -> B
    1:1:long getLength():0:0 -> a
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:void resetPeekPosition():0:0 -> c
    1:1:void skipFully(int):0:0 -> d
    1:1:int skip(int):0:0 -> f
    1:1:void commitBytesRead(int):0:0 -> h
    1:1:boolean readFully(byte[],int,int,boolean):0:0 -> i
    1:1:boolean advancePeekPosition(int,boolean):0:0 -> k
    1:1:boolean peekFully(byte[],int,int,boolean):0:0 -> n
    1:1:long getPeekPosition():0:0 -> o
    1:1:int peek(byte[],int,int):0:0 -> q
    1:1:void readFully(byte[],int,int):0:0 -> readFully
    1:1:void peekFully(byte[],int,int):0:0 -> t
    1:1:void advancePeekPosition(int):0:0 -> u
    1:1:long getPosition():0:0 -> v
    1:1:void ensureSpaceForPeek(int):0:0 -> w
    1:1:int readFromPeekBuffer(byte[],int,int):0:0 -> x
    1:1:int readFromUpstream(byte[],int,int,int,boolean):0:0 -> y
    1:1:int skipFromPeekBuffer(int):0:0 -> z
androidx.media3.extractor.DefaultExtractorsFactory -> o0.m:
    boolean constantBitrateSeekingEnabled -> b
    boolean constantBitrateSeekingAlwaysEnabled -> c
    int adtsFlags -> d
    int amrFlags -> e
    int flacFlags -> f
    int matroskaFlags -> g
    int mp4Flags -> h
    int fragmentedMp4Flags -> i
    int mp3Flags -> j
    int tsMode -> k
    int tsFlags -> l
    com.google.common.collect.ImmutableList tsSubtitleFormats -> m
    int tsTimestampSearchBytes -> n
    boolean textTrackTranscodingEnabled -> o
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> p
    int jpegFlags -> q
    int[] DEFAULT_EXTRACTOR_ORDER -> r
    androidx.media3.extractor.DefaultExtractorsFactory$ExtensionLoader FLAC_EXTENSION_LOADER -> s
    androidx.media3.extractor.DefaultExtractorsFactory$ExtensionLoader MIDI_EXTENSION_LOADER -> t
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.extractor.ExtractorsFactory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:java.lang.reflect.Constructor $r8$lambda$6W2W1-5R-UwlVLNHyyNaCk7TSbw():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.reflect.Constructor $r8$lambda$OE87ByVhBFSLNnBVk3NnyEF73wY():0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void addExtractorsForFileType(int,java.util.List):0:0 -> g
    1:1:androidx.media3.extractor.DefaultExtractorsFactory experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/m;"}
    1:1:java.lang.reflect.Constructor getFlacExtractorConstructor():0:0 -> i
    1:1:java.lang.reflect.Constructor getMidiExtractorConstructor():0:0 -> j
    1:1:androidx.media3.extractor.DefaultExtractorsFactory setJpegExtractorFlags(int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lo0/m;"}
    1:1:androidx.media3.extractor.DefaultExtractorsFactory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/m;"}
androidx.media3.extractor.DefaultExtractorsFactory$$ExternalSyntheticLambda0 -> o0.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.DefaultExtractorsFactory$$InternalSyntheticLambda$7$9decae44df6305ead367d57ae18b26cc0efc2081d731b2d2ac5deeaed845dfd3$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.reflect.Constructor androidx.media3.extractor.DefaultExtractorsFactory$$InternalSyntheticLambda$7$9decae44df6305ead367d57ae18b26cc0efc2081d731b2d2ac5deeaed845dfd3$0.getConstructor():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.DefaultExtractorsFactory$$ExternalSyntheticLambda1 -> o0.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.DefaultExtractorsFactory$$InternalSyntheticLambda$7$9decae44df6305ead367d57ae18b26cc0efc2081d731b2d2ac5deeaed845dfd3$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.reflect.Constructor androidx.media3.extractor.DefaultExtractorsFactory$$InternalSyntheticLambda$7$9decae44df6305ead367d57ae18b26cc0efc2081d731b2d2ac5deeaed845dfd3$1.getConstructor():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.DefaultExtractorsFactory$ExtensionLoader -> o0.m$a:
    androidx.media3.extractor.DefaultExtractorsFactory$ExtensionLoader$ConstructorSupplier constructorSupplier -> a
    java.util.concurrent.atomic.AtomicBoolean extensionLoaded -> b
    java.lang.reflect.Constructor extractorConstructor -> c
    1:1:void <init>(androidx.media3.extractor.DefaultExtractorsFactory$ExtensionLoader$ConstructorSupplier):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m$a$a;)V"}
    1:1:androidx.media3.extractor.Extractor getExtractor(java.lang.Object[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;)Lo0/r;"}
    1:1:java.lang.reflect.Constructor maybeLoadExtractorConstructor():0:0 -> b
androidx.media3.extractor.DefaultExtractorsFactory$ExtensionLoader$ConstructorSupplier -> o0.m$a$a:
    java.lang.reflect.Constructor getConstructor() -> a
androidx.media3.extractor.DiscardingTrackOutput -> o0.n:
    byte[] readBuffer -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void format(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZI)I"}
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZ)I"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JIIILo0/s0$a;)V"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)V"}
androidx.media3.extractor.DolbyVisionConfig -> o0.o:
    int profile -> a
    int level -> b
    java.lang.String codecs -> c
    1:1:void <init>(int,int,java.lang.String):0:0 -> <init>
    1:1:androidx.media3.extractor.DolbyVisionConfig parse(androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lo0/o;"}
androidx.media3.extractor.DtsUtil -> o0.p:
    int[] CHANNELS_BY_AMODE -> a
    int[] SAMPLE_RATE_BY_SFREQ -> b
    int[] TWICE_BITRATE_KBPS_BY_RATE -> c
    int[] SAMPLE_RATE_BY_INDEX -> d
    int[] UHD_FTOC_PAYLOAD_LENGTH_TABLE -> e
    int[] UHD_METADATA_CHUNK_SIZE_LENGTH_TABLE -> f
    int[] UHD_AUDIO_CHUNK_ID_LENGTH_TABLE -> g
    int[] UHD_AUDIO_CHUNK_SIZE_LENGTH_TABLE -> h
    int[] UHD_HEADER_SIZE_LENGTH_TABLE -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void checkCrc(byte[],int):0:0 -> a
    1:1:int getDtsFrameSize(byte[]):0:0 -> b
    1:1:int getFrameType(int):0:0 -> c
    1:1:androidx.media3.common.util.ParsableBitArray getNormalizedFrame(byte[]):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lm/y;"}
    1:1:boolean isLittleEndianFrameHeader(byte[]):0:0 -> e
    1:1:int parseDtsAudioSampleCount(java.nio.ByteBuffer):0:0 -> f
    1:1:int parseDtsAudioSampleCount(byte[]):0:0 -> g
    1:1:androidx.media3.common.Format parseDtsFormat(byte[],java.lang.String,java.lang.String,int,androidx.media3.common.DrmInitData):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLjava/lang/String;Ljava/lang/String;ILj/m;)Lj/q;"}
    1:1:androidx.media3.extractor.DtsUtil$DtsHeader parseDtsHdHeader(byte[]):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Lo0/p$b;"}
    1:1:int parseDtsHdHeaderSize(byte[]):0:0 -> j
    1:1:androidx.media3.extractor.DtsUtil$DtsHeader parseDtsUhdHeader(byte[],java.util.concurrent.atomic.AtomicInteger):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLjava/util/concurrent/atomic/AtomicInteger;)Lo0/p$b;"}
    1:1:int parseDtsUhdHeaderSize(byte[]):0:0 -> l
    1:1:int parseUnsignedVarInt(androidx.media3.common.util.ParsableBitArray,int[],boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;[IZ)I"}
androidx.media3.extractor.DtsUtil$1 -> o0.p$a:
androidx.media3.extractor.DtsUtil$DtsHeader -> o0.p$b:
    java.lang.String mimeType -> a
    int sampleRate -> b
    int channelCount -> c
    int frameSize -> d
    long frameDurationUs -> e
    int bitrate -> f
    1:1:void <init>(java.lang.String,int,int,int,long,int):0:0 -> <init>
    2:2:void <init>(java.lang.String,int,int,int,long,int,androidx.media3.extractor.DtsUtil$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;IIIJILo0/p$a;)V"}
androidx.media3.extractor.Extractor -> o0.r:
    void seek(long,long) -> a
    void init(androidx.media3.extractor.ExtractorOutput) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    androidx.media3.extractor.Extractor getUnderlyingImplementation() -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    boolean sniff(androidx.media3.extractor.ExtractorInput) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    java.util.List getSniffFailureDetails() -> l
    void release() -> release
androidx.media3.extractor.Extractor$-CC -> o0.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:5:java.util.List androidx.media3.extractor.Extractor.getSniffFailureDetails():0:0 -> a
    1:5:java.util.List $default$getSniffFailureDetails(androidx.media3.extractor.Extractor):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/r;)Ljava/util/List;"}
    1:1:androidx.media3.extractor.Extractor $default$getUnderlyingImplementation(androidx.media3.extractor.Extractor):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/r;)Lo0/r;"}
androidx.media3.extractor.ExtractorInput -> o0.s:
    long getLength() -> a
    int read(byte[],int,int) -> b
    void resetPeekPosition() -> c
    void skipFully(int) -> d
    int skip(int) -> f
    boolean readFully(byte[],int,int,boolean) -> i
    boolean advancePeekPosition(int,boolean) -> k
    boolean peekFully(byte[],int,int,boolean) -> n
    long getPeekPosition() -> o
    int peek(byte[],int,int) -> q
    void readFully(byte[],int,int) -> readFully
    void peekFully(byte[],int,int) -> t
    void advancePeekPosition(int) -> u
    long getPosition() -> v
androidx.media3.extractor.ExtractorOutput -> o0.t:
    androidx.media3.extractor.ExtractorOutput PLACEHOLDER -> b
    1:1:void <clinit>():0:0 -> <clinit>
    androidx.media3.extractor.TrackOutput track(int,int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
    void endTracks() -> f
    void seekMap(androidx.media3.extractor.SeekMap) -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
androidx.media3.extractor.ExtractorOutput$1 -> o0.t$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.TrackOutput track(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
    1:1:void endTracks():0:0 -> f
    1:1:void seekMap(androidx.media3.extractor.SeekMap):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
androidx.media3.extractor.ExtractorUtil -> o0.u:
    1:1:void checkContainerInput(boolean,java.lang.String):0:0 -> a
    1:1:boolean peekFullyQuietly(androidx.media3.extractor.ExtractorInput,byte[],int,int,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;[BIIZ)Z"}
    1:1:int peekToLength(androidx.media3.extractor.ExtractorInput,byte[],int,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;[BII)I"}
    1:1:boolean readFullyQuietly(androidx.media3.extractor.ExtractorInput,byte[],int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;[BII)Z"}
    1:1:boolean skipFullyQuietly(androidx.media3.extractor.ExtractorInput,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;I)Z"}
androidx.media3.extractor.ExtractorsFactory -> o0.x:
    androidx.media3.extractor.ExtractorsFactory EMPTY -> a
    1:1:void <clinit>():0:0 -> <clinit>
    androidx.media3.extractor.ExtractorsFactory setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    androidx.media3.extractor.ExtractorsFactory experimentalSetTextTrackTranscodingEnabled(boolean) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    androidx.media3.extractor.Extractor[] createExtractors(android.net.Uri,java.util.Map) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    androidx.media3.extractor.Extractor[] createExtractors() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.ExtractorsFactory$$ExternalSyntheticLambda0 -> o0.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.ExtractorsFactory$$InternalSyntheticLambda$7$e008fb8964f507dbbaa97f5eb24c871cfe3bf602796ab967f8bba2fa7361165e$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ExtractorsFactory$$InternalSyntheticLambda$7$e008fb8964f507dbbaa97f5eb24c871cfe3bf602796ab967f8bba2fa7361165e$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ExtractorsFactory$$InternalSyntheticLambda$7$e008fb8964f507dbbaa97f5eb24c871cfe3bf602796ab967f8bba2fa7361165e$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ExtractorsFactory$$InternalSyntheticLambda$7$e008fb8964f507dbbaa97f5eb24c871cfe3bf602796ab967f8bba2fa7361165e$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ExtractorsFactory$$InternalSyntheticLambda$7$e008fb8964f507dbbaa97f5eb24c871cfe3bf602796ab967f8bba2fa7361165e$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.ExtractorsFactory$-CC -> o0.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void <clinit>():0:0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ExtractorsFactory.createExtractors(android.net.Uri,java.util.Map):0:0 -> a
    1:5:androidx.media3.extractor.Extractor[] $default$createExtractors(androidx.media3.extractor.ExtractorsFactory,android.net.Uri,java.util.Map):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/x;Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.ExtractorsFactory $default$experimentalSetTextTrackTranscodingEnabled(androidx.media3.extractor.ExtractorsFactory,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/x;Z)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory $default$setSubtitleParserFactory(androidx.media3.extractor.ExtractorsFactory,androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/x;Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] lambda$static$0():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.FlacFrameReader -> o0.y:
    1:1:boolean checkAndReadBlockSizeSamples(androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.FlacStreamMetadata,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Lo0/b0;I)Z"}
    1:1:boolean checkAndReadCrc(androidx.media3.common.util.ParsableByteArray,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Z"}
    1:1:boolean checkAndReadFirstSampleNumber(androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.FlacStreamMetadata,boolean,androidx.media3.extractor.FlacFrameReader$SampleNumberHolder):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Lo0/b0;ZLo0/y$a;)Z"}
    1:1:boolean checkAndReadFrameHeader(androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.FlacStreamMetadata,int,androidx.media3.extractor.FlacFrameReader$SampleNumberHolder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Lo0/b0;ILo0/y$a;)Z"}
    1:1:boolean checkAndReadSampleRate(androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.FlacStreamMetadata,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Lo0/b0;I)Z"}
    1:1:boolean checkBitsPerSample(int,androidx.media3.extractor.FlacStreamMetadata):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILo0/b0;)Z"}
    1:1:boolean checkChannelAssignment(int,androidx.media3.extractor.FlacStreamMetadata):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILo0/b0;)Z"}
    1:1:boolean checkFrameHeaderFromPeek(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.FlacStreamMetadata,int,androidx.media3.extractor.FlacFrameReader$SampleNumberHolder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/b0;ILo0/y$a;)Z"}
    1:1:long getFirstSampleNumber(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.FlacStreamMetadata):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/b0;)J"}
    1:1:int readFrameBlockSizeSamplesFromKey(androidx.media3.common.util.ParsableByteArray,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)I"}
androidx.media3.extractor.FlacFrameReader$SampleNumberHolder -> o0.y$a:
    long sampleNumber -> a
    void <init>() -> <init>
androidx.media3.extractor.FlacMetadataReader -> o0.z:
    1:1:boolean checkAndPeekStreamMarker(androidx.media3.extractor.ExtractorInput):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int getFrameStartMarker(androidx.media3.extractor.ExtractorInput):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
    1:1:androidx.media3.common.Metadata peekId3Metadata(androidx.media3.extractor.ExtractorInput,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Z)Lj/x;"}
    1:1:androidx.media3.common.Metadata readId3Metadata(androidx.media3.extractor.ExtractorInput,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Z)Lj/x;"}
    1:1:boolean readMetadataBlock(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.FlacMetadataReader$FlacStreamMetadataHolder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/z$a;)Z"}
    1:1:androidx.media3.extractor.FlacStreamMetadata$SeekTable readSeekTableMetadataBlock(androidx.media3.common.util.ParsableByteArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lo0/b0$a;"}
    1:1:androidx.media3.extractor.FlacStreamMetadata$SeekTable readSeekTableMetadataBlock(androidx.media3.extractor.ExtractorInput,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;I)Lo0/b0$a;"}
    1:1:androidx.media3.extractor.FlacStreamMetadata readStreamInfoBlock(androidx.media3.extractor.ExtractorInput):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Lo0/b0;"}
    1:1:void readStreamMarker(androidx.media3.extractor.ExtractorInput):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:java.util.List readVorbisCommentMetadataBlock(androidx.media3.extractor.ExtractorInput,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;I)Ljava/util/List;"}
androidx.media3.extractor.FlacMetadataReader$FlacStreamMetadataHolder -> o0.z$a:
    androidx.media3.extractor.FlacStreamMetadata flacStreamMetadata -> a
    1:1:void <init>(androidx.media3.extractor.FlacStreamMetadata):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/b0;)V"}
androidx.media3.extractor.FlacSeekTableSeekMap -> o0.a0:
    androidx.media3.extractor.FlacStreamMetadata flacStreamMetadata -> a
    long firstFrameOffset -> b
    1:1:void <init>(androidx.media3.extractor.FlacStreamMetadata,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/b0;J)V"}
    1:1:androidx.media3.extractor.SeekPoint getSeekPoint(long,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJ)Lo0/n0;"}
    1:1:boolean isSeekable():0:0 -> c
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.FlacStreamMetadata -> o0.b0:
    int minBlockSizeSamples -> a
    int maxBlockSizeSamples -> b
    int minFrameSize -> c
    int maxFrameSize -> d
    int sampleRate -> e
    int sampleRateLookupKey -> f
    int channels -> g
    int bitsPerSample -> h
    int bitsPerSampleLookupKey -> i
    long totalSamples -> j
    androidx.media3.extractor.FlacStreamMetadata$SeekTable seekTable -> k
    androidx.media3.common.Metadata metadata -> l
    1:1:void <init>(int,int,int,int,int,int,int,long,androidx.media3.extractor.FlacStreamMetadata$SeekTable,androidx.media3.common.Metadata):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIIIIIIJLo0/b0$a;Lj/x;)V"}
    2:2:void <init>(byte[],int):0:0 -> <init>
    1:1:androidx.media3.extractor.FlacStreamMetadata copyWithPictureFrames(java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lo0/b0;"}
    1:1:androidx.media3.extractor.FlacStreamMetadata copyWithSeekTable(androidx.media3.extractor.FlacStreamMetadata$SeekTable):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/b0$a;)Lo0/b0;"}
    1:1:androidx.media3.extractor.FlacStreamMetadata copyWithVorbisComments(java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lo0/b0;"}
    1:1:long getApproxBytesPerFrame():0:0 -> d
    1:1:int getBitsPerSampleLookupKey(int):0:0 -> e
    1:1:long getDurationUs():0:0 -> f
    1:1:androidx.media3.common.Format getFormat(byte[],androidx.media3.common.Metadata):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BLj/x;)Lj/q;"}
    1:1:androidx.media3.common.Metadata getMetadataCopyWithAppendedEntriesFrom(androidx.media3.common.Metadata):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)Lj/x;"}
    1:1:long getSampleNumber(long):0:0 -> i
    1:1:int getSampleRateLookupKey(int):0:0 -> j
androidx.media3.extractor.FlacStreamMetadata$SeekTable -> o0.b0$a:
    long[] pointSampleNumbers -> a
    long[] pointOffsets -> b
    1:1:void <init>(long[],long[]):0:0 -> <init>
androidx.media3.extractor.ForwardingExtractorInput -> o0.c0:
    androidx.media3.extractor.ExtractorInput input -> a
    1:1:void <init>(androidx.media3.extractor.ExtractorInput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:long getLength():0:0 -> a
    1:1:int read(byte[],int,int):0:0 -> b
    1:1:void resetPeekPosition():0:0 -> c
    1:1:void skipFully(int):0:0 -> d
    1:1:int skip(int):0:0 -> f
    1:1:boolean readFully(byte[],int,int,boolean):0:0 -> i
    1:1:boolean advancePeekPosition(int,boolean):0:0 -> k
    1:1:boolean peekFully(byte[],int,int,boolean):0:0 -> n
    1:1:long getPeekPosition():0:0 -> o
    1:1:int peek(byte[],int,int):0:0 -> q
    1:1:void readFully(byte[],int,int):0:0 -> readFully
    1:1:void peekFully(byte[],int,int):0:0 -> t
    1:1:void advancePeekPosition(int):0:0 -> u
    1:1:long getPosition():0:0 -> v
androidx.media3.extractor.ForwardingSeekMap -> o0.d0:
    androidx.media3.extractor.SeekMap seekMap -> a
    1:1:void <init>(androidx.media3.extractor.SeekMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
    1:1:boolean isSeekable():0:0 -> c
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.GaplessInfoHolder -> o0.e0:
    int encoderDelay -> a
    int encoderPadding -> b
    java.util.regex.Pattern GAPLESS_COMMENT_PATTERN -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:boolean hasGaplessInfo():0:0 -> a
    1:1:boolean setFromComment(java.lang.String):0:0 -> b
    1:1:boolean setFromMetadata(androidx.media3.common.Metadata):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)Z"}
androidx.media3.extractor.HevcConfig -> o0.f0:
    java.util.List initializationData -> a
    int nalUnitLengthFieldLength -> b
    int width -> c
    int height -> d
    int bitdepthLuma -> e
    int bitdepthChroma -> f
    int colorSpace -> g
    int colorRange -> h
    int colorTransfer -> i
    float pixelWidthHeightRatio -> j
    int maxNumReorderPics -> k
    java.lang.String codecs -> l
    1:1:void <init>(java.util.List,int,int,int,int,int,int,int,int,float,int,java.lang.String):0:0 -> <init>
    1:1:androidx.media3.extractor.HevcConfig parse(androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lo0/f0;"}
androidx.media3.extractor.Id3Peeker -> o0.g0:
    androidx.media3.common.util.ParsableByteArray scratch -> a
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.common.Metadata peekId3Data(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lc1/h$a;)Lj/x;"}
androidx.media3.extractor.IndexSeekMap -> o0.h0:
    long[] positions -> a
    long[] timesUs -> b
    long durationUs -> c
    boolean isSeekable -> d
    1:1:void <init>(long[],long[],long):0:0 -> <init>
    1:1:boolean isSeekable():0:0 -> c
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.MpegAudioUtil -> o0.i0:
    java.lang.String[] MIME_TYPE_BY_LAYER -> a
    int[] SAMPLING_RATE_V1 -> b
    int[] BITRATE_V1_L1 -> c
    int[] BITRATE_V2_L1 -> d
    int[] BITRATE_V1_L2 -> e
    int[] BITRATE_V1_L3 -> f
    int[] BITRATE_V2 -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:boolean access$000(int):0:0 -> a
    1:1:java.lang.String[] access$100():0:0 -> b
    1:1:int[] access$200():0:0 -> c
    1:1:int access$300(int,int):0:0 -> d
    1:1:int[] access$400():0:0 -> e
    1:1:int[] access$500():0:0 -> f
    1:1:int[] access$600():0:0 -> g
    1:1:int[] access$700():0:0 -> h
    1:1:int[] access$800():0:0 -> i
    1:1:int getFrameSize(int):0:0 -> j
    1:1:int getFrameSizeInSamples(int,int):0:0 -> k
    1:1:boolean isMagicPresent(int):0:0 -> l
    1:1:int parseMpegAudioFrameSampleCount(int):0:0 -> m
androidx.media3.extractor.MpegAudioUtil$Header -> o0.i0$a:
    int version -> a
    java.lang.String mimeType -> b
    int frameSize -> c
    int sampleRate -> d
    int channels -> e
    int bitrate -> f
    int samplesPerFrame -> g
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.extractor.MpegAudioUtil$Header):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/i0$a;)V"}
    1:1:boolean setForHeaderData(int):0:0 -> a
androidx.media3.extractor.NoOpExtractorOutput -> o0.j0:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.TrackOutput track(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
    1:1:void endTracks():0:0 -> f
    1:1:void seekMap(androidx.media3.extractor.SeekMap):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
androidx.media3.extractor.OpusUtil -> o0.k0:
    1:1:java.util.List buildInitializationData(byte[]):0:0 -> a
    1:1:byte[] buildNativeOrderByteArray(long):0:0 -> b
    1:1:int getChannelCount(byte[]):0:0 -> c
    1:1:long getPacketDurationUs(byte,byte):0:0 -> d
    1:1:long getPacketDurationUs(byte[]):0:0 -> e
    1:1:int getPreSkipSamples(byte[]):0:0 -> f
    1:1:boolean needToDecodeOpusFrame(long,long):0:0 -> g
    1:1:int parseOggPacketAudioSampleCount(java.nio.ByteBuffer):0:0 -> h
    1:1:int parseOggPacketForPreAudioSampleByteCount(java.nio.ByteBuffer):0:0 -> i
    1:1:int parsePacketAudioSampleCount(java.nio.ByteBuffer):0:0 -> j
    1:1:long sampleCountToNanoseconds(long):0:0 -> k
androidx.media3.extractor.PositionHolder -> o0.l0:
    long position -> a
    void <init>() -> <init>
androidx.media3.extractor.SeekMap -> o0.m0:
    boolean isSeekable() -> c
    androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    long getDurationUs() -> j
androidx.media3.extractor.SeekMap$SeekPoints -> o0.m0$a:
    androidx.media3.extractor.SeekPoint first -> a
    androidx.media3.extractor.SeekPoint second -> b
    1:1:void <init>(androidx.media3.extractor.SeekPoint):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/n0;)V"}
    2:2:void <init>(androidx.media3.extractor.SeekPoint,androidx.media3.extractor.SeekPoint):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/n0;Lo0/n0;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.extractor.SeekMap$Unseekable -> o0.m0$b:
    long durationUs -> a
    androidx.media3.extractor.SeekMap$SeekPoints startSeekPoints -> b
    1:1:void <init>(long):0:0 -> <init>
    2:2:void <init>(long,long):0:0 -> <init>
    1:1:boolean isSeekable():0:0 -> c
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.SeekPoint -> o0.n0:
    long timeUs -> a
    long position -> b
    androidx.media3.extractor.SeekPoint START -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,long):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.extractor.SingleSampleExtractor -> o0.o0:
    int fileSignature -> a
    int fileSignatureLength -> b
    java.lang.String sampleMimeType -> c
    int size -> d
    int state -> e
    androidx.media3.extractor.ExtractorOutput extractorOutput -> f
    androidx.media3.extractor.TrackOutput trackOutput -> g
    1:1:void <init>(int,int,java.lang.String):0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:void outputImageTrackAndSeekMap(java.lang.String):0:0 -> b
    1:1:void readSegment(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.SingleSampleSeekMap -> o0.p0:
    long durationUs -> a
    long startPosition -> b
    1:1:void <init>(long):0:0 -> <init>
    2:2:void <init>(long,long):0:0 -> <init>
    1:1:boolean isSeekable():0:0 -> c
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.SniffFailure -> o0.q0:
androidx.media3.extractor.TrackOutput -> o0.s0:
    void format(androidx.media3.common.Format) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    int sampleData(androidx.media3.common.DataReader,int,boolean,int) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZI)I"}
    int sampleData(androidx.media3.common.DataReader,int,boolean) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZ)I"}
    void sampleData(androidx.media3.common.util.ParsableByteArray,int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JIIILo0/s0$a;)V"}
    void sampleData(androidx.media3.common.util.ParsableByteArray,int,int) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)V"}
androidx.media3.extractor.TrackOutput$-CC -> o0.r0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    2:6:int androidx.media3.extractor.TrackOutput.sampleData(androidx.media3.common.DataReader,int,boolean):0:0 -> a
    2:6:int $default$sampleData(androidx.media3.extractor.TrackOutput,androidx.media3.common.DataReader,int,boolean):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;Lj/i;IZ)I"}
    2:5:void androidx.media3.extractor.TrackOutput.sampleData(androidx.media3.common.util.ParsableByteArray,int):0:0 -> b
    2:5:void $default$sampleData(androidx.media3.extractor.TrackOutput,androidx.media3.common.util.ParsableByteArray,int):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;Lm/z;I)V"}
androidx.media3.extractor.TrackOutput$CryptoData -> o0.s0$a:
    int cryptoMode -> a
    byte[] encryptionKey -> b
    int encryptedBlocks -> c
    int clearBlocks -> d
    1:1:void <init>(int,byte[],int,int):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.media3.extractor.TrueHdSampleRechunker -> o0.t0:
    byte[] syncframePrefix -> a
    boolean foundSyncframe -> b
    int chunkSampleCount -> c
    long chunkTimeUs -> d
    int chunkFlags -> e
    int chunkSize -> f
    int chunkOffset -> g
    1:1:void <init>():0:0 -> <init>
    1:1:void outputPendingSampleMetadata(androidx.media3.extractor.TrackOutput,androidx.media3.extractor.TrackOutput$CryptoData):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;Lo0/s0$a;)V"}
    1:1:void reset():0:0 -> b
    1:1:void sampleMetadata(androidx.media3.extractor.TrackOutput,long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;JIIILo0/s0$a;)V"}
    1:1:void startSample(androidx.media3.extractor.ExtractorInput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
androidx.media3.extractor.VorbisBitArray -> o0.u0:
    byte[] data -> a
    int byteLimit -> b
    int byteOffset -> c
    int bitOffset -> d
    1:1:void <init>(byte[]):0:0 -> <init>
    1:1:void assertValidOffset():0:0 -> a
    1:1:int getPosition():0:0 -> b
    1:1:boolean readBit():0:0 -> c
    1:1:int readBits(int):0:0 -> d
    1:1:void skipBits(int):0:0 -> e
androidx.media3.extractor.VorbisUtil -> o0.v0:
    1:1:int[] getVorbisToAndroidChannelLayoutMapping(int):0:0 -> a
    1:1:int iLog(int):0:0 -> b
    1:1:long mapType1QuantValues(long,long):0:0 -> c
    1:1:androidx.media3.common.Metadata parseVorbisComments(java.util.List):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lj/x;"}
    1:1:com.google.common.collect.ImmutableList parseVorbisCsdFromEsdsInitializationData(byte[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Ll2/v;"}
    1:1:void readFloors(androidx.media3.extractor.VorbisBitArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/u0;)V"}
    1:1:void readMappings(int,androidx.media3.extractor.VorbisBitArray):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILo0/u0;)V"}
    1:1:androidx.media3.extractor.VorbisUtil$Mode[] readModes(androidx.media3.extractor.VorbisBitArray):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/u0;)[Lo0/v0$b;"}
    1:1:void readResidues(androidx.media3.extractor.VorbisBitArray):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/u0;)V"}
    1:1:androidx.media3.extractor.VorbisUtil$CommentHeader readVorbisCommentHeader(androidx.media3.common.util.ParsableByteArray):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lo0/v0$a;"}
    1:1:androidx.media3.extractor.VorbisUtil$CommentHeader readVorbisCommentHeader(androidx.media3.common.util.ParsableByteArray,boolean,boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;ZZ)Lo0/v0$a;"}
    1:1:androidx.media3.extractor.VorbisUtil$VorbisIdHeader readVorbisIdentificationHeader(androidx.media3.common.util.ParsableByteArray):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lo0/v0$c;"}
    1:1:androidx.media3.extractor.VorbisUtil$Mode[] readVorbisModes(androidx.media3.common.util.ParsableByteArray,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)[Lo0/v0$b;"}
    1:1:void skipBook(androidx.media3.extractor.VorbisBitArray):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/u0;)V"}
    1:1:boolean verifyVorbisHeaderCapturePattern(int,androidx.media3.common.util.ParsableByteArray,boolean):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/z;Z)Z"}
androidx.media3.extractor.VorbisUtil$CommentHeader -> o0.v0$a:
    java.lang.String vendor -> a
    java.lang.String[] comments -> b
    int length -> c
    1:1:void <init>(java.lang.String,java.lang.String[],int):0:0 -> <init>
androidx.media3.extractor.VorbisUtil$Mode -> o0.v0$b:
    boolean blockFlag -> a
    int windowType -> b
    int transformType -> c
    int mapping -> d
    1:1:void <init>(boolean,int,int,int):0:0 -> <init>
androidx.media3.extractor.VorbisUtil$VorbisIdHeader -> o0.v0$c:
    int version -> a
    int channels -> b
    int sampleRate -> c
    int bitrateMaximum -> d
    int bitrateNominal -> e
    int bitrateMinimum -> f
    int blockSize0 -> g
    int blockSize1 -> h
    boolean framingFlag -> i
    byte[] data -> j
    1:1:void <init>(int,int,int,int,int,int,int,int,boolean,byte[]):0:0 -> <init>
androidx.media3.extractor.WavUtil -> o0.w0:
    1:1:int getPcmEncodingForType(int,int):0:0 -> a
androidx.media3.extractor.amr.AmrExtractor -> p0.b:
    byte[] scratch -> a
    int flags -> b
    boolean isWideBand -> c
    long currentSampleTimeUs -> d
    int currentSampleSize -> e
    int currentSampleBytesRemaining -> f
    boolean hasOutputSeekMap -> g
    long firstSamplePosition -> h
    int firstSampleSize -> i
    int numSamplesWithSameSize -> j
    long timeOffsetUs -> k
    androidx.media3.extractor.ExtractorOutput extractorOutput -> l
    androidx.media3.extractor.TrackOutput trackOutput -> m
    androidx.media3.extractor.SeekMap seekMap -> n
    boolean hasOutputFormat -> o
    androidx.media3.extractor.ExtractorsFactory FACTORY -> p
    int[] frameSizeBytesByTypeNb -> q
    int[] frameSizeBytesByTypeWb -> r
    byte[] amrSignatureNb -> s
    byte[] amrSignatureWb -> t
    int MAX_FRAME_SIZE_BYTES -> u
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$Lj0wEnaIMrQfPKK1DJgw55k1ifY():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void assertInitialized():0:0 -> c
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int getBitrateFromFrameSize(int,long):0:0 -> g
    1:1:androidx.media3.extractor.SeekMap getConstantBitrateSeekMap(long,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JZ)Lo0/m0;"}
    1:1:int getFrameSizeInBytes(int):0:0 -> i
    1:1:boolean isNarrowBandValidFrameType(int):0:0 -> j
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean isValidFrameType(int):0:0 -> m
    1:1:boolean isWideBandValidFrameType(int):0:0 -> n
    1:1:androidx.media3.extractor.Extractor[] lambda$static$0():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void maybeOutputFormat():0:0 -> p
    1:1:void maybeOutputSeekMap(long,int):0:0 -> q
    1:1:boolean peekAmrSignature(androidx.media3.extractor.ExtractorInput,byte[]):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;[B)Z"}
    1:1:void release():0:0 -> release
    1:1:int peekNextSampleSize(androidx.media3.extractor.ExtractorInput):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
    1:1:boolean readAmrHeader(androidx.media3.extractor.ExtractorInput):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int readSample(androidx.media3.extractor.ExtractorInput):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
androidx.media3.extractor.amr.AmrExtractor$$ExternalSyntheticLambda0 -> p0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.amr.AmrExtractor$$InternalSyntheticLambda$10$c7fe6d7dcc8d419d83ee3aaedcf1f630d9ff2782c03264c98e0fa45bdf32996e$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.amr.AmrExtractor$$InternalSyntheticLambda$10$c7fe6d7dcc8d419d83ee3aaedcf1f630d9ff2782c03264c98e0fa45bdf32996e$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.amr.AmrExtractor$$InternalSyntheticLambda$10$c7fe6d7dcc8d419d83ee3aaedcf1f630d9ff2782c03264c98e0fa45bdf32996e$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.amr.AmrExtractor$$InternalSyntheticLambda$10$c7fe6d7dcc8d419d83ee3aaedcf1f630d9ff2782c03264c98e0fa45bdf32996e$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.amr.AmrExtractor$$InternalSyntheticLambda$10$c7fe6d7dcc8d419d83ee3aaedcf1f630d9ff2782c03264c98e0fa45bdf32996e$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.avi.AviChunk -> q0.a:
    int getType() -> a
androidx.media3.extractor.avi.AviExtractor -> q0.b:
    androidx.media3.common.util.ParsableByteArray scratch -> a
    androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder chunkHeaderHolder -> b
    boolean parseSubtitlesDuringExtraction -> c
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> d
    int state -> e
    androidx.media3.extractor.ExtractorOutput extractorOutput -> f
    androidx.media3.extractor.avi.AviMainHeaderChunk aviHeader -> g
    long durationUs -> h
    androidx.media3.extractor.avi.ChunkReader[] chunkReaders -> i
    long pendingReposition -> j
    androidx.media3.extractor.avi.ChunkReader currentChunkReader -> k
    int hdrlSize -> l
    long moviStart -> m
    long moviEnd -> n
    int idx1BodySize -> o
    boolean seekMapHasBeenOutput -> p
    1:1:void <init>(int,androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILl1/t$a;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.avi.ChunkReader[] access$100(androidx.media3.extractor.avi.AviExtractor):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/b;)[Lq0/e;"}
    1:1:void alignInputToEvenPosition(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:androidx.media3.extractor.avi.ChunkReader getChunkReader(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lq0/e;"}
    1:1:void parseHdrlBody(androidx.media3.common.util.ParsableByteArray):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void parseIdx1Body(androidx.media3.common.util.ParsableByteArray):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:long peekSeekOffset(androidx.media3.common.util.ParsableByteArray):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)J"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.avi.ChunkReader processStreamList(androidx.media3.extractor.avi.ListChunk,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/f;I)Lq0/e;"}
    1:1:int readMoviChunks(androidx.media3.extractor.ExtractorInput):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
    1:1:boolean resolvePendingReposition(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)Z"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.avi.AviExtractor$1 -> q0.b$a:
androidx.media3.extractor.avi.AviExtractor$AviSeekMap -> q0.b$b:
    long durationUs -> a
    androidx.media3.extractor.avi.AviExtractor this$0 -> b
    1:1:void <init>(androidx.media3.extractor.avi.AviExtractor,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/b;J)V"}
    1:1:boolean isSeekable():0:0 -> c
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.avi.AviExtractor$ChunkHeaderHolder -> q0.b$c:
    int chunkType -> a
    int size -> b
    int listType -> c
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.extractor.avi.AviExtractor$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq0/b$a;)V"}
    1:1:void populateFrom(androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void populateWithListHeaderFrom(androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.extractor.avi.AviMainHeaderChunk -> q0.c:
    int frameDurationUs -> a
    int flags -> b
    int totalFrames -> c
    int streams -> d
    1:1:void <init>(int,int,int,int):0:0 -> <init>
    1:1:int getType():0:0 -> a
    1:1:boolean hasIndex():0:0 -> b
    1:1:androidx.media3.extractor.avi.AviMainHeaderChunk parseFrom(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lq0/c;"}
androidx.media3.extractor.avi.AviStreamHeaderChunk -> q0.d:
    int streamType -> a
    int initialFrames -> b
    int scale -> c
    int rate -> d
    int length -> e
    int suggestedBufferSize -> f
    1:1:void <init>(int,int,int,int,int,int):0:0 -> <init>
    1:1:int getType():0:0 -> a
    1:1:long getDurationUs():0:0 -> b
    1:1:int getTrackType():0:0 -> c
    1:1:androidx.media3.extractor.avi.AviStreamHeaderChunk parseFrom(androidx.media3.common.util.ParsableByteArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lq0/d;"}
androidx.media3.extractor.avi.ChunkReader -> q0.e:
    androidx.media3.extractor.TrackOutput trackOutput -> a
    int chunkId -> b
    int alternativeChunkId -> c
    long durationUs -> d
    int streamHeaderChunkCount -> e
    int currentChunkSize -> f
    int bytesRemainingInCurrentChunk -> g
    int currentChunkIndex -> h
    int indexChunkCount -> i
    int indexSize -> j
    long[] keyFrameOffsets -> k
    int[] keyFrameIndices -> l
    1:1:void <init>(int,int,long,int,androidx.media3.extractor.TrackOutput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIJILo0/s0;)V"}
    1:1:void advanceCurrentChunk():0:0 -> a
    1:1:void appendKeyFrameToIndex(long):0:0 -> b
    1:1:void compactIndex():0:0 -> c
    1:1:int getChunkIdFourCc(int,int):0:0 -> d
    1:1:long getChunkTimestampUs(int):0:0 -> e
    1:1:long getCurrentChunkTimestampUs():0:0 -> f
    1:1:long getFrameDurationUs():0:0 -> g
    1:1:androidx.media3.extractor.SeekPoint getSeekPoint(int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lo0/n0;"}
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:boolean handlesChunkId(int):0:0 -> j
    1:1:void incrementIndexChunkCount():0:0 -> k
    1:1:boolean isCurrentFrameAKeyFrame():0:0 -> l
    1:1:boolean onChunkData(androidx.media3.extractor.ExtractorInput):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void onChunkStart(int):0:0 -> n
    1:1:void seekToPosition(long):0:0 -> o
androidx.media3.extractor.avi.ListChunk -> q0.f:
    com.google.common.collect.ImmutableList children -> a
    int type -> b
    1:1:void <init>(int,com.google.common.collect.ImmutableList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILl2/v;)V"}
    1:1:int getType():0:0 -> a
    1:1:androidx.media3.extractor.avi.AviChunk createBox(int,int,androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILm/z;)Lq0/a;"}
    1:1:androidx.media3.extractor.avi.AviChunk getChild(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lq0/a;"}
    1:1:androidx.media3.extractor.avi.ListChunk parseFrom(int,androidx.media3.common.util.ParsableByteArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/z;)Lq0/f;"}
androidx.media3.extractor.avi.StreamFormatChunk -> q0.g:
    androidx.media3.common.Format format -> a
    1:1:void <init>(androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:int getType():0:0 -> a
    1:1:java.lang.String getMimeTypeFromCompression(int):0:0 -> b
    1:1:java.lang.String getMimeTypeFromTag(int):0:0 -> c
    1:1:androidx.media3.extractor.avi.AviChunk parseBitmapInfoHeader(androidx.media3.common.util.ParsableByteArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lq0/a;"}
    1:1:androidx.media3.extractor.avi.AviChunk parseFrom(int,androidx.media3.common.util.ParsableByteArray):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/z;)Lq0/a;"}
    1:1:androidx.media3.extractor.avi.AviChunk parseWaveFormatEx(androidx.media3.common.util.ParsableByteArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lq0/a;"}
androidx.media3.extractor.avi.StreamNameChunk -> q0.h:
    java.lang.String name -> a
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:int getType():0:0 -> a
    1:1:androidx.media3.extractor.avi.StreamNameChunk parseFrom(androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lq0/h;"}
androidx.media3.extractor.avif.AvifExtractor -> r0.a:
    androidx.media3.common.util.ParsableByteArray scratch -> a
    androidx.media3.extractor.SingleSampleExtractor imageExtractor -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:boolean readAndCompareFourBytes(androidx.media3.extractor.ExtractorInput,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;I)Z"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.bmp.BmpExtractor -> s0.a:
    androidx.media3.extractor.SingleSampleExtractor imageExtractor -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.flac.FlacBinarySearchSeeker -> t0.b:
    1:1:void <init>(androidx.media3.extractor.FlacStreamMetadata,int,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/b0;IJJ)V"}
androidx.media3.extractor.flac.FlacBinarySearchSeeker$$ExternalSyntheticLambda0 -> t0.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.extractor.FlacStreamMetadata androidx.media3.extractor.flac.FlacBinarySearchSeeker$$InternalSyntheticLambda$10$80381c857ddbecdcde0d04d5abdc8fc41c50bc9f92332ae13a4737366d3b00d3$0.f$0 -> a
    1:1:void androidx.media3.extractor.flac.FlacBinarySearchSeeker$$InternalSyntheticLambda$10$80381c857ddbecdcde0d04d5abdc8fc41c50bc9f92332ae13a4737366d3b00d3$0.<init>(androidx.media3.extractor.FlacStreamMetadata):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/b0;)V"}
    1:1:long androidx.media3.extractor.flac.FlacBinarySearchSeeker$$InternalSyntheticLambda$10$80381c857ddbecdcde0d04d5abdc8fc41c50bc9f92332ae13a4737366d3b00d3$0.timeUsToTargetTime(long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.flac.FlacBinarySearchSeeker$1 -> t0.b$a:
androidx.media3.extractor.flac.FlacBinarySearchSeeker$FlacTimestampSeeker -> t0.b$b:
    androidx.media3.extractor.FlacStreamMetadata flacStreamMetadata -> a
    int frameStartMarker -> b
    androidx.media3.extractor.FlacFrameReader$SampleNumberHolder sampleNumberHolder -> c
    1:1:void <init>(androidx.media3.extractor.FlacStreamMetadata,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/b0;I)V"}
    2:2:void <init>(androidx.media3.extractor.FlacStreamMetadata,int,androidx.media3.extractor.flac.FlacBinarySearchSeeker$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/b0;ILt0/b$a;)V"}
    1:1:void onSeekFinished():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult searchForTimestamp(androidx.media3.extractor.ExtractorInput,long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;J)Lo0/e$e;"}
    1:1:long findNextFrame(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)J"}
androidx.media3.extractor.flac.FlacExtractor -> t0.d:
    byte[] streamMarkerAndInfoBlock -> a
    androidx.media3.common.util.ParsableByteArray buffer -> b
    boolean id3MetadataDisabled -> c
    androidx.media3.extractor.FlacFrameReader$SampleNumberHolder sampleNumberHolder -> d
    androidx.media3.extractor.ExtractorOutput extractorOutput -> e
    androidx.media3.extractor.TrackOutput trackOutput -> f
    int state -> g
    androidx.media3.common.Metadata id3Metadata -> h
    androidx.media3.extractor.FlacStreamMetadata flacStreamMetadata -> i
    int minFrameSize -> j
    int frameStartMarker -> k
    androidx.media3.extractor.flac.FlacBinarySearchSeeker binarySearchSeeker -> l
    int currentFrameBytesWritten -> m
    long currentFrameFirstSampleNumber -> n
    androidx.media3.extractor.ExtractorsFactory FACTORY -> o
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$FXBmcp_G1jbqaDcR7fpYswbfGPw():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:long findFrame(androidx.media3.common.util.ParsableByteArray,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Z)J"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void getFrameStartMarker(androidx.media3.extractor.ExtractorInput):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:androidx.media3.extractor.SeekMap getSeekMap(long,long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJ)Lo0/m0;"}
    1:1:void getStreamMarkerAndInfoBlockBytes(androidx.media3.extractor.ExtractorInput):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:androidx.media3.extractor.Extractor[] lambda$static$0():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void outputSampleMetadata():0:0 -> m
    1:1:int readFrames(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:void readId3Metadata(androidx.media3.extractor.ExtractorInput):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void readMetadataBlocks(androidx.media3.extractor.ExtractorInput):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void readStreamMarker(androidx.media3.extractor.ExtractorInput):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.flac.FlacExtractor$$ExternalSyntheticLambda0 -> t0.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.flac.FlacExtractor$$InternalSyntheticLambda$10$2f695acaad26fbd5ae92ba980fc56883e5cfec513a748a1cd9bb3f865698fc24$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.flac.FlacExtractor$$InternalSyntheticLambda$10$2f695acaad26fbd5ae92ba980fc56883e5cfec513a748a1cd9bb3f865698fc24$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.flac.FlacExtractor$$InternalSyntheticLambda$10$2f695acaad26fbd5ae92ba980fc56883e5cfec513a748a1cd9bb3f865698fc24$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.flac.FlacExtractor$$InternalSyntheticLambda$10$2f695acaad26fbd5ae92ba980fc56883e5cfec513a748a1cd9bb3f865698fc24$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.flac.FlacExtractor$$InternalSyntheticLambda$10$2f695acaad26fbd5ae92ba980fc56883e5cfec513a748a1cd9bb3f865698fc24$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.flv.AudioTagPayloadReader -> u0.a:
    boolean hasParsedAudioDataHeader -> b
    boolean hasOutputFormat -> c
    int audioFormat -> d
    int[] AUDIO_SAMPLING_RATE_TABLE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.extractor.TrackOutput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;)V"}
    1:1:boolean parseHeader(androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
    1:1:boolean parsePayload(androidx.media3.common.util.ParsableByteArray,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;J)Z"}
androidx.media3.extractor.flv.FlvExtractor -> u0.c:
    androidx.media3.common.util.ParsableByteArray scratch -> a
    androidx.media3.common.util.ParsableByteArray headerBuffer -> b
    androidx.media3.common.util.ParsableByteArray tagHeaderBuffer -> c
    androidx.media3.common.util.ParsableByteArray tagData -> d
    androidx.media3.extractor.flv.ScriptTagPayloadReader metadataReader -> e
    androidx.media3.extractor.ExtractorOutput extractorOutput -> f
    int state -> g
    boolean outputFirstSample -> h
    long mediaTagTimestampOffsetUs -> i
    int bytesToNextTagHeader -> j
    int tagType -> k
    int tagDataSize -> l
    long tagTimestampUs -> m
    boolean outputSeekMap -> n
    androidx.media3.extractor.flv.AudioTagPayloadReader audioReader -> o
    androidx.media3.extractor.flv.VideoTagPayloadReader videoReader -> p
    androidx.media3.extractor.ExtractorsFactory FACTORY -> q
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$Sbt2vF-jfGehZj7n_aDCHj5D5es():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void ensureReadyForMediaOutput():0:0 -> c
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:long getCurrentTimestampUs():0:0 -> g
    1:1:androidx.media3.extractor.Extractor[] lambda$static$0():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:androidx.media3.common.util.ParsableByteArray prepareTagData(androidx.media3.extractor.ExtractorInput):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Lm/z;"}
    1:1:boolean readFlvHeader(androidx.media3.extractor.ExtractorInput):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean readTagData(androidx.media3.extractor.ExtractorInput):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:boolean readTagHeader(androidx.media3.extractor.ExtractorInput):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void skipToTagHeader(androidx.media3.extractor.ExtractorInput):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.flv.FlvExtractor$$ExternalSyntheticLambda0 -> u0.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.flv.FlvExtractor$$InternalSyntheticLambda$10$564f46364ec403f8b3cf05a3be825080b914c8a9c16544d3800088a887ac3cf9$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.flv.FlvExtractor$$InternalSyntheticLambda$10$564f46364ec403f8b3cf05a3be825080b914c8a9c16544d3800088a887ac3cf9$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.flv.FlvExtractor$$InternalSyntheticLambda$10$564f46364ec403f8b3cf05a3be825080b914c8a9c16544d3800088a887ac3cf9$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.flv.FlvExtractor$$InternalSyntheticLambda$10$564f46364ec403f8b3cf05a3be825080b914c8a9c16544d3800088a887ac3cf9$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.flv.FlvExtractor$$InternalSyntheticLambda$10$564f46364ec403f8b3cf05a3be825080b914c8a9c16544d3800088a887ac3cf9$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.flv.ScriptTagPayloadReader -> u0.d:
    long durationUs -> b
    long[] keyFrameTimesUs -> c
    long[] keyFrameTagPositions -> d
    1:1:void <init>():0:0 -> <init>
    1:1:boolean parseHeader(androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
    1:1:boolean parsePayload(androidx.media3.common.util.ParsableByteArray,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;J)Z"}
    1:1:long getDurationUs():0:0 -> d
    1:1:long[] getKeyFrameTagPositions():0:0 -> e
    1:1:long[] getKeyFrameTimesUs():0:0 -> f
    1:1:java.lang.Boolean readAmfBoolean(androidx.media3.common.util.ParsableByteArray):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/lang/Boolean;"}
    1:1:java.lang.Object readAmfData(androidx.media3.common.util.ParsableByteArray,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Ljava/lang/Object;"}
    1:1:java.util.Date readAmfDate(androidx.media3.common.util.ParsableByteArray):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/util/Date;"}
    1:1:java.lang.Double readAmfDouble(androidx.media3.common.util.ParsableByteArray):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/lang/Double;"}
    1:1:java.util.HashMap readAmfEcmaArray(androidx.media3.common.util.ParsableByteArray):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/util/HashMap;"}
    1:1:java.util.HashMap readAmfObject(androidx.media3.common.util.ParsableByteArray):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/util/HashMap;"}
    1:1:java.util.ArrayList readAmfStrictArray(androidx.media3.common.util.ParsableByteArray):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/util/ArrayList;"}
    1:1:java.lang.String readAmfString(androidx.media3.common.util.ParsableByteArray):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/lang/String;"}
    1:1:int readAmfType(androidx.media3.common.util.ParsableByteArray):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)I"}
androidx.media3.extractor.flv.TagPayloadReader -> u0.e:
    androidx.media3.extractor.TrackOutput output -> a
    1:1:void <init>(androidx.media3.extractor.TrackOutput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;)V"}
    1:1:boolean consume(androidx.media3.common.util.ParsableByteArray,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;J)Z"}
    boolean parseHeader(androidx.media3.common.util.ParsableByteArray) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
    boolean parsePayload(androidx.media3.common.util.ParsableByteArray,long) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;J)Z"}
androidx.media3.extractor.flv.TagPayloadReader$UnsupportedFormatException -> u0.e$a:
    1:1:void <init>(java.lang.String):0:0 -> <init>
androidx.media3.extractor.flv.VideoTagPayloadReader -> u0.f:
    androidx.media3.common.util.ParsableByteArray nalStartCode -> b
    androidx.media3.common.util.ParsableByteArray nalLength -> c
    int nalUnitLengthFieldLength -> d
    boolean hasOutputFormat -> e
    boolean hasOutputKeyframe -> f
    int frameType -> g
    1:1:void <init>(androidx.media3.extractor.TrackOutput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;)V"}
    1:1:boolean parseHeader(androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
    1:1:boolean parsePayload(androidx.media3.common.util.ParsableByteArray,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;J)Z"}
androidx.media3.extractor.heif.HeifExtractor -> v0.a:
    androidx.media3.common.util.ParsableByteArray scratch -> a
    androidx.media3.extractor.SingleSampleExtractor imageExtractor -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:boolean readAndCompareFourBytes(androidx.media3.extractor.ExtractorInput,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;I)Z"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.jpeg.JpegExtractor -> w0.a:
    androidx.media3.extractor.Extractor extractor -> a
    1:1:void <init>(int):0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.jpeg.JpegMotionPhotoExtractor -> w0.b:
    androidx.media3.common.util.ParsableByteArray scratch -> a
    androidx.media3.extractor.ExtractorOutput extractorOutput -> b
    int state -> c
    int marker -> d
    int segmentLength -> e
    long mp4StartPosition -> f
    androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata motionPhotoMetadata -> g
    androidx.media3.extractor.ExtractorInput lastExtractorInput -> h
    androidx.media3.extractor.jpeg.StartOffsetExtractorInput mp4ExtractorStartOffsetExtractorInput -> i
    androidx.media3.extractor.mp4.Mp4Extractor mp4Extractor -> j
    1:1:void <init>():0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:void advancePeekPositionToNextSegment(androidx.media3.extractor.ExtractorInput):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void endReading():0:0 -> c
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata getMotionPhotoMetadata(java.lang.String,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;J)Ld1/a;"}
    1:1:void outputImageTrack(androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/a;)V"}
    1:1:int peekMarker(androidx.media3.extractor.ExtractorInput):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
    1:1:void readMarker(androidx.media3.extractor.ExtractorInput):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void readSegment(androidx.media3.extractor.ExtractorInput):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void readSegmentLength(androidx.media3.extractor.ExtractorInput):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void sniffMotionPhotoVideo(androidx.media3.extractor.ExtractorInput):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void startReadingMotionPhoto():0:0 -> p
    1:1:void release():0:0 -> release
androidx.media3.extractor.jpeg.MotionPhotoDescription -> w0.c:
    long photoPresentationTimestampUs -> a
    java.util.List items -> b
    1:1:void <init>(long,java.util.List):0:0 -> <init>
    1:1:androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata getMotionPhotoMetadata(long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Ld1/a;"}
androidx.media3.extractor.jpeg.MotionPhotoDescription$ContainerItem -> w0.c$a:
    java.lang.String mime -> a
    java.lang.String semantic -> b
    long length -> c
    long padding -> d
    1:1:void <init>(java.lang.String,java.lang.String,long,long):0:0 -> <init>
androidx.media3.extractor.jpeg.StartOffsetExtractorInput -> w0.d:
    long startOffset -> b
    1:1:void <init>(androidx.media3.extractor.ExtractorInput,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;J)V"}
    1:1:long getLength():0:0 -> a
    1:1:long getPeekPosition():0:0 -> o
    1:1:long getPosition():0:0 -> v
androidx.media3.extractor.jpeg.StartOffsetExtractorOutput -> w0.e:
    long startOffset -> f
    androidx.media3.extractor.ExtractorOutput extractorOutput -> g
    1:1:void <init>(long,androidx.media3.extractor.ExtractorOutput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLo0/t;)V"}
    1:1:long access$000(androidx.media3.extractor.jpeg.StartOffsetExtractorOutput):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/e;)J"}
    1:1:androidx.media3.extractor.TrackOutput track(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
    1:1:void endTracks():0:0 -> f
    1:1:void seekMap(androidx.media3.extractor.SeekMap):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
androidx.media3.extractor.jpeg.StartOffsetExtractorOutput$1 -> w0.e$a:
    androidx.media3.extractor.SeekMap val$seekMap -> b
    androidx.media3.extractor.jpeg.StartOffsetExtractorOutput this$0 -> c
    1:1:void <init>(androidx.media3.extractor.jpeg.StartOffsetExtractorOutput,androidx.media3.extractor.SeekMap,androidx.media3.extractor.SeekMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw0/e;Lo0/m0;Lo0/m0;)V"}
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
androidx.media3.extractor.jpeg.XmpMotionPhotoDescriptionParser -> w0.f:
    java.lang.String[] MOTION_PHOTO_ATTRIBUTE_NAMES -> a
    java.lang.String[] DESCRIPTION_MOTION_PHOTO_PRESENTATION_TIMESTAMP_ATTRIBUTE_NAMES -> b
    java.lang.String[] DESCRIPTION_MICRO_VIDEO_OFFSET_ATTRIBUTE_NAMES -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:androidx.media3.extractor.jpeg.MotionPhotoDescription parse(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lw0/c;"}
    1:1:androidx.media3.extractor.jpeg.MotionPhotoDescription parseInternal(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lw0/c;"}
    1:1:com.google.common.collect.ImmutableList parseMicroVideoOffsetFromDescription(org.xmlpull.v1.XmlPullParser):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;)Ll2/v;"}
    1:1:boolean parseMotionPhotoFlagFromDescription(org.xmlpull.v1.XmlPullParser):0:0 -> d
    1:1:long parseMotionPhotoPresentationTimestampUsFromDescription(org.xmlpull.v1.XmlPullParser):0:0 -> e
    1:1:com.google.common.collect.ImmutableList parseMotionPhotoV1Directory(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;Ljava/lang/String;)Ll2/v;"}
androidx.media3.extractor.metadata.MetadataDecoder -> x0.a:
    androidx.media3.common.Metadata decode(androidx.media3.extractor.metadata.MetadataInputBuffer) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/b;)Lj/x;"}
androidx.media3.extractor.metadata.MetadataInputBuffer -> x0.b:
    long subsampleOffsetUs -> o
    1:1:void <init>():0:0 -> <init>
androidx.media3.extractor.metadata.SimpleMetadataDecoder -> x0.c:
    void <init>() -> <init>
    1:1:androidx.media3.common.Metadata decode(androidx.media3.extractor.metadata.MetadataInputBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/b;)Lj/x;"}
    androidx.media3.common.Metadata decode(androidx.media3.extractor.metadata.MetadataInputBuffer,java.nio.ByteBuffer) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/b;Ljava/nio/ByteBuffer;)Lj/x;"}
androidx.media3.extractor.metadata.dvbsi.AppInfoTable -> y0.a:
    int controlCode -> f
    java.lang.String url -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,java.lang.String):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.dvbsi.AppInfoTable$1 -> y0.a$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.dvbsi.AppInfoTable createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ly0/a;"}
    1:1:androidx.media3.extractor.metadata.dvbsi.AppInfoTable[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ly0/a;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.dvbsi.AppInfoTableDecoder -> y0.b:
    void <init>() -> <init>
    1:1:androidx.media3.common.Metadata decode(androidx.media3.extractor.metadata.MetadataInputBuffer,java.nio.ByteBuffer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/b;Ljava/nio/ByteBuffer;)Lj/x;"}
    1:1:androidx.media3.common.Metadata parseAit(androidx.media3.common.util.ParsableBitArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)Lj/x;"}
androidx.media3.extractor.metadata.emsg.EventMessage -> z0.a:
    java.lang.String schemeIdUri -> f
    java.lang.String value -> g
    long durationMs -> h
    long id -> i
    byte[] messageData -> j
    int hashCode -> k
    androidx.media3.common.Format ID3_FORMAT -> l
    androidx.media3.common.Format SCTE35_FORMAT -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,long,long,byte[]):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.emsg.EventMessage$1 -> z0.a$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.emsg.EventMessage createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lz0/a;"}
    1:1:androidx.media3.extractor.metadata.emsg.EventMessage[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lz0/a;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.emsg.EventMessageDecoder -> z0.b:
    void <init>() -> <init>
    1:1:androidx.media3.common.Metadata decode(androidx.media3.extractor.metadata.MetadataInputBuffer,java.nio.ByteBuffer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/b;Ljava/nio/ByteBuffer;)Lj/x;"}
    1:1:androidx.media3.extractor.metadata.emsg.EventMessage decode(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lz0/a;"}
androidx.media3.extractor.metadata.emsg.EventMessageEncoder -> z0.c:
    java.io.ByteArrayOutputStream byteArrayOutputStream -> a
    java.io.DataOutputStream dataOutputStream -> b
    1:1:void <init>():0:0 -> <init>
    1:1:byte[] encode(androidx.media3.extractor.metadata.emsg.EventMessage):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz0/a;)[B"}
    1:1:void writeNullTerminatedString(java.io.DataOutputStream,java.lang.String):0:0 -> b
androidx.media3.extractor.metadata.flac.PictureFrame -> a1.a:
    int pictureType -> f
    java.lang.String mimeType -> g
    java.lang.String description -> h
    int width -> i
    int height -> j
    int depth -> k
    int colors -> l
    byte[] pictureData -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,java.lang.String,java.lang.String,int,int,int,int,byte[]):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:androidx.media3.extractor.metadata.flac.PictureFrame fromPictureBlock(androidx.media3.common.util.ParsableByteArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)La1/a;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.flac.PictureFrame$1 -> a1.a$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.flac.PictureFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)La1/a;"}
    1:1:androidx.media3.extractor.metadata.flac.PictureFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[La1/a;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.flac.VorbisComment -> a1.b:
    java.lang.String key -> f
    java.lang.String value -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.flac.VorbisComment$1 -> a1.b$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.flac.VorbisComment createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)La1/b;"}
    1:1:androidx.media3.extractor.metadata.flac.VorbisComment[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[La1/b;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.icy.IcyDecoder -> b1.a:
    java.nio.charset.CharsetDecoder utf8Decoder -> a
    java.nio.charset.CharsetDecoder iso88591Decoder -> b
    java.util.regex.Pattern METADATA_ELEMENT -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.common.Metadata decode(androidx.media3.extractor.metadata.MetadataInputBuffer,java.nio.ByteBuffer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/b;Ljava/nio/ByteBuffer;)Lj/x;"}
    1:1:java.lang.String decodeToString(java.nio.ByteBuffer):0:0 -> c
androidx.media3.extractor.metadata.icy.IcyHeaders -> b1.b:
    int bitrate -> f
    java.lang.String genre -> g
    java.lang.String name -> h
    java.lang.String url -> i
    boolean isPublic -> j
    int metadataInterval -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,java.lang.String,java.lang.String,java.lang.String,boolean,int):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:androidx.media3.extractor.metadata.icy.IcyHeaders parse(java.util.Map):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;)Lb1/b;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.icy.IcyHeaders$1 -> b1.b$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.icy.IcyHeaders createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lb1/b;"}
    1:1:androidx.media3.extractor.metadata.icy.IcyHeaders[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lb1/b;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.icy.IcyInfo -> b1.c:
    byte[] rawMetadata -> f
    java.lang.String title -> g
    java.lang.String url -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(byte[],java.lang.String,java.lang.String):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.icy.IcyInfo$1 -> b1.c$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.icy.IcyInfo createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lb1/c;"}
    1:1:androidx.media3.extractor.metadata.icy.IcyInfo[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lb1/c;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.id3.ApicFrame -> c1.a:
    java.lang.String mimeType -> g
    java.lang.String description -> h
    int pictureType -> i
    byte[] pictureData -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,int,byte[]):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.id3.ApicFrame$1 -> c1.a$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.id3.ApicFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lc1/a;"}
    1:1:androidx.media3.extractor.metadata.id3.ApicFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc1/a;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.id3.BinaryFrame -> c1.b:
    byte[] data -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,byte[]):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.id3.BinaryFrame$1 -> c1.b$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.id3.BinaryFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lc1/b;"}
    1:1:androidx.media3.extractor.metadata.id3.BinaryFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc1/b;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.id3.ChapterFrame -> c1.c:
    java.lang.String chapterId -> g
    int startTimeMs -> h
    int endTimeMs -> i
    long startOffset -> j
    long endOffset -> k
    androidx.media3.extractor.metadata.id3.Id3Frame[] subFrames -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,int,int,long,long,androidx.media3.extractor.metadata.id3.Id3Frame[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;IIJJ[Lc1/i;)V"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.id3.ChapterFrame$1 -> c1.c$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.id3.ChapterFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lc1/c;"}
    1:1:androidx.media3.extractor.metadata.id3.ChapterFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc1/c;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.id3.ChapterTocFrame -> c1.d:
    java.lang.String elementId -> g
    boolean isRoot -> h
    boolean isOrdered -> i
    java.lang.String[] children -> j
    androidx.media3.extractor.metadata.id3.Id3Frame[] subFrames -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,boolean,boolean,java.lang.String[],androidx.media3.extractor.metadata.id3.Id3Frame[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ZZ[Ljava/lang/String;[Lc1/i;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.id3.ChapterTocFrame$1 -> c1.d$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.id3.ChapterTocFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lc1/d;"}
    1:1:androidx.media3.extractor.metadata.id3.ChapterTocFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc1/d;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.id3.CommentFrame -> c1.e:
    java.lang.String language -> g
    java.lang.String description -> h
    java.lang.String text -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.id3.CommentFrame$1 -> c1.e$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.id3.CommentFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lc1/e;"}
    1:1:androidx.media3.extractor.metadata.id3.CommentFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc1/e;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.id3.GeobFrame -> c1.f:
    java.lang.String mimeType -> g
    java.lang.String filename -> h
    java.lang.String description -> i
    byte[] data -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String,byte[]):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.id3.GeobFrame$1 -> c1.f$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.id3.GeobFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lc1/f;"}
    1:1:androidx.media3.extractor.metadata.id3.GeobFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc1/f;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.id3.Id3Decoder -> c1.h:
    androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate framePredicate -> a
    androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate NO_FRAMES_PREDICATE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc1/h$a;)V"}
    1:1:boolean lambda$static$0(int,int,int,int,int):0:0 -> A
    1:1:int removeUnsynchronization(androidx.media3.common.util.ParsableByteArray,int):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)I"}
    1:1:boolean validateFrames(androidx.media3.common.util.ParsableByteArray,int,int,boolean):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;IIZ)Z"}
    1:1:androidx.media3.common.Metadata decode(androidx.media3.extractor.metadata.MetadataInputBuffer,java.nio.ByteBuffer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/b;Ljava/nio/ByteBuffer;)Lj/x;"}
    1:1:boolean $r8$lambda$B3Mj94zw-jWUVXtAZLRq4J815k4(int,int,int,int,int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:byte[] copyOfRangeIfValid(byte[],int,int):0:0 -> d
    1:1:androidx.media3.common.Metadata decode(byte[],int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BI)Lj/x;"}
    1:1:androidx.media3.extractor.metadata.id3.ApicFrame decodeApicFrame(androidx.media3.common.util.ParsableByteArray,int,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)Lc1/a;"}
    1:1:androidx.media3.extractor.metadata.id3.BinaryFrame decodeBinaryFrame(androidx.media3.common.util.ParsableByteArray,int,java.lang.String):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;ILjava/lang/String;)Lc1/b;"}
    1:1:androidx.media3.extractor.metadata.id3.ChapterFrame decodeChapterFrame(androidx.media3.common.util.ParsableByteArray,int,int,boolean,int,androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;IIZILc1/h$a;)Lc1/c;"}
    1:1:androidx.media3.extractor.metadata.id3.ChapterTocFrame decodeChapterTOCFrame(androidx.media3.common.util.ParsableByteArray,int,int,boolean,int,androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;IIZILc1/h$a;)Lc1/d;"}
    1:1:androidx.media3.extractor.metadata.id3.CommentFrame decodeCommentFrame(androidx.media3.common.util.ParsableByteArray,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Lc1/e;"}
    1:1:androidx.media3.extractor.metadata.id3.Id3Frame decodeFrame(int,androidx.media3.common.util.ParsableByteArray,boolean,int,androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/z;ZILc1/h$a;)Lc1/i;"}
    1:1:androidx.media3.extractor.metadata.id3.GeobFrame decodeGeobFrame(androidx.media3.common.util.ParsableByteArray,int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Lc1/f;"}
    1:1:androidx.media3.extractor.metadata.id3.Id3Decoder$Id3Header decodeHeader(androidx.media3.common.util.ParsableByteArray):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lc1/h$b;"}
    1:1:androidx.media3.extractor.metadata.id3.MlltFrame decodeMlltFrame(androidx.media3.common.util.ParsableByteArray,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Lc1/l;"}
    1:1:androidx.media3.extractor.metadata.id3.PrivFrame decodePrivFrame(androidx.media3.common.util.ParsableByteArray,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Lc1/m;"}
    1:1:java.lang.String decodeStringIfValid(byte[],int,int,java.nio.charset.Charset):0:0 -> p
    1:1:androidx.media3.extractor.metadata.id3.TextInformationFrame decodeTextInformationFrame(androidx.media3.common.util.ParsableByteArray,int,java.lang.String):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;ILjava/lang/String;)Lc1/n;"}
    1:1:com.google.common.collect.ImmutableList decodeTextInformationFrameValues(byte[],int,int):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ll2/v;"}
    1:1:androidx.media3.extractor.metadata.id3.TextInformationFrame decodeTxxxFrame(androidx.media3.common.util.ParsableByteArray,int):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Lc1/n;"}
    1:1:androidx.media3.extractor.metadata.id3.UrlLinkFrame decodeUrlLinkFrame(androidx.media3.common.util.ParsableByteArray,int,java.lang.String):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;ILjava/lang/String;)Lc1/o;"}
    1:1:androidx.media3.extractor.metadata.id3.UrlLinkFrame decodeWxxxFrame(androidx.media3.common.util.ParsableByteArray,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Lc1/o;"}
    1:1:int delimiterLength(int):0:0 -> v
    1:1:java.nio.charset.Charset getCharset(int):0:0 -> w
    1:1:java.lang.String getFrameId(int,int,int,int,int):0:0 -> x
    1:1:int indexOfTerminator(byte[],int,int):0:0 -> y
    1:1:int indexOfZeroByte(byte[],int):0:0 -> z
androidx.media3.extractor.metadata.id3.Id3Decoder$$ExternalSyntheticLambda0 -> c1.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.metadata.id3.Id3Decoder$$InternalSyntheticLambda$8$729ac4af458e266b9294f9fab2d35bf08bc059e9d110c04f22cefc30f8f3afb4$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.extractor.metadata.id3.Id3Decoder$$InternalSyntheticLambda$8$729ac4af458e266b9294f9fab2d35bf08bc059e9d110c04f22cefc30f8f3afb4$0.evaluate(int,int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate -> c1.h$a:
    boolean evaluate(int,int,int,int,int) -> a
androidx.media3.extractor.metadata.id3.Id3Decoder$Id3Header -> c1.h$b:
    int majorVersion -> a
    boolean isUnsynchronized -> b
    int framesSize -> c
    1:1:void <init>(int,boolean,int):0:0 -> <init>
    1:1:int access$000(androidx.media3.extractor.metadata.id3.Id3Decoder$Id3Header):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc1/h$b;)I"}
    1:1:int access$100(androidx.media3.extractor.metadata.id3.Id3Decoder$Id3Header):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc1/h$b;)I"}
    1:1:boolean access$200(androidx.media3.extractor.metadata.id3.Id3Decoder$Id3Header):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc1/h$b;)Z"}
androidx.media3.extractor.metadata.id3.Id3Frame -> c1.i:
    java.lang.String id -> f
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.extractor.metadata.id3.Id3Util -> c1.j:
    com.google.common.collect.ImmutableList STANDARD_GENRES -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.String resolveV1Genre(int):0:0 -> a
androidx.media3.extractor.metadata.id3.InternalFrame -> c1.k:
    java.lang.String domain -> g
    java.lang.String description -> h
    java.lang.String text -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.id3.InternalFrame$1 -> c1.k$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.id3.InternalFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lc1/k;"}
    1:1:androidx.media3.extractor.metadata.id3.InternalFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc1/k;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.id3.MlltFrame -> c1.l:
    int mpegFramesBetweenReference -> g
    int bytesBetweenReference -> h
    int millisecondsBetweenReference -> i
    int[] bytesDeviations -> j
    int[] millisecondsDeviations -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int,int[],int[]):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.id3.MlltFrame$1 -> c1.l$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.id3.MlltFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lc1/l;"}
    1:1:androidx.media3.extractor.metadata.id3.MlltFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc1/l;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.id3.PrivFrame -> c1.m:
    java.lang.String owner -> g
    byte[] privateData -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,byte[]):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.id3.PrivFrame$1 -> c1.m$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.id3.PrivFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lc1/m;"}
    1:1:androidx.media3.extractor.metadata.id3.PrivFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc1/m;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.id3.TextInformationFrame -> c1.n:
    java.lang.String description -> g
    java.lang.String value -> h
    com.google.common.collect.ImmutableList values -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(android.os.Parcel,androidx.media3.extractor.metadata.id3.TextInformationFrame$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Lc1/n$a;)V"}
    3:3:void <init>(java.lang.String,java.lang.String,java.util.List):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:java.util.List parseId3v2point4TimestampFrameForDate(java.lang.String):0:0 -> d
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.id3.TextInformationFrame$1 -> c1.n$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.id3.TextInformationFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lc1/n;"}
    1:1:androidx.media3.extractor.metadata.id3.TextInformationFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc1/n;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.id3.UrlLinkFrame -> c1.o:
    java.lang.String description -> g
    java.lang.String url -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.id3.UrlLinkFrame$1 -> c1.o$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.id3.UrlLinkFrame createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lc1/o;"}
    1:1:androidx.media3.extractor.metadata.id3.UrlLinkFrame[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lc1/o;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata -> d1.a:
    long photoStartPosition -> f
    long photoSize -> g
    long photoPresentationTimestampUs -> h
    long videoStartPosition -> i
    long videoSize -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,long,long,long,long):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    3:3:void <init>(android.os.Parcel,androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Ld1/a$a;)V"}
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata$1 -> d1.a$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ld1/a;"}
    1:1:androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ld1/a;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.mp4.SlowMotionData -> d1.b:
    java.util.List segments -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:boolean doSegmentsOverlap(java.util.List):0:0 -> d
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.mp4.SlowMotionData$1 -> d1.b$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.mp4.SlowMotionData createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ld1/b;"}
    1:1:androidx.media3.extractor.metadata.mp4.SlowMotionData[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ld1/b;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment -> d1.b$b:
    long startTimeMs -> f
    long endTimeMs -> g
    int speedDivisor -> h
    java.util.Comparator BY_START_THEN_END_THEN_DIVISOR -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,long,int):0:0 -> <init>
    1:1:int $r8$lambda$Z1Y7FDH3l8LGlP9JvLeukwvR7xM(androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment,androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/b$b;Ld1/b$b;)I"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:int lambda$static$0(androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment,androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld1/b$b;Ld1/b$b;)I"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment$$ExternalSyntheticLambda0 -> d1.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment$$InternalSyntheticLambda$10$eac60d6c75573ec2b41f63ca869c3888f0b8d7e513b196997f39a3342d109c64$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment$$InternalSyntheticLambda$10$eac60d6c75573ec2b41f63ca869c3888f0b8d7e513b196997f39a3342d109c64$0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment$1 -> d1.b$b$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ld1/b$b;"}
    1:1:androidx.media3.extractor.metadata.mp4.SlowMotionData$Segment[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ld1/b$b;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.mp4.SmtaMetadataEntry -> d1.d:
    float captureFrameRate -> f
    int svcTemporalLayerCount -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(float,int):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    3:3:void <init>(android.os.Parcel,androidx.media3.extractor.metadata.mp4.SmtaMetadataEntry$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Ld1/d$a;)V"}
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.mp4.SmtaMetadataEntry$1 -> d1.d$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.mp4.SmtaMetadataEntry createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Ld1/d;"}
    1:1:androidx.media3.extractor.metadata.mp4.SmtaMetadataEntry[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Ld1/d;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.scte35.PrivateCommand -> e1.a:
    long ptsAdjustment -> f
    long identifier -> g
    byte[] commandBytes -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,byte[],long):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    3:3:void <init>(android.os.Parcel,androidx.media3.extractor.metadata.scte35.PrivateCommand$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Le1/a$a;)V"}
    1:1:androidx.media3.extractor.metadata.scte35.PrivateCommand parseFromSection(androidx.media3.common.util.ParsableByteArray,int,long):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;IJ)Le1/a;"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.scte35.PrivateCommand$1 -> e1.a$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.scte35.PrivateCommand createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Le1/a;"}
    1:1:androidx.media3.extractor.metadata.scte35.PrivateCommand[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Le1/a;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.scte35.SpliceCommand -> e1.b:
    void <init>() -> <init>
    1:1:void populateMediaMetadata(androidx.media3.common.MediaMetadata$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w$b;)V"}
    1:1:byte[] getWrappedMetadataBytes():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.common.Format getWrappedMetadataFormat():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/q;"}
    1:1:int describeContents():0:0 -> describeContents
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.extractor.metadata.scte35.SpliceInfoDecoder -> e1.c:
    androidx.media3.common.util.ParsableByteArray sectionData -> a
    androidx.media3.common.util.ParsableBitArray sectionHeader -> b
    androidx.media3.common.util.TimestampAdjuster timestampAdjuster -> c
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.common.Metadata decode(androidx.media3.extractor.metadata.MetadataInputBuffer,java.nio.ByteBuffer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx0/b;Ljava/nio/ByteBuffer;)Lj/x;"}
androidx.media3.extractor.metadata.scte35.SpliceInsertCommand -> e1.d:
    long spliceEventId -> f
    boolean spliceEventCancelIndicator -> g
    boolean outOfNetworkIndicator -> h
    boolean programSpliceFlag -> i
    boolean spliceImmediateFlag -> j
    long programSplicePts -> k
    long programSplicePlaybackPositionUs -> l
    java.util.List componentSpliceList -> m
    boolean autoReturn -> n
    long breakDurationUs -> o
    int uniqueProgramId -> p
    int availNum -> q
    int availsExpected -> r
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,boolean,boolean,boolean,boolean,long,long,java.util.List,boolean,long,int,int,int):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    3:3:void <init>(android.os.Parcel,androidx.media3.extractor.metadata.scte35.SpliceInsertCommand$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Le1/d$a;)V"}
    1:1:androidx.media3.extractor.metadata.scte35.SpliceInsertCommand parseFromSection(androidx.media3.common.util.ParsableByteArray,long,androidx.media3.common.util.TimestampAdjuster):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JLm/e0;)Le1/d;"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.scte35.SpliceInsertCommand$1 -> e1.d$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.scte35.SpliceInsertCommand createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Le1/d;"}
    1:1:androidx.media3.extractor.metadata.scte35.SpliceInsertCommand[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Le1/d;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.scte35.SpliceInsertCommand$ComponentSplice -> e1.d$b:
    int componentTag -> a
    long componentSplicePts -> b
    long componentSplicePlaybackPositionUs -> c
    1:1:void <init>(int,long,long):0:0 -> <init>
    2:2:void <init>(int,long,long,androidx.media3.extractor.metadata.scte35.SpliceInsertCommand$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJJLe1/d$a;)V"}
    1:1:androidx.media3.extractor.metadata.scte35.SpliceInsertCommand$ComponentSplice createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Le1/d$b;"}
    1:1:void writeToParcel(android.os.Parcel):0:0 -> b
androidx.media3.extractor.metadata.scte35.SpliceNullCommand -> e1.e:
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.scte35.SpliceNullCommand$1 -> e1.e$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.scte35.SpliceNullCommand createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Le1/e;"}
    1:1:androidx.media3.extractor.metadata.scte35.SpliceNullCommand[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Le1/e;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand -> e1.f:
    java.util.List events -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(android.os.Parcel,androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;Le1/f$a;)V"}
    3:3:void <init>(java.util.List):0:0 -> <init>
    1:1:androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand parseFromSection(androidx.media3.common.util.ParsableByteArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Le1/f;"}
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$1 -> e1.f$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Le1/f;"}
    1:1:androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Le1/f;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$ComponentSplice -> e1.f$b:
    int componentTag -> a
    long utcSpliceTime -> b
    1:1:void <init>(int,long):0:0 -> <init>
    2:2:void <init>(int,long,androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJLe1/f$a;)V"}
    1:1:androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$ComponentSplice access$000(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Le1/f$b;"}
    1:1:void access$200(androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$ComponentSplice,android.os.Parcel):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le1/f$b;Landroid/os/Parcel;)V"}
    1:1:androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$ComponentSplice createFromParcel(android.os.Parcel):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Le1/f$b;"}
    1:1:void writeToParcel(android.os.Parcel):0:0 -> d
androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$Event -> e1.f$c:
    long spliceEventId -> a
    boolean spliceEventCancelIndicator -> b
    boolean outOfNetworkIndicator -> c
    boolean programSpliceFlag -> d
    long utcSpliceTime -> e
    java.util.List componentSpliceList -> f
    boolean autoReturn -> g
    long breakDurationUs -> h
    int uniqueProgramId -> i
    int availNum -> j
    int availsExpected -> k
    1:1:void <init>(long,boolean,boolean,boolean,java.util.List,long,boolean,long,int,int,int):0:0 -> <init>
    2:2:void <init>(android.os.Parcel):0:0 -> <init>
    1:1:androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$Event access$300(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Le1/f$c;"}
    1:1:androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$Event access$400(androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Le1/f$c;"}
    1:1:void access$500(androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$Event,android.os.Parcel):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le1/f$c;Landroid/os/Parcel;)V"}
    1:1:androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$Event createFromParcel(android.os.Parcel):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Le1/f$c;"}
    1:1:androidx.media3.extractor.metadata.scte35.SpliceScheduleCommand$Event parseFromSection(androidx.media3.common.util.ParsableByteArray):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Le1/f$c;"}
    1:1:void writeToParcel(android.os.Parcel):0:0 -> f
androidx.media3.extractor.metadata.scte35.TimeSignalCommand -> e1.g:
    long ptsTime -> f
    long playbackPositionUs -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,long):0:0 -> <init>
    2:2:void <init>(long,long,androidx.media3.extractor.metadata.scte35.TimeSignalCommand$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJLe1/g$a;)V"}
    1:1:androidx.media3.extractor.metadata.scte35.TimeSignalCommand parseFromSection(androidx.media3.common.util.ParsableByteArray,long,androidx.media3.common.util.TimestampAdjuster):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JLm/e0;)Le1/g;"}
    1:1:long parseSpliceTime(androidx.media3.common.util.ParsableByteArray,long):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;J)J"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.media3.extractor.metadata.scte35.TimeSignalCommand$1 -> e1.g$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.scte35.TimeSignalCommand createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Le1/g;"}
    1:1:androidx.media3.extractor.metadata.scte35.TimeSignalCommand[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Le1/g;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.metadata.vorbis.VorbisComment -> f1.a:
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String):0:0 -> <init>
androidx.media3.extractor.metadata.vorbis.VorbisComment$1 -> f1.a$a:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.metadata.vorbis.VorbisComment createFromParcel(android.os.Parcel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;)Lf1/a;"}
    1:1:androidx.media3.extractor.metadata.vorbis.VorbisComment[] newArray(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lf1/a;"}
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):0:0 -> newArray
androidx.media3.extractor.mkv.DefaultEbmlReader -> g1.a:
    byte[] scratch -> a
    java.util.ArrayDeque masterElementsStack -> b
    androidx.media3.extractor.mkv.VarintReader varintReader -> c
    androidx.media3.extractor.mkv.EbmlProcessor processor -> d
    int elementState -> e
    int elementId -> f
    long elementContentSize -> g
    1:1:void <init>():0:0 -> <init>
    1:1:long maybeResyncToNextLevel1Element(androidx.media3.extractor.ExtractorInput):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)J"}
    1:1:void reset():0:0 -> b
    1:1:boolean read(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void init(androidx.media3.extractor.mkv.EbmlProcessor):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/b;)V"}
    1:1:double readFloat(androidx.media3.extractor.ExtractorInput,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;I)D"}
    1:1:long readInteger(androidx.media3.extractor.ExtractorInput,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;I)J"}
    1:1:java.lang.String readString(androidx.media3.extractor.ExtractorInput,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;I)Ljava/lang/String;"}
androidx.media3.extractor.mkv.DefaultEbmlReader$1 -> g1.a$a:
androidx.media3.extractor.mkv.DefaultEbmlReader$MasterElement -> g1.a$b:
    int elementId -> a
    long elementEndPosition -> b
    1:1:void <init>(int,long):0:0 -> <init>
    2:2:void <init>(int,long,androidx.media3.extractor.mkv.DefaultEbmlReader$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IJLg1/a$a;)V"}
    1:1:long access$000(androidx.media3.extractor.mkv.DefaultEbmlReader$MasterElement):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/a$b;)J"}
    1:1:int access$100(androidx.media3.extractor.mkv.DefaultEbmlReader$MasterElement):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/a$b;)I"}
androidx.media3.extractor.mkv.EbmlProcessor -> g1.b:
    void endMasterElement(int) -> a
    int getElementType(int) -> b
    void floatElement(int,double) -> c
    void stringElement(int,java.lang.String) -> d
    void binaryElement(int,int,androidx.media3.extractor.ExtractorInput) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILo0/s;)V"}
    void startMasterElement(int,long,long) -> f
    boolean isLevel1Element(int) -> g
    void integerElement(int,long) -> h
androidx.media3.extractor.mkv.EbmlReader -> g1.c:
    void reset() -> b
    boolean read(androidx.media3.extractor.ExtractorInput) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    void init(androidx.media3.extractor.mkv.EbmlProcessor) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/b;)V"}
androidx.media3.extractor.mkv.MatroskaExtractor -> g1.e:
    boolean seekForCues -> A
    long cuesContentPosition -> B
    long seekPositionAfterBuildingCues -> C
    long clusterTimecodeUs -> D
    androidx.media3.common.util.LongArray cueTimesUs -> E
    androidx.media3.common.util.LongArray cueClusterPositions -> F
    boolean seenClusterPositionForCurrentCuePoint -> G
    boolean haveOutputSample -> H
    int blockState -> I
    long blockTimeUs -> J
    long blockDurationUs -> K
    int blockSampleIndex -> L
    int blockSampleCount -> M
    int[] blockSampleSizes -> N
    int blockTrackNumber -> O
    int blockTrackNumberLength -> P
    int blockFlags -> Q
    int blockAdditionalId -> R
    boolean blockHasReferenceBlock -> S
    long blockGroupDiscardPaddingNs -> T
    int sampleBytesRead -> U
    int sampleBytesWritten -> V
    int sampleCurrentNalBytesRemaining -> W
    boolean sampleEncodingHandled -> X
    boolean sampleSignalByteRead -> Y
    boolean samplePartitionCountRead -> Z
    androidx.media3.extractor.mkv.EbmlReader reader -> a
    int samplePartitionCount -> a0
    androidx.media3.extractor.mkv.VarintReader varintReader -> b
    byte sampleSignalByte -> b0
    android.util.SparseArray tracks -> c
    boolean sampleInitializationVectorRead -> c0
    boolean seekForCuesEnabled -> d
    androidx.media3.extractor.ExtractorOutput extractorOutput -> d0
    boolean parseSubtitlesDuringExtraction -> e
    androidx.media3.extractor.ExtractorsFactory FACTORY -> e0
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> f
    byte[] SUBRIP_PREFIX -> f0
    androidx.media3.common.util.ParsableByteArray nalStartCode -> g
    byte[] SSA_DIALOGUE_FORMAT -> g0
    androidx.media3.common.util.ParsableByteArray nalLength -> h
    byte[] SSA_PREFIX -> h0
    androidx.media3.common.util.ParsableByteArray scratch -> i
    byte[] VTT_PREFIX -> i0
    androidx.media3.common.util.ParsableByteArray vorbisNumPageSamples -> j
    java.util.UUID WAVE_SUBFORMAT_PCM -> j0
    androidx.media3.common.util.ParsableByteArray seekEntryIdBytes -> k
    java.util.Map TRACK_NAME_TO_ROTATION_DEGREES -> k0
    androidx.media3.common.util.ParsableByteArray sampleStrippedBytes -> l
    androidx.media3.common.util.ParsableByteArray subtitleSample -> m
    androidx.media3.common.util.ParsableByteArray encryptionInitializationVector -> n
    androidx.media3.common.util.ParsableByteArray encryptionSubsampleData -> o
    androidx.media3.common.util.ParsableByteArray supplementalData -> p
    java.nio.ByteBuffer encryptionSubsampleDataBuffer -> q
    long segmentContentSize -> r
    long segmentContentPosition -> s
    long timecodeScale -> t
    long durationTimecode -> u
    long durationUs -> v
    androidx.media3.extractor.mkv.MatroskaExtractor$Track currentTrack -> w
    boolean sentSeekMap -> x
    int seekEntryId -> y
    long seekEntryPosition -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.extractor.mkv.EbmlReader,int,androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/c;ILl1/t$a;)V"}
    2:2:void <init>(androidx.media3.extractor.text.SubtitleParser$Factory,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;I)V"}
    1:1:boolean isCodecSupported(java.lang.String):0:0 -> A
    1:1:boolean isLevel1Element(int):0:0 -> B
    1:1:androidx.media3.extractor.Extractor[] lambda$static$1():0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:boolean maybeSeekForCues(androidx.media3.extractor.PositionHolder,long):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/l0;J)Z"}
    1:1:void readScratch(androidx.media3.extractor.ExtractorInput,int):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;I)V"}
    1:1:void resetWriteSampleData():0:0 -> F
    1:1:long scaleTimecodeToUs(long):0:0 -> G
    1:1:void setSubtitleEndTime(java.lang.String,long,byte[]):0:0 -> H
    1:1:void startMasterElement(int,long,long):0:0 -> I
    1:1:void stringElement(int,java.lang.String):0:0 -> J
    1:1:int writeSampleData(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.mkv.MatroskaExtractor$Track,int,boolean):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lg1/e$c;IZ)I"}
    1:1:void writeSubtitleSampleData(androidx.media3.extractor.ExtractorInput,byte[],int):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;[BI)V"}
    1:1:int writeToOutput(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.TrackOutput,int):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/s0;I)I"}
    1:1:void writeToTarget(androidx.media3.extractor.ExtractorInput,byte[],int,int):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;[BII)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$Vu2QLxw3osWbRS13mcxdXABsgJA():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:byte[] access$500():0:0 -> c
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:java.util.Map access$600():0:0 -> g
    1:1:java.util.UUID access$700():0:0 -> h
    1:1:void assertInCues(int):0:0 -> i
    1:1:void assertInTrackEntry(int):0:0 -> j
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void assertInitialized():0:0 -> m
    1:1:void binaryElement(int,int,androidx.media3.extractor.ExtractorInput):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILo0/s;)V"}
    1:1:androidx.media3.extractor.SeekMap buildSeekMap(androidx.media3.common.util.LongArray,androidx.media3.common.util.LongArray):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/p;Lm/p;)Lo0/m0;"}
    1:1:void commitSampleToOutput(androidx.media3.extractor.mkv.MatroskaExtractor$Track,long,int,int,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/e$c;JIII)V"}
    1:1:void endMasterElement(int):0:0 -> q
    1:1:int[] ensureArrayCapacity(int[],int):0:0 -> r
    1:1:void release():0:0 -> release
    1:1:int finishWriteSampleData():0:0 -> s
    1:1:void floatElement(int,double):0:0 -> t
    1:1:byte[] formatSubtitleTimecode(long,java.lang.String,long):0:0 -> u
    1:1:androidx.media3.extractor.mkv.MatroskaExtractor$Track getCurrentTrack(int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lg1/e$c;"}
    1:1:int getElementType(int):0:0 -> w
    1:1:void handleBlockAddIDExtraData(androidx.media3.extractor.mkv.MatroskaExtractor$Track,androidx.media3.extractor.ExtractorInput,int):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/e$c;Lo0/s;I)V"}
    1:1:void handleBlockAdditionalData(androidx.media3.extractor.mkv.MatroskaExtractor$Track,int,androidx.media3.extractor.ExtractorInput,int):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/e$c;ILo0/s;I)V"}
    1:1:void integerElement(int,long):0:0 -> z
androidx.media3.extractor.mkv.MatroskaExtractor$$ExternalSyntheticLambda0 -> g1.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.mkv.MatroskaExtractor$$InternalSyntheticLambda$10$83b556ccd4942421dbacf910b0444d815ae159844dfd15a03b7cafd6f7b54815$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.mkv.MatroskaExtractor$$InternalSyntheticLambda$10$83b556ccd4942421dbacf910b0444d815ae159844dfd15a03b7cafd6f7b54815$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.mkv.MatroskaExtractor$$InternalSyntheticLambda$10$83b556ccd4942421dbacf910b0444d815ae159844dfd15a03b7cafd6f7b54815$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.mkv.MatroskaExtractor$$InternalSyntheticLambda$10$83b556ccd4942421dbacf910b0444d815ae159844dfd15a03b7cafd6f7b54815$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.mkv.MatroskaExtractor$$InternalSyntheticLambda$10$83b556ccd4942421dbacf910b0444d815ae159844dfd15a03b7cafd6f7b54815$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.mkv.MatroskaExtractor$1 -> g1.e$a:
androidx.media3.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor -> g1.e$b:
    androidx.media3.extractor.mkv.MatroskaExtractor this$0 -> a
    1:1:void <init>(androidx.media3.extractor.mkv.MatroskaExtractor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/e;)V"}
    2:2:void <init>(androidx.media3.extractor.mkv.MatroskaExtractor,androidx.media3.extractor.mkv.MatroskaExtractor$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/e;Lg1/e$a;)V"}
    1:1:void endMasterElement(int):0:0 -> a
    1:1:int getElementType(int):0:0 -> b
    1:1:void floatElement(int,double):0:0 -> c
    1:1:void stringElement(int,java.lang.String):0:0 -> d
    1:1:void binaryElement(int,int,androidx.media3.extractor.ExtractorInput):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILo0/s;)V"}
    1:1:void startMasterElement(int,long,long):0:0 -> f
    1:1:boolean isLevel1Element(int):0:0 -> g
    1:1:void integerElement(int,long):0:0 -> h
androidx.media3.extractor.mkv.MatroskaExtractor$Track -> g1.e$c:
    int colorTransfer -> A
    int colorRange -> B
    int maxContentLuminance -> C
    int maxFrameAverageLuminance -> D
    float primaryRChromaticityX -> E
    float primaryRChromaticityY -> F
    float primaryGChromaticityX -> G
    float primaryGChromaticityY -> H
    float primaryBChromaticityX -> I
    float primaryBChromaticityY -> J
    float whitePointChromaticityX -> K
    float whitePointChromaticityY -> L
    float maxMasteringLuminance -> M
    float minMasteringLuminance -> N
    byte[] dolbyVisionConfigBytes -> O
    int channelCount -> P
    int audioBitDepth -> Q
    int sampleRate -> R
    long codecDelayNs -> S
    long seekPreRollNs -> T
    androidx.media3.extractor.TrueHdSampleRechunker trueHdSampleRechunker -> U
    boolean flagForced -> V
    boolean flagDefault -> W
    java.lang.String language -> X
    androidx.media3.extractor.TrackOutput output -> Y
    int nalUnitLengthFieldLength -> Z
    java.lang.String name -> a
    java.lang.String codecId -> b
    int number -> c
    int type -> d
    int defaultSampleDurationNs -> e
    int maxBlockAdditionId -> f
    int blockAddIdType -> g
    boolean hasContentEncryption -> h
    byte[] sampleStrippedBytes -> i
    androidx.media3.extractor.TrackOutput$CryptoData cryptoData -> j
    byte[] codecPrivate -> k
    androidx.media3.common.DrmInitData drmInitData -> l
    int width -> m
    int height -> n
    int bitsPerChannel -> o
    int displayWidth -> p
    int displayHeight -> q
    int displayUnit -> r
    int projectionType -> s
    float projectionPoseYaw -> t
    float projectionPosePitch -> u
    float projectionPoseRoll -> v
    byte[] projectionData -> w
    int stereoMode -> x
    boolean hasColorInfo -> y
    int colorSpace -> z
    1:1:void <init>():0:0 -> <init>
    1:1:void access$100(androidx.media3.extractor.mkv.MatroskaExtractor$Track):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/e$c;)V"}
    1:1:int access$200(androidx.media3.extractor.mkv.MatroskaExtractor$Track):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/e$c;)I"}
    1:1:int access$202(androidx.media3.extractor.mkv.MatroskaExtractor$Track,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/e$c;I)I"}
    1:1:java.lang.String access$302(androidx.media3.extractor.mkv.MatroskaExtractor$Track,java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/e$c;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:boolean access$400(androidx.media3.extractor.mkv.MatroskaExtractor$Track,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg1/e$c;Z)Z"}
    1:1:void assertOutputInitialized():0:0 -> f
    1:1:byte[] getCodecPrivate(java.lang.String):0:0 -> g
    1:1:byte[] getHdrStaticInfo():0:0 -> h
    1:1:void initializeOutput(androidx.media3.extractor.ExtractorOutput,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;I)V"}
    1:1:void outputPendingSampleMetadata():0:0 -> j
    1:1:android.util.Pair parseFourCcPrivate(androidx.media3.common.util.ParsableByteArray):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Landroid/util/Pair;"}
    1:1:boolean parseMsAcmCodecPrivate(androidx.media3.common.util.ParsableByteArray):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
    1:1:java.util.List parseVorbisCodecPrivate(byte[]):0:0 -> m
    1:1:void reset():0:0 -> n
    1:1:boolean samplesHaveSupplementalData(boolean):0:0 -> o
androidx.media3.extractor.mkv.Sniffer -> g1.f:
    androidx.media3.common.util.ParsableByteArray scratch -> a
    int peekLength -> b
    1:1:void <init>():0:0 -> <init>
    1:1:long readUint(androidx.media3.extractor.ExtractorInput):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)J"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
androidx.media3.extractor.mkv.VarintReader -> g1.g:
    byte[] scratch -> a
    int state -> b
    int length -> c
    long[] VARINT_LENGTH_MASKS -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:long assembleVarint(byte[],int,boolean):0:0 -> a
    1:1:int getLastLength():0:0 -> b
    1:1:int parseUnsignedVarintLength(int):0:0 -> c
    1:1:long readUnsignedVarint(androidx.media3.extractor.ExtractorInput,boolean,boolean,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;ZZI)J"}
    1:1:void reset():0:0 -> e
androidx.media3.extractor.mp3.ConstantBitrateSeeker -> h1.a:
    int bitrate -> h
    long dataEndPosition -> i
    1:1:void <init>(long,long,int,int,boolean):0:0 -> <init>
    2:2:void <init>(long,long,androidx.media3.extractor.MpegAudioUtil$Header,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJLo0/i0$a;Z)V"}
    1:1:long getTimeUs(long):0:0 -> b
    1:1:long getDataEndPosition():0:0 -> g
    1:1:int getAverageBitrate():0:0 -> i
androidx.media3.extractor.mp3.IndexSeeker -> h1.b:
    long dataEndPosition -> a
    androidx.media3.common.util.LongArray timesUs -> b
    androidx.media3.common.util.LongArray positions -> c
    int averageBitrate -> d
    long durationUs -> e
    1:1:void <init>(long,long,long):0:0 -> <init>
    1:1:boolean isTimeUsInIndex(long):0:0 -> a
    1:1:long getTimeUs(long):0:0 -> b
    1:1:boolean isSeekable():0:0 -> c
    1:1:void maybeAddSeekPoint(long,long):0:0 -> d
    1:1:void setDurationUs(long):0:0 -> e
    1:1:long getDataEndPosition():0:0 -> g
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:int getAverageBitrate():0:0 -> i
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.mp3.MlltSeeker -> h1.c:
    long[] referencePositions -> a
    long[] referenceTimesMs -> b
    long durationUs -> c
    1:1:void <init>(long[],long[],long):0:0 -> <init>
    1:1:androidx.media3.extractor.mp3.MlltSeeker create(long,androidx.media3.extractor.metadata.id3.MlltFrame,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLc1/l;J)Lh1/c;"}
    1:1:long getTimeUs(long):0:0 -> b
    1:1:boolean isSeekable():0:0 -> c
    1:1:android.util.Pair linearlyInterpolate(long,long[],long[]):0:0 -> d
    1:1:long getDataEndPosition():0:0 -> g
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:int getAverageBitrate():0:0 -> i
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.mp3.Mp3Extractor -> h1.f:
    int flags -> a
    long forcedFirstSampleTimestampUs -> b
    androidx.media3.common.util.ParsableByteArray scratch -> c
    androidx.media3.extractor.MpegAudioUtil$Header synchronizedHeader -> d
    androidx.media3.extractor.GaplessInfoHolder gaplessInfoHolder -> e
    androidx.media3.extractor.Id3Peeker id3Peeker -> f
    androidx.media3.extractor.TrackOutput skippingTrackOutput -> g
    androidx.media3.extractor.ExtractorOutput extractorOutput -> h
    androidx.media3.extractor.TrackOutput realTrackOutput -> i
    androidx.media3.extractor.TrackOutput currentTrackOutput -> j
    int synchronizedHeaderData -> k
    androidx.media3.common.Metadata metadata -> l
    long basisTimeUs -> m
    long samplesRead -> n
    long firstSamplePosition -> o
    int sampleBytesRemaining -> p
    androidx.media3.extractor.mp3.Seeker seeker -> q
    boolean disableSeeking -> r
    boolean isSeekInProgress -> s
    long seekTimeUs -> t
    androidx.media3.extractor.ExtractorsFactory FACTORY -> u
    androidx.media3.extractor.metadata.id3.Id3Decoder$FramePredicate REQUIRED_ID3_FRAME_PREDICATE -> v
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    3:3:void <init>(int,long):0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$jtisvtgR1Vbh1eLvKxqE_njI3vQ():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:boolean $r8$lambda$qAUpB1_BCleHGpzLR0IfLZE0BJc(int,int,int,int,int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void assertInitialized():0:0 -> g
    1:1:androidx.media3.extractor.mp3.Seeker computeSeeker(androidx.media3.extractor.ExtractorInput):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Lh1/g;"}
    1:1:long computeTimeUs(long):0:0 -> i
    1:1:void disableSeeking():0:0 -> j
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.mp3.Seeker getConstantBitrateSeeker(long,androidx.media3.extractor.mp3.XingFrame,long):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLh1/i;J)Lh1/g;"}
    1:1:androidx.media3.extractor.mp3.Seeker getConstantBitrateSeeker(androidx.media3.extractor.ExtractorInput,boolean):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Z)Lh1/g;"}
    1:1:long getId3TlenUs(androidx.media3.common.Metadata):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)J"}
    1:1:int getSeekFrameHeader(androidx.media3.common.util.ParsableByteArray,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)I"}
    1:1:boolean headersMatch(int,long):0:0 -> q
    1:1:androidx.media3.extractor.Extractor[] lambda$static$0():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void release():0:0 -> release
    1:1:boolean lambda$static$1(int,int,int,int,int):0:0 -> s
    1:1:androidx.media3.extractor.mp3.MlltSeeker maybeHandleSeekMetadata(androidx.media3.common.Metadata,long):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;J)Lh1/c;"}
    1:1:androidx.media3.extractor.mp3.Seeker maybeReadSeekFrame(androidx.media3.extractor.ExtractorInput):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Lh1/g;"}
    1:1:boolean peekEndOfStreamOrHeader(androidx.media3.extractor.ExtractorInput):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int readInternal(androidx.media3.extractor.ExtractorInput):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
    1:1:int readSample(androidx.media3.extractor.ExtractorInput):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
    1:1:boolean synchronize(androidx.media3.extractor.ExtractorInput,boolean):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Z)Z"}
androidx.media3.extractor.mp3.Mp3Extractor$$ExternalSyntheticLambda0 -> h1.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.mp3.Mp3Extractor$$InternalSyntheticLambda$9$02ea094f0a310c4a3ae82f33da7136e2917bb596ca9a401191e62859b8fa3981$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.mp3.Mp3Extractor$$InternalSyntheticLambda$9$02ea094f0a310c4a3ae82f33da7136e2917bb596ca9a401191e62859b8fa3981$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.mp3.Mp3Extractor$$InternalSyntheticLambda$9$02ea094f0a310c4a3ae82f33da7136e2917bb596ca9a401191e62859b8fa3981$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.mp3.Mp3Extractor$$InternalSyntheticLambda$9$02ea094f0a310c4a3ae82f33da7136e2917bb596ca9a401191e62859b8fa3981$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.mp3.Mp3Extractor$$InternalSyntheticLambda$9$02ea094f0a310c4a3ae82f33da7136e2917bb596ca9a401191e62859b8fa3981$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.mp3.Mp3Extractor$$ExternalSyntheticLambda1 -> h1.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.mp3.Mp3Extractor$$InternalSyntheticLambda$9$02ea094f0a310c4a3ae82f33da7136e2917bb596ca9a401191e62859b8fa3981$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.media3.extractor.mp3.Mp3Extractor$$InternalSyntheticLambda$9$02ea094f0a310c4a3ae82f33da7136e2917bb596ca9a401191e62859b8fa3981$1.evaluate(int,int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.mp3.Seeker -> h1.g:
    long getTimeUs(long) -> b
    long getDataEndPosition() -> g
    int getAverageBitrate() -> i
androidx.media3.extractor.mp3.Seeker$UnseekableSeeker -> h1.g$a:
    1:1:void <init>():0:0 -> <init>
    1:1:long getTimeUs(long):0:0 -> b
    1:1:long getDataEndPosition():0:0 -> g
    1:1:int getAverageBitrate():0:0 -> i
androidx.media3.extractor.mp3.VbriSeeker -> h1.h:
    long[] timesUs -> a
    long[] positions -> b
    long durationUs -> c
    long dataEndPosition -> d
    int bitrate -> e
    1:1:void <init>(long[],long[],long,long,int):0:0 -> <init>
    1:1:androidx.media3.extractor.mp3.VbriSeeker create(long,long,androidx.media3.extractor.MpegAudioUtil$Header,androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJLo0/i0$a;Lm/z;)Lh1/h;"}
    1:1:long getTimeUs(long):0:0 -> b
    1:1:boolean isSeekable():0:0 -> c
    1:1:long getDataEndPosition():0:0 -> g
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:int getAverageBitrate():0:0 -> i
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.mp3.XingFrame -> h1.i:
    androidx.media3.extractor.MpegAudioUtil$Header header -> a
    long frameCount -> b
    long dataSize -> c
    int encoderDelay -> d
    int encoderPadding -> e
    long[] tableOfContents -> f
    1:1:void <init>(androidx.media3.extractor.MpegAudioUtil$Header,long,long,long[],int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/i0$a;JJ[JII)V"}
    1:1:long computeDurationUs():0:0 -> a
    1:1:androidx.media3.extractor.mp3.XingFrame parse(androidx.media3.extractor.MpegAudioUtil$Header,androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/i0$a;Lm/z;)Lh1/i;"}
androidx.media3.extractor.mp3.XingSeeker -> h1.j:
    long dataStartPosition -> a
    int xingFrameSize -> b
    long durationUs -> c
    int bitrate -> d
    long dataSize -> e
    long dataEndPosition -> f
    long[] tableOfContents -> g
    1:1:void <init>(long,int,long,int):0:0 -> <init>
    2:2:void <init>(long,int,long,int,long,long[]):0:0 -> <init>
    1:1:androidx.media3.extractor.mp3.XingSeeker create(androidx.media3.extractor.mp3.XingFrame,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh1/i;J)Lh1/j;"}
    1:1:long getTimeUs(long):0:0 -> b
    1:1:boolean isSeekable():0:0 -> c
    1:1:long getTimeUsForTableIndex(int):0:0 -> d
    1:1:long getDataEndPosition():0:0 -> g
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:int getAverageBitrate():0:0 -> i
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.mp4.Atom -> i1.a:
    int type -> a
    1:1:void <init>(int):0:0 -> <init>
    1:1:java.lang.String getAtomTypeString(int):0:0 -> a
    1:1:int parseFullAtomFlags(int):0:0 -> b
    1:1:int parseFullAtomVersion(int):0:0 -> c
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.extractor.mp4.Atom$ContainerAtom -> i1.a$a:
    long endPosition -> b
    java.util.List leafChildren -> c
    java.util.List containerChildren -> d
    1:1:void <init>(int,long):0:0 -> <init>
    1:1:void add(androidx.media3.extractor.mp4.Atom$ContainerAtom):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;)V"}
    1:1:void add(androidx.media3.extractor.mp4.Atom$LeafAtom):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$b;)V"}
    1:1:androidx.media3.extractor.mp4.Atom$ContainerAtom getContainerAtomOfType(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Li1/a$a;"}
    1:1:androidx.media3.extractor.mp4.Atom$LeafAtom getLeafAtomOfType(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Li1/a$b;"}
    1:1:java.lang.String toString():0:0 -> toString
androidx.media3.extractor.mp4.Atom$LeafAtom -> i1.a$b:
    androidx.media3.common.util.ParsableByteArray data -> b
    1:1:void <init>(int,androidx.media3.common.util.ParsableByteArray):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/z;)V"}
androidx.media3.extractor.mp4.AtomParsers -> i1.b:
    byte[] opusMagic -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:androidx.media3.extractor.mp4.Track parseTrak(androidx.media3.extractor.mp4.Atom$ContainerAtom,androidx.media3.extractor.mp4.Atom$LeafAtom,long,androidx.media3.common.DrmInitData,boolean,boolean):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;Li1/a$b;JLj/m;ZZ)Li1/s;"}
    1:1:java.util.List parseTraks(androidx.media3.extractor.mp4.Atom$ContainerAtom,androidx.media3.extractor.GaplessInfoHolder,long,androidx.media3.common.DrmInitData,boolean,boolean,com.google.common.base.Function):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;Lo0/e0;JLj/m;ZZLk2/f;)Ljava/util/List;"}
    1:1:androidx.media3.common.Metadata parseUdta(androidx.media3.extractor.mp4.Atom$LeafAtom):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$b;)Lj/x;"}
    1:1:androidx.media3.common.Metadata parseUdtaMeta(androidx.media3.common.util.ParsableByteArray,int):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Lj/x;"}
    1:1:void parseVideoSampleEntry(androidx.media3.common.util.ParsableByteArray,int,int,int,int,int,androidx.media3.common.DrmInitData,androidx.media3.extractor.mp4.AtomParsers$StsdData,int):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;IIIIILj/m;Li1/b$d;I)V"}
    1:1:androidx.media3.common.Metadata parseXyz(androidx.media3.common.util.ParsableByteArray):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lj/x;"}
    1:1:java.nio.ByteBuffer allocateHdrStaticInfo():0:0 -> a
    1:1:boolean canApplyEditWithGaplessInfo(long[],long,long,long):0:0 -> b
    1:1:boolean canTrimSamplesWithTimestampChange(int):0:0 -> c
    1:1:int findBoxPosition(androidx.media3.common.util.ParsableByteArray,int,int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;III)I"}
    1:1:int getTrackTypeForHdlr(int):0:0 -> e
    1:1:void maybeSkipRemainingMetaAtomHeaderBytes(androidx.media3.common.util.ParsableByteArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void parseAudioSampleEntry(androidx.media3.common.util.ParsableByteArray,int,int,int,int,java.lang.String,boolean,androidx.media3.common.DrmInitData,androidx.media3.extractor.mp4.AtomParsers$StsdData,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;IIIILjava/lang/String;ZLj/m;Li1/b$d;I)V"}
    1:1:androidx.media3.common.ColorInfo parseAv1c(androidx.media3.common.util.ParsableByteArray):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lj/h;"}
    1:1:android.util.Pair parseCommonEncryptionSinfFromParent(androidx.media3.common.util.ParsableByteArray,int,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)Landroid/util/Pair;"}
    1:1:android.util.Pair parseEdts(androidx.media3.extractor.mp4.Atom$ContainerAtom):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;)Landroid/util/Pair;"}
    1:1:androidx.media3.extractor.mp4.AtomParsers$EsdsData parseEsdsFromParent(androidx.media3.common.util.ParsableByteArray,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Li1/b$b;"}
    1:1:int parseExpandableClassSize(androidx.media3.common.util.ParsableByteArray):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)I"}
    1:1:int parseHdlr(androidx.media3.common.util.ParsableByteArray):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)I"}
    1:1:androidx.media3.common.Metadata parseIlst(androidx.media3.common.util.ParsableByteArray,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Lj/x;"}
    1:1:android.util.Pair parseMdhd(androidx.media3.common.util.ParsableByteArray):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Landroid/util/Pair;"}
    1:1:androidx.media3.common.Metadata parseMdtaFromMeta(androidx.media3.extractor.mp4.Atom$ContainerAtom):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;)Lj/x;"}
    1:1:void parseMetaDataSampleEntry(androidx.media3.common.util.ParsableByteArray,int,int,int,androidx.media3.extractor.mp4.AtomParsers$StsdData):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;IIILi1/b$d;)V"}
    1:1:androidx.media3.container.Mp4TimestampData parseMvhd(androidx.media3.common.util.ParsableByteArray):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ln/c;"}
    1:1:float parsePaspFromParent(androidx.media3.common.util.ParsableByteArray,int):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)F"}
    1:1:byte[] parseProjFromParent(androidx.media3.common.util.ParsableByteArray,int,int):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)[B"}
    1:1:android.util.Pair parseSampleEntryEncryptionData(androidx.media3.common.util.ParsableByteArray,int,int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)Landroid/util/Pair;"}
    1:1:androidx.media3.extractor.mp4.TrackEncryptionBox parseSchiFromParent(androidx.media3.common.util.ParsableByteArray,int,int,java.lang.String):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;IILjava/lang/String;)Li1/t;"}
    1:1:androidx.media3.extractor.mp4.TrackSampleTable parseStbl(androidx.media3.extractor.mp4.Track,androidx.media3.extractor.mp4.Atom$ContainerAtom,androidx.media3.extractor.GaplessInfoHolder):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/s;Li1/a$a;Lo0/e0;)Li1/v;"}
    1:1:androidx.media3.extractor.mp4.AtomParsers$StsdData parseStsd(androidx.media3.common.util.ParsableByteArray,int,int,java.lang.String,androidx.media3.common.DrmInitData,boolean):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;IILjava/lang/String;Lj/m;Z)Li1/b$d;"}
    1:1:void parseTextSampleEntry(androidx.media3.common.util.ParsableByteArray,int,int,int,int,java.lang.String,androidx.media3.extractor.mp4.AtomParsers$StsdData):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;IIIILjava/lang/String;Li1/b$d;)V"}
    1:1:androidx.media3.extractor.mp4.AtomParsers$TkhdData parseTkhd(androidx.media3.common.util.ParsableByteArray):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Li1/b$g;"}
androidx.media3.extractor.mp4.AtomParsers$ChunkIterator -> i1.b$a:
    int length -> a
    int index -> b
    int numSamples -> c
    long offset -> d
    boolean chunkOffsetsAreLongs -> e
    androidx.media3.common.util.ParsableByteArray chunkOffsets -> f
    androidx.media3.common.util.ParsableByteArray stsc -> g
    int nextSamplesPerChunkChangeIndex -> h
    int remainingSamplesPerChunkChanges -> i
    1:1:void <init>(androidx.media3.common.util.ParsableByteArray,androidx.media3.common.util.ParsableByteArray,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Lm/z;Z)V"}
    1:1:boolean moveNext():0:0 -> a
androidx.media3.extractor.mp4.AtomParsers$EsdsData -> i1.b$b:
    java.lang.String mimeType -> a
    byte[] initializationData -> b
    long bitrate -> c
    long peakBitrate -> d
    1:1:void <init>(java.lang.String,byte[],long,long):0:0 -> <init>
    1:1:java.lang.String access$300(androidx.media3.extractor.mp4.AtomParsers$EsdsData):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/b$b;)Ljava/lang/String;"}
    1:1:byte[] access$400(androidx.media3.extractor.mp4.AtomParsers$EsdsData):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/b$b;)[B"}
    1:1:long access$500(androidx.media3.extractor.mp4.AtomParsers$EsdsData):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/b$b;)J"}
    1:1:long access$600(androidx.media3.extractor.mp4.AtomParsers$EsdsData):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/b$b;)J"}
androidx.media3.extractor.mp4.AtomParsers$SampleSizeBox -> i1.b$c:
    int getFixedSampleSize() -> a
    int getSampleCount() -> b
    int readNextSampleSize() -> c
androidx.media3.extractor.mp4.AtomParsers$StsdData -> i1.b$d:
    androidx.media3.extractor.mp4.TrackEncryptionBox[] trackEncryptionBoxes -> a
    androidx.media3.common.Format format -> b
    int nalUnitLengthFieldLength -> c
    int requiredSampleTransformation -> d
    1:1:void <init>(int):0:0 -> <init>
androidx.media3.extractor.mp4.AtomParsers$StszSampleSizeBox -> i1.b$e:
    int fixedSampleSize -> a
    int sampleCount -> b
    androidx.media3.common.util.ParsableByteArray data -> c
    1:1:void <init>(androidx.media3.extractor.mp4.Atom$LeafAtom,androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$b;Lj/q;)V"}
    1:1:int getFixedSampleSize():0:0 -> a
    1:1:int getSampleCount():0:0 -> b
    1:1:int readNextSampleSize():0:0 -> c
androidx.media3.extractor.mp4.AtomParsers$Stz2SampleSizeBox -> i1.b$f:
    androidx.media3.common.util.ParsableByteArray data -> a
    int sampleCount -> b
    int fieldSize -> c
    int sampleIndex -> d
    int currentByte -> e
    1:1:void <init>(androidx.media3.extractor.mp4.Atom$LeafAtom):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$b;)V"}
    1:1:int getFixedSampleSize():0:0 -> a
    1:1:int getSampleCount():0:0 -> b
    1:1:int readNextSampleSize():0:0 -> c
androidx.media3.extractor.mp4.AtomParsers$TkhdData -> i1.b$g:
    int id -> a
    long duration -> b
    int rotationDegrees -> c
    1:1:void <init>(int,long,int):0:0 -> <init>
    1:1:long access$000(androidx.media3.extractor.mp4.AtomParsers$TkhdData):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/b$g;)J"}
    1:1:int access$100(androidx.media3.extractor.mp4.AtomParsers$TkhdData):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/b$g;)I"}
    1:1:int access$200(androidx.media3.extractor.mp4.AtomParsers$TkhdData):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/b$g;)I"}
androidx.media3.extractor.mp4.AtomSizeTooSmallSniffFailure -> i1.c:
    int atomType -> a
    long atomSize -> b
    int minimumHeaderSize -> c
    1:1:void <init>(int,long,int):0:0 -> <init>
androidx.media3.extractor.mp4.DefaultSampleValues -> i1.d:
    int sampleDescriptionIndex -> a
    int duration -> b
    int size -> c
    int flags -> d
    1:1:void <init>(int,int,int,int):0:0 -> <init>
androidx.media3.extractor.mp4.FixedSampleSizeRechunker -> i1.e:
    1:1:androidx.media3.extractor.mp4.FixedSampleSizeRechunker$Results rechunk(int,long[],int[],long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[J[IJ)Li1/e$b;"}
androidx.media3.extractor.mp4.FixedSampleSizeRechunker$1 -> i1.e$a:
androidx.media3.extractor.mp4.FixedSampleSizeRechunker$Results -> i1.e$b:
    long[] offsets -> a
    int[] sizes -> b
    int maximumSize -> c
    long[] timestamps -> d
    int[] flags -> e
    long duration -> f
    1:1:void <init>(long[],int[],int,long[],int[],long):0:0 -> <init>
    2:2:void <init>(long[],int[],int,long[],int[],long,androidx.media3.extractor.mp4.FixedSampleSizeRechunker$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"([J[II[J[IJLi1/e$a;)V"}
androidx.media3.extractor.mp4.FragmentedMp4Extractor -> i1.h:
    long segmentIndexEarliestPresentationTimeUs -> A
    androidx.media3.extractor.mp4.FragmentedMp4Extractor$TrackBundle currentTrackBundle -> B
    int sampleSize -> C
    int sampleBytesWritten -> D
    int sampleCurrentNalBytesRemaining -> E
    boolean processSeiNalUnitPayload -> F
    androidx.media3.extractor.ExtractorOutput extractorOutput -> G
    androidx.media3.extractor.TrackOutput[] emsgTrackOutputs -> H
    androidx.media3.extractor.TrackOutput[] ceaTrackOutputs -> I
    boolean haveOutputSeekMap -> J
    androidx.media3.extractor.ExtractorsFactory FACTORY -> K
    byte[] PIFF_SAMPLE_ENCRYPTION_BOX_EXTENDED_TYPE -> L
    androidx.media3.common.Format EMSG_FORMAT -> M
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> a
    int flags -> b
    androidx.media3.extractor.mp4.Track sideloadedTrack -> c
    java.util.List closedCaptionFormats -> d
    android.util.SparseArray trackBundles -> e
    androidx.media3.common.util.ParsableByteArray nalStartCode -> f
    androidx.media3.common.util.ParsableByteArray nalPrefix -> g
    androidx.media3.common.util.ParsableByteArray nalBuffer -> h
    byte[] scratchBytes -> i
    androidx.media3.common.util.ParsableByteArray scratch -> j
    androidx.media3.common.util.TimestampAdjuster timestampAdjuster -> k
    androidx.media3.extractor.metadata.emsg.EventMessageEncoder eventMessageEncoder -> l
    androidx.media3.common.util.ParsableByteArray atomHeader -> m
    java.util.ArrayDeque containerAtoms -> n
    java.util.ArrayDeque pendingMetadataSampleInfos -> o
    androidx.media3.extractor.TrackOutput additionalEmsgTrackOutput -> p
    com.google.common.collect.ImmutableList lastSniffFailures -> q
    int parserState -> r
    int atomType -> s
    long atomSize -> t
    int atomHeaderBytesRead -> u
    androidx.media3.common.util.ParsableByteArray atomData -> v
    long endOfMdatPosition -> w
    int pendingMetadataSampleBytes -> x
    long pendingSeekTimeUs -> y
    long durationUs -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.extractor.text.SubtitleParser$Factory,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;I)V"}
    2:2:void <init>(androidx.media3.extractor.text.SubtitleParser$Factory,int,androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.mp4.Track,java.util.List,androidx.media3.extractor.TrackOutput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;ILm/e0;Li1/s;Ljava/util/List;Lo0/s0;)V"}
    1:1:void parseSaiz(androidx.media3.extractor.mp4.TrackEncryptionBox,androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.mp4.TrackFragment):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/t;Lm/z;Li1/u;)V"}
    1:1:void parseSampleGroups(androidx.media3.extractor.mp4.Atom$ContainerAtom,java.lang.String,androidx.media3.extractor.mp4.TrackFragment):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;Ljava/lang/String;Li1/u;)V"}
    1:1:void parseSenc(androidx.media3.common.util.ParsableByteArray,int,androidx.media3.extractor.mp4.TrackFragment):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;ILi1/u;)V"}
    1:1:void parseSenc(androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.mp4.TrackFragment):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Li1/u;)V"}
    1:1:android.util.Pair parseSidx(androidx.media3.common.util.ParsableByteArray,long):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;J)Landroid/util/Pair;"}
    1:1:long parseTfdt(androidx.media3.common.util.ParsableByteArray):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)J"}
    1:1:androidx.media3.extractor.mp4.FragmentedMp4Extractor$TrackBundle parseTfhd(androidx.media3.common.util.ParsableByteArray,android.util.SparseArray,boolean):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Landroid/util/SparseArray;Z)Li1/h$b;"}
    1:1:void parseTraf(androidx.media3.extractor.mp4.Atom$ContainerAtom,android.util.SparseArray,boolean,int,byte[]):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;Landroid/util/SparseArray;ZI[B)V"}
    1:1:android.util.Pair parseTrex(androidx.media3.common.util.ParsableByteArray):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Landroid/util/Pair;"}
    1:1:int parseTrun(androidx.media3.extractor.mp4.FragmentedMp4Extractor$TrackBundle,int,int,androidx.media3.common.util.ParsableByteArray,int):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/h$b;IILm/z;I)I"}
    1:1:void parseTruns(androidx.media3.extractor.mp4.Atom$ContainerAtom,androidx.media3.extractor.mp4.FragmentedMp4Extractor$TrackBundle,int):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;Li1/h$b;I)V"}
    1:1:void parseUuid(androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.mp4.TrackFragment,byte[]):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Li1/u;[B)V"}
    1:1:void processAtomEnded(long):0:0 -> M
    1:1:boolean readAtomHeader(androidx.media3.extractor.ExtractorInput):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void readAtomPayload(androidx.media3.extractor.ExtractorInput):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void readEncryptionData(androidx.media3.extractor.ExtractorInput):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:boolean readSample(androidx.media3.extractor.ExtractorInput):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:boolean shouldParseContainerAtom(int):0:0 -> R
    1:1:boolean shouldParseLeafAtom(int):0:0 -> S
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$2_2oTKtMn0ZpMDqqa4tJmHFYvpQ():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:int checkNonNegative(int):0:0 -> c
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void enterReadingAtomHeaderState():0:0 -> g
    1:1:androidx.media3.extractor.mp4.DefaultSampleValues getDefaultSampleValues(android.util.SparseArray,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/SparseArray;I)Li1/d;"}
    1:1:androidx.media3.common.DrmInitData getDrmInitDataFromAtoms(java.util.List):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lj/m;"}
    1:1:androidx.media3.extractor.mp4.FragmentedMp4Extractor$TrackBundle getNextTrackBundle(android.util.SparseArray):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/SparseArray;)Li1/h$b;"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
    1:1:com.google.common.collect.ImmutableList getSniffFailureDetails():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:void initExtraTracks():0:0 -> n
    1:1:boolean isEdtsListDurationForEntireMediaTimeline(androidx.media3.extractor.mp4.Track):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/s;)Z"}
    1:1:androidx.media3.extractor.Extractor[] lambda$static$1():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:androidx.media3.extractor.mp4.Track modifyTrack(androidx.media3.extractor.mp4.Track):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/s;)Li1/s;"}
    1:1:void onContainerAtomRead(androidx.media3.extractor.mp4.Atom$ContainerAtom):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;)V"}
    1:1:void release():0:0 -> release
    1:1:void onEmsgLeafAtomRead(androidx.media3.common.util.ParsableByteArray):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void onLeafAtomRead(androidx.media3.extractor.mp4.Atom$LeafAtom,long):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$b;J)V"}
    1:1:void onMoofContainerAtomRead(androidx.media3.extractor.mp4.Atom$ContainerAtom):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;)V"}
    1:1:void onMoovContainerAtomRead(androidx.media3.extractor.mp4.Atom$ContainerAtom):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;)V"}
    1:1:void outputPendingMetadataSamples(long):0:0 -> w
    1:1:long parseMehd(androidx.media3.common.util.ParsableByteArray):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)J"}
    1:1:void parseMoof(androidx.media3.extractor.mp4.Atom$ContainerAtom,android.util.SparseArray,boolean,int,byte[]):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;Landroid/util/SparseArray;ZI[B)V"}
    1:1:void parseSaio(androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.mp4.TrackFragment):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Li1/u;)V"}
androidx.media3.extractor.mp4.FragmentedMp4Extractor$$ExternalSyntheticLambda0 -> i1.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.mp4.FragmentedMp4Extractor$$InternalSyntheticLambda$9$1254ff433f7c24f3eff7e4c129f7f4bd38a93eee25cf05cb0d64e50e9973e178$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.mp4.FragmentedMp4Extractor$$InternalSyntheticLambda$9$1254ff433f7c24f3eff7e4c129f7f4bd38a93eee25cf05cb0d64e50e9973e178$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.mp4.FragmentedMp4Extractor$$InternalSyntheticLambda$9$1254ff433f7c24f3eff7e4c129f7f4bd38a93eee25cf05cb0d64e50e9973e178$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.mp4.FragmentedMp4Extractor$$InternalSyntheticLambda$9$1254ff433f7c24f3eff7e4c129f7f4bd38a93eee25cf05cb0d64e50e9973e178$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.mp4.FragmentedMp4Extractor$$InternalSyntheticLambda$9$1254ff433f7c24f3eff7e4c129f7f4bd38a93eee25cf05cb0d64e50e9973e178$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.mp4.FragmentedMp4Extractor$$ExternalSyntheticLambda1 -> i1.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.extractor.mp4.FragmentedMp4Extractor androidx.media3.extractor.mp4.FragmentedMp4Extractor$$InternalSyntheticLambda$9$b915707326664a7cfc4b9e23c8683f70ee3a4dc3a9d6a02129b5265107b06add$0.f$0 -> f
    1:1:void androidx.media3.extractor.mp4.FragmentedMp4Extractor$$InternalSyntheticLambda$9$b915707326664a7cfc4b9e23c8683f70ee3a4dc3a9d6a02129b5265107b06add$0.<init>(androidx.media3.extractor.mp4.FragmentedMp4Extractor):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/h;)V"}
    1:1:java.lang.Object androidx.media3.extractor.mp4.FragmentedMp4Extractor$$InternalSyntheticLambda$9$b915707326664a7cfc4b9e23c8683f70ee3a4dc3a9d6a02129b5265107b06add$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.mp4.FragmentedMp4Extractor$MetadataSampleInfo -> i1.h$a:
    long sampleTimeUs -> a
    boolean sampleTimeIsRelative -> b
    int size -> c
    1:1:void <init>(long,boolean,int):0:0 -> <init>
androidx.media3.extractor.mp4.FragmentedMp4Extractor$TrackBundle -> i1.h$b:
    androidx.media3.extractor.TrackOutput output -> a
    androidx.media3.extractor.mp4.TrackFragment fragment -> b
    androidx.media3.common.util.ParsableByteArray scratch -> c
    androidx.media3.extractor.mp4.TrackSampleTable moovSampleTable -> d
    androidx.media3.extractor.mp4.DefaultSampleValues defaultSampleValues -> e
    int currentSampleIndex -> f
    int currentSampleInTrackRun -> g
    int currentTrackRunIndex -> h
    int firstSampleToOutputIndex -> i
    androidx.media3.common.util.ParsableByteArray encryptionSignalByte -> j
    androidx.media3.common.util.ParsableByteArray defaultInitializationVector -> k
    boolean currentlyInFragment -> l
    1:1:void <init>(androidx.media3.extractor.TrackOutput,androidx.media3.extractor.mp4.TrackSampleTable,androidx.media3.extractor.mp4.DefaultSampleValues):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;Li1/v;Li1/d;)V"}
    1:1:boolean access$000(androidx.media3.extractor.mp4.FragmentedMp4Extractor$TrackBundle):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/h$b;)Z"}
    1:1:boolean access$002(androidx.media3.extractor.mp4.FragmentedMp4Extractor$TrackBundle,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/h$b;Z)Z"}
    1:1:int getCurrentSampleFlags():0:0 -> c
    1:1:long getCurrentSampleOffset():0:0 -> d
    1:1:long getCurrentSamplePresentationTimeUs():0:0 -> e
    1:1:int getCurrentSampleSize():0:0 -> f
    1:1:androidx.media3.extractor.mp4.TrackEncryptionBox getEncryptionBoxIfEncrypted():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Li1/t;"}
    1:1:boolean next():0:0 -> h
    1:1:int outputSampleEncryptionData(int,int):0:0 -> i
    1:1:void reset(androidx.media3.extractor.mp4.TrackSampleTable,androidx.media3.extractor.mp4.DefaultSampleValues):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/v;Li1/d;)V"}
    1:1:void resetFragmentInfo():0:0 -> k
    1:1:void seek(long):0:0 -> l
    1:1:void skipSampleEncryptionData():0:0 -> m
    1:1:void updateDrmInitData(androidx.media3.common.DrmInitData):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/m;)V"}
androidx.media3.extractor.mp4.IncorrectFragmentationSniffFailure -> i1.i:
    boolean fileIsFragmented -> a
    androidx.media3.extractor.mp4.IncorrectFragmentationSniffFailure FILE_FRAGMENTED -> b
    androidx.media3.extractor.mp4.IncorrectFragmentationSniffFailure FILE_NOT_FRAGMENTED -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean):0:0 -> <init>
androidx.media3.extractor.mp4.MetadataUtil -> i1.j:
    1:1:androidx.media3.extractor.metadata.id3.CommentFrame parseCommentAttribute(int,androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/z;)Lc1/e;"}
    1:1:androidx.media3.extractor.metadata.id3.ApicFrame parseCoverArt(androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lc1/a;"}
    1:1:androidx.media3.common.Metadata$Entry parseIlstElement(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lj/x$b;"}
    1:1:androidx.media3.extractor.metadata.id3.TextInformationFrame parseIndexAndCountAttribute(int,java.lang.String,androidx.media3.common.util.ParsableByteArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Lm/z;)Lc1/n;"}
    1:1:int parseIntegerAttribute(androidx.media3.common.util.ParsableByteArray):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)I"}
    1:1:androidx.media3.extractor.metadata.id3.Id3Frame parseIntegerAttribute(int,java.lang.String,androidx.media3.common.util.ParsableByteArray,boolean,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Lm/z;ZZ)Lc1/i;"}
    1:1:androidx.media3.extractor.metadata.id3.Id3Frame parseInternalAttribute(androidx.media3.common.util.ParsableByteArray,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Lc1/i;"}
    1:1:androidx.media3.container.MdtaMetadataEntry parseMdtaMetadataEntryFromIlst(androidx.media3.common.util.ParsableByteArray,int,java.lang.String):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;ILjava/lang/String;)Ln/a;"}
    1:1:androidx.media3.extractor.metadata.id3.TextInformationFrame parseStandardGenreAttribute(androidx.media3.common.util.ParsableByteArray):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lc1/n;"}
    1:1:androidx.media3.extractor.metadata.id3.TextInformationFrame parseTextAttribute(int,java.lang.String,androidx.media3.common.util.ParsableByteArray):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;Lm/z;)Lc1/n;"}
    1:1:void setFormatGaplessInfo(int,androidx.media3.extractor.GaplessInfoHolder,androidx.media3.common.Format$Builder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILo0/e0;Lj/q$b;)V"}
    1:1:void setFormatMetadata(int,androidx.media3.common.Metadata,androidx.media3.common.Format$Builder,androidx.media3.common.Metadata[]):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILj/x;Lj/q$b;[Lj/x;)V"}
androidx.media3.extractor.mp4.Mp4Extractor -> i1.m:
    androidx.media3.extractor.metadata.mp4.MotionPhotoMetadata motionPhotoMetadata -> A
    androidx.media3.extractor.ExtractorsFactory FACTORY -> B
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> a
    int flags -> b
    androidx.media3.common.util.ParsableByteArray nalStartCode -> c
    androidx.media3.common.util.ParsableByteArray nalLength -> d
    androidx.media3.common.util.ParsableByteArray scratch -> e
    androidx.media3.common.util.ParsableByteArray atomHeader -> f
    java.util.ArrayDeque containerAtoms -> g
    androidx.media3.extractor.mp4.SefReader sefReader -> h
    java.util.List slowMotionMetadataEntries -> i
    com.google.common.collect.ImmutableList lastSniffFailures -> j
    int parserState -> k
    int atomType -> l
    long atomSize -> m
    int atomHeaderBytesRead -> n
    androidx.media3.common.util.ParsableByteArray atomData -> o
    int sampleTrackIndex -> p
    int sampleBytesRead -> q
    int sampleBytesWritten -> r
    int sampleCurrentNalBytesRemaining -> s
    boolean seenFtypAtom -> t
    androidx.media3.extractor.ExtractorOutput extractorOutput -> u
    androidx.media3.extractor.mp4.Mp4Extractor$Mp4Track[] tracks -> v
    long[][] accumulatedSampleSizes -> w
    int firstVideoTrackIndex -> x
    long durationUs -> y
    int fileType -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.extractor.text.SubtitleParser$Factory,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;I)V"}
    1:1:void processEndOfStreamReadingAtomHeader():0:0 -> A
    1:1:int processFtypAtom(androidx.media3.common.util.ParsableByteArray):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)I"}
    1:1:void processMoovAtom(androidx.media3.extractor.mp4.Atom$ContainerAtom):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/a$a;)V"}
    1:1:void processUnparsedAtom(long):0:0 -> D
    1:1:boolean readAtomHeader(androidx.media3.extractor.ExtractorInput):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:boolean readAtomPayload(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)Z"}
    1:1:int readSample(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:int readSefData(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:boolean shouldParseContainerAtom(int):0:0 -> I
    1:1:boolean shouldParseLeafAtom(int):0:0 -> J
    1:1:void updateSampleIndex(androidx.media3.extractor.mp4.Mp4Extractor$Mp4Track,long):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/m$a;J)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:boolean isSeekable():0:0 -> c
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$OYoo6xwJtNzwsGY_8FLQ60e43vY():0:0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:androidx.media3.extractor.mp4.Track $r8$lambda$xXelYfZhmtGvwob0hd9oDYj6kTU(androidx.media3.extractor.mp4.Track):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/s;)Li1/s;"}
    1:1:int brandToFileType(int):0:0 -> o
    1:1:long[][] calculateAccumulatedSampleSizes(androidx.media3.extractor.mp4.Mp4Extractor$Mp4Track[]):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Li1/m$a;)[[J"}
    1:1:void enterReadingAtomHeaderState():0:0 -> q
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long,int):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JI)Lo0/m0$a;"}
    1:1:void release():0:0 -> release
    1:1:com.google.common.collect.ImmutableList getSniffFailureDetails():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:int getSynchronizationSampleIndex(androidx.media3.extractor.mp4.TrackSampleTable,long):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/v;J)I"}
    1:1:int getTrackIndexOfNextReadSample(long):0:0 -> u
    1:1:androidx.media3.extractor.mp4.Track lambda$processMoovAtom$2(androidx.media3.extractor.mp4.Track):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/s;)Li1/s;"}
    1:1:androidx.media3.extractor.Extractor[] lambda$static$1():0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:long maybeAdjustSeekOffset(androidx.media3.extractor.mp4.TrackSampleTable,long,long):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/v;JJ)J"}
    1:1:void maybeSkipRemainingMetaAtomHeaderBytes(androidx.media3.extractor.ExtractorInput):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void processAtomEnded(long):0:0 -> z
androidx.media3.extractor.mp4.Mp4Extractor$$ExternalSyntheticLambda0 -> i1.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.mp4.Mp4Extractor$$InternalSyntheticLambda$10$b09425397d12032fc088444095b2fbdb223200cd50f0a9fad70cb5d99b47ee17$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.mp4.Mp4Extractor$$InternalSyntheticLambda$10$b09425397d12032fc088444095b2fbdb223200cd50f0a9fad70cb5d99b47ee17$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.mp4.Mp4Extractor$$InternalSyntheticLambda$10$b09425397d12032fc088444095b2fbdb223200cd50f0a9fad70cb5d99b47ee17$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.mp4.Mp4Extractor$$InternalSyntheticLambda$10$b09425397d12032fc088444095b2fbdb223200cd50f0a9fad70cb5d99b47ee17$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.mp4.Mp4Extractor$$InternalSyntheticLambda$10$b09425397d12032fc088444095b2fbdb223200cd50f0a9fad70cb5d99b47ee17$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.mp4.Mp4Extractor$$ExternalSyntheticLambda1 -> i1.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.mp4.Mp4Extractor$$InternalSyntheticLambda$10$c7a9e664d826c6c6d3e44e8c2f96ffc39cd8bbcbb6edf6c367bdc4a74d932193$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.extractor.mp4.Mp4Extractor$$InternalSyntheticLambda$10$c7a9e664d826c6c6d3e44e8c2f96ffc39cd8bbcbb6edf6c367bdc4a74d932193$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.mp4.Mp4Extractor$Mp4Track -> i1.m$a:
    androidx.media3.extractor.mp4.Track track -> a
    androidx.media3.extractor.mp4.TrackSampleTable sampleTable -> b
    androidx.media3.extractor.TrackOutput trackOutput -> c
    androidx.media3.extractor.TrueHdSampleRechunker trueHdSampleRechunker -> d
    int sampleIndex -> e
    1:1:void <init>(androidx.media3.extractor.mp4.Track,androidx.media3.extractor.mp4.TrackSampleTable,androidx.media3.extractor.TrackOutput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/s;Li1/v;Lo0/s0;)V"}
androidx.media3.extractor.mp4.NoDeclaredBrandSniffFailure -> i1.n:
    androidx.media3.extractor.mp4.NoDeclaredBrandSniffFailure INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
androidx.media3.extractor.mp4.PsshAtomUtil -> i1.o:
    1:1:byte[] buildPsshAtom(java.util.UUID,byte[]):0:0 -> a
    1:1:byte[] buildPsshAtom(java.util.UUID,java.util.UUID[],byte[]):0:0 -> b
    1:1:boolean isPsshAtom(byte[]):0:0 -> c
    1:1:androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom parsePsshAtom(byte[]):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"([B)Li1/o$a;"}
    1:1:byte[] parseSchemeSpecificData(byte[],java.util.UUID):0:0 -> e
    1:1:java.util.UUID parseUuid(byte[]):0:0 -> f
    1:1:int parseVersion(byte[]):0:0 -> g
androidx.media3.extractor.mp4.PsshAtomUtil$PsshAtom -> i1.o$a:
    java.util.UUID uuid -> a
    int version -> b
    byte[] schemeData -> c
    java.util.UUID[] keyIds -> d
    1:1:void <init>(java.util.UUID,int,byte[],java.util.UUID[]):0:0 -> <init>
androidx.media3.extractor.mp4.SefReader -> i1.p:
    java.util.List dataReferences -> a
    int readerState -> b
    int tailLength -> c
    com.google.common.base.Splitter COLON_SPLITTER -> d
    com.google.common.base.Splitter ASTERISK_SPLITTER -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void checkForSefData(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)V"}
    1:1:int nameToDataType(java.lang.String):0:0 -> b
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder,java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;Ljava/util/List;)I"}
    1:1:void readSdrs(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)V"}
    1:1:void readSefData(androidx.media3.extractor.ExtractorInput,java.util.List):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Ljava/util/List;)V"}
    1:1:androidx.media3.extractor.metadata.mp4.SlowMotionData readSlowMotionData(androidx.media3.common.util.ParsableByteArray,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Ld1/b;"}
    1:1:void reset():0:0 -> g
androidx.media3.extractor.mp4.SefReader$DataReference -> i1.p$a:
    int dataType -> a
    long startOffset -> b
    int size -> c
    1:1:void <init>(int,long,int):0:0 -> <init>
androidx.media3.extractor.mp4.SmtaAtomUtil -> i1.q:
    1:1:int getCaptureFrameRate(int,androidx.media3.common.util.ParsableByteArray,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/z;I)I"}
    1:1:androidx.media3.common.Metadata parseSmta(androidx.media3.common.util.ParsableByteArray,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Lj/x;"}
androidx.media3.extractor.mp4.Sniffer -> i1.r:
    int[] COMPATIBLE_BRANDS -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:boolean isCompatibleBrand(int,boolean):0:0 -> a
    1:1:androidx.media3.extractor.SniffFailure sniffFragmented(androidx.media3.extractor.ExtractorInput):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Lo0/q0;"}
    1:1:androidx.media3.extractor.SniffFailure sniffInternal(androidx.media3.extractor.ExtractorInput,boolean,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;ZZ)Lo0/q0;"}
    1:1:androidx.media3.extractor.SniffFailure sniffUnfragmented(androidx.media3.extractor.ExtractorInput,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Z)Lo0/q0;"}
androidx.media3.extractor.mp4.Track -> i1.s:
    int id -> a
    int type -> b
    long timescale -> c
    long movieTimescale -> d
    long durationUs -> e
    androidx.media3.common.Format format -> f
    int sampleTransformation -> g
    long[] editListDurations -> h
    long[] editListMediaTimes -> i
    int nalUnitLengthFieldLength -> j
    androidx.media3.extractor.mp4.TrackEncryptionBox[] sampleDescriptionEncryptionBoxes -> k
    1:1:void <init>(int,int,long,long,long,androidx.media3.common.Format,int,androidx.media3.extractor.mp4.TrackEncryptionBox[],int,long[],long[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIJJJLj/q;I[Li1/t;I[J[J)V"}
    1:1:androidx.media3.extractor.mp4.TrackEncryptionBox getSampleDescriptionEncryptionBox(int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Li1/t;"}
androidx.media3.extractor.mp4.TrackEncryptionBox -> i1.t:
    boolean isEncrypted -> a
    java.lang.String schemeType -> b
    androidx.media3.extractor.TrackOutput$CryptoData cryptoData -> c
    int perSampleIvSize -> d
    byte[] defaultInitializationVector -> e
    1:1:void <init>(boolean,java.lang.String,int,byte[],int,int,byte[]):0:0 -> <init>
    1:1:int schemeToCryptoMode(java.lang.String):0:0 -> a
androidx.media3.extractor.mp4.TrackFragment -> i1.u:
    androidx.media3.extractor.mp4.DefaultSampleValues header -> a
    long atomPosition -> b
    long dataPosition -> c
    long auxiliaryDataPosition -> d
    int trunCount -> e
    int sampleCount -> f
    long[] trunDataPosition -> g
    int[] trunLength -> h
    int[] sampleSizeTable -> i
    long[] samplePresentationTimesUs -> j
    boolean[] sampleIsSyncFrameTable -> k
    boolean definesEncryptionData -> l
    boolean[] sampleHasSubsampleEncryptionTable -> m
    androidx.media3.extractor.mp4.TrackEncryptionBox trackEncryptionBox -> n
    androidx.media3.common.util.ParsableByteArray sampleEncryptionData -> o
    boolean sampleEncryptionDataNeedsFill -> p
    long nextFragmentDecodeTime -> q
    boolean nextFragmentDecodeTimeIncludesMoov -> r
    1:1:void <init>():0:0 -> <init>
    1:1:void fillEncryptionData(androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void fillEncryptionData(androidx.media3.extractor.ExtractorInput):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:long getSamplePresentationTimeUs(int):0:0 -> c
    1:1:void initEncryptionData(int):0:0 -> d
    1:1:void initTables(int,int):0:0 -> e
    1:1:void reset():0:0 -> f
    1:1:boolean sampleHasSubsampleEncryptionTable(int):0:0 -> g
androidx.media3.extractor.mp4.TrackSampleTable -> i1.v:
    androidx.media3.extractor.mp4.Track track -> a
    int sampleCount -> b
    long[] offsets -> c
    int[] sizes -> d
    int maximumSize -> e
    long[] timestampsUs -> f
    int[] flags -> g
    long durationUs -> h
    1:1:void <init>(androidx.media3.extractor.mp4.Track,long[],int[],int,long[],int[],long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Li1/s;[J[II[J[IJ)V"}
    1:1:int getIndexOfEarlierOrEqualSynchronizationSample(long):0:0 -> a
    1:1:int getIndexOfLaterOrEqualSynchronizationSample(long):0:0 -> b
androidx.media3.extractor.mp4.UnsupportedBrandsSniffFailure -> i1.w:
    int majorBrand -> a
    com.google.common.primitives.ImmutableIntArray compatibleBrands -> b
    1:1:void <init>(int,int[]):0:0 -> <init>
androidx.media3.extractor.ogg.DefaultOggSeeker -> j1.a:
    androidx.media3.extractor.ogg.OggPageHeader pageHeader -> a
    long payloadStartPosition -> b
    long payloadEndPosition -> c
    androidx.media3.extractor.ogg.StreamReader streamReader -> d
    int state -> e
    long totalGranules -> f
    long positionBeforeSeekToEnd -> g
    long targetGranule -> h
    long start -> i
    long end -> j
    long startGranule -> k
    long endGranule -> l
    1:1:void <init>(androidx.media3.extractor.ogg.StreamReader,long,long,long,long,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/i;JJJJZ)V"}
    1:1:androidx.media3.extractor.SeekMap createSeekMap():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/m0;"}
    1:1:void startSeek(long):0:0 -> b
    1:1:long read(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)J"}
    1:1:androidx.media3.extractor.ogg.StreamReader access$100(androidx.media3.extractor.ogg.DefaultOggSeeker):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/a;)Lj1/i;"}
    1:1:long access$200(androidx.media3.extractor.ogg.DefaultOggSeeker):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/a;)J"}
    1:1:long access$300(androidx.media3.extractor.ogg.DefaultOggSeeker):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/a;)J"}
    1:1:long access$400(androidx.media3.extractor.ogg.DefaultOggSeeker):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/a;)J"}
    1:1:androidx.media3.extractor.ogg.DefaultOggSeeker$OggSeekMap createSeekMap():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj1/a$b;"}
    1:1:long getNextSeekPosition(androidx.media3.extractor.ExtractorInput):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)J"}
    1:1:long readGranuleOfLastPage(androidx.media3.extractor.ExtractorInput):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)J"}
    1:1:void skipToPageOfTargetGranule(androidx.media3.extractor.ExtractorInput):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
androidx.media3.extractor.ogg.DefaultOggSeeker$1 -> j1.a$a:
androidx.media3.extractor.ogg.DefaultOggSeeker$OggSeekMap -> j1.a$b:
    androidx.media3.extractor.ogg.DefaultOggSeeker this$0 -> a
    1:1:void <init>(androidx.media3.extractor.ogg.DefaultOggSeeker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/a;)V"}
    2:2:void <init>(androidx.media3.extractor.ogg.DefaultOggSeeker,androidx.media3.extractor.ogg.DefaultOggSeeker$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/a;Lj1/a$a;)V"}
    1:1:boolean isSeekable():0:0 -> c
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.ogg.FlacReader -> j1.b:
    androidx.media3.extractor.FlacStreamMetadata streamMetadata -> n
    androidx.media3.extractor.ogg.FlacReader$FlacOggSeeker flacOggSeeker -> o
    void <init>() -> <init>
    1:1:long preparePayload(androidx.media3.common.util.ParsableByteArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)J"}
    1:1:boolean readHeaders(androidx.media3.common.util.ParsableByteArray,long,androidx.media3.extractor.ogg.StreamReader$SetupData):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JLj1/i$b;)Z"}
    1:1:void reset(boolean):0:0 -> l
    1:1:int getFlacFrameBlockSize(androidx.media3.common.util.ParsableByteArray):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)I"}
    1:1:boolean isAudioPacket(byte[]):0:0 -> o
    1:1:boolean verifyBitstreamType(androidx.media3.common.util.ParsableByteArray):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
androidx.media3.extractor.ogg.FlacReader$FlacOggSeeker -> j1.b$a:
    androidx.media3.extractor.FlacStreamMetadata streamMetadata -> a
    androidx.media3.extractor.FlacStreamMetadata$SeekTable seekTable -> b
    long firstFrameOffset -> c
    long pendingSeekGranule -> d
    1:1:void <init>(androidx.media3.extractor.FlacStreamMetadata,androidx.media3.extractor.FlacStreamMetadata$SeekTable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/b0;Lo0/b0$a;)V"}
    1:1:androidx.media3.extractor.SeekMap createSeekMap():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/m0;"}
    1:1:void startSeek(long):0:0 -> b
    1:1:long read(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)J"}
    1:1:void setFirstFrameOffset(long):0:0 -> d
androidx.media3.extractor.ogg.OggExtractor -> j1.d:
    androidx.media3.extractor.ExtractorOutput output -> a
    androidx.media3.extractor.ogg.StreamReader streamReader -> b
    boolean streamReaderInitialized -> c
    androidx.media3.extractor.ExtractorsFactory FACTORY -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$E0CjexwFefyJyHAymkT_zlhwUno():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] lambda$static$0():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:androidx.media3.common.util.ParsableByteArray resetPosition(androidx.media3.common.util.ParsableByteArray):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lm/z;"}
    1:1:boolean sniffInternal(androidx.media3.extractor.ExtractorInput):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.ogg.OggExtractor$$ExternalSyntheticLambda0 -> j1.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.ogg.OggExtractor$$InternalSyntheticLambda$10$431835211ffff1e4f867d81974954c7643be242ee08094ca0a6893e370ebba44$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ogg.OggExtractor$$InternalSyntheticLambda$10$431835211ffff1e4f867d81974954c7643be242ee08094ca0a6893e370ebba44$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ogg.OggExtractor$$InternalSyntheticLambda$10$431835211ffff1e4f867d81974954c7643be242ee08094ca0a6893e370ebba44$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ogg.OggExtractor$$InternalSyntheticLambda$10$431835211ffff1e4f867d81974954c7643be242ee08094ca0a6893e370ebba44$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ogg.OggExtractor$$InternalSyntheticLambda$10$431835211ffff1e4f867d81974954c7643be242ee08094ca0a6893e370ebba44$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.ogg.OggPacket -> j1.e:
    androidx.media3.extractor.ogg.OggPageHeader pageHeader -> a
    androidx.media3.common.util.ParsableByteArray packetArray -> b
    int currentSegmentIndex -> c
    int segmentCount -> d
    boolean populated -> e
    1:1:void <init>():0:0 -> <init>
    1:1:int calculatePacketSize(int):0:0 -> a
    1:1:androidx.media3.extractor.ogg.OggPageHeader getPageHeader():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj1/f;"}
    1:1:androidx.media3.common.util.ParsableByteArray getPayload():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/z;"}
    1:1:boolean populate(androidx.media3.extractor.ExtractorInput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void reset():0:0 -> e
    1:1:void trimPayload():0:0 -> f
androidx.media3.extractor.ogg.OggPageHeader -> j1.f:
    int revision -> a
    int type -> b
    long granulePosition -> c
    long streamSerialNumber -> d
    long pageSequenceNumber -> e
    long pageChecksum -> f
    int pageSegmentCount -> g
    int headerSize -> h
    int bodySize -> i
    int[] laces -> j
    androidx.media3.common.util.ParsableByteArray scratch -> k
    1:1:void <init>():0:0 -> <init>
    1:1:boolean populate(androidx.media3.extractor.ExtractorInput,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Z)Z"}
    1:1:void reset():0:0 -> b
    1:1:boolean skipToNextPage(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:boolean skipToNextPage(androidx.media3.extractor.ExtractorInput,long):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;J)Z"}
androidx.media3.extractor.ogg.OggSeeker -> j1.g:
    androidx.media3.extractor.SeekMap createSeekMap() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/m0;"}
    void startSeek(long) -> b
    long read(androidx.media3.extractor.ExtractorInput) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)J"}
androidx.media3.extractor.ogg.OpusReader -> j1.h:
    boolean firstCommentHeaderSeen -> n
    byte[] OPUS_ID_HEADER_SIGNATURE -> o
    byte[] OPUS_COMMENT_HEADER_SIGNATURE -> p
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:long preparePayload(androidx.media3.common.util.ParsableByteArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)J"}
    1:1:boolean readHeaders(androidx.media3.common.util.ParsableByteArray,long,androidx.media3.extractor.ogg.StreamReader$SetupData):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JLj1/i$b;)Z"}
    1:1:void reset(boolean):0:0 -> l
    1:1:boolean peekPacketStartsWith(androidx.media3.common.util.ParsableByteArray,byte[]):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;[B)Z"}
    1:1:boolean verifyBitstreamType(androidx.media3.common.util.ParsableByteArray):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
androidx.media3.extractor.ogg.StreamReader -> j1.i:
    androidx.media3.extractor.ogg.OggPacket oggPacket -> a
    androidx.media3.extractor.TrackOutput trackOutput -> b
    androidx.media3.extractor.ExtractorOutput extractorOutput -> c
    androidx.media3.extractor.ogg.OggSeeker oggSeeker -> d
    long targetGranule -> e
    long payloadStartPosition -> f
    long currentGranule -> g
    int state -> h
    int sampleRate -> i
    androidx.media3.extractor.ogg.StreamReader$SetupData setupData -> j
    long lengthOfReadPacket -> k
    boolean seekMapSet -> l
    boolean formatSet -> m
    1:1:void <init>():0:0 -> <init>
    1:1:void assertInitialized():0:0 -> a
    1:1:long convertGranuleToTime(long):0:0 -> b
    1:1:long convertTimeToGranule(long):0:0 -> c
    1:1:void init(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.TrackOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lo0/s0;)V"}
    1:1:void onSeekEnd(long):0:0 -> e
    long preparePayload(androidx.media3.common.util.ParsableByteArray) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)J"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    boolean readHeaders(androidx.media3.common.util.ParsableByteArray,long,androidx.media3.extractor.ogg.StreamReader$SetupData) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JLj1/i$b;)Z"}
    1:1:boolean readHeaders(androidx.media3.extractor.ExtractorInput):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int readHeadersAndUpdateState(androidx.media3.extractor.ExtractorInput):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
    1:1:int readPayload(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:void reset(boolean):0:0 -> l
    1:1:void seek(long,long):0:0 -> m
androidx.media3.extractor.ogg.StreamReader$1 -> j1.i$a:
androidx.media3.extractor.ogg.StreamReader$SetupData -> j1.i$b:
    androidx.media3.common.Format format -> a
    androidx.media3.extractor.ogg.OggSeeker oggSeeker -> b
    void <init>() -> <init>
androidx.media3.extractor.ogg.StreamReader$UnseekableOggSeeker -> j1.i$c:
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.extractor.ogg.StreamReader$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj1/i$a;)V"}
    1:1:androidx.media3.extractor.SeekMap createSeekMap():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/m0;"}
    1:1:void startSeek(long):0:0 -> b
    1:1:long read(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)J"}
androidx.media3.extractor.ogg.VorbisReader -> j1.j:
    androidx.media3.extractor.ogg.VorbisReader$VorbisSetup vorbisSetup -> n
    int previousPacketBlockSize -> o
    boolean seenFirstAudioPacket -> p
    androidx.media3.extractor.VorbisUtil$VorbisIdHeader vorbisIdHeader -> q
    androidx.media3.extractor.VorbisUtil$CommentHeader commentHeader -> r
    void <init>() -> <init>
    1:1:void onSeekEnd(long):0:0 -> e
    1:1:long preparePayload(androidx.media3.common.util.ParsableByteArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)J"}
    1:1:boolean readHeaders(androidx.media3.common.util.ParsableByteArray,long,androidx.media3.extractor.ogg.StreamReader$SetupData):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JLj1/i$b;)Z"}
    1:1:void reset(boolean):0:0 -> l
    1:1:void appendNumberOfSamples(androidx.media3.common.util.ParsableByteArray,long):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;J)V"}
    1:1:int decodeBlockSize(byte,androidx.media3.extractor.ogg.VorbisReader$VorbisSetup):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(BLj1/j$a;)I"}
    1:1:int readBits(byte,int,int):0:0 -> p
    1:1:androidx.media3.extractor.ogg.VorbisReader$VorbisSetup readSetupHeaders(androidx.media3.common.util.ParsableByteArray):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Lj1/j$a;"}
    1:1:boolean verifyBitstreamType(androidx.media3.common.util.ParsableByteArray):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
androidx.media3.extractor.ogg.VorbisReader$VorbisSetup -> j1.j$a:
    androidx.media3.extractor.VorbisUtil$VorbisIdHeader idHeader -> a
    androidx.media3.extractor.VorbisUtil$CommentHeader commentHeader -> b
    byte[] setupHeaderData -> c
    androidx.media3.extractor.VorbisUtil$Mode[] modes -> d
    int iLogModes -> e
    1:1:void <init>(androidx.media3.extractor.VorbisUtil$VorbisIdHeader,androidx.media3.extractor.VorbisUtil$CommentHeader,byte[],androidx.media3.extractor.VorbisUtil$Mode[],int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/v0$c;Lo0/v0$a;[B[Lo0/v0$b;I)V"}
androidx.media3.extractor.png.PngExtractor -> k1.a:
    androidx.media3.extractor.SingleSampleExtractor imageExtractor -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.text.CueDecoder -> l1.b:
    void <init>() -> <init>
    1:1:androidx.media3.extractor.text.CuesWithTiming decode(long,byte[],int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J[BII)Ll1/e;"}
androidx.media3.extractor.text.CueDecoder$$ExternalSyntheticLambda0 -> l1.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.text.CueDecoder$$InternalSyntheticLambda$8$4c4cfaff6235f64be150eef9390d0c641150259b3b56d3985093ee3c0fd8bdde$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.extractor.text.CueDecoder$$InternalSyntheticLambda$8$4c4cfaff6235f64be150eef9390d0c641150259b3b56d3985093ee3c0fd8bdde$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.text.CueEncoder -> l1.d:
    void <init>() -> <init>
    1:1:byte[] encode(java.util.List,long):0:0 -> a
androidx.media3.extractor.text.CueEncoder$$ExternalSyntheticLambda0 -> l1.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.text.CueEncoder$$InternalSyntheticLambda$10$3ccc1878d837206ae3fa12055c75fcb3a43011e87eeac7e458c0b6b5d485c2f1$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.extractor.text.CueEncoder$$InternalSyntheticLambda$10$3ccc1878d837206ae3fa12055c75fcb3a43011e87eeac7e458c0b6b5d485c2f1$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.text.CuesWithTiming -> l1.e:
    com.google.common.collect.ImmutableList cues -> a
    long startTimeUs -> b
    long durationUs -> c
    long endTimeUs -> d
    1:1:void <init>(java.util.List,long,long):0:0 -> <init>
androidx.media3.extractor.text.CuesWithTimingSubtitle -> l1.g:
    com.google.common.collect.ImmutableList eventCues -> f
    long[] eventTimesUs -> g
    com.google.common.collect.Ordering CUES_BY_START_TIME_ASCENDING -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:int getNextEventTimeIndex(long):0:0 -> a
    1:1:java.util.List getCues(long):0:0 -> b
    1:1:long getEventTime(int):0:0 -> c
    1:1:int getEventTimeCount():0:0 -> d
    1:1:java.lang.Comparable $r8$lambda$QM_gqZWrKMf5S3lWfDIkHaD0xw0(androidx.media3.extractor.text.CuesWithTiming):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/e;)Ljava/lang/Comparable;"}
    1:1:com.google.common.collect.ImmutableList getCues(long):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Ll2/v;"}
    1:1:java.lang.Comparable lambda$static$0(androidx.media3.extractor.text.CuesWithTiming):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/e;)Ljava/lang/Comparable;"}
    1:1:long normalizeUnsetStartTimeToZero(long):0:0 -> h
androidx.media3.extractor.text.CuesWithTimingSubtitle$$ExternalSyntheticLambda0 -> l1.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.text.CuesWithTimingSubtitle$$InternalSyntheticLambda$9$1ebdcf38441ee19f14b9991028602b54969c7ee130be72e79e3477992dc28508$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.media3.extractor.text.CuesWithTimingSubtitle$$InternalSyntheticLambda$9$1ebdcf38441ee19f14b9991028602b54969c7ee130be72e79e3477992dc28508$0.apply(java.lang.Object):0:0 -> apply
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.text.DefaultSubtitleParserFactory -> l1.h:
    void <init>() -> <init>
    1:1:boolean supportsFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:int getCueReplacementBehavior(androidx.media3.common.Format):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:androidx.media3.extractor.text.SubtitleParser create(androidx.media3.common.Format):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Ll1/t;"}
androidx.media3.extractor.text.LegacySubtitleUtil -> l1.i:
    1:1:int getStartIndex(androidx.media3.extractor.text.Subtitle,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/k;J)I"}
    1:1:void outputSubtitleEvent(androidx.media3.extractor.text.Subtitle,int,androidx.media3.common.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/k;ILm/g;)V"}
    1:1:void toCuesWithTiming(androidx.media3.extractor.text.Subtitle,androidx.media3.extractor.text.SubtitleParser$OutputOptions,androidx.media3.common.util.Consumer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/k;Ll1/t$b;Lm/g;)V"}
androidx.media3.extractor.text.SimpleSubtitleDecoder -> l1.j:
    java.lang.String name -> o
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:androidx.media3.extractor.text.SubtitleDecoderException createUnexpectedDecodeException(java.lang.Throwable):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;)Ll1/m;"}
    androidx.media3.extractor.text.Subtitle decode(byte[],int,boolean) -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIZ)Ll1/k;"}
    1:1:androidx.media3.extractor.text.SubtitleDecoderException decode(androidx.media3.extractor.text.SubtitleInputBuffer,androidx.media3.extractor.text.SubtitleOutputBuffer,boolean):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/p;Ll1/q;Z)Ll1/m;"}
    1:1:void setPositionUs(long):0:0 -> b
    1:1:androidx.media3.decoder.DecoderInputBuffer createInputBuffer():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/i;"}
    1:1:androidx.media3.decoder.DecoderOutputBuffer createOutputBuffer():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp/j;"}
    1:1:androidx.media3.decoder.DecoderException createUnexpectedDecodeException(java.lang.Throwable):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;)Lp/h;"}
    1:1:androidx.media3.decoder.DecoderException decode(androidx.media3.decoder.DecoderInputBuffer,androidx.media3.decoder.DecoderOutputBuffer,boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/i;Lp/j;Z)Lp/h;"}
    1:1:void access$000(androidx.media3.extractor.text.SimpleSubtitleDecoder,androidx.media3.decoder.DecoderOutputBuffer):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/j;Lp/j;)V"}
    1:1:androidx.media3.extractor.text.SubtitleInputBuffer createInputBuffer():0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/p;"}
    1:1:androidx.media3.extractor.text.SubtitleOutputBuffer createOutputBuffer():0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/q;"}
androidx.media3.extractor.text.SimpleSubtitleDecoder$1 -> l1.j$a:
    androidx.media3.extractor.text.SimpleSubtitleDecoder this$0 -> l
    1:1:void <init>(androidx.media3.extractor.text.SimpleSubtitleDecoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/j;)V"}
    1:1:void release():0:0 -> n
androidx.media3.extractor.text.Subtitle -> l1.k:
    int getNextEventTimeIndex(long) -> a
    java.util.List getCues(long) -> b
    long getEventTime(int) -> c
    int getEventTimeCount() -> d
androidx.media3.extractor.text.SubtitleDecoder -> l1.l:
    void setPositionUs(long) -> b
androidx.media3.extractor.text.SubtitleDecoderException -> l1.m:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
androidx.media3.extractor.text.SubtitleExtractor -> l1.o:
    androidx.media3.extractor.text.SubtitleParser subtitleParser -> a
    androidx.media3.extractor.text.CueEncoder cueEncoder -> b
    androidx.media3.common.Format format -> c
    java.util.List samples -> d
    androidx.media3.common.util.ParsableByteArray scratchSampleArray -> e
    byte[] subtitleData -> f
    androidx.media3.extractor.TrackOutput trackOutput -> g
    int bytesRead -> h
    int state -> i
    long[] timestamps -> j
    long seekTimeUs -> k
    1:1:void <init>(androidx.media3.extractor.text.SubtitleParser,androidx.media3.common.Format):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t;Lj/q;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void $r8$lambda$K4c1kN7LiQ0Ke5cC2SgMoEsy4Rw(androidx.media3.extractor.text.SubtitleExtractor,androidx.media3.extractor.text.CuesWithTiming):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/o;Ll1/e;)V"}
    1:1:void lambda$parseAndWriteToOutput$0(androidx.media3.extractor.text.CuesWithTiming):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/e;)V"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void parseAndWriteToOutput():0:0 -> g
    1:1:boolean readFromInput(androidx.media3.extractor.ExtractorInput):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:boolean skipInput(androidx.media3.extractor.ExtractorInput):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void writeToOutput():0:0 -> j
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void writeToOutput(androidx.media3.extractor.text.SubtitleExtractor$Sample):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/o$b;)V"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.text.SubtitleExtractor$$ExternalSyntheticLambda0 -> l1.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.extractor.text.SubtitleExtractor androidx.media3.extractor.text.SubtitleExtractor$$InternalSyntheticLambda$10$f58c7218a3c6941457c37262b1a1cf9bf9d5aa1f81751e9429f6fe8c011a8240$0.f$0 -> a
    1:1:void androidx.media3.extractor.text.SubtitleExtractor$$InternalSyntheticLambda$10$f58c7218a3c6941457c37262b1a1cf9bf9d5aa1f81751e9429f6fe8c011a8240$0.<init>(androidx.media3.extractor.text.SubtitleExtractor):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/o;)V"}
    1:1:void androidx.media3.extractor.text.SubtitleExtractor$$InternalSyntheticLambda$10$f58c7218a3c6941457c37262b1a1cf9bf9d5aa1f81751e9429f6fe8c011a8240$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.text.SubtitleExtractor$1 -> l1.o$a:
androidx.media3.extractor.text.SubtitleExtractor$Sample -> l1.o$b:
    long timeUs -> f
    byte[] data -> g
    1:1:void <init>(long,byte[]):0:0 -> <init>
    2:2:void <init>(long,byte[],androidx.media3.extractor.text.SubtitleExtractor$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J[BLl1/o$a;)V"}
    1:1:long access$000(androidx.media3.extractor.text.SubtitleExtractor$Sample):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/o$b;)J"}
    1:1:byte[] access$100(androidx.media3.extractor.text.SubtitleExtractor$Sample):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/o$b;)[B"}
    1:1:int compareTo(androidx.media3.extractor.text.SubtitleExtractor$Sample):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/o$b;)I"}
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
androidx.media3.extractor.text.SubtitleInputBuffer -> l1.p:
    long subsampleOffsetUs -> o
    1:1:void <init>():0:0 -> <init>
androidx.media3.extractor.text.SubtitleOutputBuffer -> l1.q:
    androidx.media3.extractor.text.Subtitle subtitle -> j
    long subsampleOffsetUs -> k
    void <init>() -> <init>
    1:1:int getNextEventTimeIndex(long):0:0 -> a
    1:1:java.util.List getCues(long):0:0 -> b
    1:1:long getEventTime(int):0:0 -> c
    1:1:int getEventTimeCount():0:0 -> d
    1:1:void clear():0:0 -> f
    1:1:void setContent(long,androidx.media3.extractor.text.Subtitle,long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLl1/k;J)V"}
androidx.media3.extractor.text.SubtitleParser -> l1.t:
    void parse(byte[],int,int,androidx.media3.extractor.text.SubtitleParser$OutputOptions,androidx.media3.common.util.Consumer) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILl1/t$b;Lm/g;)V"}
    void reset() -> b
    int getCueReplacementBehavior() -> c
    androidx.media3.extractor.text.Subtitle parseToLegacySubtitle(byte[],int,int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ll1/k;"}
androidx.media3.extractor.text.SubtitleParser$$ExternalSyntheticLambda0 -> l1.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    com.google.common.collect.ImmutableList$Builder androidx.media3.extractor.text.SubtitleParser$$InternalSyntheticLambda$8$688a418610c16b43b2611cd98e23eac1944d74f96e7989894b04af176a332877$0.f$0 -> a
    1:1:void androidx.media3.extractor.text.SubtitleParser$$InternalSyntheticLambda$8$688a418610c16b43b2611cd98e23eac1944d74f96e7989894b04af176a332877$0.<init>(com.google.common.collect.ImmutableList$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/v$a;)V"}
    1:1:void androidx.media3.extractor.text.SubtitleParser$$InternalSyntheticLambda$8$688a418610c16b43b2611cd98e23eac1944d74f96e7989894b04af176a332877$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.text.SubtitleParser$-CC -> l1.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.text.Subtitle androidx.media3.extractor.text.SubtitleParser.parseToLegacySubtitle(byte[],int,int):0:0 -> a
    1:1:androidx.media3.extractor.text.Subtitle $default$parseToLegacySubtitle(androidx.media3.extractor.text.SubtitleParser,byte[],int,int):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t;[BII)Ll1/k;"}
    1:1:void $default$reset(androidx.media3.extractor.text.SubtitleParser):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t;)V"}
androidx.media3.extractor.text.SubtitleParser$Factory -> l1.t$a:
    androidx.media3.extractor.text.SubtitleParser$Factory UNSUPPORTED -> a
    1:1:void <clinit>():0:0 -> <clinit>
    boolean supportsFormat(androidx.media3.common.Format) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    int getCueReplacementBehavior(androidx.media3.common.Format) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    androidx.media3.extractor.text.SubtitleParser create(androidx.media3.common.Format) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Ll1/t;"}
androidx.media3.extractor.text.SubtitleParser$Factory$1 -> l1.t$a$a:
    void <init>() -> <init>
    1:1:boolean supportsFormat(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Z"}
    1:1:int getCueReplacementBehavior(androidx.media3.common.Format):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)I"}
    1:1:androidx.media3.extractor.text.SubtitleParser create(androidx.media3.common.Format):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)Ll1/t;"}
androidx.media3.extractor.text.SubtitleParser$OutputOptions -> l1.t$b:
    long startTimeUs -> a
    boolean outputAllCues -> b
    androidx.media3.extractor.text.SubtitleParser$OutputOptions ALL -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,boolean):0:0 -> <init>
    1:1:androidx.media3.extractor.text.SubtitleParser$OutputOptions access$000():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/t$b;"}
    1:1:androidx.media3.extractor.text.SubtitleParser$OutputOptions allCues():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/t$b;"}
    1:1:androidx.media3.extractor.text.SubtitleParser$OutputOptions cuesAfterThenRemainingCuesBefore(long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Ll1/t$b;"}
androidx.media3.extractor.text.SubtitleTranscodingExtractor -> l1.u:
    androidx.media3.extractor.Extractor delegate -> a
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> b
    androidx.media3.extractor.text.SubtitleTranscodingExtractorOutput transcodingExtractorOutput -> c
    1:1:void <init>(androidx.media3.extractor.Extractor,androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/r;Ll1/t$a;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.text.SubtitleTranscodingExtractorOutput -> l1.v:
    androidx.media3.extractor.ExtractorOutput delegate -> f
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> g
    android.util.SparseArray textTrackOutputs -> h
    1:1:void <init>(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Ll1/t$a;)V"}
    1:1:void resetSubtitleParsers():0:0 -> a
    1:1:androidx.media3.extractor.TrackOutput track(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lo0/s0;"}
    1:1:void endTracks():0:0 -> f
    1:1:void seekMap(androidx.media3.extractor.SeekMap):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/m0;)V"}
androidx.media3.extractor.text.SubtitleTranscodingTrackOutput -> l1.x:
    androidx.media3.extractor.TrackOutput delegate -> a
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> b
    androidx.media3.extractor.text.CueEncoder cueEncoder -> c
    androidx.media3.common.util.ParsableByteArray parsableScratch -> d
    int sampleDataStart -> e
    int sampleDataEnd -> f
    byte[] sampleData -> g
    androidx.media3.extractor.text.SubtitleParser currentSubtitleParser -> h
    androidx.media3.common.Format currentFormat -> i
    1:1:void <init>(androidx.media3.extractor.TrackOutput,androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;Ll1/t$a;)V"}
    1:1:void format(androidx.media3.common.Format):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/q;)V"}
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZI)I"}
    1:1:int sampleData(androidx.media3.common.DataReader,int,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i;IZ)I"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:void sampleMetadata(long,int,int,int,androidx.media3.extractor.TrackOutput$CryptoData):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JIIILo0/s0$a;)V"}
    1:1:void sampleData(androidx.media3.common.util.ParsableByteArray,int,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)V"}
    1:1:void $r8$lambda$jEUOQjhF1HUmKJJ7B4lToCmQtU4(androidx.media3.extractor.text.SubtitleTranscodingTrackOutput,long,int,androidx.media3.extractor.text.CuesWithTiming):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/x;JILl1/e;)V"}
    1:1:void ensureSampleDataCapacity(int):0:0 -> h
    1:1:void lambda$sampleMetadata$0(long,int,androidx.media3.extractor.text.CuesWithTiming):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JILl1/e;)V"}
    1:1:void outputSample(androidx.media3.extractor.text.CuesWithTiming,long,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/e;JI)V"}
    1:1:void resetSubtitleParser():0:0 -> k
androidx.media3.extractor.text.SubtitleTranscodingTrackOutput$$ExternalSyntheticLambda0 -> l1.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.extractor.text.SubtitleTranscodingTrackOutput androidx.media3.extractor.text.SubtitleTranscodingTrackOutput$$InternalSyntheticLambda$9$8d01d8d84ad682cde9647dcbfd956e0bd01b6e66d8e115827573fe70263b1158$0.f$0 -> a
    long androidx.media3.extractor.text.SubtitleTranscodingTrackOutput$$InternalSyntheticLambda$9$8d01d8d84ad682cde9647dcbfd956e0bd01b6e66d8e115827573fe70263b1158$0.f$1 -> b
    int androidx.media3.extractor.text.SubtitleTranscodingTrackOutput$$InternalSyntheticLambda$9$8d01d8d84ad682cde9647dcbfd956e0bd01b6e66d8e115827573fe70263b1158$0.f$2 -> c
    1:1:void androidx.media3.extractor.text.SubtitleTranscodingTrackOutput$$InternalSyntheticLambda$9$8d01d8d84ad682cde9647dcbfd956e0bd01b6e66d8e115827573fe70263b1158$0.<init>(androidx.media3.extractor.text.SubtitleTranscodingTrackOutput,long,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/x;JI)V"}
    1:1:void androidx.media3.extractor.text.SubtitleTranscodingTrackOutput$$InternalSyntheticLambda$9$8d01d8d84ad682cde9647dcbfd956e0bd01b6e66d8e115827573fe70263b1158$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.text.cea.Cea608Decoder -> m1.a:
    int[] COLUMN_INDICES -> A
    int[] STYLE_COLORS -> B
    int[] BASIC_CHARACTER_SET -> C
    int[] SPECIAL_CHARACTER_SET -> D
    int[] SPECIAL_ES_FR_CHARACTER_SET -> E
    int[] SPECIAL_PT_DE_CHARACTER_SET -> F
    boolean[] ODD_PARITY_BYTE_TABLE -> G
    androidx.media3.common.util.ParsableByteArray ccData -> h
    int packetLength -> i
    int selectedField -> j
    int selectedChannel -> k
    long validDataChannelTimeoutUs -> l
    java.util.ArrayList cueBuilders -> m
    androidx.media3.extractor.text.cea.Cea608Decoder$CueBuilder currentCueBuilder -> n
    java.util.List cues -> o
    java.util.List lastCues -> p
    int captionMode -> q
    int captionRowCount -> r
    boolean isCaptionValid -> s
    boolean repeatableControlSet -> t
    byte repeatableControlCc1 -> u
    byte repeatableControlCc2 -> v
    int currentChannel -> w
    boolean isInCaptionService -> x
    long lastCueUpdateUs -> y
    int[] ROW_INDICES -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,long):0:0 -> <init>
    1:1:void handlePreambleAddressCode(byte,byte):0:0 -> A
    1:1:boolean isCtrlCode(byte):0:0 -> B
    1:1:boolean isExtendedWestEuropeanChar(byte,byte):0:0 -> C
    1:1:boolean isMidrowCtrlCode(byte,byte):0:0 -> D
    1:1:boolean isMiscCode(byte,byte):0:0 -> E
    1:1:boolean isPreambleAddressCode(byte,byte):0:0 -> F
    1:1:boolean isRepeatable(byte):0:0 -> G
    1:1:boolean isRepeatedCommand(boolean,byte,byte):0:0 -> H
    1:1:boolean isServiceSwitchCommand(byte):0:0 -> I
    1:1:boolean isSpecialNorthAmericanChar(byte,byte):0:0 -> J
    1:1:boolean isTabCtrlCode(byte,byte):0:0 -> K
    1:1:boolean isXdsControlCode(byte):0:0 -> L
    1:1:void maybeUpdateIsInCaptionService(byte,byte):0:0 -> M
    1:1:void resetCueBuilders():0:0 -> N
    1:1:void setCaptionMode(int):0:0 -> O
    1:1:void setCaptionRowCount(int):0:0 -> P
    1:1:boolean shouldClearStuckCaptions():0:0 -> Q
    1:1:boolean updateAndVerifyCurrentChannel(byte):0:0 -> R
    1:1:java.lang.Object dequeueOutputBuffer():0:0 -> a
    1:1:void setPositionUs(long):0:0 -> b
    1:1:void flush():0:0 -> flush
    1:1:androidx.media3.extractor.text.Subtitle createSubtitle():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/k;"}
    1:1:void decode(androidx.media3.extractor.text.SubtitleInputBuffer):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/p;)V"}
    1:1:androidx.media3.extractor.text.SubtitleInputBuffer dequeueInputBuffer():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/p;"}
    1:1:androidx.media3.extractor.text.SubtitleOutputBuffer dequeueOutputBuffer():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/q;"}
    1:1:boolean isNewSubtitleDataAvailable():0:0 -> m
    1:1:void queueInputBuffer(androidx.media3.extractor.text.SubtitleInputBuffer):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/p;)V"}
    1:1:int[] access$300():0:0 -> q
    1:1:char getBasicChar(byte):0:0 -> r
    1:1:void release():0:0 -> release
    1:1:int getChannel(byte):0:0 -> s
    1:1:java.util.List getDisplayCues():0:0 -> t
    1:1:char getExtendedEsFrChar(byte):0:0 -> u
    1:1:char getExtendedPtDeChar(byte):0:0 -> v
    1:1:char getExtendedWestEuropeanChar(byte,byte):0:0 -> w
    1:1:char getSpecialNorthAmericanChar(byte):0:0 -> x
    1:1:void handleMidrowCtrl(byte):0:0 -> y
    1:1:void handleMiscCode(byte):0:0 -> z
androidx.media3.extractor.text.cea.Cea608Decoder$CueBuilder -> m1.a$a:
    java.util.List cueStyles -> a
    java.util.List rolledUpCaptions -> b
    java.lang.StringBuilder captionStringBuilder -> c
    int row -> d
    int indent -> e
    int tabOffset -> f
    int captionMode -> g
    int captionRowCount -> h
    1:1:void <init>(int,int):0:0 -> <init>
    1:1:int access$002(androidx.media3.extractor.text.cea.Cea608Decoder$CueBuilder,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm1/a$a;I)I"}
    1:1:int access$100(androidx.media3.extractor.text.cea.Cea608Decoder$CueBuilder):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm1/a$a;)I"}
    1:1:int access$102(androidx.media3.extractor.text.cea.Cea608Decoder$CueBuilder,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm1/a$a;I)I"}
    1:1:int access$202(androidx.media3.extractor.text.cea.Cea608Decoder$CueBuilder,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm1/a$a;I)I"}
    1:1:void append(char):0:0 -> e
    1:1:void backspace():0:0 -> f
    1:1:androidx.media3.common.text.Cue build(int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll/a;"}
    1:1:android.text.SpannableString buildCurrentLine():0:0 -> h
    1:1:boolean isEmpty():0:0 -> i
    1:1:void reset(int):0:0 -> j
    1:1:void rollUp():0:0 -> k
    1:1:void setCaptionMode(int):0:0 -> l
    1:1:void setCaptionRowCount(int):0:0 -> m
    1:1:void setColorSpan(android.text.SpannableStringBuilder,int,int,int):0:0 -> n
    1:1:void setItalicSpan(android.text.SpannableStringBuilder,int,int):0:0 -> o
    1:1:void setStyle(int,boolean):0:0 -> p
    1:1:void setUnderlineSpan(android.text.SpannableStringBuilder,int,int):0:0 -> q
androidx.media3.extractor.text.cea.Cea608Decoder$CueBuilder$CueStyle -> m1.a$a$a:
    int style -> a
    boolean underline -> b
    int start -> c
    1:1:void <init>(int,boolean,int):0:0 -> <init>
androidx.media3.extractor.text.cea.Cea708Decoder -> m1.c:
    androidx.media3.common.util.ParsableByteArray ccData -> h
    androidx.media3.common.util.ParsableBitArray captionChannelPacketData -> i
    int previousSequenceNumber -> j
    boolean isWideAspectRatio -> k
    int selectedServiceNumber -> l
    androidx.media3.extractor.text.cea.Cea708Decoder$CueInfoBuilder[] cueInfoBuilders -> m
    androidx.media3.extractor.text.cea.Cea708Decoder$CueInfoBuilder currentCueInfoBuilder -> n
    java.util.List cues -> o
    java.util.List lastCues -> p
    androidx.media3.extractor.text.cea.Cea708Decoder$DtvCcPacket currentDtvCcPacket -> q
    int currentWindow -> r
    1:1:void <init>(int,java.util.List):0:0 -> <init>
    1:1:void handleG3Character(int):0:0 -> A
    1:1:void handleSetPenAttributes():0:0 -> B
    1:1:void handleSetPenColor():0:0 -> C
    1:1:void handleSetPenLocation():0:0 -> D
    1:1:void handleSetWindowAttributes():0:0 -> E
    1:1:void processCurrentPacket():0:0 -> F
    1:1:void resetCueBuilders():0:0 -> G
    1:1:void setPositionUs(long):0:0 -> b
    1:1:void flush():0:0 -> flush
    1:1:androidx.media3.extractor.text.Subtitle createSubtitle():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/k;"}
    1:1:void decode(androidx.media3.extractor.text.SubtitleInputBuffer):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/p;)V"}
    1:1:androidx.media3.extractor.text.SubtitleInputBuffer dequeueInputBuffer():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/p;"}
    1:1:androidx.media3.extractor.text.SubtitleOutputBuffer dequeueOutputBuffer():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/q;"}
    1:1:boolean isNewSubtitleDataAvailable():0:0 -> m
    1:1:void queueInputBuffer(androidx.media3.extractor.text.SubtitleInputBuffer):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/p;)V"}
    1:1:void finalizeCurrentPacket():0:0 -> q
    1:1:java.util.List getDisplayCues():0:0 -> r
    1:1:void release():0:0 -> release
    1:1:void handleC0Command(int):0:0 -> s
    1:1:void handleC1Command(int):0:0 -> t
    1:1:void handleC2Command(int):0:0 -> u
    1:1:void handleC3Command(int):0:0 -> v
    1:1:void handleDefineWindow(int):0:0 -> w
    1:1:void handleG0Character(int):0:0 -> x
    1:1:void handleG1Character(int):0:0 -> y
    1:1:void handleG2Character(int):0:0 -> z
androidx.media3.extractor.text.cea.Cea708Decoder$Cea708CueInfo -> m1.c$a:
    androidx.media3.common.text.Cue cue -> a
    int priority -> b
    java.util.Comparator LEAST_IMPORTANT_FIRST -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.CharSequence,android.text.Layout$Alignment,float,int,int,float,int,float,boolean,int,int):0:0 -> <init>
    1:1:int $r8$lambda$-lzfHuPrdDOL7HEMQt-ccNkJhP8(androidx.media3.extractor.text.cea.Cea708Decoder$Cea708CueInfo,androidx.media3.extractor.text.cea.Cea708Decoder$Cea708CueInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm1/c$a;Lm1/c$a;)I"}
    1:1:java.util.Comparator access$000():0:0 -> b
    1:1:int lambda$static$0(androidx.media3.extractor.text.cea.Cea708Decoder$Cea708CueInfo,androidx.media3.extractor.text.cea.Cea708Decoder$Cea708CueInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm1/c$a;Lm1/c$a;)I"}
androidx.media3.extractor.text.cea.Cea708Decoder$Cea708CueInfo$$ExternalSyntheticLambda0 -> m1.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.text.cea.Cea708Decoder$Cea708CueInfo$$InternalSyntheticLambda$8$e6a72bbec914e7413800168cba11514b0be385dcc251b497213ba6e7452719bd$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.extractor.text.cea.Cea708Decoder$Cea708CueInfo$$InternalSyntheticLambda$8$e6a72bbec914e7413800168cba11514b0be385dcc251b497213ba6e7452719bd$0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.text.cea.Cea708Decoder$CueInfoBuilder -> m1.c$b:
    int[] WINDOW_STYLE_SCROLL_DIRECTION -> A
    boolean[] WINDOW_STYLE_WORD_WRAP -> B
    int[] WINDOW_STYLE_FILL -> C
    int[] PEN_STYLE_FONT_STYLE -> D
    int[] PEN_STYLE_EDGE_TYPE -> E
    int[] PEN_STYLE_BACKGROUND -> F
    java.util.List rolledUpCaptions -> a
    android.text.SpannableStringBuilder captionStringBuilder -> b
    boolean defined -> c
    boolean visible -> d
    int priority -> e
    boolean relativePositioning -> f
    int verticalAnchor -> g
    int horizontalAnchor -> h
    int anchorId -> i
    int rowCount -> j
    int justification -> k
    int windowStyleId -> l
    int penStyleId -> m
    int windowFillColor -> n
    int italicsStartPosition -> o
    int underlineStartPosition -> p
    int foregroundColorStartPosition -> q
    int foregroundColor -> r
    int backgroundColorStartPosition -> s
    int backgroundColor -> t
    int row -> u
    int COLOR_SOLID_WHITE -> v
    int COLOR_SOLID_BLACK -> w
    int COLOR_TRANSPARENT -> x
    int[] WINDOW_STYLE_JUSTIFICATION -> y
    int[] WINDOW_STYLE_PRINT_DIRECTION -> z
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void append(char):0:0 -> a
    1:1:void backspace():0:0 -> b
    1:1:androidx.media3.extractor.text.cea.Cea708Decoder$Cea708CueInfo build():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm1/c$a;"}
    1:1:android.text.SpannableString buildSpannableString():0:0 -> d
    1:1:void clear():0:0 -> e
    1:1:void defineWindow(boolean,int,boolean,int,int,int,int,int,int):0:0 -> f
    1:1:int getArgbColorFromCeaColor(int,int,int):0:0 -> g
    1:1:int getArgbColorFromCeaColor(int,int,int,int):0:0 -> h
    1:1:boolean isDefined():0:0 -> i
    1:1:boolean isEmpty():0:0 -> j
    1:1:boolean isVisible():0:0 -> k
    1:1:void reset():0:0 -> l
    1:1:void setPenAttributes(int,int,int,boolean,boolean,int,int):0:0 -> m
    1:1:void setPenColor(int,int,int):0:0 -> n
    1:1:void setPenLocation(int,int):0:0 -> o
    1:1:void setVisibility(boolean):0:0 -> p
    1:1:void setWindowAttributes(int,int,boolean,int,int,int,int):0:0 -> q
androidx.media3.extractor.text.cea.Cea708Decoder$DtvCcPacket -> m1.c$c:
    int sequenceNumber -> a
    int packetSize -> b
    byte[] packetData -> c
    int currentIndex -> d
    1:1:void <init>(int,int):0:0 -> <init>
androidx.media3.extractor.text.cea.CeaDecoder -> m1.e:
    java.util.ArrayDeque availableInputBuffers -> a
    java.util.ArrayDeque availableOutputBuffers -> b
    java.util.PriorityQueue queuedInputBuffers -> c
    androidx.media3.extractor.text.cea.CeaDecoder$CeaInputBuffer dequeuedInputBuffer -> d
    long playbackPositionUs -> e
    long queuedInputBufferCount -> f
    long outputStartTimeUs -> g
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object dequeueOutputBuffer():0:0 -> a
    1:1:void setPositionUs(long):0:0 -> b
    1:1:void queueInputBuffer(java.lang.Object):0:0 -> c
    1:1:java.lang.Object dequeueInputBuffer():0:0 -> e
    1:1:void setOutputStartTimeUs(long):0:0 -> f
    1:1:void flush():0:0 -> flush
    androidx.media3.extractor.text.Subtitle createSubtitle() -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/k;"}
    void decode(androidx.media3.extractor.text.SubtitleInputBuffer) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/p;)V"}
    1:1:androidx.media3.extractor.text.SubtitleInputBuffer dequeueInputBuffer():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/p;"}
    1:1:androidx.media3.extractor.text.SubtitleOutputBuffer dequeueOutputBuffer():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/q;"}
    1:1:androidx.media3.extractor.text.SubtitleOutputBuffer getAvailableOutputBuffer():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll1/q;"}
    1:1:long getPositionUs():0:0 -> l
    boolean isNewSubtitleDataAvailable() -> m
    1:1:void queueInputBuffer(androidx.media3.extractor.text.SubtitleInputBuffer):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/p;)V"}
    1:1:void releaseInputBuffer(androidx.media3.extractor.text.cea.CeaDecoder$CeaInputBuffer):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm1/e$b;)V"}
    1:1:void releaseOutputBuffer(androidx.media3.extractor.text.SubtitleOutputBuffer):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/q;)V"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.text.cea.CeaDecoder$$ExternalSyntheticLambda0 -> m1.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.media3.extractor.text.cea.CeaDecoder androidx.media3.extractor.text.cea.CeaDecoder$$InternalSyntheticLambda$8$9c244a9c8a16e8bdf5bfc6e6118052e80a2b32e38499a6ef9bdb58db0eec5c2f$0.f$0 -> a
    1:1:void androidx.media3.extractor.text.cea.CeaDecoder$$InternalSyntheticLambda$8$9c244a9c8a16e8bdf5bfc6e6118052e80a2b32e38499a6ef9bdb58db0eec5c2f$0.<init>(androidx.media3.extractor.text.cea.CeaDecoder):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm1/e;)V"}
    1:1:void androidx.media3.extractor.text.cea.CeaDecoder$$InternalSyntheticLambda$8$9c244a9c8a16e8bdf5bfc6e6118052e80a2b32e38499a6ef9bdb58db0eec5c2f$0.releaseOutputBuffer(androidx.media3.decoder.DecoderOutputBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/j;)V"}
androidx.media3.extractor.text.cea.CeaDecoder$1 -> m1.e$a:
androidx.media3.extractor.text.cea.CeaDecoder$CeaInputBuffer -> m1.e$b:
    long queuedInputBufferCount -> p
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.extractor.text.cea.CeaDecoder$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm1/e$a;)V"}
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
    1:1:long access$102(androidx.media3.extractor.text.cea.CeaDecoder$CeaInputBuffer,long):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm1/e$b;J)J"}
    1:1:int compareTo(androidx.media3.extractor.text.cea.CeaDecoder$CeaInputBuffer):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm1/e$b;)I"}
androidx.media3.extractor.text.cea.CeaDecoder$CeaOutputBuffer -> m1.e$c:
    androidx.media3.decoder.DecoderOutputBuffer$Owner owner -> l
    1:1:void <init>(androidx.media3.decoder.DecoderOutputBuffer$Owner):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp/j$a;)V"}
    1:1:void release():0:0 -> n
androidx.media3.extractor.text.cea.CeaSubtitle -> m1.f:
    java.util.List cues -> f
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:int getNextEventTimeIndex(long):0:0 -> a
    1:1:java.util.List getCues(long):0:0 -> b
    1:1:long getEventTime(int):0:0 -> c
    1:1:int getEventTimeCount():0:0 -> d
androidx.media3.extractor.text.dvb.DvbParser -> n1.a:
    android.graphics.Paint defaultPaint -> a
    android.graphics.Paint fillRegionPaint -> b
    android.graphics.Canvas canvas -> c
    androidx.media3.extractor.text.dvb.DvbParser$DisplayDefinition defaultDisplayDefinition -> d
    androidx.media3.extractor.text.dvb.DvbParser$ClutDefinition defaultClutDefinition -> e
    androidx.media3.extractor.text.dvb.DvbParser$SubtitleService subtitleService -> f
    android.graphics.Bitmap bitmap -> g
    byte[] defaultMap2To4 -> h
    byte[] defaultMap2To8 -> i
    byte[] defaultMap4To8 -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:void parse(byte[],int,int,androidx.media3.extractor.text.SubtitleParser$OutputOptions,androidx.media3.common.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILl1/t$b;Lm/g;)V"}
    1:1:void reset():0:0 -> b
    1:1:int getCueReplacementBehavior():0:0 -> c
    1:1:androidx.media3.extractor.text.Subtitle parseToLegacySubtitle(byte[],int,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ll1/k;"}
    1:1:byte[] buildClutMapTable(int,int,androidx.media3.common.util.ParsableBitArray):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILm/y;)[B"}
    1:1:int[] generateDefault2BitClutEntries():0:0 -> f
    1:1:int[] generateDefault4BitClutEntries():0:0 -> g
    1:1:int[] generateDefault8BitClutEntries():0:0 -> h
    1:1:int getColor(int,int,int,int):0:0 -> i
    1:1:int paint2BitPixelCodeString(androidx.media3.common.util.ParsableBitArray,int[],byte[],int,int,android.graphics.Paint,android.graphics.Canvas):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;[I[BIILandroid/graphics/Paint;Landroid/graphics/Canvas;)I"}
    1:1:int paint4BitPixelCodeString(androidx.media3.common.util.ParsableBitArray,int[],byte[],int,int,android.graphics.Paint,android.graphics.Canvas):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;[I[BIILandroid/graphics/Paint;Landroid/graphics/Canvas;)I"}
    1:1:int paint8BitPixelCodeString(androidx.media3.common.util.ParsableBitArray,int[],byte[],int,int,android.graphics.Paint,android.graphics.Canvas):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;[I[BIILandroid/graphics/Paint;Landroid/graphics/Canvas;)I"}
    1:1:void paintPixelDataSubBlock(byte[],int[],int,int,int,android.graphics.Paint,android.graphics.Canvas):0:0 -> m
    1:1:void paintPixelDataSubBlocks(androidx.media3.extractor.text.dvb.DvbParser$ObjectData,androidx.media3.extractor.text.dvb.DvbParser$ClutDefinition,int,int,int,android.graphics.Paint,android.graphics.Canvas):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/a$c;Ln1/a$a;IIILandroid/graphics/Paint;Landroid/graphics/Canvas;)V"}
    1:1:androidx.media3.extractor.text.CuesWithTiming parse(androidx.media3.common.util.ParsableBitArray):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)Ll1/e;"}
    1:1:androidx.media3.extractor.text.dvb.DvbParser$ClutDefinition parseClutDefinition(androidx.media3.common.util.ParsableBitArray,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;I)Ln1/a$a;"}
    1:1:androidx.media3.extractor.text.dvb.DvbParser$DisplayDefinition parseDisplayDefinition(androidx.media3.common.util.ParsableBitArray):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)Ln1/a$b;"}
    1:1:androidx.media3.extractor.text.dvb.DvbParser$ObjectData parseObjectData(androidx.media3.common.util.ParsableBitArray):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)Ln1/a$c;"}
    1:1:androidx.media3.extractor.text.dvb.DvbParser$PageComposition parsePageComposition(androidx.media3.common.util.ParsableBitArray,int):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;I)Ln1/a$d;"}
    1:1:androidx.media3.extractor.text.dvb.DvbParser$RegionComposition parseRegionComposition(androidx.media3.common.util.ParsableBitArray,int):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;I)Ln1/a$f;"}
    1:1:void parseSubtitlingSegment(androidx.media3.common.util.ParsableBitArray,androidx.media3.extractor.text.dvb.DvbParser$SubtitleService):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;Ln1/a$h;)V"}
androidx.media3.extractor.text.dvb.DvbParser$ClutDefinition -> n1.a$a:
    int id -> a
    int[] clutEntries2Bit -> b
    int[] clutEntries4Bit -> c
    int[] clutEntries8Bit -> d
    1:1:void <init>(int,int[],int[],int[]):0:0 -> <init>
androidx.media3.extractor.text.dvb.DvbParser$DisplayDefinition -> n1.a$b:
    int width -> a
    int height -> b
    int horizontalPositionMinimum -> c
    int horizontalPositionMaximum -> d
    int verticalPositionMinimum -> e
    int verticalPositionMaximum -> f
    1:1:void <init>(int,int,int,int,int,int):0:0 -> <init>
androidx.media3.extractor.text.dvb.DvbParser$ObjectData -> n1.a$c:
    int id -> a
    boolean nonModifyingColorFlag -> b
    byte[] topFieldData -> c
    byte[] bottomFieldData -> d
    1:1:void <init>(int,boolean,byte[],byte[]):0:0 -> <init>
androidx.media3.extractor.text.dvb.DvbParser$PageComposition -> n1.a$d:
    int timeOutSecs -> a
    int version -> b
    int state -> c
    android.util.SparseArray regions -> d
    1:1:void <init>(int,int,int,android.util.SparseArray):0:0 -> <init>
androidx.media3.extractor.text.dvb.DvbParser$PageRegion -> n1.a$e:
    int horizontalAddress -> a
    int verticalAddress -> b
    1:1:void <init>(int,int):0:0 -> <init>
androidx.media3.extractor.text.dvb.DvbParser$RegionComposition -> n1.a$f:
    int id -> a
    boolean fillFlag -> b
    int width -> c
    int height -> d
    int levelOfCompatibility -> e
    int depth -> f
    int clutId -> g
    int pixelCode8Bit -> h
    int pixelCode4Bit -> i
    int pixelCode2Bit -> j
    android.util.SparseArray regionObjects -> k
    1:1:void <init>(int,boolean,int,int,int,int,int,int,int,int,android.util.SparseArray):0:0 -> <init>
    1:1:void mergeFrom(androidx.media3.extractor.text.dvb.DvbParser$RegionComposition):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln1/a$f;)V"}
androidx.media3.extractor.text.dvb.DvbParser$RegionObject -> n1.a$g:
    int type -> a
    int provider -> b
    int horizontalPosition -> c
    int verticalPosition -> d
    int foregroundPixelCode -> e
    int backgroundPixelCode -> f
    1:1:void <init>(int,int,int,int,int,int):0:0 -> <init>
androidx.media3.extractor.text.dvb.DvbParser$SubtitleService -> n1.a$h:
    int subtitlePageId -> a
    int ancillaryPageId -> b
    android.util.SparseArray regions -> c
    android.util.SparseArray cluts -> d
    android.util.SparseArray objects -> e
    android.util.SparseArray ancillaryCluts -> f
    android.util.SparseArray ancillaryObjects -> g
    androidx.media3.extractor.text.dvb.DvbParser$DisplayDefinition displayDefinition -> h
    androidx.media3.extractor.text.dvb.DvbParser$PageComposition pageComposition -> i
    1:1:void <init>(int,int):0:0 -> <init>
    1:1:void reset():0:0 -> a
androidx.media3.extractor.text.pgs.PgsParser -> o1.a:
    androidx.media3.common.util.ParsableByteArray buffer -> a
    androidx.media3.common.util.ParsableByteArray inflatedBuffer -> b
    androidx.media3.extractor.text.pgs.PgsParser$CueBuilder cueBuilder -> c
    java.util.zip.Inflater inflater -> d
    1:1:void <init>():0:0 -> <init>
    1:1:void parse(byte[],int,int,androidx.media3.extractor.text.SubtitleParser$OutputOptions,androidx.media3.common.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILl1/t$b;Lm/g;)V"}
    1:1:void reset():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getCueReplacementBehavior():0:0 -> c
    1:1:androidx.media3.extractor.text.Subtitle parseToLegacySubtitle(byte[],int,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ll1/k;"}
    1:1:void maybeInflateData(androidx.media3.common.util.ParsableByteArray):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:androidx.media3.common.text.Cue readNextSection(androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.text.pgs.PgsParser$CueBuilder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Lo1/a$a;)Ll/a;"}
androidx.media3.extractor.text.pgs.PgsParser$CueBuilder -> o1.a$a:
    androidx.media3.common.util.ParsableByteArray bitmapData -> a
    int[] colors -> b
    boolean colorsSet -> c
    int planeWidth -> d
    int planeHeight -> e
    int bitmapX -> f
    int bitmapY -> g
    int bitmapWidth -> h
    int bitmapHeight -> i
    1:1:void <init>():0:0 -> <init>
    1:1:void access$000(androidx.media3.extractor.text.pgs.PgsParser$CueBuilder,androidx.media3.common.util.ParsableByteArray,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/a$a;Lm/z;I)V"}
    1:1:void access$100(androidx.media3.extractor.text.pgs.PgsParser$CueBuilder,androidx.media3.common.util.ParsableByteArray,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/a$a;Lm/z;I)V"}
    1:1:void access$200(androidx.media3.extractor.text.pgs.PgsParser$CueBuilder,androidx.media3.common.util.ParsableByteArray,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo1/a$a;Lm/z;I)V"}
    1:1:androidx.media3.common.text.Cue build():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/a;"}
    1:1:void parseBitmapSection(androidx.media3.common.util.ParsableByteArray,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:void parseIdentifierSection(androidx.media3.common.util.ParsableByteArray,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:void parsePaletteSection(androidx.media3.common.util.ParsableByteArray,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:void reset():0:0 -> h
androidx.media3.extractor.text.ssa.SsaDialogueFormat -> p1.a:
    int startTimeIndex -> a
    int endTimeIndex -> b
    int styleIndex -> c
    int textIndex -> d
    int length -> e
    1:1:void <init>(int,int,int,int,int):0:0 -> <init>
    1:1:androidx.media3.extractor.text.ssa.SsaDialogueFormat fromFormatLine(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lp1/a;"}
androidx.media3.extractor.text.ssa.SsaParser -> p1.b:
    boolean haveInitializationData -> a
    androidx.media3.extractor.text.ssa.SsaDialogueFormat dialogueFormatFromInitializationData -> b
    androidx.media3.common.util.ParsableByteArray parsableByteArray -> c
    java.util.Map styles -> d
    float screenWidth -> e
    float screenHeight -> f
    java.util.regex.Pattern SSA_TIMECODE_PATTERN -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:void parse(byte[],int,int,androidx.media3.extractor.text.SubtitleParser$OutputOptions,androidx.media3.common.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILl1/t$b;Lm/g;)V"}
    1:1:void reset():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getCueReplacementBehavior():0:0 -> c
    1:1:androidx.media3.extractor.text.Subtitle parseToLegacySubtitle(byte[],int,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ll1/k;"}
    1:1:int addCuePlacerholderByTime(long,java.util.List,java.util.List):0:0 -> e
    1:1:float computeDefaultLineOrPosition(int):0:0 -> f
    1:1:androidx.media3.common.text.Cue createCue(java.lang.String,androidx.media3.extractor.text.ssa.SsaStyle,androidx.media3.extractor.text.ssa.SsaStyle$Overrides,float,float):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lp1/c;Lp1/c$b;FF)Ll/a;"}
    1:1:java.nio.charset.Charset detectUtfCharset(androidx.media3.common.util.ParsableByteArray):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/nio/charset/Charset;"}
    1:1:void parseDialogueLine(java.lang.String,androidx.media3.extractor.text.ssa.SsaDialogueFormat,java.util.List,java.util.List):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lp1/a;Ljava/util/List;Ljava/util/List;)V"}
    1:1:void parseEventBody(androidx.media3.common.util.ParsableByteArray,java.util.List,java.util.List,java.nio.charset.Charset):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/util/List;Ljava/util/List;Ljava/nio/charset/Charset;)V"}
    1:1:void parseHeader(androidx.media3.common.util.ParsableByteArray,java.nio.charset.Charset):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/nio/charset/Charset;)V"}
    1:1:void parseScriptInfo(androidx.media3.common.util.ParsableByteArray,java.nio.charset.Charset):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/nio/charset/Charset;)V"}
    1:1:java.util.Map parseStyles(androidx.media3.common.util.ParsableByteArray,java.nio.charset.Charset):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/nio/charset/Charset;)Ljava/util/Map;"}
    1:1:long parseTimecodeUs(java.lang.String):0:0 -> n
    1:1:int toLineAnchor(int):0:0 -> o
    1:1:int toPositionAnchor(int):0:0 -> p
    1:1:android.text.Layout$Alignment toTextAlignment(int):0:0 -> q
androidx.media3.extractor.text.ssa.SsaStyle -> p1.c:
    java.lang.String name -> a
    int alignment -> b
    java.lang.Integer primaryColor -> c
    java.lang.Integer outlineColor -> d
    float fontSize -> e
    boolean bold -> f
    boolean italic -> g
    boolean underline -> h
    boolean strikeout -> i
    int borderStyle -> j
    1:1:void <init>(java.lang.String,int,java.lang.Integer,java.lang.Integer,float,boolean,boolean,boolean,boolean,int):0:0 -> <init>
    1:1:int access$000(java.lang.String):0:0 -> a
    1:1:androidx.media3.extractor.text.ssa.SsaStyle fromStyleLine(java.lang.String,androidx.media3.extractor.text.ssa.SsaStyle$Format):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lp1/c$a;)Lp1/c;"}
    1:1:boolean isValidAlignment(int):0:0 -> c
    1:1:boolean isValidBorderStyle(int):0:0 -> d
    1:1:int parseAlignment(java.lang.String):0:0 -> e
    1:1:boolean parseBooleanValue(java.lang.String):0:0 -> f
    1:1:int parseBorderStyle(java.lang.String):0:0 -> g
    1:1:java.lang.Integer parseColor(java.lang.String):0:0 -> h
    1:1:float parseFontSize(java.lang.String):0:0 -> i
androidx.media3.extractor.text.ssa.SsaStyle$Format -> p1.c$a:
    int nameIndex -> a
    int alignmentIndex -> b
    int primaryColorIndex -> c
    int outlineColorIndex -> d
    int fontSizeIndex -> e
    int boldIndex -> f
    int italicIndex -> g
    int underlineIndex -> h
    int strikeoutIndex -> i
    int borderStyleIndex -> j
    int length -> k
    1:1:void <init>(int,int,int,int,int,int,int,int,int,int,int):0:0 -> <init>
    1:1:androidx.media3.extractor.text.ssa.SsaStyle$Format fromFormatLine(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lp1/c$a;"}
androidx.media3.extractor.text.ssa.SsaStyle$Overrides -> p1.c$b:
    int alignment -> a
    android.graphics.PointF position -> b
    java.util.regex.Pattern BRACES_PATTERN -> c
    java.util.regex.Pattern POSITION_PATTERN -> d
    java.util.regex.Pattern MOVE_PATTERN -> e
    java.util.regex.Pattern ALIGNMENT_OVERRIDE_PATTERN -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,android.graphics.PointF):0:0 -> <init>
    1:1:int parseAlignmentOverride(java.lang.String):0:0 -> a
    1:1:androidx.media3.extractor.text.ssa.SsaStyle$Overrides parseFromDialogue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lp1/c$b;"}
    1:1:android.graphics.PointF parsePosition(java.lang.String):0:0 -> c
    1:1:java.lang.String stripStyleOverrides(java.lang.String):0:0 -> d
androidx.media3.extractor.text.subrip.SubripParser -> q1.a:
    java.lang.StringBuilder textBuilder -> a
    java.util.ArrayList tags -> b
    androidx.media3.common.util.ParsableByteArray parsableByteArray -> c
    java.util.regex.Pattern SUBRIP_TIMING_LINE -> d
    java.util.regex.Pattern SUBRIP_TAG_PATTERN -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void parse(byte[],int,int,androidx.media3.extractor.text.SubtitleParser$OutputOptions,androidx.media3.common.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILl1/t$b;Lm/g;)V"}
    1:1:void reset():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getCueReplacementBehavior():0:0 -> c
    1:1:androidx.media3.extractor.text.Subtitle parseToLegacySubtitle(byte[],int,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ll1/k;"}
    1:1:androidx.media3.common.text.Cue buildCue(android.text.Spanned,java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/Spanned;Ljava/lang/String;)Ll/a;"}
    1:1:java.nio.charset.Charset detectUtfCharset(androidx.media3.common.util.ParsableByteArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/nio/charset/Charset;"}
    1:1:float getFractionalPositionForAnchorType(int):0:0 -> g
    1:1:long parseTimecode(java.util.regex.Matcher,int):0:0 -> h
    1:1:java.lang.String processLine(java.lang.String,java.util.ArrayList):0:0 -> i
androidx.media3.extractor.text.ttml.DeleteTextSpan -> r1.a:
    void <init>() -> <init>
androidx.media3.extractor.text.ttml.TextEmphasis -> r1.b:
    int markShape -> a
    int markFill -> b
    int position -> c
    java.util.regex.Pattern WHITESPACE_PATTERN -> d
    com.google.common.collect.ImmutableSet SINGLE_STYLE_VALUES -> e
    com.google.common.collect.ImmutableSet MARK_SHAPE_VALUES -> f
    com.google.common.collect.ImmutableSet MARK_FILL_VALUES -> g
    com.google.common.collect.ImmutableSet POSITION_VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int):0:0 -> <init>
    1:1:androidx.media3.extractor.text.ttml.TextEmphasis parse(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lr1/b;"}
    1:1:androidx.media3.extractor.text.ttml.TextEmphasis parseWords(com.google.common.collect.ImmutableSet):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/z;)Lr1/b;"}
androidx.media3.extractor.text.ttml.TtmlNode -> r1.c:
    java.lang.String tag -> a
    java.lang.String text -> b
    boolean isTextNode -> c
    long startTimeUs -> d
    long endTimeUs -> e
    androidx.media3.extractor.text.ttml.TtmlStyle style -> f
    java.lang.String[] styleIds -> g
    java.lang.String regionId -> h
    java.lang.String imageId -> i
    androidx.media3.extractor.text.ttml.TtmlNode parent -> j
    java.util.HashMap nodeStartsByRegion -> k
    java.util.HashMap nodeEndsByRegion -> l
    java.util.List children -> m
    1:1:void <init>(java.lang.String,java.lang.String,long,long,androidx.media3.extractor.text.ttml.TtmlStyle,java.lang.String[],java.lang.String,java.lang.String,androidx.media3.extractor.text.ttml.TtmlNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;JJLr1/g;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lr1/c;)V"}
    1:1:void addChild(androidx.media3.extractor.text.ttml.TtmlNode):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/c;)V"}
    1:1:void applyStyleToOutput(java.util.Map,androidx.media3.common.text.Cue$Builder,int,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;Ll/a$b;III)V"}
    1:1:androidx.media3.extractor.text.ttml.TtmlNode buildNode(java.lang.String,long,long,androidx.media3.extractor.text.ttml.TtmlStyle,java.lang.String[],java.lang.String,java.lang.String,androidx.media3.extractor.text.ttml.TtmlNode):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;JJLr1/g;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lr1/c;)Lr1/c;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlNode buildTextNode(java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lr1/c;"}
    1:1:void cleanUpText(android.text.SpannableStringBuilder):0:0 -> e
    1:1:androidx.media3.extractor.text.ttml.TtmlNode getChild(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lr1/c;"}
    1:1:int getChildCount():0:0 -> g
    1:1:java.util.List getCues(long,java.util.Map,java.util.Map,java.util.Map):0:0 -> h
    1:1:void getEventTimes(java.util.TreeSet,boolean):0:0 -> i
    1:1:long[] getEventTimesUs():0:0 -> j
    1:1:android.text.SpannableStringBuilder getRegionOutputText(java.lang.String,java.util.Map):0:0 -> k
    1:1:java.lang.String[] getStyleIds():0:0 -> l
    1:1:boolean isActive(long):0:0 -> m
    1:1:void traverseForImage(long,java.lang.String,java.util.List):0:0 -> n
    1:1:void traverseForStyle(long,java.util.Map,java.util.Map,java.lang.String,java.util.Map):0:0 -> o
    1:1:void traverseForText(long,boolean,java.lang.String,java.util.Map):0:0 -> p
androidx.media3.extractor.text.ttml.TtmlParser -> r1.d:
    org.xmlpull.v1.XmlPullParserFactory xmlParserFactory -> a
    java.util.regex.Pattern CLOCK_TIME -> b
    java.util.regex.Pattern OFFSET_TIME -> c
    java.util.regex.Pattern FONT_SIZE -> d
    java.util.regex.Pattern SIGNED_PERCENTAGE -> e
    java.util.regex.Pattern PERCENTAGE_COORDINATES -> f
    java.util.regex.Pattern PIXEL_COORDINATES -> g
    java.util.regex.Pattern CELL_RESOLUTION -> h
    androidx.media3.extractor.text.ttml.TtmlParser$FrameAndTickRate DEFAULT_FRAME_AND_TICK_RATE -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void parse(byte[],int,int,androidx.media3.extractor.text.SubtitleParser$OutputOptions,androidx.media3.common.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILl1/t$b;Lm/g;)V"}
    1:1:void reset():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getCueReplacementBehavior():0:0 -> c
    1:1:androidx.media3.extractor.text.Subtitle parseToLegacySubtitle(byte[],int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ll1/k;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle createIfNull(androidx.media3.extractor.text.ttml.TtmlStyle):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/g;)Lr1/g;"}
    1:1:boolean isSupportedTag(java.lang.String):0:0 -> f
    1:1:android.text.Layout$Alignment parseAlignment(java.lang.String):0:0 -> g
    1:1:int parseCellRows(org.xmlpull.v1.XmlPullParser,int):0:0 -> h
    1:1:void parseFontSize(java.lang.String,androidx.media3.extractor.text.ttml.TtmlStyle):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr1/g;)V"}
    1:1:androidx.media3.extractor.text.ttml.TtmlParser$FrameAndTickRate parseFrameAndTickRates(org.xmlpull.v1.XmlPullParser):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;)Lr1/d$a;"}
    1:1:java.util.Map parseHeader(org.xmlpull.v1.XmlPullParser,java.util.Map,int,androidx.media3.extractor.text.ttml.TtmlParser$TtsExtent,java.util.Map,java.util.Map):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Ljava/util/Map;ILr1/d$b;Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;"}
    1:1:void parseMetadata(org.xmlpull.v1.XmlPullParser,java.util.Map):0:0 -> l
    1:1:androidx.media3.extractor.text.ttml.TtmlNode parseNode(org.xmlpull.v1.XmlPullParser,androidx.media3.extractor.text.ttml.TtmlNode,java.util.Map,androidx.media3.extractor.text.ttml.TtmlParser$FrameAndTickRate):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Lr1/c;Ljava/util/Map;Lr1/d$a;)Lr1/c;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlRegion parseRegionAttributes(org.xmlpull.v1.XmlPullParser,int,androidx.media3.extractor.text.ttml.TtmlParser$TtsExtent):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;ILr1/d$b;)Lr1/e;"}
    1:1:float parseShear(java.lang.String):0:0 -> o
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle parseStyleAttributes(org.xmlpull.v1.XmlPullParser,androidx.media3.extractor.text.ttml.TtmlStyle):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;Lr1/g;)Lr1/g;"}
    1:1:java.lang.String[] parseStyleIds(java.lang.String):0:0 -> q
    1:1:long parseTimeExpression(java.lang.String,androidx.media3.extractor.text.ttml.TtmlParser$FrameAndTickRate):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr1/d$a;)J"}
    1:1:androidx.media3.extractor.text.ttml.TtmlParser$TtsExtent parseTtsExtent(org.xmlpull.v1.XmlPullParser):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/xmlpull/v1/XmlPullParser;)Lr1/d$b;"}
androidx.media3.extractor.text.ttml.TtmlParser$FrameAndTickRate -> r1.d$a:
    float effectiveFrameRate -> a
    int subFrameRate -> b
    int tickRate -> c
    1:1:void <init>(float,int,int):0:0 -> <init>
androidx.media3.extractor.text.ttml.TtmlParser$TtsExtent -> r1.d$b:
    int width -> a
    int height -> b
    1:1:void <init>(int,int):0:0 -> <init>
androidx.media3.extractor.text.ttml.TtmlRegion -> r1.e:
    java.lang.String id -> a
    float position -> b
    float line -> c
    int lineType -> d
    int lineAnchor -> e
    float width -> f
    float height -> g
    int textSizeType -> h
    float textSize -> i
    int verticalType -> j
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,float,float,int,int,float,float,int,float,int):0:0 -> <init>
androidx.media3.extractor.text.ttml.TtmlRenderUtil -> r1.f:
    1:1:void applyStylesToSpan(android.text.Spannable,int,int,androidx.media3.extractor.text.ttml.TtmlStyle,androidx.media3.extractor.text.ttml.TtmlNode,java.util.Map,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/Spannable;IILr1/g;Lr1/c;Ljava/util/Map;I)V"}
    1:1:java.lang.String applyTextElementSpacePolicy(java.lang.String):0:0 -> b
    1:1:void endParagraph(android.text.SpannableStringBuilder):0:0 -> c
    1:1:androidx.media3.extractor.text.ttml.TtmlNode findRubyContainerNode(androidx.media3.extractor.text.ttml.TtmlNode,java.util.Map):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/c;Ljava/util/Map;)Lr1/c;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlNode findRubyTextNode(androidx.media3.extractor.text.ttml.TtmlNode,java.util.Map):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/c;Ljava/util/Map;)Lr1/c;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle resolveStyle(androidx.media3.extractor.text.ttml.TtmlStyle,java.lang.String[],java.util.Map):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/g;[Ljava/lang/String;Ljava/util/Map;)Lr1/g;"}
androidx.media3.extractor.text.ttml.TtmlStyle -> r1.g:
    java.lang.String fontFamily -> a
    int fontColor -> b
    boolean hasFontColor -> c
    int backgroundColor -> d
    boolean hasBackgroundColor -> e
    int linethrough -> f
    int underline -> g
    int bold -> h
    int italic -> i
    int fontSizeUnit -> j
    float fontSize -> k
    java.lang.String id -> l
    int rubyType -> m
    int rubyPosition -> n
    android.text.Layout$Alignment textAlign -> o
    android.text.Layout$Alignment multiRowAlign -> p
    int textCombine -> q
    androidx.media3.extractor.text.ttml.TextEmphasis textEmphasis -> r
    float shearPercentage -> s
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setId(java.lang.String):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setItalic(boolean):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setLinethrough(boolean):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setMultiRowAlign(android.text.Layout$Alignment):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/Layout$Alignment;)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setRubyPosition(int):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setRubyType(int):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setShearPercentage(float):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setTextAlign(android.text.Layout$Alignment):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/Layout$Alignment;)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setTextCombine(boolean):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setTextEmphasis(androidx.media3.extractor.text.ttml.TextEmphasis):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/b;)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setUnderline(boolean):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle chain(androidx.media3.extractor.text.ttml.TtmlStyle):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/g;)Lr1/g;"}
    1:1:int getBackgroundColor():0:0 -> b
    1:1:int getFontColor():0:0 -> c
    1:1:java.lang.String getFontFamily():0:0 -> d
    1:1:float getFontSize():0:0 -> e
    1:1:int getFontSizeUnit():0:0 -> f
    1:1:java.lang.String getId():0:0 -> g
    1:1:android.text.Layout$Alignment getMultiRowAlign():0:0 -> h
    1:1:int getRubyPosition():0:0 -> i
    1:1:int getRubyType():0:0 -> j
    1:1:float getShearPercentage():0:0 -> k
    1:1:int getStyle():0:0 -> l
    1:1:android.text.Layout$Alignment getTextAlign():0:0 -> m
    1:1:boolean getTextCombine():0:0 -> n
    1:1:androidx.media3.extractor.text.ttml.TextEmphasis getTextEmphasis():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr1/b;"}
    1:1:boolean hasBackgroundColor():0:0 -> p
    1:1:boolean hasFontColor():0:0 -> q
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle inherit(androidx.media3.extractor.text.ttml.TtmlStyle,boolean):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/g;Z)Lr1/g;"}
    1:1:boolean isLinethrough():0:0 -> s
    1:1:boolean isUnderline():0:0 -> t
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setBackgroundColor(int):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setBold(boolean):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setFontColor(int):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setFontFamily(java.lang.String):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setFontSize(float):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lr1/g;"}
    1:1:androidx.media3.extractor.text.ttml.TtmlStyle setFontSizeUnit(int):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lr1/g;"}
androidx.media3.extractor.text.ttml.TtmlSubtitle -> r1.h:
    androidx.media3.extractor.text.ttml.TtmlNode root -> f
    long[] eventTimesUs -> g
    java.util.Map globalStyles -> h
    java.util.Map regionMap -> i
    java.util.Map imageMap -> j
    1:1:void <init>(androidx.media3.extractor.text.ttml.TtmlNode,java.util.Map,java.util.Map,java.util.Map):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr1/c;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V"}
    1:1:int getNextEventTimeIndex(long):0:0 -> a
    1:1:java.util.List getCues(long):0:0 -> b
    1:1:long getEventTime(int):0:0 -> c
    1:1:int getEventTimeCount():0:0 -> d
androidx.media3.extractor.text.tx3g.Tx3gParser -> s1.a:
    androidx.media3.common.util.ParsableByteArray parsableByteArray -> a
    boolean customVerticalPlacement -> b
    int defaultFontFace -> c
    int defaultColorRgba -> d
    java.lang.String defaultFontFamily -> e
    float defaultVerticalPlacement -> f
    int calculatedVideoTrackHeight -> g
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:void parse(byte[],int,int,androidx.media3.extractor.text.SubtitleParser$OutputOptions,androidx.media3.common.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILl1/t$b;Lm/g;)V"}
    1:1:void reset():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getCueReplacementBehavior():0:0 -> c
    1:1:androidx.media3.extractor.text.Subtitle parseToLegacySubtitle(byte[],int,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ll1/k;"}
    1:1:void applyStyleRecord(androidx.media3.common.util.ParsableByteArray,android.text.SpannableStringBuilder):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Landroid/text/SpannableStringBuilder;)V"}
    1:1:void attachColor(android.text.SpannableStringBuilder,int,int,int,int,int):0:0 -> f
    1:1:void attachFontFace(android.text.SpannableStringBuilder,int,int,int,int,int):0:0 -> g
    1:1:void attachFontFamily(android.text.SpannableStringBuilder,java.lang.String,int,int):0:0 -> h
    1:1:java.lang.String readSubtitleText(androidx.media3.common.util.ParsableByteArray):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/lang/String;"}
androidx.media3.extractor.text.webvtt.Mp4WebvttParser -> t1.a:
    androidx.media3.common.util.ParsableByteArray parsableByteArray -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void parse(byte[],int,int,androidx.media3.extractor.text.SubtitleParser$OutputOptions,androidx.media3.common.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILl1/t$b;Lm/g;)V"}
    1:1:void reset():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getCueReplacementBehavior():0:0 -> c
    1:1:androidx.media3.extractor.text.Subtitle parseToLegacySubtitle(byte[],int,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ll1/k;"}
    1:1:androidx.media3.common.text.Cue parseVttCueBox(androidx.media3.common.util.ParsableByteArray,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Ll/a;"}
androidx.media3.extractor.text.webvtt.WebvttCssParser -> t1.b:
    androidx.media3.common.util.ParsableByteArray styleInput -> a
    java.lang.StringBuilder stringBuilder -> b
    java.util.regex.Pattern VOICE_NAME_PATTERN -> c
    java.util.regex.Pattern FONT_SIZE_PATTERN -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void applySelectorToStyle(androidx.media3.extractor.text.webvtt.WebvttCssStyle,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt1/c;Ljava/lang/String;)V"}
    1:1:boolean maybeSkipComment(androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
    1:1:boolean maybeSkipWhitespace(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
    1:1:java.util.List parseBlock(androidx.media3.common.util.ParsableByteArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/util/List;"}
    1:1:void parseFontSize(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCssStyle):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lt1/c;)V"}
    1:1:java.lang.String parseIdentifier(androidx.media3.common.util.ParsableByteArray,java.lang.StringBuilder):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/lang/StringBuilder;)Ljava/lang/String;"}
    1:1:java.lang.String parseNextToken(androidx.media3.common.util.ParsableByteArray,java.lang.StringBuilder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/lang/StringBuilder;)Ljava/lang/String;"}
    1:1:java.lang.String parsePropertyValue(androidx.media3.common.util.ParsableByteArray,java.lang.StringBuilder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/lang/StringBuilder;)Ljava/lang/String;"}
    1:1:java.lang.String parseSelector(androidx.media3.common.util.ParsableByteArray,java.lang.StringBuilder):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/lang/StringBuilder;)Ljava/lang/String;"}
    1:1:void parseStyleDeclaration(androidx.media3.common.util.ParsableByteArray,androidx.media3.extractor.text.webvtt.WebvttCssStyle,java.lang.StringBuilder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Lt1/c;Ljava/lang/StringBuilder;)V"}
    1:1:char peekCharAtPosition(androidx.media3.common.util.ParsableByteArray,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)C"}
    1:1:java.lang.String readCueTarget(androidx.media3.common.util.ParsableByteArray):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/lang/String;"}
    1:1:void skipStyleBlock(androidx.media3.common.util.ParsableByteArray):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void skipWhitespaceAndComments(androidx.media3.common.util.ParsableByteArray):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.extractor.text.webvtt.WebvttCssStyle -> t1.c:
    java.lang.String targetId -> a
    java.lang.String targetTag -> b
    java.util.Set targetClasses -> c
    java.lang.String targetVoice -> d
    java.lang.String fontFamily -> e
    int fontColor -> f
    boolean hasFontColor -> g
    int backgroundColor -> h
    boolean hasBackgroundColor -> i
    int linethrough -> j
    int underline -> k
    int bold -> l
    int italic -> m
    int fontSizeUnit -> n
    float fontSize -> o
    int rubyPosition -> p
    boolean combineUpright -> q
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.extractor.text.webvtt.WebvttCssStyle setUnderline(boolean):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lt1/c;"}
    1:1:int updateScoreForMatch(int,java.lang.String,java.lang.String,int):0:0 -> B
    1:1:int getBackgroundColor():0:0 -> a
    1:1:boolean getCombineUpright():0:0 -> b
    1:1:int getFontColor():0:0 -> c
    1:1:java.lang.String getFontFamily():0:0 -> d
    1:1:float getFontSize():0:0 -> e
    1:1:int getFontSizeUnit():0:0 -> f
    1:1:int getRubyPosition():0:0 -> g
    1:1:int getSpecificityScore(java.lang.String,java.lang.String,java.util.Set,java.lang.String):0:0 -> h
    1:1:int getStyle():0:0 -> i
    1:1:boolean hasBackgroundColor():0:0 -> j
    1:1:boolean hasFontColor():0:0 -> k
    1:1:boolean isLinethrough():0:0 -> l
    1:1:boolean isUnderline():0:0 -> m
    1:1:androidx.media3.extractor.text.webvtt.WebvttCssStyle setBackgroundColor(int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lt1/c;"}
    1:1:androidx.media3.extractor.text.webvtt.WebvttCssStyle setBold(boolean):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lt1/c;"}
    1:1:androidx.media3.extractor.text.webvtt.WebvttCssStyle setCombineUpright(boolean):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lt1/c;"}
    1:1:androidx.media3.extractor.text.webvtt.WebvttCssStyle setFontColor(int):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lt1/c;"}
    1:1:androidx.media3.extractor.text.webvtt.WebvttCssStyle setFontFamily(java.lang.String):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lt1/c;"}
    1:1:androidx.media3.extractor.text.webvtt.WebvttCssStyle setFontSize(float):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Lt1/c;"}
    1:1:androidx.media3.extractor.text.webvtt.WebvttCssStyle setFontSizeUnit(int):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lt1/c;"}
    1:1:androidx.media3.extractor.text.webvtt.WebvttCssStyle setItalic(boolean):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lt1/c;"}
    1:1:androidx.media3.extractor.text.webvtt.WebvttCssStyle setRubyPosition(int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lt1/c;"}
    1:1:void setTargetClasses(java.lang.String[]):0:0 -> w
    1:1:void setTargetId(java.lang.String):0:0 -> x
    1:1:void setTargetTagName(java.lang.String):0:0 -> y
    1:1:void setTargetVoice(java.lang.String):0:0 -> z
androidx.media3.extractor.text.webvtt.WebvttCueInfo -> t1.d:
    androidx.media3.common.text.Cue cue -> a
    long startTimeUs -> b
    long endTimeUs -> c
    1:1:void <init>(androidx.media3.common.text.Cue,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/a;JJ)V"}
androidx.media3.extractor.text.webvtt.WebvttCueParser -> t1.e:
    java.util.regex.Pattern CUE_HEADER_PATTERN -> a
    java.util.regex.Pattern CUE_SETTING_PATTERN -> b
    java.util.Map DEFAULT_TEXT_COLORS -> c
    java.util.Map DEFAULT_BACKGROUND_COLORS -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void applyDefaultColors(android.text.SpannableStringBuilder,java.util.Set,int,int):0:0 -> a
    1:1:void applyEntity(java.lang.String,android.text.SpannableStringBuilder):0:0 -> b
    1:1:void applyRubySpans(android.text.SpannableStringBuilder,java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag,java.util.List,java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/SpannableStringBuilder;Ljava/lang/String;Lt1/e$c;Ljava/util/List;Ljava/util/List;)V"}
    1:1:void applySpansForTag(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag,java.util.List,android.text.SpannableStringBuilder,java.util.List):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lt1/e$c;Ljava/util/List;Landroid/text/SpannableStringBuilder;Ljava/util/List;)V"}
    1:1:void applyStyleToText(android.text.SpannableStringBuilder,androidx.media3.extractor.text.webvtt.WebvttCssStyle,int,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/text/SpannableStringBuilder;Lt1/c;II)V"}
    1:1:int findEndOfTag(java.lang.String,int):0:0 -> f
    1:1:int firstKnownRubyPosition(int,int,int):0:0 -> g
    1:1:java.util.List getApplicableStyles(java.util.List,java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ljava/lang/String;Lt1/e$c;)Ljava/util/List;"}
    1:1:int getRubyPosition(java.util.List,java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Ljava/lang/String;Lt1/e$c;)I"}
    1:1:java.lang.String getTagName(java.lang.String):0:0 -> j
    1:1:boolean isSupportedTag(java.lang.String):0:0 -> k
    1:1:androidx.media3.common.text.Cue newCueForText(java.lang.CharSequence):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Ll/a;"}
    1:1:androidx.media3.extractor.text.webvtt.WebvttCueInfo parseCue(java.lang.String,java.util.regex.Matcher,androidx.media3.common.util.ParsableByteArray,java.util.List):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/util/regex/Matcher;Lm/z;Ljava/util/List;)Lt1/d;"}
    1:1:androidx.media3.extractor.text.webvtt.WebvttCueInfo parseCue(androidx.media3.common.util.ParsableByteArray,java.util.List):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Ljava/util/List;)Lt1/d;"}
    1:1:androidx.media3.common.text.Cue$Builder parseCueSettingsList(java.lang.String):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll/a$b;"}
    1:1:void parseCueSettingsList(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lt1/e$e;)V"}
    1:1:android.text.SpannedString parseCueText(java.lang.String,java.lang.String,java.util.List):0:0 -> q
    1:1:int parseLineAnchor(java.lang.String):0:0 -> r
    1:1:void parseLineAttribute(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lt1/e$e;)V"}
    1:1:int parsePositionAnchor(java.lang.String):0:0 -> t
    1:1:void parsePositionAttribute(java.lang.String,androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lt1/e$e;)V"}
    1:1:int parseTextAlignment(java.lang.String):0:0 -> v
    1:1:int parseVerticalAttribute(java.lang.String):0:0 -> w
androidx.media3.extractor.text.webvtt.WebvttCueParser$1 -> t1.e$a:
androidx.media3.extractor.text.webvtt.WebvttCueParser$Element -> t1.e$b:
    androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag startTag -> a
    int endPosition -> b
    java.util.Comparator BY_START_POSITION_ASC -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt1/e$c;I)V"}
    2:2:void <init>(androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag,int,androidx.media3.extractor.text.webvtt.WebvttCueParser$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt1/e$c;ILt1/e$a;)V"}
    1:1:int $r8$lambda$Z-gXTEOLJTl24yQOGa4nAbt27qI(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element,androidx.media3.extractor.text.webvtt.WebvttCueParser$Element):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt1/e$b;Lt1/e$b;)I"}
    1:1:java.util.Comparator access$100():0:0 -> b
    1:1:androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag access$200(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt1/e$b;)Lt1/e$c;"}
    1:1:int access$300(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt1/e$b;)I"}
    1:1:int lambda$static$0(androidx.media3.extractor.text.webvtt.WebvttCueParser$Element,androidx.media3.extractor.text.webvtt.WebvttCueParser$Element):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt1/e$b;Lt1/e$b;)I"}
androidx.media3.extractor.text.webvtt.WebvttCueParser$Element$$ExternalSyntheticLambda0 -> t1.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.text.webvtt.WebvttCueParser$Element$$InternalSyntheticLambda$9$726dc9540054934629efaf91f16eaab61e4db6297173ff80d4f46fa2c96730eb$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.extractor.text.webvtt.WebvttCueParser$Element$$InternalSyntheticLambda$9$726dc9540054934629efaf91f16eaab61e4db6297173ff80d4f46fa2c96730eb$0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag -> t1.e$c:
    java.lang.String name -> a
    int position -> b
    java.lang.String voice -> c
    java.util.Set classes -> d
    1:1:void <init>(java.lang.String,int,java.lang.String,java.util.Set):0:0 -> <init>
    1:1:androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag buildStartTag(java.lang.String,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;I)Lt1/e$c;"}
    1:1:androidx.media3.extractor.text.webvtt.WebvttCueParser$StartTag buildWholeCueVirtualTag():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt1/e$c;"}
androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch -> t1.e$d:
    int score -> f
    androidx.media3.extractor.text.webvtt.WebvttCssStyle style -> g
    1:1:void <init>(int,androidx.media3.extractor.text.webvtt.WebvttCssStyle):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILt1/c;)V"}
    1:1:int compareTo(androidx.media3.extractor.text.webvtt.WebvttCueParser$StyleMatch):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt1/e$d;)I"}
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
androidx.media3.extractor.text.webvtt.WebvttCueParser$WebvttCueInfoBuilder -> t1.e$e:
    long startTimeUs -> a
    long endTimeUs -> b
    java.lang.CharSequence text -> c
    int textAlignment -> d
    float line -> e
    int lineType -> f
    int lineAnchor -> g
    float position -> h
    int positionAnchor -> i
    float size -> j
    int verticalType -> k
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.media3.extractor.text.webvtt.WebvttCueInfo build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt1/d;"}
    1:1:float computeLine(float,int):0:0 -> b
    1:1:android.text.Layout$Alignment convertTextAlignment(int):0:0 -> c
    1:1:float deriveMaxSize(int,float):0:0 -> d
    1:1:float derivePosition(int):0:0 -> e
    1:1:int derivePositionAnchor(int):0:0 -> f
    1:1:androidx.media3.common.text.Cue$Builder toCueBuilder():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll/a$b;"}
androidx.media3.extractor.text.webvtt.WebvttParser -> t1.g:
    androidx.media3.common.util.ParsableByteArray parsableWebvttData -> a
    androidx.media3.extractor.text.webvtt.WebvttCssParser cssParser -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void parse(byte[],int,int,androidx.media3.extractor.text.SubtitleParser$OutputOptions,androidx.media3.common.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILl1/t$b;Lm/g;)V"}
    1:1:void reset():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getCueReplacementBehavior():0:0 -> c
    1:1:androidx.media3.extractor.text.Subtitle parseToLegacySubtitle(byte[],int,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BII)Ll1/k;"}
    1:1:int getNextEvent(androidx.media3.common.util.ParsableByteArray):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)I"}
    1:1:void skipComment(androidx.media3.common.util.ParsableByteArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.extractor.text.webvtt.WebvttParserUtil -> t1.h:
    java.util.regex.Pattern COMMENT -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.util.regex.Matcher findNextCueHeader(androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Ljava/util/regex/Matcher;"}
    1:1:boolean isWebvttHeaderLine(androidx.media3.common.util.ParsableByteArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
    1:1:float parsePercentage(java.lang.String):0:0 -> c
    1:1:long parseTimestampUs(java.lang.String):0:0 -> d
    1:1:void validateWebvttHeaderLine(androidx.media3.common.util.ParsableByteArray):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.extractor.text.webvtt.WebvttSubtitle -> t1.j:
    java.util.List cueInfos -> f
    long[] cueTimesUs -> g
    long[] sortedCueTimesUs -> h
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:int getNextEventTimeIndex(long):0:0 -> a
    1:1:java.util.List getCues(long):0:0 -> b
    1:1:long getEventTime(int):0:0 -> c
    1:1:int getEventTimeCount():0:0 -> d
    1:1:int $r8$lambda$P643_tt8ZOG3_8oofO0-BFzfFoU(androidx.media3.extractor.text.webvtt.WebvttCueInfo,androidx.media3.extractor.text.webvtt.WebvttCueInfo):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt1/d;Lt1/d;)I"}
    1:1:int lambda$getCues$0(androidx.media3.extractor.text.webvtt.WebvttCueInfo,androidx.media3.extractor.text.webvtt.WebvttCueInfo):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt1/d;Lt1/d;)I"}
androidx.media3.extractor.text.webvtt.WebvttSubtitle$$ExternalSyntheticLambda0 -> t1.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.text.webvtt.WebvttSubtitle$$InternalSyntheticLambda$9$77b60c4948b3cd178d2080ea96255a3a6b95fb1745503d113d30215a16bc88ee$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.media3.extractor.text.webvtt.WebvttSubtitle$$InternalSyntheticLambda$9$77b60c4948b3cd178d2080ea96255a3a6b95fb1745503d113d30215a16bc88ee$0.compare(java.lang.Object,java.lang.Object):0:0 -> compare
      # {"id":"com.android.tools.r8.synthesized"}
androidx.media3.extractor.ts.Ac3Extractor -> u1.b:
    androidx.media3.extractor.ts.Ac3Reader reader -> a
    androidx.media3.common.util.ParsableByteArray sampleData -> b
    boolean startedPacket -> c
    androidx.media3.extractor.ExtractorsFactory FACTORY -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$4RC32qIoHVmltHRRfJxZ3Ku1Yy0():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] lambda$static$0():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.ts.Ac3Extractor$$ExternalSyntheticLambda0 -> u1.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.ts.Ac3Extractor$$InternalSyntheticLambda$9$7582061f02470bcbc55c9aef9dd976e99d00661d56612cc6a3c56ab53dbd605e$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ts.Ac3Extractor$$InternalSyntheticLambda$9$7582061f02470bcbc55c9aef9dd976e99d00661d56612cc6a3c56ab53dbd605e$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ts.Ac3Extractor$$InternalSyntheticLambda$9$7582061f02470bcbc55c9aef9dd976e99d00661d56612cc6a3c56ab53dbd605e$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ts.Ac3Extractor$$InternalSyntheticLambda$9$7582061f02470bcbc55c9aef9dd976e99d00661d56612cc6a3c56ab53dbd605e$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ts.Ac3Extractor$$InternalSyntheticLambda$9$7582061f02470bcbc55c9aef9dd976e99d00661d56612cc6a3c56ab53dbd605e$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.ts.Ac3Reader -> u1.c:
    androidx.media3.common.util.ParsableBitArray headerScratchBits -> a
    androidx.media3.common.util.ParsableByteArray headerScratchBytes -> b
    java.lang.String language -> c
    int roleFlags -> d
    java.lang.String formatId -> e
    androidx.media3.extractor.TrackOutput output -> f
    int state -> g
    int bytesRead -> h
    boolean lastByteWas0B -> i
    long sampleDurationUs -> j
    androidx.media3.common.Format format -> k
    int sampleSize -> l
    long timeUs -> m
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:boolean continueRead(androidx.media3.common.util.ParsableByteArray,byte[],int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;[BI)Z"}
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
    1:1:void parseHeader():0:0 -> g
    1:1:boolean skipToNextSync(androidx.media3.common.util.ParsableByteArray):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
androidx.media3.extractor.ts.Ac4Extractor -> u1.e:
    androidx.media3.extractor.ts.Ac4Reader reader -> a
    androidx.media3.common.util.ParsableByteArray sampleData -> b
    boolean startedPacket -> c
    androidx.media3.extractor.ExtractorsFactory FACTORY -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$GoNrDTmnqrIHjVgyTFLEBQ6O6yc():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] lambda$static$0():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.ts.Ac4Extractor$$ExternalSyntheticLambda0 -> u1.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.ts.Ac4Extractor$$InternalSyntheticLambda$9$f784b86bda3388fb7f0c938b819db33388159883bdead11fb3330bba5ee5c893$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ts.Ac4Extractor$$InternalSyntheticLambda$9$f784b86bda3388fb7f0c938b819db33388159883bdead11fb3330bba5ee5c893$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ts.Ac4Extractor$$InternalSyntheticLambda$9$f784b86bda3388fb7f0c938b819db33388159883bdead11fb3330bba5ee5c893$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ts.Ac4Extractor$$InternalSyntheticLambda$9$f784b86bda3388fb7f0c938b819db33388159883bdead11fb3330bba5ee5c893$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ts.Ac4Extractor$$InternalSyntheticLambda$9$f784b86bda3388fb7f0c938b819db33388159883bdead11fb3330bba5ee5c893$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.ts.Ac4Reader -> u1.f:
    androidx.media3.common.util.ParsableBitArray headerScratchBits -> a
    androidx.media3.common.util.ParsableByteArray headerScratchBytes -> b
    java.lang.String language -> c
    int roleFlags -> d
    java.lang.String formatId -> e
    androidx.media3.extractor.TrackOutput output -> f
    int state -> g
    int bytesRead -> h
    boolean lastByteWasAC -> i
    boolean hasCRC -> j
    long sampleDurationUs -> k
    androidx.media3.common.Format format -> l
    int sampleSize -> m
    long timeUs -> n
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:boolean continueRead(androidx.media3.common.util.ParsableByteArray,byte[],int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;[BI)Z"}
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
    1:1:void parseHeader():0:0 -> g
    1:1:boolean skipToNextSync(androidx.media3.common.util.ParsableByteArray):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
androidx.media3.extractor.ts.AdtsExtractor -> u1.h:
    int flags -> a
    androidx.media3.extractor.ts.AdtsReader reader -> b
    androidx.media3.common.util.ParsableByteArray packetBuffer -> c
    androidx.media3.common.util.ParsableByteArray scratch -> d
    androidx.media3.common.util.ParsableBitArray scratchBits -> e
    androidx.media3.extractor.ExtractorOutput extractorOutput -> f
    long firstSampleTimestampUs -> g
    long firstFramePosition -> h
    int averageFrameSize -> i
    boolean hasCalculatedAverageFrameSize -> j
    boolean startedPacket -> k
    boolean hasOutputSeekMap -> l
    androidx.media3.extractor.ExtractorsFactory FACTORY -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$K9VAM0pJu_XIEuljoekogcfznsM():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void calculateAverageFrameSize(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int getBitrateFromFrameSize(int,long):0:0 -> g
    1:1:androidx.media3.extractor.SeekMap getConstantBitrateSeekMap(long,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JZ)Lo0/m0;"}
    1:1:androidx.media3.extractor.Extractor[] lambda$static$0():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void maybeOutputSeekMap(long,boolean):0:0 -> j
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int peekId3Header(androidx.media3.extractor.ExtractorInput):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.ts.AdtsExtractor$$ExternalSyntheticLambda0 -> u1.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.ts.AdtsExtractor$$InternalSyntheticLambda$9$95a071d64100c466ea1d8f8f34de4e268a4e2bda17c5a9ee75f42b26044ba292$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ts.AdtsExtractor$$InternalSyntheticLambda$9$95a071d64100c466ea1d8f8f34de4e268a4e2bda17c5a9ee75f42b26044ba292$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ts.AdtsExtractor$$InternalSyntheticLambda$9$95a071d64100c466ea1d8f8f34de4e268a4e2bda17c5a9ee75f42b26044ba292$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ts.AdtsExtractor$$InternalSyntheticLambda$9$95a071d64100c466ea1d8f8f34de4e268a4e2bda17c5a9ee75f42b26044ba292$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ts.AdtsExtractor$$InternalSyntheticLambda$9$95a071d64100c466ea1d8f8f34de4e268a4e2bda17c5a9ee75f42b26044ba292$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.ts.AdtsReader -> u1.i:
    boolean exposeId3 -> a
    androidx.media3.common.util.ParsableBitArray adtsScratch -> b
    androidx.media3.common.util.ParsableByteArray id3HeaderBuffer -> c
    java.lang.String language -> d
    int roleFlags -> e
    java.lang.String formatId -> f
    androidx.media3.extractor.TrackOutput output -> g
    androidx.media3.extractor.TrackOutput id3Output -> h
    int state -> i
    int bytesRead -> j
    int matchState -> k
    boolean hasCrc -> l
    boolean foundFirstFrame -> m
    int firstFrameVersion -> n
    int firstFrameSampleRateIndex -> o
    int currentFrameVersion -> p
    boolean hasOutputFormat -> q
    long sampleDurationUs -> r
    int sampleSize -> s
    long timeUs -> t
    androidx.media3.extractor.TrackOutput currentOutput -> u
    long currentSampleDuration -> v
    byte[] ID3_IDENTIFIER -> w
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean):0:0 -> <init>
    2:2:void <init>(boolean,java.lang.String,int):0:0 -> <init>
    1:1:void assertTracksCreated():0:0 -> a
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
    1:1:void checkAdtsHeader(androidx.media3.common.util.ParsableByteArray):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:boolean checkSyncPositionValid(androidx.media3.common.util.ParsableByteArray,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Z"}
    1:1:boolean continueRead(androidx.media3.common.util.ParsableByteArray,byte[],int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;[BI)Z"}
    1:1:void findNextSample(androidx.media3.common.util.ParsableByteArray):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:long getSampleDurationUs():0:0 -> k
    1:1:boolean isAdtsSyncBytes(byte,byte):0:0 -> l
    1:1:boolean isAdtsSyncWord(int):0:0 -> m
    1:1:void parseAdtsHeader():0:0 -> n
    1:1:void parseId3Header():0:0 -> o
    1:1:void readSample(androidx.media3.common.util.ParsableByteArray):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void resetSync():0:0 -> q
    1:1:void setCheckingAdtsHeaderState():0:0 -> r
    1:1:void setFindingSampleState():0:0 -> s
    1:1:void setReadingAdtsHeaderState():0:0 -> t
    1:1:void setReadingId3HeaderState():0:0 -> u
    1:1:void setReadingSampleState(androidx.media3.extractor.TrackOutput,long,int,int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;JII)V"}
    1:1:boolean tryRead(androidx.media3.common.util.ParsableByteArray,byte[],int):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;[BI)Z"}
androidx.media3.extractor.ts.DefaultTsPayloadReaderFactory -> u1.j:
    int flags -> a
    java.util.List closedCaptionFormats -> b
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(int,java.util.List):0:0 -> <init>
    1:1:android.util.SparseArray createInitialPayloadReaders():0:0 -> a
    1:1:androidx.media3.extractor.ts.TsPayloadReader createPayloadReader(int,androidx.media3.extractor.ts.TsPayloadReader$EsInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILu1/k0$b;)Lu1/k0;"}
    1:1:androidx.media3.extractor.ts.SeiReader buildSeiReader(androidx.media3.extractor.ts.TsPayloadReader$EsInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/k0$b;)Lu1/f0;"}
    1:1:androidx.media3.extractor.ts.UserDataReader buildUserDataReader(androidx.media3.extractor.ts.TsPayloadReader$EsInfo):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/k0$b;)Lu1/m0;"}
    1:1:java.util.List getClosedCaptionFormats(androidx.media3.extractor.ts.TsPayloadReader$EsInfo):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/k0$b;)Ljava/util/List;"}
    1:1:boolean isSet(int):0:0 -> f
androidx.media3.extractor.ts.DtsReader -> u1.k:
    androidx.media3.common.util.ParsableByteArray headerScratchBytes -> a
    java.util.concurrent.atomic.AtomicInteger uhdAudioChunkId -> b
    java.lang.String language -> c
    int roleFlags -> d
    java.lang.String formatId -> e
    androidx.media3.extractor.TrackOutput output -> f
    int state -> g
    int bytesRead -> h
    int syncBytes -> i
    long sampleDurationUs -> j
    androidx.media3.common.Format format -> k
    int sampleSize -> l
    int frameType -> m
    int extensionSubstreamHeaderSize -> n
    int uhdHeaderSize -> o
    long timeUs -> p
    1:1:void <init>(java.lang.String,int,int):0:0 -> <init>
    1:1:boolean continueRead(androidx.media3.common.util.ParsableByteArray,byte[],int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;[BI)Z"}
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
    1:1:void parseCoreHeader():0:0 -> g
    1:1:void parseExtensionSubstreamHeader():0:0 -> h
    1:1:void parseUhdHeader():0:0 -> i
    1:1:boolean skipToNextSyncWord(androidx.media3.common.util.ParsableByteArray):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
    1:1:void updateFormatWithDtsHeaderInfo(androidx.media3.extractor.DtsUtil$DtsHeader):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/p$b;)V"}
androidx.media3.extractor.ts.DvbSubtitleReader -> u1.l:
    java.util.List subtitleInfos -> a
    androidx.media3.extractor.TrackOutput[] outputs -> b
    boolean writingSample -> c
    int bytesToCheck -> d
    int sampleBytesWritten -> e
    long sampleTimeUs -> f
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:boolean checkNextByte(androidx.media3.common.util.ParsableByteArray,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Z"}
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
androidx.media3.extractor.ts.ElementaryStreamReader -> u1.m:
    void seek() -> b
    void consume(androidx.media3.common.util.ParsableByteArray) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    void packetFinished(boolean) -> d
    void packetStarted(long,int) -> e
    void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
androidx.media3.extractor.ts.H262Reader -> u1.n:
    java.lang.String formatId -> a
    androidx.media3.extractor.TrackOutput output -> b
    androidx.media3.extractor.ts.UserDataReader userDataReader -> c
    androidx.media3.common.util.ParsableByteArray userDataParsable -> d
    androidx.media3.extractor.ts.NalUnitTargetBuffer userData -> e
    boolean[] prefixFlags -> f
    androidx.media3.extractor.ts.H262Reader$CsdBuffer csdBuffer -> g
    long totalBytesWritten -> h
    boolean startedFirstSample -> i
    boolean hasOutputFormat -> j
    long frameDurationUs -> k
    long pesTimeUs -> l
    long samplePosition -> m
    long sampleTimeUs -> n
    boolean sampleIsKeyframe -> o
    boolean sampleHasPicture -> p
    double[] FRAME_RATE_VALUES -> q
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.extractor.ts.UserDataReader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/m0;)V"}
    1:1:android.util.Pair parseCsdBuffer(androidx.media3.extractor.ts.H262Reader$CsdBuffer,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/n$a;Ljava/lang/String;)Landroid/util/Pair;"}
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
androidx.media3.extractor.ts.H262Reader$CsdBuffer -> u1.n$a:
    boolean isFilling -> a
    int length -> b
    int sequenceExtensionPosition -> c
    byte[] data -> d
    byte[] START_CODE -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int):0:0 -> <init>
    1:1:void onData(byte[],int,int):0:0 -> a
    1:1:boolean onStartCode(int,int):0:0 -> b
    1:1:void reset():0:0 -> c
androidx.media3.extractor.ts.H263Reader -> u1.o:
    androidx.media3.extractor.ts.UserDataReader userDataReader -> a
    androidx.media3.common.util.ParsableByteArray userDataParsable -> b
    boolean[] prefixFlags -> c
    androidx.media3.extractor.ts.H263Reader$CsdBuffer csdBuffer -> d
    androidx.media3.extractor.ts.NalUnitTargetBuffer userData -> e
    androidx.media3.extractor.ts.H263Reader$SampleReader sampleReader -> f
    long totalBytesWritten -> g
    java.lang.String formatId -> h
    androidx.media3.extractor.TrackOutput output -> i
    boolean hasOutputFormat -> j
    long pesTimeUs -> k
    float[] PIXEL_WIDTH_HEIGHT_RATIO_BY_ASPECT_RATIO_INFO -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.extractor.ts.UserDataReader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/m0;)V"}
    1:1:androidx.media3.common.Format parseCsdBuffer(androidx.media3.extractor.ts.H263Reader$CsdBuffer,int,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/o$a;ILjava/lang/String;)Lj/q;"}
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
androidx.media3.extractor.ts.H263Reader$CsdBuffer -> u1.o$a:
    boolean isFilling -> a
    int state -> b
    int length -> c
    int volStartPosition -> d
    byte[] data -> e
    byte[] START_CODE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int):0:0 -> <init>
    1:1:void onData(byte[],int,int):0:0 -> a
    1:1:boolean onStartCode(int,int):0:0 -> b
    1:1:void reset():0:0 -> c
androidx.media3.extractor.ts.H263Reader$SampleReader -> u1.o$b:
    androidx.media3.extractor.TrackOutput output -> a
    boolean readingSample -> b
    boolean lookingForVopCodingType -> c
    boolean sampleIsKeyframe -> d
    int startCodeValue -> e
    int vopBytesRead -> f
    long samplePosition -> g
    long sampleTimeUs -> h
    1:1:void <init>(androidx.media3.extractor.TrackOutput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;)V"}
    1:1:void onData(byte[],int,int):0:0 -> a
    1:1:void onDataEnd(long,int,boolean):0:0 -> b
    1:1:void onStartCode(int,long):0:0 -> c
    1:1:void reset():0:0 -> d
androidx.media3.extractor.ts.H264Reader -> u1.p:
    androidx.media3.extractor.ts.SeiReader seiReader -> a
    boolean allowNonIdrKeyframes -> b
    boolean detectAccessUnits -> c
    androidx.media3.extractor.ts.NalUnitTargetBuffer sps -> d
    androidx.media3.extractor.ts.NalUnitTargetBuffer pps -> e
    androidx.media3.extractor.ts.NalUnitTargetBuffer sei -> f
    long totalBytesWritten -> g
    boolean[] prefixFlags -> h
    java.lang.String formatId -> i
    androidx.media3.extractor.TrackOutput output -> j
    androidx.media3.extractor.ts.H264Reader$SampleReader sampleReader -> k
    boolean hasOutputFormat -> l
    long pesTimeUs -> m
    boolean randomAccessIndicator -> n
    androidx.media3.common.util.ParsableByteArray seiWrapper -> o
    1:1:void <init>(androidx.media3.extractor.ts.SeiReader,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/f0;ZZ)V"}
    1:1:void assertTracksCreated():0:0 -> a
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
    1:1:void endNalUnit(long,int,int,long):0:0 -> g
    1:1:void nalUnitData(byte[],int,int):0:0 -> h
    1:1:void startNalUnit(long,int,long):0:0 -> i
androidx.media3.extractor.ts.H264Reader$1 -> u1.p$a:
androidx.media3.extractor.ts.H264Reader$SampleReader -> u1.p$b:
    androidx.media3.extractor.TrackOutput output -> a
    boolean allowNonIdrKeyframes -> b
    boolean detectAccessUnits -> c
    android.util.SparseArray sps -> d
    android.util.SparseArray pps -> e
    androidx.media3.container.ParsableNalUnitBitArray bitArray -> f
    byte[] buffer -> g
    int bufferLength -> h
    int nalUnitType -> i
    long nalUnitStartPosition -> j
    boolean isFilling -> k
    long nalUnitTimeUs -> l
    androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData previousSliceHeader -> m
    androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader -> n
    boolean readingSample -> o
    long samplePosition -> p
    long sampleTimeUs -> q
    boolean sampleIsKeyframe -> r
    boolean randomAccessIndicator -> s
    1:1:void <init>(androidx.media3.extractor.TrackOutput,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;ZZ)V"}
    1:1:void appendToNalUnit(byte[],int,int):0:0 -> a
    1:1:void end(long):0:0 -> b
    1:1:boolean endNalUnit(long,int,boolean):0:0 -> c
    1:1:boolean needsSpsPps():0:0 -> d
    1:1:void outputSample(int):0:0 -> e
    1:1:void putPps(androidx.media3.container.NalUnitUtil$PpsData):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln/d$b;)V"}
    1:1:void putSps(androidx.media3.container.NalUnitUtil$SpsData):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln/d$c;)V"}
    1:1:void reset():0:0 -> h
    1:1:void setSampleIsKeyframe():0:0 -> i
    1:1:void startNalUnit(long,int,long,boolean):0:0 -> j
androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData -> u1.p$b$a:
    boolean isComplete -> a
    boolean hasSliceType -> b
    androidx.media3.container.NalUnitUtil$SpsData spsData -> c
    int nalRefIdc -> d
    int sliceType -> e
    int frameNum -> f
    int picParameterSetId -> g
    boolean fieldPicFlag -> h
    boolean bottomFieldFlagPresent -> i
    boolean bottomFieldFlag -> j
    boolean idrPicFlag -> k
    int idrPicId -> l
    int picOrderCntLsb -> m
    int deltaPicOrderCntBottom -> n
    int deltaPicOrderCnt0 -> o
    int deltaPicOrderCnt1 -> p
    void <init>() -> <init>
    1:1:void <init>(androidx.media3.extractor.ts.H264Reader$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/p$a;)V"}
    1:1:boolean access$100(androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData,androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/p$b$a;Lu1/p$b$a;)Z"}
    1:1:void clear():0:0 -> b
    1:1:boolean isFirstVclNalUnitOfPicture(androidx.media3.extractor.ts.H264Reader$SampleReader$SliceHeaderData):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/p$b$a;)Z"}
    1:1:boolean isISlice():0:0 -> d
    1:1:void setAll(androidx.media3.container.NalUnitUtil$SpsData,int,int,int,int,boolean,boolean,boolean,boolean,int,int,int,int,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln/d$c;IIIIZZZZIIIII)V"}
    1:1:void setSliceType(int):0:0 -> f
androidx.media3.extractor.ts.H265Reader -> u1.q:
    androidx.media3.extractor.ts.SeiReader seiReader -> a
    java.lang.String formatId -> b
    androidx.media3.extractor.TrackOutput output -> c
    androidx.media3.extractor.ts.H265Reader$SampleReader sampleReader -> d
    boolean hasOutputFormat -> e
    boolean[] prefixFlags -> f
    androidx.media3.extractor.ts.NalUnitTargetBuffer vps -> g
    androidx.media3.extractor.ts.NalUnitTargetBuffer sps -> h
    androidx.media3.extractor.ts.NalUnitTargetBuffer pps -> i
    androidx.media3.extractor.ts.NalUnitTargetBuffer prefixSei -> j
    androidx.media3.extractor.ts.NalUnitTargetBuffer suffixSei -> k
    long totalBytesWritten -> l
    long pesTimeUs -> m
    androidx.media3.common.util.ParsableByteArray seiWrapper -> n
    1:1:void <init>(androidx.media3.extractor.ts.SeiReader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/f0;)V"}
    1:1:void assertTracksCreated():0:0 -> a
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
    1:1:void endNalUnit(long,int,int,long):0:0 -> g
    1:1:void nalUnitData(byte[],int,int):0:0 -> h
    1:1:androidx.media3.common.Format parseMediaFormat(java.lang.String,androidx.media3.extractor.ts.NalUnitTargetBuffer,androidx.media3.extractor.ts.NalUnitTargetBuffer,androidx.media3.extractor.ts.NalUnitTargetBuffer):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lu1/w;Lu1/w;Lu1/w;)Lj/q;"}
    1:1:void startNalUnit(long,int,int,long):0:0 -> j
androidx.media3.extractor.ts.H265Reader$SampleReader -> u1.q$a:
    androidx.media3.extractor.TrackOutput output -> a
    long nalUnitPosition -> b
    boolean nalUnitHasKeyframeData -> c
    int nalUnitBytesRead -> d
    long nalUnitTimeUs -> e
    boolean lookingForFirstSliceFlag -> f
    boolean isFirstSlice -> g
    boolean isFirstPrefixNalUnit -> h
    boolean readingSample -> i
    boolean readingPrefix -> j
    long samplePosition -> k
    long sampleTimeUs -> l
    boolean sampleIsKeyframe -> m
    1:1:void <init>(androidx.media3.extractor.TrackOutput):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s0;)V"}
    1:1:void end(long):0:0 -> a
    1:1:void endNalUnit(long,int,boolean):0:0 -> b
    1:1:boolean isPrefixNalUnit(int):0:0 -> c
    1:1:boolean isVclBodyNalUnit(int):0:0 -> d
    1:1:void outputSample(int):0:0 -> e
    1:1:void readNalUnitData(byte[],int,int):0:0 -> f
    1:1:void reset():0:0 -> g
    1:1:void startNalUnit(long,int,int,long,boolean):0:0 -> h
androidx.media3.extractor.ts.Id3Reader -> u1.r:
    androidx.media3.common.util.ParsableByteArray id3Header -> a
    androidx.media3.extractor.TrackOutput output -> b
    boolean writingSample -> c
    long sampleTimeUs -> d
    int sampleSize -> e
    int sampleBytesRead -> f
    1:1:void <init>():0:0 -> <init>
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
androidx.media3.extractor.ts.LatmReader -> u1.s:
    java.lang.String language -> a
    int roleFlags -> b
    androidx.media3.common.util.ParsableByteArray sampleDataBuffer -> c
    androidx.media3.common.util.ParsableBitArray sampleBitArray -> d
    androidx.media3.extractor.TrackOutput output -> e
    java.lang.String formatId -> f
    androidx.media3.common.Format format -> g
    int state -> h
    int bytesRead -> i
    int sampleSize -> j
    int secondHeaderByte -> k
    long timeUs -> l
    boolean streamMuxRead -> m
    int audioMuxVersionA -> n
    int numSubframes -> o
    int frameLengthType -> p
    boolean otherDataPresent -> q
    long otherDataLenBits -> r
    int sampleRateHz -> s
    long sampleDurationUs -> t
    int channelCount -> u
    java.lang.String codecs -> v
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:long latmGetValue(androidx.media3.common.util.ParsableBitArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)J"}
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
    1:1:void parseAudioMuxElement(androidx.media3.common.util.ParsableBitArray):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)V"}
    1:1:int parseAudioSpecificConfig(androidx.media3.common.util.ParsableBitArray):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)I"}
    1:1:void parseFrameLength(androidx.media3.common.util.ParsableBitArray):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)V"}
    1:1:int parsePayloadLengthInfo(androidx.media3.common.util.ParsableBitArray):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)I"}
    1:1:void parsePayloadMux(androidx.media3.common.util.ParsableBitArray,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;I)V"}
    1:1:void parseStreamMuxConfig(androidx.media3.common.util.ParsableBitArray):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)V"}
    1:1:void resetBufferForSize(int):0:0 -> m
androidx.media3.extractor.ts.MpegAudioReader -> u1.t:
    androidx.media3.common.util.ParsableByteArray headerScratch -> a
    androidx.media3.extractor.MpegAudioUtil$Header header -> b
    java.lang.String language -> c
    int roleFlags -> d
    androidx.media3.extractor.TrackOutput output -> e
    java.lang.String formatId -> f
    int state -> g
    int frameBytesRead -> h
    boolean hasOutputFormat -> i
    boolean lastByteWasFF -> j
    long frameDurationUs -> k
    int frameSize -> l
    long timeUs -> m
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:void findHeader(androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
    1:1:void readFrameRemainder(androidx.media3.common.util.ParsableByteArray):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void readHeaderRemainder(androidx.media3.common.util.ParsableByteArray):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.extractor.ts.MpeghReader -> u1.u:
    androidx.media3.common.util.ParsableByteArray headerScratchBytes -> a
    androidx.media3.common.util.ParsableBitArray headerScratchBits -> b
    androidx.media3.common.util.ParsableByteArray dataScratchBytes -> c
    int state -> d
    java.lang.String formatId -> e
    androidx.media3.extractor.TrackOutput output -> f
    double timeUs -> g
    double timeUsPending -> h
    boolean dataPending -> i
    boolean rapPending -> j
    int flags -> k
    int syncBytes -> l
    boolean headerDataFinished -> m
    int payloadBytesRead -> n
    int frameBytes -> o
    androidx.media3.extractor.ts.MpeghUtil$MhasPacketHeader header -> p
    int samplingRate -> q
    int standardFrameLength -> r
    int truncationSamples -> s
    long mainStreamLabel -> t
    boolean configFound -> u
    1:1:void <init>():0:0 -> <init>
    1:1:void copyData(androidx.media3.common.util.ParsableByteArray,androidx.media3.common.util.ParsableByteArray,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;Lm/z;Z)V"}
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void packetFinished(boolean):0:0 -> d
    1:1:void packetStarted(long,int):0:0 -> e
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
    1:1:void finalizeFrame():0:0 -> g
    1:1:void parseConfig(androidx.media3.common.util.ParsableBitArray):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)V"}
    1:1:boolean parseHeader():0:0 -> i
    1:1:boolean shouldParsePacket(int):0:0 -> j
    1:1:boolean skipToNextSync(androidx.media3.common.util.ParsableByteArray):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)Z"}
    1:1:void writeSampleData(androidx.media3.common.util.ParsableByteArray):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.extractor.ts.MpeghUtil -> u1.v:
    1:1:int getOutputFrameLength(int):0:0 -> a
    1:1:double getResamplingRatio(int):0:0 -> b
    1:1:int getSamplingFrequency(int):0:0 -> c
    1:1:int getSbrRatioIndex(int):0:0 -> d
    1:1:boolean isSyncWord(int):0:0 -> e
    1:1:int parseAudioTruncationInfo(androidx.media3.common.util.ParsableBitArray):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)I"}
    1:1:boolean parseMhasPacketHeader(androidx.media3.common.util.ParsableBitArray,androidx.media3.extractor.ts.MpeghUtil$MhasPacketHeader):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;Lu1/v$b;)Z"}
    1:1:androidx.media3.extractor.ts.MpeghUtil$Mpegh3daConfig parseMpegh3daConfig(androidx.media3.common.util.ParsableBitArray):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)Lu1/v$c;"}
    1:1:boolean parseMpegh3daCoreConfig(androidx.media3.common.util.ParsableBitArray):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)Z"}
    1:1:int parseSignals3d(androidx.media3.common.util.ParsableBitArray):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)I"}
    1:1:int readEscapedIntValue(androidx.media3.common.util.ParsableBitArray,int,int,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;III)I"}
    1:1:long readEscapedLongValue(androidx.media3.common.util.ParsableBitArray,int,int,int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;III)J"}
    1:1:void skipMpegh3daDecoderConfig(androidx.media3.common.util.ParsableBitArray,int,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;II)V"}
    1:1:void skipMpegh3daFlexibleSpeakerConfig(androidx.media3.common.util.ParsableBitArray,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;I)V"}
    1:1:void skipSbrConfig(androidx.media3.common.util.ParsableBitArray):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)V"}
    1:1:void skipSpeakerConfig3d(androidx.media3.common.util.ParsableBitArray):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/y;)V"}
androidx.media3.extractor.ts.MpeghUtil$1 -> u1.v$a:
androidx.media3.extractor.ts.MpeghUtil$MhasPacketHeader -> u1.v$b:
    int packetType -> a
    long packetLabel -> b
    int packetLength -> c
    void <init>() -> <init>
androidx.media3.extractor.ts.MpeghUtil$Mpegh3daConfig -> u1.v$c:
    int profileLevelIndication -> a
    int samplingFrequency -> b
    int standardFrameLength -> c
    byte[] compatibleProfileLevelSet -> d
    1:1:void <init>(int,int,int,byte[]):0:0 -> <init>
    2:2:void <init>(int,int,int,byte[],androidx.media3.extractor.ts.MpeghUtil$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(III[BLu1/v$a;)V"}
androidx.media3.extractor.ts.NalUnitTargetBuffer -> u1.w:
    int targetType -> a
    boolean isFilling -> b
    boolean isCompleted -> c
    byte[] nalData -> d
    int nalLength -> e
    1:1:void <init>(int,int):0:0 -> <init>
    1:1:void appendToNalUnit(byte[],int,int):0:0 -> a
    1:1:boolean endNalUnit(int):0:0 -> b
    1:1:boolean isCompleted():0:0 -> c
    1:1:void reset():0:0 -> d
    1:1:void startNalUnit(int):0:0 -> e
androidx.media3.extractor.ts.PassthroughSectionPayloadReader -> u1.x:
    androidx.media3.common.Format format -> a
    androidx.media3.common.util.TimestampAdjuster timestampAdjuster -> b
    androidx.media3.extractor.TrackOutput output -> c
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:void init(androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;Lo0/t;Lu1/k0$d;)V"}
    1:1:void assertInitialized():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.extractor.ts.PesReader -> u1.y:
    androidx.media3.extractor.ts.ElementaryStreamReader reader -> a
    androidx.media3.common.util.ParsableBitArray pesScratch -> b
    int state -> c
    int bytesRead -> d
    androidx.media3.common.util.TimestampAdjuster timestampAdjuster -> e
    boolean ptsFlag -> f
    boolean dtsFlag -> g
    boolean seenFirstDts -> h
    int extendedHeaderLength -> i
    int payloadSize -> j
    boolean dataAlignmentIndicator -> k
    long timeUs -> l
    1:1:void <init>(androidx.media3.extractor.ts.ElementaryStreamReader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/m;)V"}
    1:1:void init(androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;Lo0/t;Lu1/k0$d;)V"}
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
    1:1:boolean canConsumeSynthesizedEmptyPusi(boolean):0:0 -> d
    1:1:boolean continueRead(androidx.media3.common.util.ParsableByteArray,byte[],int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;[BI)Z"}
    1:1:boolean parseHeader():0:0 -> f
    1:1:void parseHeaderExtension():0:0 -> g
    1:1:void setState(int):0:0 -> h
androidx.media3.extractor.ts.PsBinarySearchSeeker -> u1.z:
    1:1:void <init>(androidx.media3.common.util.TimestampAdjuster,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;JJ)V"}
    1:1:int access$100(byte[],int):0:0 -> j
    1:1:int peekIntAtPosition(byte[],int):0:0 -> k
androidx.media3.extractor.ts.PsBinarySearchSeeker$1 -> u1.z$a:
androidx.media3.extractor.ts.PsBinarySearchSeeker$PsScrSeeker -> u1.z$b:
    androidx.media3.common.util.TimestampAdjuster scrTimestampAdjuster -> a
    androidx.media3.common.util.ParsableByteArray packetBuffer -> b
    1:1:void <init>(androidx.media3.common.util.TimestampAdjuster):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;)V"}
    2:2:void <init>(androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.ts.PsBinarySearchSeeker$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;Lu1/z$a;)V"}
    1:1:void onSeekFinished():0:0 -> a
    1:1:androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult searchForTimestamp(androidx.media3.extractor.ExtractorInput,long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;J)Lo0/e$e;"}
    1:1:androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult searchForScrValueInBuffer(androidx.media3.common.util.ParsableByteArray,long,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JJ)Lo0/e$e;"}
    1:1:void skipToEndOfCurrentPack(androidx.media3.common.util.ParsableByteArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.extractor.ts.PsDurationReader -> u1.a0:
    androidx.media3.common.util.TimestampAdjuster scrTimestampAdjuster -> a
    androidx.media3.common.util.ParsableByteArray packetBuffer -> b
    boolean isDurationRead -> c
    boolean isFirstScrValueRead -> d
    boolean isLastScrValueRead -> e
    long firstScrValue -> f
    long lastScrValue -> g
    long durationUs -> h
    1:1:void <init>():0:0 -> <init>
    1:1:boolean checkMarkerBits(byte[]):0:0 -> a
    1:1:int finishReadDuration(androidx.media3.extractor.ExtractorInput):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
    1:1:long getDurationUs():0:0 -> c
    1:1:androidx.media3.common.util.TimestampAdjuster getScrTimestampAdjuster():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/e0;"}
    1:1:boolean isDurationReadFinished():0:0 -> e
    1:1:int peekIntAtPosition(byte[],int):0:0 -> f
    1:1:int readDuration(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:int readFirstScrValue(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:long readFirstScrValueFromBuffer(androidx.media3.common.util.ParsableByteArray):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)J"}
    1:1:int readLastScrValue(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:long readLastScrValueFromBuffer(androidx.media3.common.util.ParsableByteArray):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)J"}
    1:1:long readScrValueFromPack(androidx.media3.common.util.ParsableByteArray):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)J"}
    1:1:long readScrValueFromPackHeader(byte[]):0:0 -> m
androidx.media3.extractor.ts.PsExtractor -> u1.c0:
    androidx.media3.common.util.TimestampAdjuster timestampAdjuster -> a
    android.util.SparseArray psPayloadReaders -> b
    androidx.media3.common.util.ParsableByteArray psPacketBuffer -> c
    androidx.media3.extractor.ts.PsDurationReader durationReader -> d
    boolean foundAllTracks -> e
    boolean foundAudioTrack -> f
    boolean foundVideoTrack -> g
    long lastTrackPosition -> h
    androidx.media3.extractor.ts.PsBinarySearchSeeker psBinarySearchSeeker -> i
    androidx.media3.extractor.ExtractorOutput output -> j
    boolean hasOutputSeekMap -> k
    androidx.media3.extractor.ExtractorsFactory FACTORY -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(androidx.media3.common.util.TimestampAdjuster):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;)V"}
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$pzAEv8Lz0eMORKrhTvivl84SW5I():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] lambda$static$0():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:void maybeOutputSeekMap(long):0:0 -> g
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.ts.PsExtractor$$ExternalSyntheticLambda0 -> u1.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.ts.PsExtractor$$InternalSyntheticLambda$10$806ea61c544df5d6c419e742595baeb411f17a64e3f5bf729d1f0088d1df9ef5$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ts.PsExtractor$$InternalSyntheticLambda$10$806ea61c544df5d6c419e742595baeb411f17a64e3f5bf729d1f0088d1df9ef5$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ts.PsExtractor$$InternalSyntheticLambda$10$806ea61c544df5d6c419e742595baeb411f17a64e3f5bf729d1f0088d1df9ef5$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ts.PsExtractor$$InternalSyntheticLambda$10$806ea61c544df5d6c419e742595baeb411f17a64e3f5bf729d1f0088d1df9ef5$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ts.PsExtractor$$InternalSyntheticLambda$10$806ea61c544df5d6c419e742595baeb411f17a64e3f5bf729d1f0088d1df9ef5$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.ts.PsExtractor$PesReader -> u1.c0$a:
    androidx.media3.extractor.ts.ElementaryStreamReader pesPayloadReader -> a
    androidx.media3.common.util.TimestampAdjuster timestampAdjuster -> b
    androidx.media3.common.util.ParsableBitArray pesScratch -> c
    boolean ptsFlag -> d
    boolean dtsFlag -> e
    boolean seenFirstDts -> f
    int extendedHeaderLength -> g
    long timeUs -> h
    1:1:void <init>(androidx.media3.extractor.ts.ElementaryStreamReader,androidx.media3.common.util.TimestampAdjuster):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/m;Lm/e0;)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
    1:1:void parseHeader():0:0 -> b
    1:1:void parseHeaderExtension():0:0 -> c
    1:1:void seek():0:0 -> d
androidx.media3.extractor.ts.SectionPayloadReader -> u1.d0:
    void init(androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;Lo0/t;Lu1/k0$d;)V"}
    void consume(androidx.media3.common.util.ParsableByteArray) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.extractor.ts.SectionReader -> u1.e0:
    androidx.media3.extractor.ts.SectionPayloadReader reader -> a
    androidx.media3.common.util.ParsableByteArray sectionData -> b
    int totalSectionLength -> c
    int bytesRead -> d
    boolean sectionSyntaxIndicator -> e
    boolean waitingForPayloadStart -> f
    1:1:void <init>(androidx.media3.extractor.ts.SectionPayloadReader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/d0;)V"}
    1:1:void init(androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;Lo0/t;Lu1/k0$d;)V"}
    1:1:void seek():0:0 -> b
    1:1:void consume(androidx.media3.common.util.ParsableByteArray,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
androidx.media3.extractor.ts.SeiReader -> u1.f0:
    java.util.List closedCaptionFormats -> a
    androidx.media3.extractor.TrackOutput[] outputs -> b
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:void consume(long,androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLm/z;)V"}
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
androidx.media3.extractor.ts.TsBinarySearchSeeker -> u1.g0:
    1:1:void <init>(androidx.media3.common.util.TimestampAdjuster,long,long,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;JJII)V"}
androidx.media3.extractor.ts.TsBinarySearchSeeker$TsPcrSeeker -> u1.g0$a:
    androidx.media3.common.util.TimestampAdjuster pcrTimestampAdjuster -> a
    androidx.media3.common.util.ParsableByteArray packetBuffer -> b
    int pcrPid -> c
    int timestampSearchBytes -> d
    1:1:void <init>(int,androidx.media3.common.util.TimestampAdjuster,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILm/e0;I)V"}
    1:1:void onSeekFinished():0:0 -> a
    1:1:androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult searchForTimestamp(androidx.media3.extractor.ExtractorInput,long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;J)Lo0/e$e;"}
    1:1:androidx.media3.extractor.BinarySearchSeeker$TimestampSearchResult searchForPcrValueInBuffer(androidx.media3.common.util.ParsableByteArray,long,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;JJ)Lo0/e$e;"}
androidx.media3.extractor.ts.TsDurationReader -> u1.h0:
    int timestampSearchBytes -> a
    androidx.media3.common.util.TimestampAdjuster pcrTimestampAdjuster -> b
    androidx.media3.common.util.ParsableByteArray packetBuffer -> c
    boolean isDurationRead -> d
    boolean isFirstPcrValueRead -> e
    boolean isLastPcrValueRead -> f
    long firstPcrValue -> g
    long lastPcrValue -> h
    long durationUs -> i
    1:1:void <init>(int):0:0 -> <init>
    1:1:int finishReadDuration(androidx.media3.extractor.ExtractorInput):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
    1:1:long getDurationUs():0:0 -> b
    1:1:androidx.media3.common.util.TimestampAdjuster getPcrTimestampAdjuster():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lm/e0;"}
    1:1:boolean isDurationReadFinished():0:0 -> d
    1:1:int readDuration(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;I)I"}
    1:1:int readFirstPcrValue(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;I)I"}
    1:1:long readFirstPcrValueFromBuffer(androidx.media3.common.util.ParsableByteArray,int):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)J"}
    1:1:int readLastPcrValue(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;I)I"}
    1:1:long readLastPcrValueFromBuffer(androidx.media3.common.util.ParsableByteArray,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)J"}
androidx.media3.extractor.ts.TsExtractor -> u1.j0:
    int mode -> a
    int extractorFlags -> b
    int timestampSearchBytes -> c
    java.util.List timestampAdjusters -> d
    androidx.media3.common.util.ParsableByteArray tsPacketBuffer -> e
    android.util.SparseIntArray continuityCounters -> f
    androidx.media3.extractor.ts.TsPayloadReader$Factory payloadReaderFactory -> g
    androidx.media3.extractor.text.SubtitleParser$Factory subtitleParserFactory -> h
    android.util.SparseArray tsPayloadReaders -> i
    android.util.SparseBooleanArray trackIds -> j
    android.util.SparseBooleanArray trackPids -> k
    androidx.media3.extractor.ts.TsDurationReader durationReader -> l
    androidx.media3.extractor.ts.TsBinarySearchSeeker tsBinarySearchSeeker -> m
    androidx.media3.extractor.ExtractorOutput output -> n
    int remainingPmts -> o
    boolean tracksEnded -> p
    boolean hasOutputSeekMap -> q
    boolean pendingSeekToStart -> r
    androidx.media3.extractor.ts.TsPayloadReader id3Reader -> s
    int bytesSinceLastSync -> t
    int pcrPid -> u
    androidx.media3.extractor.ExtractorsFactory FACTORY -> v
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,androidx.media3.extractor.text.SubtitleParser$Factory,androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.ts.TsPayloadReader$Factory,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IILl1/t$a;Lm/e0;Lu1/k0$c;I)V"}
    2:2:void <init>(int,androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILl1/t$a;)V"}
    1:1:void resetPayloadReaders():0:0 -> A
    1:1:boolean shouldConsumePacketPayload(int):0:0 -> B
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$aHyPRZbwJDgU_mO18Lxkmj-nWeA():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:android.util.SparseArray access$000(androidx.media3.extractor.ts.TsExtractor):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)Landroid/util/SparseArray;"}
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int access$100(androidx.media3.extractor.ts.TsExtractor):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)I"}
    1:1:boolean access$1000(androidx.media3.extractor.ts.TsExtractor):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)Z"}
    1:1:boolean access$1002(androidx.media3.extractor.ts.TsExtractor,boolean):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;Z)Z"}
    1:1:int access$102(androidx.media3.extractor.ts.TsExtractor,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;I)I"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int access$108(androidx.media3.extractor.ts.TsExtractor):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)I"}
    1:1:int access$200(androidx.media3.extractor.ts.TsExtractor):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)I"}
    1:1:java.util.List access$300(androidx.media3.extractor.ts.TsExtractor):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)Ljava/util/List;"}
    1:1:int access$402(androidx.media3.extractor.ts.TsExtractor,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;I)I"}
    1:1:androidx.media3.extractor.ts.TsPayloadReader access$500(androidx.media3.extractor.ts.TsExtractor):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)Lu1/k0;"}
    1:1:androidx.media3.extractor.ts.TsPayloadReader access$502(androidx.media3.extractor.ts.TsExtractor,androidx.media3.extractor.ts.TsPayloadReader):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;Lu1/k0;)Lu1/k0;"}
    1:1:void release():0:0 -> release
    1:1:androidx.media3.extractor.ts.TsPayloadReader$Factory access$600(androidx.media3.extractor.ts.TsExtractor):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)Lu1/k0$c;"}
    1:1:androidx.media3.extractor.ExtractorOutput access$700(androidx.media3.extractor.ts.TsExtractor):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)Lo0/t;"}
    1:1:android.util.SparseBooleanArray access$800(androidx.media3.extractor.ts.TsExtractor):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)Landroid/util/SparseBooleanArray;"}
    1:1:android.util.SparseBooleanArray access$900(androidx.media3.extractor.ts.TsExtractor):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)Landroid/util/SparseBooleanArray;"}
    1:1:boolean fillBufferWithAtLeastOnePacket(androidx.media3.extractor.ExtractorInput):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int findEndOfFirstTsPacketInBuffer():0:0 -> x
    1:1:androidx.media3.extractor.Extractor[] lambda$static$1():0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void maybeOutputSeekMap(long):0:0 -> z
androidx.media3.extractor.ts.TsExtractor$$ExternalSyntheticLambda0 -> u1.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.ts.TsExtractor$$InternalSyntheticLambda$9$edc40c6d8c5f37965f50a3e6f024bf2c70fa3ec2e66efb4fc2b893795b116e43$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ts.TsExtractor$$InternalSyntheticLambda$9$edc40c6d8c5f37965f50a3e6f024bf2c70fa3ec2e66efb4fc2b893795b116e43$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.ts.TsExtractor$$InternalSyntheticLambda$9$edc40c6d8c5f37965f50a3e6f024bf2c70fa3ec2e66efb4fc2b893795b116e43$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ts.TsExtractor$$InternalSyntheticLambda$9$edc40c6d8c5f37965f50a3e6f024bf2c70fa3ec2e66efb4fc2b893795b116e43$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.ts.TsExtractor$$InternalSyntheticLambda$9$edc40c6d8c5f37965f50a3e6f024bf2c70fa3ec2e66efb4fc2b893795b116e43$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.ts.TsExtractor$PatReader -> u1.j0$a:
    androidx.media3.common.util.ParsableBitArray patScratch -> a
    androidx.media3.extractor.ts.TsExtractor this$0 -> b
    1:1:void <init>(androidx.media3.extractor.ts.TsExtractor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;)V"}
    1:1:void init(androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;Lo0/t;Lu1/k0$d;)V"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.extractor.ts.TsExtractor$PmtReader -> u1.j0$b:
    androidx.media3.common.util.ParsableBitArray pmtScratch -> a
    android.util.SparseArray trackIdToReaderScratch -> b
    android.util.SparseIntArray trackIdToPidScratch -> c
    int pid -> d
    androidx.media3.extractor.ts.TsExtractor this$0 -> e
    1:1:void <init>(androidx.media3.extractor.ts.TsExtractor,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu1/j0;I)V"}
    1:1:void init(androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;Lo0/t;Lu1/k0$d;)V"}
    1:1:androidx.media3.extractor.ts.TsPayloadReader$EsInfo readEsInfo(androidx.media3.common.util.ParsableByteArray,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)Lu1/k0$b;"}
    1:1:void consume(androidx.media3.common.util.ParsableByteArray):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;)V"}
androidx.media3.extractor.ts.TsPayloadReader -> u1.k0:
    void init(androidx.media3.common.util.TimestampAdjuster,androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/e0;Lo0/t;Lu1/k0$d;)V"}
    void seek() -> b
    void consume(androidx.media3.common.util.ParsableByteArray,int) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;I)V"}
androidx.media3.extractor.ts.TsPayloadReader$DvbSubtitleInfo -> u1.k0$a:
    java.lang.String language -> a
    int type -> b
    byte[] initializationData -> c
    1:1:void <init>(java.lang.String,int,byte[]):0:0 -> <init>
androidx.media3.extractor.ts.TsPayloadReader$EsInfo -> u1.k0$b:
    int streamType -> a
    java.lang.String language -> b
    int audioType -> c
    java.util.List dvbSubtitleInfos -> d
    byte[] descriptorBytes -> e
    1:1:void <init>(int,java.lang.String,int,java.util.List,byte[]):0:0 -> <init>
    1:1:int getRoleFlags():0:0 -> a
androidx.media3.extractor.ts.TsPayloadReader$Factory -> u1.k0$c:
    android.util.SparseArray createInitialPayloadReaders() -> a
    androidx.media3.extractor.ts.TsPayloadReader createPayloadReader(int,androidx.media3.extractor.ts.TsPayloadReader$EsInfo) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILu1/k0$b;)Lu1/k0;"}
androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator -> u1.k0$d:
    java.lang.String formatIdPrefix -> a
    int firstTrackId -> b
    int trackIdIncrement -> c
    int trackId -> d
    java.lang.String formatId -> e
    1:1:void <init>(int,int):0:0 -> <init>
    2:2:void <init>(int,int,int):0:0 -> <init>
    1:1:void generateNewId():0:0 -> a
    1:1:java.lang.String getFormatId():0:0 -> b
    1:1:int getTrackId():0:0 -> c
    1:1:void maybeThrowUninitializedError():0:0 -> d
androidx.media3.extractor.ts.TsUtil -> u1.l0:
    1:1:int findSyncBytePosition(byte[],int,int):0:0 -> a
    1:1:boolean isStartOfTsPacket(byte[],int,int,int):0:0 -> b
    1:1:long readPcrFromPacket(androidx.media3.common.util.ParsableByteArray,int,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/z;II)J"}
    1:1:long readPcrValueFromPcrBytes(byte[]):0:0 -> d
androidx.media3.extractor.ts.UserDataReader -> u1.m0:
    java.util.List closedCaptionFormats -> a
    androidx.media3.extractor.TrackOutput[] outputs -> b
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:void consume(long,androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLm/z;)V"}
    1:1:void createTracks(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.ts.TsPayloadReader$TrackIdGenerator):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lu1/k0$d;)V"}
androidx.media3.extractor.wav.WavExtractor -> v1.b:
    androidx.media3.extractor.ExtractorOutput extractorOutput -> a
    androidx.media3.extractor.TrackOutput trackOutput -> b
    int state -> c
    long rf64SampleDataSize -> d
    androidx.media3.extractor.wav.WavExtractor$OutputWriter outputWriter -> e
    int dataStartPosition -> f
    long dataEndPosition -> g
    androidx.media3.extractor.ExtractorsFactory FACTORY -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:androidx.media3.extractor.Extractor[] $r8$lambda$URPruGhQivZLhpCNQQ8AlGI26N8():0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void assertInitialized():0:0 -> c
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:androidx.media3.extractor.Extractor[] lambda$static$0():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
    1:1:void readFileType(androidx.media3.extractor.ExtractorInput):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void readFormat(androidx.media3.extractor.ExtractorInput):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void readRf64SampleDataSize(androidx.media3.extractor.ExtractorInput):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int readSampleData(androidx.media3.extractor.ExtractorInput):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)I"}
    1:1:void skipToSampleData(androidx.media3.extractor.ExtractorInput):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)V"}
    1:1:void release():0:0 -> release
androidx.media3.extractor.wav.WavExtractor$$ExternalSyntheticLambda0 -> v1.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.media3.extractor.wav.WavExtractor$$InternalSyntheticLambda$10$a6783761a6107fb90fe14db7c4ce743ddc6c85036f770d07b16789a92235ee4e$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.wav.WavExtractor$$InternalSyntheticLambda$10$a6783761a6107fb90fe14db7c4ce743ddc6c85036f770d07b16789a92235ee4e$0.setSubtitleParserFactory(androidx.media3.extractor.text.SubtitleParser$Factory):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll1/t$a;)Lo0/x;"}
    1:1:androidx.media3.extractor.ExtractorsFactory androidx.media3.extractor.wav.WavExtractor$$InternalSyntheticLambda$10$a6783761a6107fb90fe14db7c4ce743ddc6c85036f770d07b16789a92235ee4e$0.experimentalSetTextTrackTranscodingEnabled(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lo0/x;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.wav.WavExtractor$$InternalSyntheticLambda$10$a6783761a6107fb90fe14db7c4ce743ddc6c85036f770d07b16789a92235ee4e$0.createExtractors(android.net.Uri,java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/net/Uri;Ljava/util/Map;)[Lo0/r;"}
    1:1:androidx.media3.extractor.Extractor[] androidx.media3.extractor.wav.WavExtractor$$InternalSyntheticLambda$10$a6783761a6107fb90fe14db7c4ce743ddc6c85036f770d07b16789a92235ee4e$0.createExtractors():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lo0/r;"}
androidx.media3.extractor.wav.WavExtractor$ImaAdPcmOutputWriter -> v1.b$a:
    androidx.media3.extractor.ExtractorOutput extractorOutput -> a
    androidx.media3.extractor.TrackOutput trackOutput -> b
    androidx.media3.extractor.wav.WavFormat wavFormat -> c
    int framesPerBlock -> d
    byte[] inputData -> e
    androidx.media3.common.util.ParsableByteArray decodedData -> f
    int targetSampleSizeFrames -> g
    androidx.media3.common.Format format -> h
    int pendingInputBytes -> i
    long startTimeUs -> j
    int pendingOutputBytes -> k
    long outputFrameCount -> l
    int[] INDEX_TABLE -> m
    int[] STEP_TABLE -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.TrackOutput,androidx.media3.extractor.wav.WavFormat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lo0/s0;Lv1/c;)V"}
    1:1:void init(int,long):0:0 -> a
    1:1:void reset(long):0:0 -> b
    1:1:boolean sampleData(androidx.media3.extractor.ExtractorInput,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;J)Z"}
    1:1:void decode(byte[],int,androidx.media3.common.util.ParsableByteArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BILm/z;)V"}
    1:1:void decodeBlockForChannel(byte[],int,int,byte[]):0:0 -> e
    1:1:int numOutputBytesToFrames(int):0:0 -> f
    1:1:int numOutputFramesToBytes(int):0:0 -> g
    1:1:int numOutputFramesToBytes(int,int):0:0 -> h
    1:1:void writeSampleMetadata(int):0:0 -> i
androidx.media3.extractor.wav.WavExtractor$OutputWriter -> v1.b$b:
    void init(int,long) -> a
    void reset(long) -> b
    boolean sampleData(androidx.media3.extractor.ExtractorInput,long) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;J)Z"}
androidx.media3.extractor.wav.WavExtractor$PassthroughOutputWriter -> v1.b$c:
    androidx.media3.extractor.ExtractorOutput extractorOutput -> a
    androidx.media3.extractor.TrackOutput trackOutput -> b
    androidx.media3.extractor.wav.WavFormat wavFormat -> c
    androidx.media3.common.Format format -> d
    int targetSampleSizeBytes -> e
    long startTimeUs -> f
    int pendingOutputBytes -> g
    long outputFrameCount -> h
    1:1:void <init>(androidx.media3.extractor.ExtractorOutput,androidx.media3.extractor.TrackOutput,androidx.media3.extractor.wav.WavFormat,java.lang.String,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;Lo0/s0;Lv1/c;Ljava/lang/String;I)V"}
    1:1:void init(int,long):0:0 -> a
    1:1:void reset(long):0:0 -> b
    1:1:boolean sampleData(androidx.media3.extractor.ExtractorInput,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;J)Z"}
androidx.media3.extractor.wav.WavFormat -> v1.c:
    int formatType -> a
    int numChannels -> b
    int frameRateHz -> c
    int averageBytesPerSecond -> d
    int blockSize -> e
    int bitsPerSample -> f
    byte[] extraData -> g
    1:1:void <init>(int,int,int,int,int,int,byte[]):0:0 -> <init>
androidx.media3.extractor.wav.WavHeaderReader -> v1.d:
    1:1:boolean checkFileType(androidx.media3.extractor.ExtractorInput):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:androidx.media3.extractor.wav.WavFormat readFormat(androidx.media3.extractor.ExtractorInput):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Lv1/c;"}
    1:1:long readRf64SampleDataSize(androidx.media3.extractor.ExtractorInput):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)J"}
    1:1:androidx.media3.extractor.wav.WavHeaderReader$ChunkHeader skipToChunk(int,androidx.media3.extractor.ExtractorInput,androidx.media3.common.util.ParsableByteArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILo0/s;Lm/z;)Lv1/d$a;"}
    1:1:android.util.Pair skipToSampleData(androidx.media3.extractor.ExtractorInput):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Landroid/util/Pair;"}
androidx.media3.extractor.wav.WavHeaderReader$ChunkHeader -> v1.d$a:
    int id -> a
    long size -> b
    1:1:void <init>(int,long):0:0 -> <init>
    1:1:androidx.media3.extractor.wav.WavHeaderReader$ChunkHeader peek(androidx.media3.extractor.ExtractorInput,androidx.media3.common.util.ParsableByteArray):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lm/z;)Lv1/d$a;"}
androidx.media3.extractor.wav.WavSeekMap -> v1.e:
    androidx.media3.extractor.wav.WavFormat wavFormat -> a
    int framesPerBlock -> b
    long firstBlockPosition -> c
    long blockCount -> d
    long durationUs -> e
    1:1:void <init>(androidx.media3.extractor.wav.WavFormat,int,long,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv1/c;IJJ)V"}
    1:1:long blockIndexToTimeUs(long):0:0 -> a
    1:1:boolean isSeekable():0:0 -> c
    1:1:androidx.media3.extractor.SeekMap$SeekPoints getSeekPoints(long):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lo0/m0$a;"}
    1:1:long getDurationUs():0:0 -> j
androidx.media3.extractor.webp.WebpExtractor -> w1.a:
    androidx.media3.common.util.ParsableByteArray scratch -> a
    androidx.media3.extractor.SingleSampleExtractor imageExtractor -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void seek(long,long):0:0 -> a
    1:1:void init(androidx.media3.extractor.ExtractorOutput):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/t;)V"}
    1:1:androidx.media3.extractor.Extractor getUnderlyingImplementation():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo0/r;"}
    1:1:boolean sniff(androidx.media3.extractor.ExtractorInput):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;)Z"}
    1:1:int read(androidx.media3.extractor.ExtractorInput,androidx.media3.extractor.PositionHolder):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo0/s;Lo0/l0;)I"}
    1:1:java.util.List getSniffFailureDetails():0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void release():0:0 -> release
androidx.profileinstaller.BenchmarkOperation -> androidx.profileinstaller.a:
    1:1:boolean deleteFilesRecursively(java.io.File):0:0 -> a
    1:1:void dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/profileinstaller/ProfileInstallReceiver$a;)V"}
androidx.profileinstaller.BenchmarkOperation$Api21ContextHelper -> androidx.profileinstaller.a$a:
    1:1:java.io.File getCodeCacheDir(android.content.Context):0:0 -> a
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper -> androidx.profileinstaller.a$b:
    1:1:java.io.File getDeviceProtectedCodeCacheDir(android.content.Context):0:0 -> a
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper$$ExternalSyntheticApiModelOutline0 -> androidx.profileinstaller.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.Context androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper$$InternalSyntheticApiModelOutline$2$cb5cae3fa2bc2f683aac30a765a66d90fae1498f4b209d97105f03875c259c9b$0.m(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.DeviceProfileWriter -> androidx.profileinstaller.d:
    android.content.res.AssetManager mAssetManager -> a
    java.util.concurrent.Executor mExecutor -> b
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback mDiagnostics -> c
    byte[] mDesiredVersion -> d
    java.io.File mCurProfile -> e
    java.lang.String mApkName -> f
    java.lang.String mProfileSourceLocation -> g
    java.lang.String mProfileMetaSourceLocation -> h
    boolean mDeviceSupportsAotProfile -> i
    androidx.profileinstaller.DexProfileData[] mProfile -> j
    byte[] mTranscodedProfile -> k
    1:1:void $r8$lambda$ERhlvXCSfTRq-n5iULYjO-Ntn-w(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/d;ILjava/lang/Object;)V"}
    1:1:androidx.profileinstaller.DeviceProfileWriter addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;[B)Landroidx/profileinstaller/d;"}
    1:1:void assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> c
    1:1:byte[] desiredVersion():0:0 -> d
    1:1:boolean deviceAllowsProfileInstallerAotWrites():0:0 -> e
    1:1:java.io.InputStream getProfileInputStream(android.content.res.AssetManager):0:0 -> f
    1:1:void lambda$result$0(int,java.lang.Object):0:0 -> g
    1:1:java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String):0:0 -> h
    1:1:androidx.profileinstaller.DeviceProfileWriter read():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/profileinstaller/d;"}
    1:1:androidx.profileinstaller.DexProfileData[] readProfileInternal(java.io.InputStream):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;)[Landroidx/profileinstaller/e;"}
    1:1:boolean requiresMetadata():0:0 -> k
    1:1:void result(int,java.lang.Object):0:0 -> l
    1:1:androidx.profileinstaller.DeviceProfileWriter transcodeIfNeeded():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/profileinstaller/d;"}
    1:1:boolean write():0:0 -> n
androidx.profileinstaller.DeviceProfileWriter$$ExternalSyntheticLambda0 -> androidx.profileinstaller.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$0 -> f
    int androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$1 -> g
    java.lang.Object androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$2 -> h
    1:1:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.<init>(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/d;ILjava/lang/Object;)V"}
    1:1:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.DexProfileData -> androidx.profileinstaller.e:
    java.lang.String apkName -> a
    java.lang.String dexName -> b
    long dexChecksum -> c
    long mTypeIdCount -> d
    int classSetSize -> e
    int hotMethodRegionSize -> f
    int numMethodIds -> g
    int[] classes -> h
    java.util.TreeMap methods -> i
androidx.profileinstaller.Encoding -> androidx.profileinstaller.f:
    1:1:int bitsToBytes(int):0:0 -> a
    1:1:byte[] compress(byte[]):0:0 -> b
    1:1:java.lang.RuntimeException error(java.lang.String):0:0 -> c
    1:1:byte[] read(java.io.InputStream,int):0:0 -> d
    1:1:byte[] readCompressed(java.io.InputStream,int,int):0:0 -> e
    1:1:java.lang.String readString(java.io.InputStream,int):0:0 -> f
    1:1:long readUInt(java.io.InputStream,int):0:0 -> g
    1:1:int readUInt16(java.io.InputStream):0:0 -> h
    1:1:long readUInt32(java.io.InputStream):0:0 -> i
    1:1:int readUInt8(java.io.InputStream):0:0 -> j
    1:1:int utf8Length(java.lang.String):0:0 -> k
    1:1:void writeAll(java.io.InputStream,java.io.OutputStream):0:0 -> l
    1:1:void writeCompressed(java.io.OutputStream,byte[]):0:0 -> m
    1:1:void writeString(java.io.OutputStream,java.lang.String):0:0 -> n
    1:1:void writeUInt(java.io.OutputStream,long,int):0:0 -> o
    1:1:void writeUInt16(java.io.OutputStream,int):0:0 -> p
    1:1:void writeUInt32(java.io.OutputStream,long):0:0 -> q
    1:1:void writeUInt8(java.io.OutputStream,int):0:0 -> r
androidx.profileinstaller.FileSectionType -> androidx.profileinstaller.g:
    long mValue -> f
    androidx.profileinstaller.FileSectionType DEX_FILES -> g
    androidx.profileinstaller.FileSectionType EXTRA_DESCRIPTORS -> h
    androidx.profileinstaller.FileSectionType CLASSES -> i
    androidx.profileinstaller.FileSectionType METHODS -> j
    androidx.profileinstaller.FileSectionType AGGREGATION_COUNT -> k
    androidx.profileinstaller.FileSectionType[] $VALUES -> l
    1:1:androidx.profileinstaller.FileSectionType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Landroidx/profileinstaller/g;"}
    1:1:long getValue():0:0 -> b
androidx.profileinstaller.ProfileInstallReceiver -> androidx.profileinstaller.ProfileInstallReceiver:
    1:1:void saveProfile(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;)V"}
androidx.profileinstaller.ProfileInstallReceiver$$ExternalSyntheticLambda0 -> androidx.profileinstaller.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void androidx.profileinstaller.ProfileInstallReceiver$$InternalSyntheticLambda$1$badc508ffeba965baff33caef0f9caaa937087f4a11941b2d227a4d43e062ce8$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallReceiver$$InternalSyntheticLambda$1$badc508ffeba965baff33caef0f9caaa937087f4a11941b2d227a4d43e062ce8$0.execute(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics -> androidx.profileinstaller.ProfileInstallReceiver$a:
    androidx.profileinstaller.ProfileInstallReceiver this$0 -> a
    1:1:void onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    1:1:void onResultReceived(int,java.lang.Object):0:0 -> b
androidx.profileinstaller.ProfileInstaller -> androidx.profileinstaller.j:
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback EMPTY_DIAGNOSTICS -> a
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback LOG_DIAGNOSTICS -> b
    1:1:void $r8$lambda$lAFgOixnKjpoenploWSedI8N01U(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:boolean deleteProfileWrittenFor(java.io.File):0:0 -> b
    1:1:void deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)V"}
    1:1:boolean hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/pm/PackageInfo;Ljava/io/File;Landroidx/profileinstaller/j$c;)Z"}
    1:1:void lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:void noteProfileWrittenFor(android.content.pm.PackageInfo,java.io.File):0:0 -> f
    1:1:void result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:boolean transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;Ljava/lang/String;Landroid/content/pm/PackageInfo;Ljava/io/File;Ljava/lang/String;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)Z"}
    1:1:void writeProfile(android.content.Context):0:0 -> i
    1:1:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)V"}
    1:1:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;Z)V"}
    1:1:void writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Landroidx/profileinstaller/j$c;)V"}
androidx.profileinstaller.ProfileInstaller$$ExternalSyntheticLambda0 -> androidx.profileinstaller.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$0 -> f
    int androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$1 -> g
    java.lang.Object androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.f$2 -> h
    1:1:void androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.<init>(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/j$c;ILjava/lang/Object;)V"}
    1:1:void androidx.profileinstaller.ProfileInstaller$$InternalSyntheticLambda$2$65490b9c13bc944dbb73adee505080a4d07beef482bc93a2158a7f2f0fd1d69f$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstaller$1 -> androidx.profileinstaller.j$a:
    1:1:void onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    1:1:void onResultReceived(int,java.lang.Object):0:0 -> b
androidx.profileinstaller.ProfileInstaller$2 -> androidx.profileinstaller.j$b:
    1:1:void onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    1:1:void onResultReceived(int,java.lang.Object):0:0 -> b
androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback -> androidx.profileinstaller.j$c:
    void onDiagnosticReceived(int,java.lang.Object) -> a
    void onResultReceived(int,java.lang.Object) -> b
androidx.profileinstaller.ProfileInstallerInitializer -> androidx.profileinstaller.ProfileInstallerInitializer:
    1:1:java.util.List dependencies():0:0 -> a
    1:1:java.lang.Object create(android.content.Context):0:0 -> b
    1:1:void $r8$lambda$QGpANLTF0YGY0pXfe2eje4OKwkc(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$nkOIpN4NfyreWbcXjHv0xCvwgTY(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void $r8$lambda$nvFqT5BztGB-MvszW9GUTUoI9rw(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/profileinstaller/ProfileInstallerInitializer$c;"}
    1:1:void delayAfterFirstFrame(android.content.Context):0:0 -> g
    1:1:void installAfterDelay(android.content.Context):0:0 -> h
    1:1:void lambda$delayAfterFirstFrame$0(android.content.Context):0:0 -> i
    1:1:void lambda$installAfterDelay$1(android.content.Context):0:0 -> j
    1:1:void lambda$writeInBackground$2(android.content.Context):0:0 -> k
    1:1:void writeInBackground(android.content.Context):0:0 -> l
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0 -> androidx.profileinstaller.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstallerInitializer androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$0 -> f
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$1 -> g
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.<init>(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1 -> androidx.profileinstaller.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.f$0 -> f
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda2 -> androidx.profileinstaller.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.f$0 -> f
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.<init>(android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$3$1b1cec693e412c5dc4a2dbf245cfebff0f105fdacac68e9d3717681789f42374$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl -> androidx.profileinstaller.ProfileInstallerInitializer$a:
    1:1:void $r8$lambda$DSwPKNQiVu4DdgIKQZrSpqkWM-A(java.lang.Runnable,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void lambda$postFrameCallback$0(java.lang.Runnable,long):0:0 -> b
    1:1:void postFrameCallback(java.lang.Runnable):0:0 -> c
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0 -> androidx.profileinstaller.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.f$0 -> f
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.<init>(java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.doFrame(long):0:0 -> doFrame
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl -> androidx.profileinstaller.ProfileInstallerInitializer$b:
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl$$ExternalSyntheticApiModelOutline0 -> androidx.profileinstaller.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.Handler androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl$$InternalSyntheticApiModelOutline$3$8d52cf30b98a04962970f0c5e6c7c8573caae9b733781b8847fa0ec96d6a0ee8$0.m(android.os.Looper):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Result -> androidx.profileinstaller.ProfileInstallerInitializer$c:
androidx.profileinstaller.ProfileTranscoder -> androidx.profileinstaller.p:
    byte[] MAGIC_PROF -> a
    byte[] MAGIC_PROFM -> b
    1:1:void skipInlineCache(java.io.InputStream):0:0 -> A
    1:1:boolean transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[B[Landroidx/profileinstaller/e;)Z"}
    1:1:void writeClasses(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:androidx.profileinstaller.WritableFileSection writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;)Landroidx/profileinstaller/s;"}
    1:1:void writeHeader(java.io.OutputStream,byte[]):0:0 -> E
    1:1:void writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:void writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;Ljava/lang/String;)V"}
    1:1:void writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:void writeMethodsWithInlineCaches(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:void writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/OutputStream;[Landroidx/profileinstaller/e;)V"}
    1:1:int computeMethodFlags(androidx.profileinstaller.DexProfileData):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/e;)I"}
    1:1:byte[] createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;[B)[B"}
    1:1:androidx.profileinstaller.WritableFileSection createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;)Landroidx/profileinstaller/s;"}
    1:1:androidx.profileinstaller.WritableFileSection createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;)Landroidx/profileinstaller/s;"}
    1:1:byte[] createMethodBitmapRegion(androidx.profileinstaller.DexProfileData):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/e;)[B"}
    1:1:byte[] createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/profileinstaller/e;)[B"}
    1:1:java.lang.String enforceSeparator(java.lang.String,java.lang.String):0:0 -> g
    1:1:java.lang.String extractKey(java.lang.String):0:0 -> h
    1:1:androidx.profileinstaller.DexProfileData findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Landroidx/profileinstaller/e;Ljava/lang/String;)Landroidx/profileinstaller/e;"}
    1:1:java.lang.String generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> j
    1:1:int getMethodBitmapStorageSize(int):0:0 -> k
    1:1:int methodFlagBitmapIndex(int,int,int):0:0 -> l
    1:1:int[] readClasses(java.io.InputStream,int):0:0 -> m
    1:1:int readFlagsFromBitmap(java.util.BitSet,int,int):0:0 -> n
    1:1:byte[] readHeader(java.io.InputStream,byte[]):0:0 -> o
    1:1:void readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Landroidx/profileinstaller/e;)V"}
    1:1:androidx.profileinstaller.DexProfileData[] readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[B[B[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[B[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;I[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[B[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[BI[Landroidx/profileinstaller/e;)[Landroidx/profileinstaller/e;"}
    1:1:void readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Landroidx/profileinstaller/e;)V"}
    1:1:androidx.profileinstaller.DexProfileData[] readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;[BLjava/lang/String;)[Landroidx/profileinstaller/e;"}
    1:1:androidx.profileinstaller.DexProfileData[] readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/InputStream;Ljava/lang/String;I)[Landroidx/profileinstaller/e;"}
    1:1:int roundUpToByte(int):0:0 -> y
    1:1:void setMethodBitmapBit(byte[],int,int,androidx.profileinstaller.DexProfileData):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"([BIILandroidx/profileinstaller/e;)V"}
androidx.profileinstaller.ProfileVerifier -> androidx.profileinstaller.q:
    androidx.concurrent.futures.ResolvableFuture sFuture -> a
    java.lang.Object SYNC_OBJ -> b
    androidx.profileinstaller.ProfileVerifier$CompilationStatus sCompilationStatus -> c
    1:1:long getPackageLastUpdateTime(android.content.Context):0:0 -> a
    1:1:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZZ)Landroidx/profileinstaller/q$c;"}
    1:1:androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)Landroidx/profileinstaller/q$c;"}
androidx.profileinstaller.ProfileVerifier$Api33Impl -> androidx.profileinstaller.q$a:
    1:1:android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context):0:0 -> a
androidx.profileinstaller.ProfileVerifier$Cache -> androidx.profileinstaller.q$b:
    int mSchema -> a
    int mResultCode -> b
    long mPackageLastUpdateTime -> c
    long mInstalledCurrentProfileSize -> d
    1:1:androidx.profileinstaller.ProfileVerifier$Cache readFromFile(java.io.File):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;)Landroidx/profileinstaller/q$b;"}
    1:1:void writeOnFile(java.io.File):0:0 -> b
androidx.profileinstaller.ProfileVerifier$CompilationStatus -> androidx.profileinstaller.q$c:
    int mResultCode -> a
    boolean mHasReferenceProfile -> b
    boolean mHasCurrentProfile -> c
androidx.profileinstaller.ProfileVersion -> androidx.profileinstaller.r:
    byte[] V015_S -> a
    byte[] V010_P -> b
    byte[] V009_O_MR1 -> c
    byte[] V005_O -> d
    byte[] V001_N -> e
    byte[] METADATA_V001_N -> f
    byte[] METADATA_V002 -> g
    1:1:java.lang.String dexKeySeparator(byte[]):0:0 -> a
androidx.profileinstaller.WritableFileSection -> androidx.profileinstaller.s:
    androidx.profileinstaller.FileSectionType mType -> a
    int mExpectedInflateSize -> b
    byte[] mContents -> c
    boolean mNeedsCompression -> d
androidx.startup.AppInitializer -> androidx.startup.a:
    java.util.Map mInitialized -> a
    java.util.Set mDiscovered -> b
    android.content.Context mContext -> c
    androidx.startup.AppInitializer sInstance -> d
    java.lang.Object sLock -> e
    1:1:void discoverAndInitialize():0:0 -> a
    1:1:void discoverAndInitialize(android.os.Bundle):0:0 -> b
    1:1:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> c
    1:1:androidx.startup.AppInitializer getInstance(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/startup/a;"}
    1:1:boolean isEagerlyInitialized(java.lang.Class):0:0 -> e
androidx.startup.Initializer -> x1.a:
    java.util.List dependencies() -> a
    java.lang.Object create(android.content.Context) -> b
androidx.startup.R$string -> x1.b:
    int androidx_startup -> a
androidx.startup.StartupException -> x1.c:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.Throwable):0:0 -> <init>
androidx.tracing.Trace -> y1.a:
    long sTraceTagApp -> a
    java.lang.reflect.Method sIsTagEnabledMethod -> b
    java.lang.reflect.Method sAsyncTraceBeginMethod -> c
    java.lang.reflect.Method sAsyncTraceEndMethod -> d
    1:1:void beginAsyncSection(java.lang.String,int):0:0 -> a
    1:1:void beginAsyncSectionFallback(java.lang.String,int):0:0 -> b
    1:1:void beginSection(java.lang.String):0:0 -> c
    1:1:void endAsyncSection(java.lang.String,int):0:0 -> d
    1:1:void endAsyncSectionFallback(java.lang.String,int):0:0 -> e
    1:1:void endSection():0:0 -> f
    1:1:void handleException(java.lang.String,java.lang.Exception):0:0 -> g
    1:1:boolean isEnabled():0:0 -> h
    1:1:boolean isEnabledFallback():0:0 -> i
    1:1:java.lang.String truncatedTraceSectionLabel(java.lang.String):0:0 -> j
androidx.tracing.TraceApi18Impl -> y1.b:
    1:1:void beginSection(java.lang.String):0:0 -> a
    1:1:void endSection():0:0 -> b
androidx.tracing.TraceApi29Impl -> y1.c:
    1:1:void beginAsyncSection(java.lang.String,int):0:0 -> a
    1:1:void endAsyncSection(java.lang.String,int):0:0 -> b
    1:1:boolean isEnabled():0:0 -> c
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> f
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
    1:1:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel):0:0 -> a
    1:1:androidx.versionedparcelable.ParcelImpl[] newArray(int):0:0 -> b
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.a:
    androidx.collection.ArrayMap mReadCache -> a
    androidx.collection.ArrayMap mWriteCache -> b
    androidx.collection.ArrayMap mParcelizerCache -> c
    1:1:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/a;Ld/a;Ld/a;)V"}
    void writeByteArray(byte[]) -> A
    1:1:void writeByteArray(byte[],int):0:0 -> B
    void writeCharSequence(java.lang.CharSequence) -> C
    1:1:void writeCharSequence(java.lang.CharSequence,int):0:0 -> D
    void writeInt(int) -> E
    1:1:void writeInt(int,int):0:0 -> F
    void writeParcelable(android.os.Parcelable) -> G
    1:1:void writeParcelable(android.os.Parcelable,int):0:0 -> H
    void writeString(java.lang.String) -> I
    1:1:void writeString(java.lang.String,int):0:0 -> J
    1:1:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a;Landroidx/versionedparcelable/a;)V"}
    1:1:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a;)V"}
    1:1:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a;I)V"}
    1:1:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a;)V"}
    void closeField() -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/versionedparcelable/a;"}
    1:1:java.lang.Class findParcelClass(java.lang.Class):0:0 -> c
    1:1:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> d
    1:1:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> e
    1:1:boolean isStream():0:0 -> f
    boolean readBoolean() -> g
    1:1:boolean readBoolean(boolean,int):0:0 -> h
    byte[] readByteArray() -> i
    1:1:byte[] readByteArray(byte[],int):0:0 -> j
    java.lang.CharSequence readCharSequence() -> k
    1:1:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int):0:0 -> l
    boolean readField(int) -> m
    1:1:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Landroidx/versionedparcelable/a;)Lz1/a;"}
    int readInt() -> o
    1:1:int readInt(int,int):0:0 -> p
    android.os.Parcelable readParcelable() -> q
    1:1:android.os.Parcelable readParcelable(android.os.Parcelable,int):0:0 -> r
    java.lang.String readString() -> s
    1:1:java.lang.String readString(java.lang.String,int):0:0 -> t
    1:1:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz1/a;"}
    1:1:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz1/a;I)Lz1/a;"}
    void setOutputField(int) -> w
    1:1:void setSerializationFlags(boolean,boolean):0:0 -> x
    void writeBoolean(boolean) -> y
    1:1:void writeBoolean(boolean,int):0:0 -> z
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.b:
    android.util.SparseIntArray mPositionLookup -> d
    android.os.Parcel mParcel -> e
    int mOffset -> f
    int mEnd -> g
    java.lang.String mPrefix -> h
    int mCurrentField -> i
    int mNextRead -> j
    int mFieldId -> k
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;IILjava/lang/String;Ld/a;Ld/a;Ld/a;)V"}
    1:1:void writeByteArray(byte[]):0:0 -> A
    1:1:void writeCharSequence(java.lang.CharSequence):0:0 -> C
    1:1:void writeInt(int):0:0 -> E
    1:1:void writeParcelable(android.os.Parcelable):0:0 -> G
    1:1:void writeString(java.lang.String):0:0 -> I
    1:1:void closeField():0:0 -> a
    1:1:androidx.versionedparcelable.VersionedParcel createSubParcel():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/versionedparcelable/a;"}
    1:1:boolean readBoolean():0:0 -> g
    1:1:byte[] readByteArray():0:0 -> i
    1:1:java.lang.CharSequence readCharSequence():0:0 -> k
    1:1:boolean readField(int):0:0 -> m
    1:1:int readInt():0:0 -> o
    1:1:android.os.Parcelable readParcelable():0:0 -> q
    1:1:java.lang.String readString():0:0 -> s
    1:1:void setOutputField(int):0:0 -> w
    1:1:void writeBoolean(boolean):0:0 -> y
androidx.versionedparcelable.VersionedParcelable -> z1.a:
androidx.window.SafeWindowExtensionsProvider -> a2.a:
    java.lang.ClassLoader loader -> a
    1:1:void <init>(java.lang.ClassLoader):0:0 -> <init>
    1:1:java.lang.ClassLoader access$getLoader$p(androidx.window.SafeWindowExtensionsProvider):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;)Ljava/lang/ClassLoader;"}
    1:1:java.lang.Class access$getWindowExtensionsProviderClass(androidx.window.SafeWindowExtensionsProvider):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;)Ljava/lang/Class;"}
    1:1:java.lang.Class getWindowExtensionsClass$window_release():0:0 -> c
    1:1:java.lang.Class getWindowExtensionsProviderClass():0:0 -> d
    1:1:boolean isWindowExtensionsPresent():0:0 -> e
    1:1:boolean isWindowExtensionsValid$window_release():0:0 -> f
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsPresent$1 -> a2.a$a:
    androidx.window.SafeWindowExtensionsProvider this$0 -> g
    1:1:void <init>(androidx.window.SafeWindowExtensionsProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;)V"}
    1:1:java.lang.Class invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> e
androidx.window.SafeWindowExtensionsProvider$isWindowExtensionsValid$1 -> a2.a$b:
    androidx.window.SafeWindowExtensionsProvider this$0 -> g
    1:1:void <init>(androidx.window.SafeWindowExtensionsProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La2/a;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> e
androidx.window.core.AndroidLogger -> b2.a:
    androidx.window.core.AndroidLogger INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void debug(java.lang.String,java.lang.String):0:0 -> a
androidx.window.core.Bounds -> b2.b:
    int left -> a
    int top -> b
    int right -> c
    int bottom -> d
    1:1:void <init>(int,int,int,int):0:0 -> <init>
    2:2:void <init>(android.graphics.Rect):0:0 -> <init>
    1:1:int getHeight():0:0 -> a
    1:1:int getLeft():0:0 -> b
    1:1:int getTop():0:0 -> c
    1:1:int getWidth():0:0 -> d
    1:1:boolean isZero():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:android.graphics.Rect toRect():0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.core.BuildConfig -> b2.c:
    androidx.window.core.BuildConfig INSTANCE -> a
    androidx.window.core.VerificationMode verificationMode -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.core.VerificationMode getVerificationMode():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/j;"}
androidx.window.core.ConsumerAdapter -> b2.d:
    java.lang.ClassLoader loader -> a
    1:1:void <init>(java.lang.ClassLoader):0:0 -> <init>
    1:1:java.lang.Object buildConsumer(kotlin.reflect.KClass,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu3/b;Lp3/l;)Ljava/lang/Object;"}
    1:1:java.lang.Class consumerClassOrNull$window_release():0:0 -> b
    1:1:androidx.window.core.ConsumerAdapter$Subscription createSubscription(java.lang.Object,kotlin.reflect.KClass,java.lang.String,java.lang.String,android.app.Activity,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lu3/b;Ljava/lang/String;Ljava/lang/String;Landroid/app/Activity;Lp3/l;)Lb2/d$b;"}
    1:1:java.lang.Class unsafeConsumerClass():0:0 -> d
androidx.window.core.ConsumerAdapter$ConsumerHandler -> b2.d$a:
    kotlin.reflect.KClass clazz -> a
    kotlin.jvm.functions.Function1 consumer -> b
    1:1:void <init>(kotlin.reflect.KClass,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu3/b;Lp3/l;)V"}
    1:1:void invokeAccept(java.lang.Object):0:0 -> a
    1:1:boolean isAccept(java.lang.reflect.Method,java.lang.Object[]):0:0 -> b
    1:1:boolean isEquals(java.lang.reflect.Method,java.lang.Object[]):0:0 -> c
    1:1:boolean isHashCode(java.lang.reflect.Method,java.lang.Object[]):0:0 -> d
    1:1:boolean isToString(java.lang.reflect.Method,java.lang.Object[]):0:0 -> e
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]):0:0 -> invoke
androidx.window.core.ConsumerAdapter$Subscription -> b2.d$b:
    void dispose() -> a
androidx.window.core.ConsumerAdapter$createSubscription$1 -> b2.d$c:
    java.lang.reflect.Method $removeMethod -> a
    java.lang.Object $obj -> b
    java.lang.Object $javaConsumer -> c
    1:1:void <init>(java.lang.reflect.Method,java.lang.Object,java.lang.Object):0:0 -> <init>
    1:1:void dispose():0:0 -> a
androidx.window.core.ExtensionsUtil -> b2.e:
    androidx.window.core.ExtensionsUtil INSTANCE -> a
    java.lang.String TAG -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int getSafeVendorApiLevel():0:0 -> a
androidx.window.core.FailedSpecification -> b2.f:
    java.lang.Object value -> b
    java.lang.String tag -> c
    java.lang.String message -> d
    androidx.window.core.Logger logger -> e
    androidx.window.core.VerificationMode verificationMode -> f
    androidx.window.core.WindowStrictModeException exception -> g
    1:1:void <init>(java.lang.Object,java.lang.String,java.lang.String,androidx.window.core.Logger,androidx.window.core.VerificationMode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lb2/g;Lb2/j;)V"}
    1:1:java.lang.Object compute():0:0 -> a
    1:1:androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lp3/l;)Lb2/h;"}
androidx.window.core.FailedSpecification$WhenMappings -> b2.f$a:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.window.core.Logger -> b2.g:
    void debug(java.lang.String,java.lang.String) -> a
androidx.window.core.SpecificationComputer -> b2.h:
    androidx.window.core.SpecificationComputer$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    java.lang.Object compute() -> a
    1:1:java.lang.String createMessage(java.lang.Object,java.lang.String):0:0 -> b
    androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lp3/l;)Lb2/h;"}
androidx.window.core.SpecificationComputer$Companion -> b2.h$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:androidx.window.core.SpecificationComputer startSpecification(java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/String;Lb2/j;Lb2/g;)Lb2/h;"}
    1:1:androidx.window.core.SpecificationComputer startSpecification$default(androidx.window.core.SpecificationComputer$Companion,java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/h$a;Ljava/lang/Object;Ljava/lang/String;Lb2/j;Lb2/g;ILjava/lang/Object;)Lb2/h;"}
androidx.window.core.ValidSpecification -> b2.i:
    java.lang.Object value -> b
    java.lang.String tag -> c
    androidx.window.core.VerificationMode verificationMode -> d
    androidx.window.core.Logger logger -> e
    1:1:void <init>(java.lang.Object,java.lang.String,androidx.window.core.VerificationMode,androidx.window.core.Logger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/String;Lb2/j;Lb2/g;)V"}
    1:1:java.lang.Object compute():0:0 -> a
    1:1:androidx.window.core.SpecificationComputer require(java.lang.String,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lp3/l;)Lb2/h;"}
androidx.window.core.VerificationMode -> b2.j:
    androidx.window.core.VerificationMode STRICT -> f
    androidx.window.core.VerificationMode LOG -> g
    androidx.window.core.VerificationMode QUIET -> h
    androidx.window.core.VerificationMode[] $VALUES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:androidx.window.core.VerificationMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lb2/j;"}
    1:1:androidx.window.core.VerificationMode valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lb2/j;"}
    1:1:androidx.window.core.VerificationMode[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lb2/j;"}
androidx.window.core.Version -> b2.k:
    int major -> f
    int minor -> g
    int patch -> h
    java.lang.String description -> i
    kotlin.Lazy bigInteger$delegate -> j
    androidx.window.core.Version$Companion Companion -> k
    androidx.window.core.Version UNKNOWN -> l
    androidx.window.core.Version VERSION_0_1 -> m
    androidx.window.core.Version VERSION_1_0 -> n
    androidx.window.core.Version CURRENT -> o
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int,java.lang.String):0:0 -> <init>
    2:2:void <init>(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IIILjava/lang/String;Lq3/g;)V"}
    1:1:androidx.window.core.Version access$getVERSION_0_1$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/k;"}
    1:1:int compareTo(androidx.window.core.Version):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/k;)I"}
    1:1:java.math.BigInteger getBigInteger():0:0 -> c
    1:1:int compareTo(java.lang.Object):0:0 -> compareTo
    1:1:int getMajor():0:0 -> d
    1:1:int getMinor():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int getPatch():0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.core.Version$Companion -> b2.k$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:androidx.window.core.Version getVERSION_0_1():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/k;"}
    1:1:androidx.window.core.Version parse(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lb2/k;"}
androidx.window.core.Version$bigInteger$2 -> b2.k$b:
    androidx.window.core.Version this$0 -> g
    1:1:void <init>(androidx.window.core.Version):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/k;)V"}
    1:1:java.math.BigInteger invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> e
androidx.window.core.WindowStrictModeException -> b2.l:
    1:1:void <init>(java.lang.String):0:0 -> <init>
androidx.window.java.core.CallbackToFlowAdapter -> c2.a:
    java.util.concurrent.locks.ReentrantLock lock -> a
    java.util.Map consumerToJobMap -> b
    1:1:void <init>():0:0 -> <init>
    1:1:void connect(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;Lg/a;La4/c;)V"}
    1:1:void disconnect(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1 -> c2.a$a:
    int label -> j
    kotlinx.coroutines.flow.Flow $flow -> k
    androidx.core.util.Consumer $consumer -> l
    1:1:void <init>(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/c;Lg/a;Lh3/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Lh3/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/d0;Lh3/d;)Ljava/lang/Object;"}
androidx.window.java.core.CallbackToFlowAdapter$connect$1$1$1 -> c2.a$a$a:
    androidx.core.util.Consumer $consumer -> a
    1:1:void <init>(androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter -> d2.a:
    androidx.window.layout.WindowInfoTracker tracker -> b
    androidx.window.java.core.CallbackToFlowAdapter callbackToFlowAdapter -> c
    1:1:void <init>(androidx.window.layout.WindowInfoTracker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/f;)V"}
    2:2:void <init>(androidx.window.layout.WindowInfoTracker,androidx.window.java.core.CallbackToFlowAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/f;Lc2/a;)V"}
    1:1:kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)La4/c;"}
    1:1:void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ljava/util/concurrent/Executor;Lg/a;)V"}
    1:1:void removeWindowLayoutInfoListener(androidx.core.util.Consumer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
androidx.window.layout.DisplayFeature -> e2.a:
    android.graphics.Rect getBounds() -> a
androidx.window.layout.EmptyDecorator -> e2.b:
    androidx.window.layout.EmptyDecorator INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/f;)Le2/f;"}
androidx.window.layout.FoldingFeature -> e2.c:
    androidx.window.layout.FoldingFeature$State getState() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/c$b;"}
    androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType() -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/c$a;"}
androidx.window.layout.FoldingFeature$OcclusionType -> e2.c$a:
    java.lang.String description -> a
    androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion -> b
    androidx.window.layout.FoldingFeature$OcclusionType NONE -> c
    androidx.window.layout.FoldingFeature$OcclusionType FULL -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.FoldingFeature$OcclusionType$Companion -> e2.c$a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
androidx.window.layout.FoldingFeature$State -> e2.c$b:
    java.lang.String description -> a
    androidx.window.layout.FoldingFeature$State$Companion Companion -> b
    androidx.window.layout.FoldingFeature$State FLAT -> c
    androidx.window.layout.FoldingFeature$State HALF_OPENED -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.FoldingFeature$State$Companion -> e2.c$b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
androidx.window.layout.HardwareFoldingFeature -> e2.d:
    androidx.window.core.Bounds featureBounds -> a
    androidx.window.layout.HardwareFoldingFeature$Type type -> b
    androidx.window.layout.FoldingFeature$State state -> c
    androidx.window.layout.HardwareFoldingFeature$Companion Companion -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Le2/d$b;Le2/c$b;)V"}
    1:1:android.graphics.Rect getBounds():0:0 -> a
    1:1:androidx.window.layout.FoldingFeature$State getState():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/c$b;"}
    1:1:androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/c$a;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.HardwareFoldingFeature$Companion -> e2.d$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:void validateFeatureBounds$window_release(androidx.window.core.Bounds):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;)V"}
androidx.window.layout.HardwareFoldingFeature$Type -> e2.d$b:
    java.lang.String description -> a
    androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion -> b
    androidx.window.layout.HardwareFoldingFeature$Type FOLD -> c
    androidx.window.layout.HardwareFoldingFeature$Type HINGE -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/d$b;"}
    1:1:androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/d$b;"}
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.HardwareFoldingFeature$Type$Companion -> e2.d$b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:androidx.window.layout.HardwareFoldingFeature$Type getFOLD():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/d$b;"}
    1:1:androidx.window.layout.HardwareFoldingFeature$Type getHINGE():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/d$b;"}
androidx.window.layout.SafeWindowLayoutComponentProvider -> e2.e:
    java.lang.ClassLoader loader -> a
    androidx.window.core.ConsumerAdapter consumerAdapter -> b
    androidx.window.SafeWindowExtensionsProvider safeWindowExtensionsProvider -> c
    1:1:void <init>(java.lang.ClassLoader,androidx.window.core.ConsumerAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/ClassLoader;Lb2/d;)V"}
    1:1:androidx.window.core.ConsumerAdapter access$getConsumerAdapter$p(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)Lb2/d;"}
    1:1:java.lang.Class access$getFoldingFeatureClass(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)Ljava/lang/Class;"}
    1:1:androidx.window.SafeWindowExtensionsProvider access$getSafeWindowExtensionsProvider$p(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)La2/a;"}
    1:1:java.lang.Class access$getWindowLayoutComponentClass(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)Ljava/lang/Class;"}
    1:1:boolean canUseWindowLayoutComponent():0:0 -> e
    1:1:java.lang.Class getFoldingFeatureClass():0:0 -> f
    1:1:androidx.window.extensions.layout.WindowLayoutComponent getWindowLayoutComponent():0:0 -> g
    1:1:java.lang.Class getWindowLayoutComponentClass():0:0 -> h
    1:1:boolean hasValidVendorApiLevel1$window_release():0:0 -> i
    1:1:boolean hasValidVendorApiLevel2$window_release():0:0 -> j
    1:1:boolean isFoldingFeatureValid():0:0 -> k
    1:1:boolean isMethodWindowLayoutInfoListenerJavaConsumerValid():0:0 -> l
    1:1:boolean isMethodWindowLayoutInfoListenerWindowConsumerValid():0:0 -> m
    1:1:boolean isWindowLayoutComponentAccessible$window_release():0:0 -> n
    1:1:boolean isWindowLayoutProviderValid():0:0 -> o
androidx.window.layout.SafeWindowLayoutComponentProvider$isFoldingFeatureValid$1 -> e2.e$a:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> g
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> e
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerJavaConsumerValid$1 -> e2.e$b:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> g
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> e
androidx.window.layout.SafeWindowLayoutComponentProvider$isMethodWindowLayoutInfoListenerWindowConsumerValid$1 -> e2.e$c:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> g
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> e
androidx.window.layout.SafeWindowLayoutComponentProvider$isWindowLayoutProviderValid$1 -> e2.e$d:
    androidx.window.layout.SafeWindowLayoutComponentProvider this$0 -> g
    1:1:void <init>(androidx.window.layout.SafeWindowLayoutComponentProvider):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/e;)V"}
    1:1:java.lang.Boolean invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> e
androidx.window.layout.WindowInfoTracker -> e2.f:
    androidx.window.layout.WindowInfoTracker$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
    kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)La4/c;"}
androidx.window.layout.WindowInfoTracker$Companion -> e2.f$a:
    androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE -> a
    boolean DEBUG -> b
    java.lang.String TAG -> c
    kotlin.Lazy extensionBackend$delegate -> d
    androidx.window.layout.WindowInfoTrackerDecorator decorator -> e
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean access$getDEBUG$p():0:0 -> a
    1:1:java.lang.String access$getTAG$p():0:0 -> b
    1:1:androidx.window.layout.adapter.WindowBackend getExtensionBackend$window_release():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf2/a;"}
    1:1:androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Le2/f;"}
androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2 -> e2.f$a$a:
    androidx.window.layout.WindowInfoTracker$Companion$extensionBackend$2 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.window.layout.adapter.WindowBackend invoke():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lf2/a;"}
    1:1:java.lang.Object invoke():0:0 -> e
androidx.window.layout.WindowInfoTrackerDecorator -> e2.g:
    androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/f;)Le2/f;"}
androidx.window.layout.WindowInfoTrackerImpl -> e2.i:
    androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator -> b
    androidx.window.layout.adapter.WindowBackend windowBackend -> c
    1:1:void <init>(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.adapter.WindowBackend):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/m;Lf2/a;)V"}
    1:1:kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)La4/c;"}
    1:1:androidx.window.layout.adapter.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i;)Lf2/a;"}
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2 -> e2.i$a:
    int label -> j
    java.lang.Object L$0 -> k
    androidx.window.layout.WindowInfoTrackerImpl this$0 -> l
    android.app.Activity $activity -> m
    1:1:void <init>(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i;Landroid/app/Activity;Lh3/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Lh3/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
    1:1:void $r8$lambda$ZtyEPDD_2v4gDwMCwKS3X4pa0JY(kotlinx.coroutines.channels.ProducerScope,androidx.window.layout.WindowLayoutInfo):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/r;Le2/j;)V"}
    1:1:java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/r;Lh3/d;)Ljava/lang/Object;"}
    1:1:void invokeSuspend$lambda$0(kotlinx.coroutines.channels.ProducerScope,androidx.window.layout.WindowLayoutInfo):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/r;Le2/j;)V"}
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$ExternalSyntheticLambda0 -> e2.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlinx.coroutines.channels.ProducerScope androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$InternalSyntheticLambda$1$3439cd9e065b3cff2394bf010e6292f8dc2b9d9af5aa86005a10f448b0ffb373$0.f$0 -> a
    1:1:void androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$InternalSyntheticLambda$1$3439cd9e065b3cff2394bf010e6292f8dc2b9d9af5aa86005a10f448b0ffb373$0.<init>(kotlinx.coroutines.channels.ProducerScope):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/r;)V"}
    1:1:void androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$$InternalSyntheticLambda$1$3439cd9e065b3cff2394bf010e6292f8dc2b9d9af5aa86005a10f448b0ffb373$0.accept(java.lang.Object):0:0 -> accept
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$2$2 -> e2.i$a$a:
    androidx.window.layout.WindowInfoTrackerImpl this$0 -> g
    androidx.core.util.Consumer $listener -> h
    1:1:void <init>(androidx.window.layout.WindowInfoTrackerImpl,androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/i;Lg/a;)V"}
    1:1:void invoke():0:0 -> a
    1:1:java.lang.Object invoke():0:0 -> e
androidx.window.layout.WindowLayoutInfo -> e2.j:
    java.util.List displayFeatures -> a
    1:1:void <init>(java.util.List):0:0 -> <init>
    1:1:java.util.List getDisplayFeatures():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.WindowMetrics -> e2.k:
    androidx.window.core.Bounds _bounds -> a
    androidx.core.view.WindowInsetsCompat _windowInsetsCompat -> b
    1:1:void <init>(android.graphics.Rect,androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Landroidx/core/view/i;)V"}
    2:2:void <init>(android.graphics.Rect,androidx.core.view.WindowInsetsCompat,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Landroidx/core/view/i;ILq3/g;)V"}
    3:3:void <init>(androidx.window.core.Bounds,androidx.core.view.WindowInsetsCompat):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/b;Landroidx/core/view/i;)V"}
    1:1:android.graphics.Rect getBounds():0:0 -> a
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
androidx.window.layout.WindowMetricsCalculator -> e2.m:
    androidx.window.layout.WindowMetricsCalculator$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
    androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Le2/k;"}
androidx.window.layout.WindowMetricsCalculator$-CC -> e2.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void <clinit>():0:0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    1:7:androidx.window.layout.WindowMetricsCalculator androidx.window.layout.WindowMetricsCalculator.getOrCreate():0:0 -> a
    1:7:androidx.window.layout.WindowMetricsCalculator getOrCreate():0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/m;"}
androidx.window.layout.WindowMetricsCalculator$Companion -> e2.m$a:
    androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE -> a
    kotlin.jvm.functions.Function1 decorator -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.WindowMetricsCalculator getOrCreate():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/m;"}
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 -> e2.m$a$a:
    androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/m;)Le2/m;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
androidx.window.layout.WindowMetricsCalculatorCompat -> e2.p:
    androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE -> b
    java.lang.String TAG -> c
    java.util.ArrayList insetsTypeMasks -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Le2/k;"}
    1:1:androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Le2/k;"}
    1:1:androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Le2/k;"}
    1:1:androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.content.Context):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Le2/k;"}
    1:1:android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity):0:0 -> e
    1:1:android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity):0:0 -> f
    1:1:android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity):0:0 -> g
    1:1:android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity):0:0 -> h
    1:1:androidx.core.view.WindowInsetsCompat computeWindowInsetsCompat$window_release(android.content.Context):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/core/view/i;"}
    1:1:android.view.DisplayCutout getCutoutForDisplay(android.view.Display):0:0 -> j
    1:1:int getNavigationBarHeight(android.content.Context):0:0 -> k
    1:1:android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display):0:0 -> l
    1:1:void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect):0:0 -> m
androidx.window.layout.WindowMetricsCalculatorCompat$$ExternalSyntheticApiModelOutline0 -> e2.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.window.layout.WindowMetricsCalculatorCompat$$InternalSyntheticApiModelOutline$2$fec12a0d2db9672587b75f0d9357eb68b131cde69fd9f877e73a50b9815945fb$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.WindowMetricsCalculatorCompat$$ExternalSyntheticApiModelOutline1 -> e2.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.DisplayCutout androidx.window.layout.WindowMetricsCalculatorCompat$$InternalSyntheticApiModelOutline$2$fec12a0d2db9672587b75f0d9357eb68b131cde69fd9f877e73a50b9815945fb$1.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.adapter.WindowBackend -> f2.a:
    void unregisterLayoutChangeCallback(androidx.core.util.Consumer) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
    void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Lg/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackend -> g2.a:
    androidx.window.layout.adapter.extensions.ExtensionWindowBackend$Companion Companion -> a
    1:1:void <clinit>():0:0 -> <clinit>
androidx.window.layout.adapter.extensions.ExtensionWindowBackend$Companion -> g2.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:androidx.window.layout.adapter.WindowBackend newInstance(androidx.window.extensions.layout.WindowLayoutComponent,androidx.window.core.ConsumerAdapter):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/extensions/layout/WindowLayoutComponent;Lb2/d;)Lf2/a;"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0 -> g2.c:
    void <init>() -> <init>
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Lg/a;)V"}
    1:1:void $r8$lambda$FIKlvhyEFY0ibeYIXQhlkJ0r6sg(androidx.core.util.Consumer):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
    1:1:void registerLayoutChangeCallback$lambda$0(androidx.core.util.Consumer):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$ExternalSyntheticLambda0 -> g2.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.core.util.Consumer androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$InternalSyntheticLambda$2$17c6bbbc95ef4ffab4263f8c64f94b5521955c30c930ac5f8b92464e91569474$0.f$0 -> f
    1:1:void androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$InternalSyntheticLambda$2$17c6bbbc95ef4ffab4263f8c64f94b5521955c30c930ac5f8b92464e91569474$0.<init>(androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
    1:1:void androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi0$$InternalSyntheticLambda$2$17c6bbbc95ef4ffab4263f8c64f94b5521955c30c930ac5f8b92464e91569474$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1 -> g2.d:
    androidx.window.extensions.layout.WindowLayoutComponent component -> a
    androidx.window.core.ConsumerAdapter consumerAdapter -> b
    java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock -> c
    java.util.Map contextToListeners -> d
    java.util.Map listenerToContext -> e
    java.util.Map consumerToToken -> f
    1:1:void <init>(androidx.window.extensions.layout.WindowLayoutComponent,androidx.window.core.ConsumerAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/extensions/layout/WindowLayoutComponent;Lb2/d;)V"}
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Lg/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi1$registerLayoutChangeCallback$1$2$disposableToken$1 -> g2.d$a:
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
    1:1:void invoke(androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> k
androidx.window.layout.adapter.extensions.ExtensionWindowBackendApi2 -> g2.e:
    androidx.window.extensions.layout.WindowLayoutComponent component -> a
    java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock -> b
    java.util.Map contextToListeners -> c
    java.util.Map listenerToContext -> d
    1:1:void <init>(androidx.window.extensions.layout.WindowLayoutComponent):0:0 -> <init>
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Lg/a;)V"}
androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter -> g2.f:
    androidx.window.layout.adapter.extensions.ExtensionsWindowLayoutInfoAdapter INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:androidx.window.layout.FoldingFeature translate$window_release(androidx.window.layout.WindowMetrics,androidx.window.extensions.layout.FoldingFeature):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/k;Landroidx/window/extensions/layout/FoldingFeature;)Le2/c;"}
    1:1:androidx.window.layout.WindowLayoutInfo translate$window_release(android.content.Context,androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroidx/window/extensions/layout/WindowLayoutInfo;)Le2/j;"}
    1:1:androidx.window.layout.WindowLayoutInfo translate$window_release(androidx.window.layout.WindowMetrics,androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/k;Landroidx/window/extensions/layout/WindowLayoutInfo;)Le2/j;"}
    1:1:boolean validBounds(androidx.window.layout.WindowMetrics,androidx.window.core.Bounds):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/k;Lb2/b;)Z"}
androidx.window.layout.adapter.extensions.MulticastConsumer -> g2.g:
    android.content.Context context -> a
    java.util.concurrent.locks.ReentrantLock multicastConsumerLock -> b
    androidx.window.layout.WindowLayoutInfo lastKnownValue -> c
    java.util.Set registeredListeners -> d
    1:1:void <init>(android.content.Context):0:0 -> <init>
    1:1:void accept(androidx.window.extensions.layout.WindowLayoutInfo):0:0 -> a
    1:1:void accept(java.lang.Object):0:0 -> accept
    1:1:void addListener(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
    1:1:boolean isEmpty():0:0 -> c
    1:1:void removeListener(androidx.core.util.Consumer):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback -> androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback:
    java.lang.Object mLock -> a
    androidx.window.sidecar.SidecarDeviceState mLastDeviceState -> b
    java.util.Map mActivityWindowLayoutInfo -> c
    androidx.window.layout.adapter.sidecar.SidecarAdapter mAdapter -> d
    androidx.window.sidecar.SidecarInterface$SidecarCallback mCallback -> e
    1:1:void <init>(androidx.window.layout.adapter.sidecar.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh2/a;Landroidx/window/sidecar/SidecarInterface$SidecarCallback;)V"}
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat -> androidx.window.layout.adapter.sidecar.a:
    void setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/a$a;)V"}
    void onWindowLayoutChangeListenerRemoved(android.app.Activity) -> b
    void onWindowLayoutChangeListenerAdded(android.app.Activity) -> c
androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface -> androidx.window.layout.adapter.sidecar.a$a:
    void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Le2/j;)V"}
androidx.window.layout.adapter.sidecar.SidecarAdapter -> h2.a:
    androidx.window.core.VerificationMode verificationMode -> a
    androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion Companion -> b
    java.lang.String TAG -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(androidx.window.core.VerificationMode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;)V"}
    2:2:void <init>(androidx.window.core.VerificationMode,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/j;ILq3/g;)V"}
    1:1:boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState):0:0 -> a
    1:1:boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature):0:0 -> b
    1:1:boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List):0:0 -> c
    1:1:boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo):0:0 -> d
    1:1:androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/sidecar/SidecarWindowLayoutInfo;Landroidx/window/sidecar/SidecarDeviceState;)Le2/j;"}
    1:1:java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState):0:0 -> f
    1:1:androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/sidecar/SidecarDisplayFeature;Landroidx/window/sidecar/SidecarDeviceState;)Le2/a;"}
androidx.window.layout.adapter.sidecar.SidecarAdapter$Companion -> h2.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState):0:0 -> a
    1:1:int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState):0:0 -> b
    1:1:java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo):0:0 -> c
    1:1:void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int):0:0 -> d
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1 -> h2.a$b:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$1 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2 -> h2.a$c:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$2 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3 -> h2.a$d:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$3 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4 -> h2.a$e:
    androidx.window.layout.adapter.sidecar.SidecarAdapter$translate$checkedFeature$4 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(androidx.window.sidecar.SidecarDisplayFeature):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
androidx.window.layout.adapter.sidecar.SidecarCompat -> androidx.window.layout.adapter.sidecar.SidecarCompat:
    androidx.window.sidecar.SidecarInterface sidecar -> a
    androidx.window.layout.adapter.sidecar.SidecarAdapter sidecarAdapter -> b
    java.util.Map windowListenerRegisteredContexts -> c
    java.util.Map componentCallbackMap -> d
    androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback extensionCallback -> e
    androidx.window.layout.adapter.sidecar.SidecarCompat$Companion Companion -> f
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(androidx.window.sidecar.SidecarInterface,androidx.window.layout.adapter.sidecar.SidecarAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/sidecar/SidecarInterface;Lh2/a;)V"}
    1:1:void setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/a$a;)V"}
    1:1:void onWindowLayoutChangeListenerRemoved(android.app.Activity):0:0 -> b
    1:1:void onWindowLayoutChangeListenerAdded(android.app.Activity):0:0 -> c
    1:1:androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback access$getExtensionCallback$p(androidx.window.layout.adapter.sidecar.SidecarCompat):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/SidecarCompat;)Landroidx/window/layout/adapter/sidecar/SidecarCompat$b;"}
    1:1:androidx.window.layout.adapter.sidecar.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.adapter.sidecar.SidecarCompat):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/SidecarCompat;)Lh2/a;"}
    1:1:java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.adapter.sidecar.SidecarCompat):0:0 -> f
    1:1:androidx.window.sidecar.SidecarInterface getSidecar():0:0 -> g
    1:1:androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;)Le2/j;"}
    1:1:void register(android.os.IBinder,android.app.Activity):0:0 -> i
    1:1:void registerConfigurationChangeListener(android.app.Activity):0:0 -> j
    1:1:void unregisterComponentCallback(android.app.Activity):0:0 -> k
    1:1:boolean validateExtensionInterface():0:0 -> l
androidx.window.layout.adapter.sidecar.SidecarCompat$Companion -> androidx.window.layout.adapter.sidecar.SidecarCompat$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:android.os.IBinder getActivityWindowToken$window_release(android.app.Activity):0:0 -> a
    1:1:androidx.window.sidecar.SidecarInterface getSidecarCompat$window_release(android.content.Context):0:0 -> b
    1:1:androidx.window.core.Version getSidecarVersion():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb2/k;"}
androidx.window.layout.adapter.sidecar.SidecarCompat$DistinctElementCallback -> androidx.window.layout.adapter.sidecar.SidecarCompat$b:
    androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface -> a
    java.util.concurrent.locks.ReentrantLock lock -> b
    java.util.WeakHashMap activityWindowLayoutInfo -> c
    1:1:void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Le2/j;)V"}
    1:1:void clearWindowLayoutInfo(android.app.Activity):0:0 -> b
androidx.window.layout.adapter.sidecar.SidecarCompat$FirstAttachAdapter -> androidx.window.layout.adapter.sidecar.SidecarCompat$c:
    androidx.window.layout.adapter.sidecar.SidecarCompat sidecarCompat -> a
    java.lang.ref.WeakReference activityWeakReference -> b
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback -> androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback:
    androidx.window.layout.adapter.sidecar.SidecarCompat this$0 -> a
androidx.window.layout.adapter.sidecar.SidecarWindowBackend -> androidx.window.layout.adapter.sidecar.b:
    androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat windowExtension -> a
    java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks -> b
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion Companion -> c
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend globalInstance -> d
    java.util.concurrent.locks.ReentrantLock globalLock -> e
    1:1:void unregisterLayoutChangeCallback(androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
    1:1:void registerLayoutChangeCallback(android.content.Context,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/util/concurrent/Executor;Lg/a;)V"}
    1:1:androidx.window.layout.adapter.sidecar.SidecarWindowBackend access$getGlobalInstance$cp():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/window/layout/adapter/sidecar/b;"}
    1:1:java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp():0:0 -> d
    1:1:void access$setGlobalInstance$cp(androidx.window.layout.adapter.sidecar.SidecarWindowBackend):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b;)V"}
    1:1:void callbackRemovedForActivity(android.app.Activity):0:0 -> f
    1:1:java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks():0:0 -> g
    1:1:boolean isActivityRegistered(android.app.Activity):0:0 -> h
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$Companion -> androidx.window.layout.adapter.sidecar.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:androidx.window.layout.adapter.sidecar.SidecarWindowBackend getInstance(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/window/layout/adapter/sidecar/b;"}
    1:1:androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/window/layout/adapter/sidecar/a;"}
    1:1:boolean isSidecarVersionSupported(androidx.window.core.Version):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb2/k;)Z"}
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$ExtensionListenerImpl -> androidx.window.layout.adapter.sidecar.b$b:
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend this$0 -> a
    1:1:void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Le2/j;)V"}
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper -> androidx.window.layout.adapter.sidecar.b$c:
    android.app.Activity activity -> a
    java.util.concurrent.Executor executor -> b
    androidx.core.util.Consumer callback -> c
    androidx.window.layout.WindowLayoutInfo lastInfo -> d
    1:1:void <init>(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ljava/util/concurrent/Executor;Lg/a;)V"}
    1:1:void $r8$lambda$1Fzggiz8q3lTHWyU2mIB89dvBzk(androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b$c;Le2/j;)V"}
    1:1:void accept(androidx.window.layout.WindowLayoutInfo):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/j;)V"}
    1:1:void accept$lambda$0(androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b$c;Le2/j;)V"}
    1:1:android.app.Activity getActivity():0:0 -> d
    1:1:androidx.core.util.Consumer getCallback():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg/a;"}
    1:1:androidx.window.layout.WindowLayoutInfo getLastInfo():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le2/j;"}
androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$ExternalSyntheticLambda0 -> h2.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.f$0 -> f
    androidx.window.layout.WindowLayoutInfo androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.f$1 -> g
    1:1:void androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.<init>(androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/window/layout/adapter/sidecar/b$c;Le2/j;)V"}
    1:1:void androidx.window.layout.adapter.sidecar.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper$$InternalSyntheticLambda$2$bdd519fd455c21d9f63caf45abf1b3bef394337299de25057d3ee3cce0516cda$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ActivityCompatHelperApi24 -> i2.b:
    androidx.window.layout.util.ActivityCompatHelperApi24 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean isInMultiWindowMode(android.app.Activity):0:0 -> a
androidx.window.layout.util.ActivityCompatHelperApi24$$ExternalSyntheticApiModelOutline0 -> i2.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.window.layout.util.ActivityCompatHelperApi24$$InternalSyntheticApiModelOutline$2$0a53b1046f1ef1f870f8d08ade93680249c65d8d02c6665a148e6f800cce17a3$0.m(android.app.Activity):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelper -> i2.c:
    androidx.window.layout.util.ContextCompatHelper INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:android.content.Context unwrapUiContext$window_release(android.content.Context):0:0 -> a
androidx.window.layout.util.ContextCompatHelperApi30 -> i2.i:
    androidx.window.layout.util.ContextCompatHelperApi30 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:android.graphics.Rect currentWindowBounds(android.content.Context):0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat currentWindowInsets(android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Landroidx/core/view/i;"}
    1:1:androidx.window.layout.WindowMetrics currentWindowMetrics(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Le2/k;"}
    1:1:android.graphics.Rect maximumWindowBounds(android.content.Context):0:0 -> d
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline0 -> i2.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$0.m(android.content.Context,java.lang.Class):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline1 -> i2.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$1.m(android.view.WindowManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline2 -> i2.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$2.m(android.view.WindowMetrics):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline3 -> i2.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Rect androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$060bce7c718c8dd3aa5c50aa467eb776f8dabe3c5784029c8779d9eb531c6893$4.m(android.view.WindowMetrics):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.ContextCompatHelperApi30$$ExternalSyntheticApiModelOutline4 -> i2.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics androidx.window.layout.util.ContextCompatHelperApi30$$InternalSyntheticApiModelOutline$2$97041ee14f9e1ddb13491de6b1484cd9401e12caea0ce217570289610e813181$1.m(android.view.WindowManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi17 -> i2.j:
    androidx.window.layout.util.DisplayCompatHelperApi17 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void getRealSize(android.view.Display,android.graphics.Point):0:0 -> a
androidx.window.layout.util.DisplayCompatHelperApi28 -> i2.o:
    androidx.window.layout.util.DisplayCompatHelperApi28 INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int safeInsetBottom(android.view.DisplayCutout):0:0 -> a
    1:1:int safeInsetLeft(android.view.DisplayCutout):0:0 -> b
    1:1:int safeInsetRight(android.view.DisplayCutout):0:0 -> c
    1:1:int safeInsetTop(android.view.DisplayCutout):0:0 -> d
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline0 -> i2.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$20bb7be1389f6bcde3259f8b4259e4c107c23f941b31730e635a09e9fbd4c61c$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline1 -> i2.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$505db3e413fefb2baa6a7cf0abbcf0f5dba7beff88c12c454cd54159787c87cc$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline2 -> i2.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$8901a2b0072c331cfdcf81d5485321c9368020de8bb39106b857442a154ff29a$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.layout.util.DisplayCompatHelperApi28$$ExternalSyntheticApiModelOutline3 -> i2.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.window.layout.util.DisplayCompatHelperApi28$$InternalSyntheticApiModelOutline$2$f0a1d90c774d23c902daed4582cbd925dc00be2e1d3a255d144a0377ed35c9db$0.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
androidx.window.reflection.ReflectionUtils -> j2.a:
    androidx.window.reflection.ReflectionUtils INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean checkIsPresent$window_release(kotlin.jvm.functions.Function0):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/a;)Z"}
    1:1:boolean doesReturn$window_release(java.lang.reflect.Method,java.lang.Class):0:0 -> b
    1:1:boolean doesReturn$window_release(java.lang.reflect.Method,kotlin.reflect.KClass):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/reflect/Method;Lu3/b;)Z"}
    1:1:boolean isPublic$window_release(java.lang.reflect.Method):0:0 -> d
    1:1:boolean validateReflection$window_release(java.lang.String,kotlin.jvm.functions.Function0):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lp3/a;)Z"}
com.google.common.base.AbstractIterator -> k2.a:
    com.google.common.base.AbstractIterator$State state -> f
    java.lang.Object next -> g
    1:1:void <init>():0:0 -> <init>
    java.lang.Object computeNext() -> a
    1:1:java.lang.Object endOfData():0:0 -> b
    1:1:boolean tryToComputeNext():0:0 -> c
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
com.google.common.base.AbstractIterator$1 -> k2.a$a:
    int[] $SwitchMap$com$google$common$base$AbstractIterator$State -> a
    1:1:void <clinit>():0:0 -> <clinit>
com.google.common.base.AbstractIterator$State -> k2.a$b:
    com.google.common.base.AbstractIterator$State READY -> f
    com.google.common.base.AbstractIterator$State NOT_READY -> g
    com.google.common.base.AbstractIterator$State DONE -> h
    com.google.common.base.AbstractIterator$State FAILED -> i
    com.google.common.base.AbstractIterator$State[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.google.common.base.AbstractIterator$State[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lk2/a$b;"}
    1:1:com.google.common.base.AbstractIterator$State valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lk2/a$b;"}
    1:1:com.google.common.base.AbstractIterator$State[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lk2/a$b;"}
com.google.common.base.Ascii -> k2.b:
    1:1:boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence):0:0 -> a
    1:1:int getAlphaIndex(char):0:0 -> b
    1:1:boolean isLowerCase(char):0:0 -> c
    1:1:boolean isUpperCase(char):0:0 -> d
    1:1:java.lang.String toLowerCase(java.lang.String):0:0 -> e
    1:1:java.lang.String toUpperCase(java.lang.String):0:0 -> f
com.google.common.base.CharMatcher -> k2.c:
    void <init>() -> <init>
    1:1:java.lang.String access$100(char):0:0 -> a
    1:1:boolean apply(java.lang.Character):0:0 -> b
    1:1:int indexIn(java.lang.CharSequence,int):0:0 -> c
    1:1:com.google.common.base.CharMatcher is(char):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(C)Lk2/c;"}
    boolean matches(char) -> e
    1:1:com.google.common.base.CharMatcher none():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk2/c;"}
    1:1:java.lang.String showCharacter(char):0:0 -> g
com.google.common.base.CharMatcher$FastMatcher -> k2.c$a:
    void <init>() -> <init>
    1:1:boolean apply(java.lang.Object):0:0 -> apply
com.google.common.base.CharMatcher$Is -> k2.c$b:
    char match -> f
    1:1:void <init>(char):0:0 -> <init>
    1:1:boolean matches(char):0:0 -> e
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.base.CharMatcher$NamedFastMatcher -> k2.c$c:
    java.lang.String description -> f
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.base.CharMatcher$None -> k2.c$d:
    com.google.common.base.CharMatcher INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:int indexIn(java.lang.CharSequence,int):0:0 -> c
    1:1:boolean matches(char):0:0 -> e
com.google.common.base.Charsets -> k2.d:
    java.nio.charset.Charset US_ASCII -> a
    java.nio.charset.Charset ISO_8859_1 -> b
    java.nio.charset.Charset UTF_8 -> c
    java.nio.charset.Charset UTF_16BE -> d
    java.nio.charset.Charset UTF_16LE -> e
    java.nio.charset.Charset UTF_16 -> f
    1:1:void <clinit>():0:0 -> <clinit>
com.google.common.base.ExtraObjectsMethodsForWeb -> k2.e:
com.google.common.base.Function -> k2.f:
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.common.base.Joiner -> k2.g:
    java.lang.String separator -> a
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator):0:0 -> a
    1:1:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable):0:0 -> b
    1:1:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator):0:0 -> c
    1:1:java.lang.String join(java.lang.Iterable):0:0 -> d
    1:1:java.lang.String join(java.util.Iterator):0:0 -> e
    1:1:com.google.common.base.Joiner on(char):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(C)Lk2/g;"}
    1:1:com.google.common.base.Joiner on(java.lang.String):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lk2/g;"}
    1:1:java.lang.CharSequence toString(java.lang.Object):0:0 -> h
com.google.common.base.MoreObjects -> k2.h:
    1:1:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object):0:0 -> a
com.google.common.base.NullnessCasts -> k2.i:
    1:1:java.lang.Object uncheckedCastNullableTToT(java.lang.Object):0:0 -> a
com.google.common.base.Objects -> k2.j:
    1:1:boolean equal(java.lang.Object,java.lang.Object):0:0 -> a
    1:1:int hashCode(java.lang.Object[]):0:0 -> b
com.google.common.base.PatternCompiler -> k2.k:
com.google.common.base.Platform -> k2.l:
    com.google.common.base.PatternCompiler patternCompiler -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:com.google.common.base.PatternCompiler loadPatternCompiler():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk2/k;"}
    1:1:java.lang.String nullToEmpty(java.lang.String):0:0 -> b
com.google.common.base.Platform$1 -> k2.l$a:
com.google.common.base.Platform$JdkPatternCompiler -> k2.l$b:
    void <init>() -> <init>
    1:1:void <init>(com.google.common.base.Platform$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/l$a;)V"}
com.google.common.base.Preconditions -> k2.m:
    1:1:java.lang.String badElementIndex(int,int,java.lang.String):0:0 -> a
    1:1:java.lang.String badPositionIndex(int,int,java.lang.String):0:0 -> b
    1:1:java.lang.String badPositionIndexes(int,int,int):0:0 -> c
    1:1:void checkArgument(boolean):0:0 -> d
    1:1:void checkArgument(boolean,java.lang.Object):0:0 -> e
    1:1:void checkArgument(boolean,java.lang.String,int,int):0:0 -> f
    1:1:void checkArgument(boolean,java.lang.String,long):0:0 -> g
    1:1:int checkElementIndex(int,int):0:0 -> h
    1:1:int checkElementIndex(int,int,java.lang.String):0:0 -> i
    1:1:java.lang.Object checkNotNull(java.lang.Object):0:0 -> j
    1:1:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:int checkPositionIndex(int,int):0:0 -> l
    1:1:int checkPositionIndex(int,int,java.lang.String):0:0 -> m
    1:1:void checkPositionIndexes(int,int,int):0:0 -> n
    1:1:void checkState(boolean):0:0 -> o
    1:1:void checkState(boolean,java.lang.Object):0:0 -> p
com.google.common.base.Predicate -> k2.n:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates -> k2.o:
    1:1:java.lang.String access$800(java.lang.String,java.lang.Iterable):0:0 -> a
    1:1:com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/n;Lk2/n;)Lk2/n;"}
    1:1:java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/n;Lk2/n;)Ljava/util/List;"}
    1:1:java.lang.String toStringHelper(java.lang.String,java.lang.Iterable):0:0 -> d
com.google.common.base.Predicates$1 -> k2.o$a:
com.google.common.base.Predicates$AndPredicate -> k2.o$b:
    java.util.List components -> f
    1:1:void <init>(java.util.List):0:0 -> <init>
    2:2:void <init>(java.util.List,com.google.common.base.Predicates$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lk2/o$a;)V"}
    1:1:boolean apply(java.lang.Object):0:0 -> apply
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.base.Splitter -> k2.p:
    com.google.common.base.CharMatcher trimmer -> a
    boolean omitEmptyStrings -> b
    com.google.common.base.Splitter$Strategy strategy -> c
    int limit -> d
    1:1:void <init>(com.google.common.base.Splitter$Strategy):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/p$c;)V"}
    2:2:void <init>(com.google.common.base.Splitter$Strategy,boolean,com.google.common.base.CharMatcher,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/p$c;ZLk2/c;I)V"}
    1:1:com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/p;)Lk2/c;"}
    1:1:boolean access$300(com.google.common.base.Splitter):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/p;)Z"}
    1:1:int access$400(com.google.common.base.Splitter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/p;)I"}
    1:1:com.google.common.base.Splitter on(char):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(C)Lk2/p;"}
    1:1:com.google.common.base.Splitter on(com.google.common.base.CharMatcher):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/c;)Lk2/p;"}
    1:1:java.util.List splitToList(java.lang.CharSequence):0:0 -> f
    1:1:java.util.Iterator splittingIterator(java.lang.CharSequence):0:0 -> g
com.google.common.base.Splitter$1 -> k2.p$a:
    com.google.common.base.CharMatcher val$separatorMatcher -> a
    1:1:void <init>(com.google.common.base.CharMatcher):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/c;)V"}
    1:1:java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/p;Ljava/lang/CharSequence;)Ljava/util/Iterator;"}
    1:1:com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/p;Ljava/lang/CharSequence;)Lk2/p$b;"}
com.google.common.base.Splitter$1$1 -> k2.p$a$a:
    com.google.common.base.Splitter$1 this$0 -> m
    1:1:void <init>(com.google.common.base.Splitter$1,com.google.common.base.Splitter,java.lang.CharSequence):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/p$a;Lk2/p;Ljava/lang/CharSequence;)V"}
    1:1:int separatorEnd(int):0:0 -> e
    1:1:int separatorStart(int):0:0 -> f
com.google.common.base.Splitter$SplittingIterator -> k2.p$b:
    java.lang.CharSequence toSplit -> h
    com.google.common.base.CharMatcher trimmer -> i
    boolean omitEmptyStrings -> j
    int offset -> k
    int limit -> l
    1:1:void <init>(com.google.common.base.Splitter,java.lang.CharSequence):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/p;Ljava/lang/CharSequence;)V"}
    1:1:java.lang.Object computeNext():0:0 -> a
    1:1:java.lang.String computeNext():0:0 -> d
    int separatorEnd(int) -> e
    int separatorStart(int) -> f
com.google.common.base.Splitter$Strategy -> k2.p$c:
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/p;Ljava/lang/CharSequence;)Ljava/util/Iterator;"}
com.google.common.base.Strings -> k2.q:
    1:1:java.lang.String lenientFormat(java.lang.String,java.lang.Object[]):0:0 -> a
    1:1:java.lang.String lenientToString(java.lang.Object):0:0 -> b
    1:1:java.lang.String nullToEmpty(java.lang.String):0:0 -> c
com.google.common.base.Supplier -> k2.r:
    java.lang.Object get() -> get
com.google.common.base.Suppliers -> k2.s:
    1:1:com.google.common.base.Supplier memoize(com.google.common.base.Supplier):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/r;)Lk2/r;"}
com.google.common.base.Suppliers$MemoizingSupplier -> k2.s$a:
    com.google.common.base.Supplier delegate -> f
    boolean initialized -> g
    java.lang.Object value -> h
    1:1:void <init>(com.google.common.base.Supplier):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/r;)V"}
    1:1:java.lang.Object get():0:0 -> get
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.base.Suppliers$NonSerializableMemoizingSupplier -> k2.s$b:
    com.google.common.base.Supplier delegate -> f
    java.lang.Object value -> g
    com.google.common.base.Supplier SUCCESSFULLY_COMPUTED -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(com.google.common.base.Supplier):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/r;)V"}
    1:1:java.lang.Void $r8$lambda$8P1mNjxqXb1C4U0pv60cwhGy7vo():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Void lambda$static$0():0:0 -> b
    1:1:java.lang.Object get():0:0 -> get
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.base.Suppliers$NonSerializableMemoizingSupplier$$ExternalSyntheticLambda0 -> k2.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void com.google.common.base.Suppliers$NonSerializableMemoizingSupplier$$InternalSyntheticLambda$9$738b90e60ab9fa3c74465d84b24fe2f0aef94cc8dcb56f345806831d6ee348e6$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object com.google.common.base.Suppliers$NonSerializableMemoizingSupplier$$InternalSyntheticLambda$9$738b90e60ab9fa3c74465d84b24fe2f0aef94cc8dcb56f345806831d6ee348e6$0.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
com.google.common.collect.AbstractIndexedListIterator -> l2.a:
    int size -> f
    int position -> g
    1:1:void <init>(int,int):0:0 -> <init>
    java.lang.Object get(int) -> a
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:1:java.lang.Object next():0:0 -> next
    1:1:int nextIndex():0:0 -> nextIndex
    1:1:java.lang.Object previous():0:0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
com.google.common.collect.AbstractIterator -> l2.b:
    com.google.common.collect.AbstractIterator$State state -> f
    java.lang.Object next -> g
    1:1:void <init>():0:0 -> <init>
    java.lang.Object computeNext() -> a
    1:1:java.lang.Object endOfData():0:0 -> b
    1:1:boolean tryToComputeNext():0:0 -> c
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
com.google.common.collect.AbstractIterator$1 -> l2.b$a:
    int[] $SwitchMap$com$google$common$collect$AbstractIterator$State -> a
    1:1:void <clinit>():0:0 -> <clinit>
com.google.common.collect.AbstractIterator$State -> l2.b$b:
    com.google.common.collect.AbstractIterator$State READY -> f
    com.google.common.collect.AbstractIterator$State NOT_READY -> g
    com.google.common.collect.AbstractIterator$State DONE -> h
    com.google.common.collect.AbstractIterator$State FAILED -> i
    com.google.common.collect.AbstractIterator$State[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.google.common.collect.AbstractIterator$State[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll2/b$b;"}
    1:1:com.google.common.collect.AbstractIterator$State valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll2/b$b;"}
    1:1:com.google.common.collect.AbstractIterator$State[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll2/b$b;"}
com.google.common.collect.AbstractListMultimap -> l2.c:
    1:1:void <init>(java.util.Map):0:0 -> <init>
    1:1:java.util.List get(java.lang.Object):0:0 -> A
    1:1:java.util.Map asMap():0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.util.Collection get(java.lang.Object):0:0 -> get
    1:1:boolean put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:java.util.Collection unmodifiableCollectionSubclass(java.util.Collection):0:0 -> x
    1:1:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection):0:0 -> y
com.google.common.collect.AbstractMapBasedMultimap -> l2.d:
    java.util.Map map -> j
    int totalSize -> k
    1:1:void <init>(java.util.Map):0:0 -> <init>
    1:1:java.util.Collection entries():0:0 -> a
    1:1:void clear():0:0 -> clear
    1:1:java.util.Collection createEntries():0:0 -> f
    1:1:java.util.Collection get(java.lang.Object):0:0 -> get
    1:1:java.util.Collection createValues():0:0 -> h
    1:1:java.util.Iterator entryIterator():0:0 -> i
    1:1:java.util.Iterator valueIterator():0:0 -> j
    1:1:java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;)Ljava/util/Map;"}
    1:1:java.util.Iterator access$100(java.util.Collection):0:0 -> l
    1:1:int access$208(com.google.common.collect.AbstractMapBasedMultimap):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;)I"}
    1:1:int access$210(com.google.common.collect.AbstractMapBasedMultimap):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;)I"}
    1:1:int access$212(com.google.common.collect.AbstractMapBasedMultimap,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;I)I"}
    1:1:int access$220(com.google.common.collect.AbstractMapBasedMultimap,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;I)I"}
    1:1:boolean put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:void access$300(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;Ljava/lang/Object;)V"}
    java.util.Collection createCollection() -> r
    1:1:java.util.Collection createCollection(java.lang.Object):0:0 -> s
    1:1:int size():0:0 -> size
    1:1:java.util.Map createMaybeNavigableAsMap():0:0 -> t
    1:1:java.util.Set createMaybeNavigableKeySet():0:0 -> u
    1:1:java.util.Iterator iteratorOrListIterator(java.util.Collection):0:0 -> v
    1:1:java.util.Collection values():0:0 -> values
    1:1:void removeValuesForKey(java.lang.Object):0:0 -> w
    java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> x
    java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> y
    1:1:java.util.List wrapList(java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/util/List;Ll2/d$k;)Ljava/util/List;"}
com.google.common.collect.AbstractMapBasedMultimap$1 -> l2.d$a:
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;)V"}
    1:1:java.lang.Object output(java.lang.Object,java.lang.Object):0:0 -> a
com.google.common.collect.AbstractMapBasedMultimap$2 -> l2.d$b:
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;)V"}
    1:1:java.lang.Object output(java.lang.Object,java.lang.Object):0:0 -> a
    1:1:java.util.Map$Entry output(java.lang.Object,java.lang.Object):0:0 -> b
com.google.common.collect.AbstractMapBasedMultimap$AsMap -> l2.d$c:
    java.util.Map submap -> h
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> i
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;Ljava/util/Map;)V"}
    1:1:java.util.Set createEntrySet():0:0 -> a
    1:1:java.util.Collection get(java.lang.Object):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:java.util.Collection remove(java.lang.Object):0:0 -> d
    1:1:java.util.Map$Entry wrapEntry(java.util.Map$Entry):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries -> l2.d$c$a:
    com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1 -> f
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d$c;)V"}
    1:1:java.util.Map map():0:0 -> a
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator -> l2.d$c$b:
    java.util.Iterator delegateIterator -> f
    java.util.Collection collection -> g
    com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1 -> h
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d$c;)V"}
    1:1:java.util.Map$Entry next():0:0 -> a
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
com.google.common.collect.AbstractMapBasedMultimap$Itr -> l2.d$d:
    java.util.Iterator keyIterator -> f
    java.lang.Object key -> g
    java.util.Collection collection -> h
    java.util.Iterator valueIterator -> i
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> j
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;)V"}
    java.lang.Object output(java.lang.Object,java.lang.Object) -> a
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet -> l2.d$e:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> g
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;Ljava/util/Map;)V"}
    1:1:void clear():0:0 -> clear
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet$1 -> l2.d$e$a:
    java.util.Map$Entry entry -> f
    java.util.Iterator val$entryIterator -> g
    com.google.common.collect.AbstractMapBasedMultimap$KeySet this$1 -> h
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap$KeySet,java.util.Iterator):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d$e;Ljava/util/Iterator;)V"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap -> l2.d$f:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> l
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;Ljava/util/NavigableMap;)V"}
    1:1:java.util.Map$Entry ceilingEntry(java.lang.Object):0:0 -> ceilingEntry
    1:1:java.lang.Object ceilingKey(java.lang.Object):0:0 -> ceilingKey
    1:1:java.util.NavigableSet descendingKeySet():0:0 -> descendingKeySet
    1:1:java.util.NavigableMap descendingMap():0:0 -> descendingMap
    1:1:java.util.SortedSet createKeySet():0:0 -> f
    1:1:java.util.Map$Entry firstEntry():0:0 -> firstEntry
    1:1:java.util.Map$Entry floorEntry(java.lang.Object):0:0 -> floorEntry
    1:1:java.lang.Object floorKey(java.lang.Object):0:0 -> floorKey
    1:1:java.util.SortedSet keySet():0:0 -> g
    1:1:java.util.SortedMap sortedMap():0:0 -> h
    1:1:java.util.NavigableMap headMap(java.lang.Object,boolean):0:0 -> headMap
    2:2:java.util.SortedMap headMap(java.lang.Object):0:0 -> headMap
    1:1:java.util.Map$Entry higherEntry(java.lang.Object):0:0 -> higherEntry
    1:1:java.lang.Object higherKey(java.lang.Object):0:0 -> higherKey
    1:1:java.util.NavigableSet createKeySet():0:0 -> i
    1:1:java.util.NavigableMap headMap(java.lang.Object):0:0 -> j
    1:1:java.util.NavigableSet keySet():0:0 -> k
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:java.util.Map$Entry pollAsMapEntry(java.util.Iterator):0:0 -> l
    1:1:java.util.Map$Entry lastEntry():0:0 -> lastEntry
    1:1:java.util.Map$Entry lowerEntry(java.lang.Object):0:0 -> lowerEntry
    1:1:java.lang.Object lowerKey(java.lang.Object):0:0 -> lowerKey
    1:1:java.util.NavigableMap sortedMap():0:0 -> m
    1:1:java.util.NavigableMap subMap(java.lang.Object,java.lang.Object):0:0 -> n
    1:1:java.util.NavigableSet navigableKeySet():0:0 -> navigableKeySet
    1:1:java.util.NavigableMap tailMap(java.lang.Object):0:0 -> o
    1:1:java.util.Map$Entry pollFirstEntry():0:0 -> pollFirstEntry
    1:1:java.util.Map$Entry pollLastEntry():0:0 -> pollLastEntry
    1:1:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean):0:0 -> subMap
    2:2:java.util.SortedMap subMap(java.lang.Object,java.lang.Object):0:0 -> subMap
    1:1:java.util.NavigableMap tailMap(java.lang.Object,boolean):0:0 -> tailMap
    2:2:java.util.SortedMap tailMap(java.lang.Object):0:0 -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet -> l2.d$g:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> i
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.NavigableMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;Ljava/util/NavigableMap;)V"}
    1:1:java.util.SortedMap sortedMap():0:0 -> b
    1:1:java.util.NavigableSet headSet(java.lang.Object):0:0 -> c
    1:1:java.lang.Object ceiling(java.lang.Object):0:0 -> ceiling
    1:1:java.util.NavigableMap sortedMap():0:0 -> d
    1:1:java.util.Iterator descendingIterator():0:0 -> descendingIterator
    1:1:java.util.NavigableSet descendingSet():0:0 -> descendingSet
    1:1:java.util.NavigableSet subSet(java.lang.Object,java.lang.Object):0:0 -> e
    1:1:java.util.NavigableSet tailSet(java.lang.Object):0:0 -> f
    1:1:java.lang.Object floor(java.lang.Object):0:0 -> floor
    1:1:java.util.NavigableSet headSet(java.lang.Object,boolean):0:0 -> headSet
    2:2:java.util.SortedSet headSet(java.lang.Object):0:0 -> headSet
    1:1:java.lang.Object higher(java.lang.Object):0:0 -> higher
    1:1:java.lang.Object lower(java.lang.Object):0:0 -> lower
    1:1:java.lang.Object pollFirst():0:0 -> pollFirst
    1:1:java.lang.Object pollLast():0:0 -> pollLast
    1:1:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean):0:0 -> subSet
    2:2:java.util.SortedSet subSet(java.lang.Object,java.lang.Object):0:0 -> subSet
    1:1:java.util.NavigableSet tailSet(java.lang.Object,boolean):0:0 -> tailSet
    2:2:java.util.SortedSet tailSet(java.lang.Object):0:0 -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList -> l2.d$h:
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;Ljava/lang/Object;Ljava/util/List;Ll2/d$k;)V"}
com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap -> l2.d$i:
    java.util.SortedSet sortedKeySet -> j
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> k
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;Ljava/util/SortedMap;)V"}
    1:1:java.util.Comparator comparator():0:0 -> comparator
    1:1:java.util.SortedSet createKeySet():0:0 -> f
    1:1:java.lang.Object firstKey():0:0 -> firstKey
    1:1:java.util.SortedSet keySet():0:0 -> g
    1:1:java.util.SortedMap sortedMap():0:0 -> h
    1:1:java.util.SortedMap headMap(java.lang.Object):0:0 -> headMap
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:java.lang.Object lastKey():0:0 -> lastKey
    1:1:java.util.SortedMap subMap(java.lang.Object,java.lang.Object):0:0 -> subMap
    1:1:java.util.SortedMap tailMap(java.lang.Object):0:0 -> tailMap
com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet -> l2.d$j:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> h
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;Ljava/util/SortedMap;)V"}
    1:1:java.util.SortedMap sortedMap():0:0 -> b
    1:1:java.util.Comparator comparator():0:0 -> comparator
    1:1:java.lang.Object first():0:0 -> first
    1:1:java.util.SortedSet headSet(java.lang.Object):0:0 -> headSet
    1:1:java.lang.Object last():0:0 -> last
    1:1:java.util.SortedSet subSet(java.lang.Object,java.lang.Object):0:0 -> subSet
    1:1:java.util.SortedSet tailSet(java.lang.Object):0:0 -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection -> l2.d$k:
    java.lang.Object key -> f
    java.util.Collection delegate -> g
    com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection ancestor -> h
    java.util.Collection ancestorDelegate -> i
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> j
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;Ljava/lang/Object;Ljava/util/Collection;Ll2/d$k;)V"}
    1:1:void addToMap():0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/d$k;"}
    1:1:java.util.Collection getDelegate():0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:java.lang.Object getKey():0:0 -> d
    1:1:void refreshIfEmpty():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:void removeIfEmpty():0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator -> l2.d$k$a:
    java.util.Iterator delegateIterator -> f
    java.util.Collection originalDelegate -> g
    com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1 -> h
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d$k;)V"}
    2:2:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection,java.util.Iterator):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d$k;Ljava/util/Iterator;)V"}
    1:1:java.util.Iterator getDelegateIterator():0:0 -> a
    1:1:void validateIterator():0:0 -> b
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
com.google.common.collect.AbstractMapBasedMultimap$WrappedList -> l2.d$l:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> k
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d;Ljava/lang/Object;Ljava/util/List;Ll2/d$k;)V"}
    1:1:void add(int,java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    1:1:java.util.List getListDelegate():0:0 -> g
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:java.lang.Object remove(int):0:0 -> remove
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:java.util.List subList(int,int):0:0 -> subList
com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator -> l2.d$l$a:
    com.google.common.collect.AbstractMapBasedMultimap$WrappedList this$1 -> i
    1:1:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d$l;)V"}
    2:2:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d$l;I)V"}
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:java.util.ListIterator getDelegateListIterator():0:0 -> c
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:1:int nextIndex():0:0 -> nextIndex
    1:1:java.lang.Object previous():0:0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
    1:1:void set(java.lang.Object):0:0 -> set
com.google.common.collect.AbstractMapEntry -> l2.e:
    void <init>() -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.collect.AbstractMultimap -> l2.f:
    java.util.Collection entries -> f
    java.util.Set keySet -> g
    java.util.Collection values -> h
    java.util.Map asMap -> i
    void <init>() -> <init>
    1:1:java.util.Collection entries():0:0 -> a
    1:1:java.util.Map asMap():0:0 -> b
    1:1:boolean containsEntry(java.lang.Object,java.lang.Object):0:0 -> c
    1:1:boolean containsValue(java.lang.Object):0:0 -> d
    java.util.Map createAsMap() -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    java.util.Collection createEntries() -> f
    java.util.Set createKeySet() -> g
    java.util.Collection createValues() -> h
    1:1:int hashCode():0:0 -> hashCode
    java.util.Iterator entryIterator() -> i
    java.util.Iterator valueIterator() -> j
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:boolean remove(java.lang.Object,java.lang.Object):0:0 -> remove
    1:1:java.lang.String toString():0:0 -> toString
    1:1:java.util.Collection values():0:0 -> values
com.google.common.collect.AbstractMultimap$Entries -> l2.f$a:
    com.google.common.collect.AbstractMultimap this$0 -> f
    1:1:void <init>(com.google.common.collect.AbstractMultimap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/f;)V"}
    1:1:com.google.common.collect.Multimap multimap():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/g0;"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
com.google.common.collect.AbstractMultimap$Values -> l2.f$b:
    com.google.common.collect.AbstractMultimap this$0 -> f
    1:1:void <init>(com.google.common.collect.AbstractMultimap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/f;)V"}
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
com.google.common.collect.BaseImmutableMultimap -> l2.g:
    void <init>() -> <init>
com.google.common.collect.ByFunctionOrdering -> l2.h:
    com.google.common.base.Function function -> f
    com.google.common.collect.Ordering ordering -> g
    1:1:void <init>(com.google.common.base.Function,com.google.common.collect.Ordering):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/f;Ll2/m0;)V"}
    1:1:int compare(java.lang.Object,java.lang.Object):0:0 -> compare
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.collect.CollectPreconditions -> l2.i:
    1:1:void checkEntryNotNull(java.lang.Object,java.lang.Object):0:0 -> a
    1:1:int checkNonnegative(int,java.lang.String):0:0 -> b
    1:1:void checkRemove(boolean):0:0 -> c
com.google.common.collect.Collections2 -> l2.j:
    1:1:boolean containsAllImpl(java.util.Collection,java.util.Collection):0:0 -> a
    1:1:java.lang.StringBuilder newStringBuilderForCollection(int):0:0 -> b
    1:1:boolean safeContains(java.util.Collection,java.lang.Object):0:0 -> c
com.google.common.collect.Collections2$FilteredCollection -> l2.j$a:
    java.util.Collection unfiltered -> f
    com.google.common.base.Predicate predicate -> g
    1:1:void <init>(java.util.Collection,com.google.common.base.Predicate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Collection;Lk2/n;)V"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
com.google.common.collect.CompactHashMap -> l2.k:
    java.lang.Object table -> f
    int[] entries -> g
    java.lang.Object[] keys -> h
    java.lang.Object[] values -> i
    int metadata -> j
    int size -> k
    java.util.Set keySetView -> l
    java.util.Set entrySetView -> m
    java.util.Collection valuesView -> n
    java.lang.Object NOT_FOUND -> o
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:int firstEntryIndex():0:0 -> A
    1:1:int getSuccessor(int):0:0 -> B
    1:1:int hashTableMask():0:0 -> C
    1:1:void incrementModCount():0:0 -> D
    1:1:int indexOf(java.lang.Object):0:0 -> E
    1:1:void init(int):0:0 -> F
    1:1:void insertEntry(int,java.lang.Object,java.lang.Object,int,int):0:0 -> G
    1:1:java.lang.Object key(int):0:0 -> H
    1:1:java.util.Iterator keySetIterator():0:0 -> I
    1:1:void moveLastEntry(int,int):0:0 -> J
    1:1:boolean needsAllocArrays():0:0 -> K
    1:1:java.lang.Object removeHelper(java.lang.Object):0:0 -> L
    1:1:int[] requireEntries():0:0 -> M
    1:1:java.lang.Object[] requireKeys():0:0 -> N
    1:1:java.lang.Object requireTable():0:0 -> O
    1:1:java.lang.Object[] requireValues():0:0 -> P
    1:1:void resizeEntries(int):0:0 -> Q
    1:1:void resizeMeMaybe(int):0:0 -> R
    1:1:int resizeTable(int,int,int,int):0:0 -> S
    1:1:void setEntry(int,int):0:0 -> T
    1:1:void setHashTableMask(int):0:0 -> U
    1:1:void setKey(int,java.lang.Object):0:0 -> V
    1:1:void setValue(int,java.lang.Object):0:0 -> W
    1:1:java.lang.Object value(int):0:0 -> X
    1:1:java.util.Iterator valuesIterator():0:0 -> Y
    1:1:int access$000(com.google.common.collect.CompactHashMap):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)I"}
    1:1:java.lang.Object access$100(com.google.common.collect.CompactHashMap,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;I)Ljava/lang/Object;"}
    1:1:java.lang.Object[] access$1000(com.google.common.collect.CompactHashMap):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)[Ljava/lang/Object;"}
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean containsValue(java.lang.Object):0:0 -> containsValue
    1:1:java.lang.Object[] access$1100(com.google.common.collect.CompactHashMap):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)[Ljava/lang/Object;"}
    1:1:int access$1210(com.google.common.collect.CompactHashMap):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)I"}
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:void access$1300(com.google.common.collect.CompactHashMap,int,java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;ILjava/lang/Object;)V"}
    1:1:java.lang.Object access$200(com.google.common.collect.CompactHashMap,java.lang.Object):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:java.lang.Object access$300():0:0 -> h
    1:1:int access$500(com.google.common.collect.CompactHashMap,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;Ljava/lang/Object;)I"}
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.lang.Object access$600(com.google.common.collect.CompactHashMap,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;I)Ljava/lang/Object;"}
    1:1:int access$700(com.google.common.collect.CompactHashMap):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)I"}
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:java.lang.Object access$800(com.google.common.collect.CompactHashMap):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)Ljava/lang/Object;"}
    1:1:int[] access$900(com.google.common.collect.CompactHashMap):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)[I"}
    1:1:void accessEntry(int):0:0 -> n
    1:1:int adjustAfterRemove(int,int):0:0 -> o
    1:1:int allocArrays():0:0 -> p
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:java.util.Map convertToHashFloodingResistantImplementation():0:0 -> q
    1:1:com.google.common.collect.CompactHashMap create():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/k;"}
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    1:1:java.util.Set createEntrySet():0:0 -> s
    1:1:int size():0:0 -> size
    1:1:java.util.Map createHashFloodingResistantDelegate(int):0:0 -> t
    1:1:java.util.Set createKeySet():0:0 -> u
    1:1:java.util.Collection createValues():0:0 -> v
    1:1:java.util.Collection values():0:0 -> values
    1:1:com.google.common.collect.CompactHashMap createWithExpectedSize(int):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll2/k;"}
    1:1:java.util.Map delegateOrNull():0:0 -> x
    1:1:int entry(int):0:0 -> y
    1:1:java.util.Iterator entrySetIterator():0:0 -> z
com.google.common.collect.CompactHashMap$1 -> l2.k$a:
    com.google.common.collect.CompactHashMap this$0 -> j
    1:1:void <init>(com.google.common.collect.CompactHashMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)V"}
    1:1:java.lang.Object getOutput(int):0:0 -> b
com.google.common.collect.CompactHashMap$2 -> l2.k$b:
    com.google.common.collect.CompactHashMap this$0 -> j
    1:1:void <init>(com.google.common.collect.CompactHashMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)V"}
    1:1:java.lang.Object getOutput(int):0:0 -> b
    1:1:java.util.Map$Entry getOutput(int):0:0 -> d
com.google.common.collect.CompactHashMap$3 -> l2.k$c:
    com.google.common.collect.CompactHashMap this$0 -> j
    1:1:void <init>(com.google.common.collect.CompactHashMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)V"}
    1:1:java.lang.Object getOutput(int):0:0 -> b
com.google.common.collect.CompactHashMap$EntrySetView -> l2.k$d:
    com.google.common.collect.CompactHashMap this$0 -> f
    1:1:void <init>(com.google.common.collect.CompactHashMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)V"}
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:int size():0:0 -> size
com.google.common.collect.CompactHashMap$Itr -> l2.k$e:
    int expectedMetadata -> f
    int currentIndex -> g
    int indexToRemove -> h
    com.google.common.collect.CompactHashMap this$0 -> i
    1:1:void <init>(com.google.common.collect.CompactHashMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)V"}
    2:2:void <init>(com.google.common.collect.CompactHashMap,com.google.common.collect.CompactHashMap$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;Ll2/k$a;)V"}
    1:1:void checkForConcurrentModification():0:0 -> a
    java.lang.Object getOutput(int) -> b
    1:1:void incrementExpectedModCount():0:0 -> c
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
com.google.common.collect.CompactHashMap$KeySetView -> l2.k$f:
    com.google.common.collect.CompactHashMap this$0 -> f
    1:1:void <init>(com.google.common.collect.CompactHashMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)V"}
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:int size():0:0 -> size
com.google.common.collect.CompactHashMap$MapEntry -> l2.k$g:
    java.lang.Object key -> f
    int lastKnownIndex -> g
    com.google.common.collect.CompactHashMap this$0 -> h
    1:1:void <init>(com.google.common.collect.CompactHashMap,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;I)V"}
    1:1:void updateLastKnownIndex():0:0 -> a
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
com.google.common.collect.CompactHashMap$ValuesView -> l2.k$h:
    com.google.common.collect.CompactHashMap this$0 -> f
    1:1:void <init>(com.google.common.collect.CompactHashMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/k;)V"}
    1:1:void clear():0:0 -> clear
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
com.google.common.collect.CompactHashing -> l2.l:
    1:1:java.lang.Object createTable(int):0:0 -> a
    1:1:int getHashPrefix(int,int):0:0 -> b
    1:1:int getNext(int,int):0:0 -> c
    1:1:int maskCombine(int,int,int):0:0 -> d
    1:1:int newCapacity(int):0:0 -> e
    1:1:int remove(java.lang.Object,java.lang.Object,int,java.lang.Object,int[],java.lang.Object[],java.lang.Object[]):0:0 -> f
    1:1:void tableClear(java.lang.Object):0:0 -> g
    1:1:int tableGet(java.lang.Object,int):0:0 -> h
    1:1:void tableSet(java.lang.Object,int,int):0:0 -> i
    1:1:int tableSize(int):0:0 -> j
com.google.common.collect.ComparatorOrdering -> l2.m:
    java.util.Comparator comparator -> f
    1:1:void <init>(java.util.Comparator):0:0 -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object):0:0 -> compare
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.collect.ComparisonChain -> l2.n:
    com.google.common.collect.ComparisonChain ACTIVE -> a
    com.google.common.collect.ComparisonChain LESS -> b
    com.google.common.collect.ComparisonChain GREATER -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void <init>(com.google.common.collect.ComparisonChain$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/n$a;)V"}
    1:1:com.google.common.collect.ComparisonChain access$100():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/n;"}
    1:1:com.google.common.collect.ComparisonChain access$200():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/n;"}
    1:1:com.google.common.collect.ComparisonChain access$300():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/n;"}
    com.google.common.collect.ComparisonChain compare(int,int) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Ll2/n;"}
    com.google.common.collect.ComparisonChain compare(long,long) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJ)Ll2/n;"}
    com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Ll2/n;"}
    com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZ)Ll2/n;"}
    com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZ)Ll2/n;"}
    int result() -> i
    1:1:com.google.common.collect.ComparisonChain start():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/n;"}
com.google.common.collect.ComparisonChain$1 -> l2.n$a:
    1:1:void <init>():0:0 -> <init>
    1:1:com.google.common.collect.ComparisonChain compare(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Ll2/n;"}
    1:1:com.google.common.collect.ComparisonChain compare(long,long):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJ)Ll2/n;"}
    1:1:com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Ll2/n;"}
    1:1:com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZ)Ll2/n;"}
    1:1:com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZ)Ll2/n;"}
    1:1:int result():0:0 -> i
    1:1:com.google.common.collect.ComparisonChain classify(int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll2/n;"}
com.google.common.collect.ComparisonChain$InactiveComparisonChain -> l2.n$b:
    int result -> d
    1:1:void <init>(int):0:0 -> <init>
    1:1:com.google.common.collect.ComparisonChain compare(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Ll2/n;"}
    1:1:com.google.common.collect.ComparisonChain compare(long,long):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JJ)Ll2/n;"}
    1:1:com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Ll2/n;"}
    1:1:com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZ)Ll2/n;"}
    1:1:com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZ)Ll2/n;"}
    1:1:int result():0:0 -> i
com.google.common.collect.CompoundOrdering -> l2.o:
    java.util.Comparator[] comparators -> f
    1:1:void <init>(java.util.Comparator,java.util.Comparator):0:0 -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object):0:0 -> compare
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.collect.EmptyImmutableListMultimap -> l2.p:
    com.google.common.collect.EmptyImmutableListMultimap INSTANCE -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.Map asMap():0:0 -> b
    1:1:com.google.common.collect.ImmutableMap asMap():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/x;"}
com.google.common.collect.ForwardingMap -> l2.q:
    void <init>() -> <init>
    java.util.Map delegate() -> b
    1:1:boolean standardContainsValue(java.lang.Object):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean standardEquals(java.lang.Object):0:0 -> d
    1:1:int standardHashCode():0:0 -> e
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:void putAll(java.util.Map):0:0 -> putAll
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    1:1:int size():0:0 -> size
    1:1:java.util.Collection values():0:0 -> values
com.google.common.collect.ForwardingObject -> l2.r:
    void <init>() -> <init>
    java.lang.Object delegate() -> a
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.collect.Hashing -> l2.s:
    1:1:int closedTableSize(int,double):0:0 -> a
    1:1:int smear(int):0:0 -> b
    1:1:int smearedHash(java.lang.Object):0:0 -> c
com.google.common.collect.ImmutableCollection -> l2.t:
    java.lang.Object[] EMPTY_ARRAY -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.google.common.collect.ImmutableList asList():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:int copyIntoArray(java.lang.Object[],int):0:0 -> b
    1:1:java.lang.Object[] internalArray():0:0 -> c
    1:1:void clear():0:0 -> clear
    boolean contains(java.lang.Object) -> contains
    1:1:int internalArrayEnd():0:0 -> d
    1:1:int internalArrayStart():0:0 -> e
    boolean isPartialView() -> f
    com.google.common.collect.UnmodifiableIterator iterator() -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder -> l2.t$a:
    java.lang.Object[] contents -> a
    int size -> b
    boolean forceCopy -> c
    1:1:void <init>(int):0:0 -> <init>
    1:1:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;)Ll2/t$b;"}
    1:1:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ll2/t$a;"}
    1:1:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;)Ll2/t$b;"}
    1:1:void addAll(java.lang.Object[],int):0:0 -> f
    1:1:void getReadyToExpandTo(int):0:0 -> g
com.google.common.collect.ImmutableCollection$Builder -> l2.t$b:
    void <init>() -> <init>
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ll2/t$b;"}
    1:1:com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;)Ll2/t$b;"}
    1:1:int expandedCapacity(int,int):0:0 -> c
com.google.common.collect.ImmutableEntry -> l2.u:
    java.lang.Object key -> f
    java.lang.Object value -> g
    1:1:void <init>(java.lang.Object,java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
com.google.common.collect.ImmutableList -> l2.v:
    com.google.common.collect.UnmodifiableListIterator EMPTY_ITR -> g
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.google.common.collect.ImmutableList asList():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:void add(int,java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    1:1:int copyIntoArray(java.lang.Object[],int):0:0 -> b
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:com.google.common.collect.UnmodifiableIterator iterator():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;)Ll2/v;"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;I)Ll2/v;"}
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:com.google.common.collect.ImmutableList$Builder builder():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v$a;"}
    1:1:com.google.common.collect.ImmutableList$Builder builderWithExpectedSize(int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll2/v$a;"}
    1:1:com.google.common.collect.ImmutableList construct(java.lang.Object[]):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;)Ll2/v;"}
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:com.google.common.collect.ImmutableList copyOf(java.util.Collection):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Collection;)Ll2/v;"}
    1:1:com.google.common.collect.ImmutableList copyOf(java.lang.Object[]):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;)Ll2/v;"}
    1:1:com.google.common.collect.UnmodifiableListIterator listIterator():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z0;"}
    1:1:com.google.common.collect.UnmodifiableListIterator listIterator(int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll2/z0;"}
    1:1:com.google.common.collect.ImmutableList of():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:com.google.common.collect.ImmutableList of(java.lang.Object):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ll2/v;"}
    1:1:java.lang.Object remove(int):0:0 -> remove
    1:1:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Ll2/v;"}
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:java.util.List subList(int,int):0:0 -> subList
    1:1:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ll2/v;"}
    1:1:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ll2/v;"}
    1:1:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ll2/v;"}
    1:1:com.google.common.collect.ImmutableList sortedCopyOf(java.util.Comparator,java.lang.Iterable):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Comparator;Ljava/lang/Iterable;)Ll2/v;"}
    1:1:com.google.common.collect.ImmutableList subList(int,int):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Ll2/v;"}
    1:1:com.google.common.collect.ImmutableList subListUnchecked(int,int):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Ll2/v;"}
com.google.common.collect.ImmutableList$Builder -> l2.v$a:
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ll2/t$b;"}
    1:1:com.google.common.collect.ImmutableList$Builder add(java.lang.Object):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ll2/v$a;"}
    1:1:com.google.common.collect.ImmutableList$Builder add(java.lang.Object[]):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;)Ll2/v$a;"}
    1:1:com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;)Ll2/v$a;"}
    1:1:com.google.common.collect.ImmutableList build():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
com.google.common.collect.ImmutableList$Itr -> l2.v$b:
    com.google.common.collect.ImmutableList list -> h
    1:1:void <init>(com.google.common.collect.ImmutableList,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/v;I)V"}
    1:1:java.lang.Object get(int):0:0 -> a
com.google.common.collect.ImmutableList$SubList -> l2.v$c:
    int offset -> h
    int length -> i
    com.google.common.collect.ImmutableList this$0 -> j
    1:1:void <init>(com.google.common.collect.ImmutableList,int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/v;II)V"}
    1:1:java.lang.Object[] internalArray():0:0 -> c
    1:1:int internalArrayEnd():0:0 -> d
    1:1:int internalArrayStart():0:0 -> e
    1:1:boolean isPartialView():0:0 -> f
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:int size():0:0 -> size
    1:1:java.util.List subList(int,int):0:0 -> subList
    1:1:com.google.common.collect.ImmutableList subList(int,int):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Ll2/v;"}
com.google.common.collect.ImmutableListMultimap -> l2.w:
    1:1:void <init>(com.google.common.collect.ImmutableMap,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/x;I)V"}
    1:1:java.util.Collection get(java.lang.Object):0:0 -> get
    1:1:com.google.common.collect.ImmutableListMultimap fromMapEntries(java.util.Collection,java.util.Comparator):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Collection;Ljava/util/Comparator;)Ll2/w;"}
    1:1:com.google.common.collect.ImmutableList get(java.lang.Object):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ll2/v;"}
    1:1:com.google.common.collect.ImmutableListMultimap of():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/w;"}
com.google.common.collect.ImmutableListMultimap$Builder -> l2.w$a:
    void <init>() -> <init>
    1:1:com.google.common.collect.ImmutableListMultimap build():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/w;"}
    1:1:com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Ll2/w$a;"}
com.google.common.collect.ImmutableMap -> l2.x:
    com.google.common.collect.ImmutableSet entrySet -> f
    com.google.common.collect.ImmutableSet keySet -> g
    com.google.common.collect.ImmutableCollection values -> h
    java.util.Map$Entry[] EMPTY_ENTRY_ARRAY -> i
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:com.google.common.collect.ImmutableMap$Builder builder():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/x$a;"}
    1:1:com.google.common.collect.ImmutableMap copyOf(java.lang.Iterable):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;)Ll2/x;"}
    1:1:com.google.common.collect.ImmutableMap copyOf(java.util.Map):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;)Ll2/x;"}
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean containsValue(java.lang.Object):0:0 -> containsValue
    com.google.common.collect.ImmutableSet createEntrySet() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z;"}
    com.google.common.collect.ImmutableSet createKeySet() -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z;"}
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    com.google.common.collect.ImmutableCollection createValues() -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/t;"}
    1:1:com.google.common.collect.ImmutableSet entrySet():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z;"}
    java.lang.Object get(java.lang.Object) -> get
    1:1:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object):0:0 -> getOrDefault
    boolean isPartialView() -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:com.google.common.collect.ImmutableSet keySet():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z;"}
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:com.google.common.collect.ImmutableMap of():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/x;"}
    1:1:com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Ll2/x;"}
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:com.google.common.collect.ImmutableCollection values():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/t;"}
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:void putAll(java.util.Map):0:0 -> putAll
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    1:1:java.lang.String toString():0:0 -> toString
    1:1:java.util.Collection values():0:0 -> values
com.google.common.collect.ImmutableMap$Builder -> l2.x$a:
    java.util.Comparator valueComparator -> a
    java.lang.Object[] alternatingKeysAndValues -> b
    int size -> c
    boolean entriesUsed -> d
    com.google.common.collect.ImmutableMap$Builder$DuplicateKey duplicateKey -> e
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(int):0:0 -> <init>
    1:1:com.google.common.collect.ImmutableMap build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/x;"}
    1:1:com.google.common.collect.ImmutableMap build(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ll2/x;"}
    1:1:com.google.common.collect.ImmutableMap buildOrThrow():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/x;"}
    1:1:void ensureCapacity(int):0:0 -> d
    1:1:java.lang.Object[] lastEntryForEachKey(java.lang.Object[],int):0:0 -> e
    1:1:com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Ll2/x$a;"}
    1:1:com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map$Entry;)Ll2/x$a;"}
    1:1:com.google.common.collect.ImmutableMap$Builder putAll(java.lang.Iterable):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;)Ll2/x$a;"}
    1:1:void sortEntries(java.lang.Object[],int,java.util.Comparator):0:0 -> i
com.google.common.collect.ImmutableMap$Builder$DuplicateKey -> l2.x$a$a:
    java.lang.Object key -> a
    java.lang.Object value1 -> b
    java.lang.Object value2 -> c
    1:1:void <init>(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> <init>
    1:1:java.lang.IllegalArgumentException exception():0:0 -> a
com.google.common.collect.ImmutableMultimap -> l2.y:
    com.google.common.collect.ImmutableMap map -> j
    int size -> k
    1:1:void <init>(com.google.common.collect.ImmutableMap,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/x;I)V"}
    1:1:java.util.Collection entries():0:0 -> a
    1:1:java.util.Map asMap():0:0 -> b
    1:1:boolean containsEntry(java.lang.Object,java.lang.Object):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean containsValue(java.lang.Object):0:0 -> d
    1:1:java.util.Map createAsMap():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.util.Collection createEntries():0:0 -> f
    1:1:java.util.Set createKeySet():0:0 -> g
    1:1:java.util.Collection createValues():0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.util.Iterator entryIterator():0:0 -> i
    1:1:java.util.Iterator valueIterator():0:0 -> j
    1:1:com.google.common.collect.ImmutableMap asMap():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/x;"}
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:com.google.common.collect.ImmutableCollection createEntries():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/t;"}
    1:1:com.google.common.collect.ImmutableCollection createValues():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/t;"}
    1:1:com.google.common.collect.ImmutableCollection entries():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/t;"}
    1:1:com.google.common.collect.UnmodifiableIterator entryIterator():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:com.google.common.collect.ImmutableSet keySet():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z;"}
    1:1:boolean put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:com.google.common.collect.UnmodifiableIterator valueIterator():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:com.google.common.collect.ImmutableCollection values():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/t;"}
    1:1:boolean remove(java.lang.Object,java.lang.Object):0:0 -> remove
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
    1:1:java.util.Collection values():0:0 -> values
com.google.common.collect.ImmutableMultimap$1 -> l2.y$a:
    java.util.Iterator asMapItr -> f
    java.lang.Object currentKey -> g
    java.util.Iterator valueItr -> h
    com.google.common.collect.ImmutableMultimap this$0 -> i
    1:1:void <init>(com.google.common.collect.ImmutableMultimap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/y;)V"}
    1:1:java.util.Map$Entry next():0:0 -> a
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
com.google.common.collect.ImmutableMultimap$2 -> l2.y$b:
    java.util.Iterator valueCollectionItr -> f
    java.util.Iterator valueItr -> g
    com.google.common.collect.ImmutableMultimap this$0 -> h
    1:1:void <init>(com.google.common.collect.ImmutableMultimap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/y;)V"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
com.google.common.collect.ImmutableMultimap$Builder -> l2.y$c:
    java.util.Map builderMap -> a
    java.util.Comparator keyComparator -> b
    java.util.Comparator valueComparator -> c
    1:1:void <init>():0:0 -> <init>
    1:1:com.google.common.collect.ImmutableMultimap build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y;"}
    1:1:java.util.Collection newMutableValueCollection():0:0 -> b
    1:1:com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Ll2/y$c;"}
com.google.common.collect.ImmutableMultimap$EntryCollection -> l2.y$d:
    com.google.common.collect.ImmutableMultimap multimap -> g
    1:1:void <init>(com.google.common.collect.ImmutableMultimap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/y;)V"}
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:com.google.common.collect.UnmodifiableIterator iterator():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
com.google.common.collect.ImmutableMultimap$Values -> l2.y$e:
    com.google.common.collect.ImmutableMultimap multimap -> g
    1:1:void <init>(com.google.common.collect.ImmutableMultimap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/y;)V"}
    1:1:int copyIntoArray(java.lang.Object[],int):0:0 -> b
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:com.google.common.collect.UnmodifiableIterator iterator():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
com.google.common.collect.ImmutableSet -> l2.z:
    com.google.common.collect.ImmutableList asList -> g
    void <init>() -> <init>
    1:1:com.google.common.collect.ImmutableList asList():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    com.google.common.collect.UnmodifiableIterator iterator() -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:boolean access$000(int,int):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:com.google.common.collect.ImmutableSet access$100(int,java.lang.Object[]):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[Ljava/lang/Object;)Ll2/z;"}
    1:1:int chooseTableSize(int):0:0 -> j
    1:1:com.google.common.collect.ImmutableSet construct(int,java.lang.Object[]):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[Ljava/lang/Object;)Ll2/z;"}
    1:1:com.google.common.collect.ImmutableSet copyOf(java.util.Collection):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Collection;)Ll2/z;"}
    1:1:com.google.common.collect.ImmutableSet copyOf(java.lang.Object[]):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;)Ll2/z;"}
    1:1:com.google.common.collect.ImmutableList createAsList():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:boolean isHashCodeFast():0:0 -> o
    1:1:com.google.common.collect.ImmutableSet of():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z;"}
    1:1:com.google.common.collect.ImmutableSet of(java.lang.Object):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ll2/z;"}
    1:1:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Ll2/z;"}
    1:1:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ll2/z;"}
    1:1:com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ll2/z;"}
    1:1:boolean shouldTrim(int,int):0:0 -> u
com.google.common.collect.ImmutableSet$Builder -> l2.z$a:
    java.lang.Object[] hashTable -> d
    int hashCode -> e
    1:1:void <init>():0:0 -> <init>
    1:1:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ll2/t$b;"}
    1:1:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ll2/z$a;"}
    1:1:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Ljava/lang/Object;)Ll2/z$a;"}
    1:1:com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;)Ll2/z$a;"}
    1:1:void addDeduping(java.lang.Object):0:0 -> k
    1:1:com.google.common.collect.ImmutableSet build():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z;"}
com.google.common.collect.Iterables -> l2.a0:
    1:1:boolean any(java.lang.Iterable,com.google.common.base.Predicate):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Lk2/n;)Z"}
    1:1:java.util.Collection castOrCopyToCollection(java.lang.Iterable):0:0 -> b
    1:1:java.lang.Object getFirst(java.lang.Iterable,java.lang.Object):0:0 -> c
    1:1:java.lang.Object getLast(java.lang.Iterable):0:0 -> d
    1:1:java.lang.Object getLast(java.lang.Iterable,java.lang.Object):0:0 -> e
    1:1:java.lang.Object getLastInNonemptyList(java.util.List):0:0 -> f
    1:1:java.lang.Object getOnlyElement(java.lang.Iterable):0:0 -> g
    1:1:boolean removeIf(java.lang.Iterable,com.google.common.base.Predicate):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Lk2/n;)Z"}
    1:1:boolean removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lk2/n;)Z"}
    1:1:void slowRemoveIfForRemainingElements(java.util.List,com.google.common.base.Predicate,int,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lk2/n;II)V"}
    1:1:java.lang.Object[] toArray(java.lang.Iterable):0:0 -> k
com.google.common.collect.Iterators -> l2.b0:
    1:1:boolean addAll(java.util.Collection,java.util.Iterator):0:0 -> a
    1:1:boolean any(java.util.Iterator,com.google.common.base.Predicate):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;Lk2/n;)Z"}
    1:1:void clear(java.util.Iterator):0:0 -> c
    1:1:boolean contains(java.util.Iterator,java.lang.Object):0:0 -> d
    1:1:boolean elementsEqual(java.util.Iterator,java.util.Iterator):0:0 -> e
    1:1:com.google.common.collect.UnmodifiableIterator emptyIterator():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:com.google.common.collect.UnmodifiableListIterator emptyListIterator():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z0;"}
    1:1:java.util.Iterator emptyModifiableIterator():0:0 -> h
    1:1:com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;Lk2/n;)Ll2/y0;"}
    1:1:java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;Lk2/n;)Ljava/lang/Object;"}
    1:1:java.lang.Object getLast(java.util.Iterator):0:0 -> k
    1:1:java.lang.Object getLast(java.util.Iterator,java.lang.Object):0:0 -> l
    1:1:java.lang.Object getNext(java.util.Iterator,java.lang.Object):0:0 -> m
    1:1:java.lang.Object getOnlyElement(java.util.Iterator):0:0 -> n
    1:1:int indexOf(java.util.Iterator,com.google.common.base.Predicate):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;Lk2/n;)I"}
    1:1:java.lang.Object pollNext(java.util.Iterator):0:0 -> p
    1:1:boolean removeAll(java.util.Iterator,java.util.Collection):0:0 -> q
    1:1:boolean removeIf(java.util.Iterator,com.google.common.base.Predicate):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;Lk2/n;)Z"}
    1:1:com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Ll2/y0;"}
com.google.common.collect.Iterators$5 -> l2.b0$a:
    java.util.Iterator val$unfiltered -> h
    com.google.common.base.Predicate val$retainIfTrue -> i
    1:1:void <init>(java.util.Iterator,com.google.common.base.Predicate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;Lk2/n;)V"}
    1:1:java.lang.Object computeNext():0:0 -> a
com.google.common.collect.Iterators$ArrayItr -> l2.b0$b:
    java.lang.Object[] array -> h
    com.google.common.collect.UnmodifiableListIterator EMPTY -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object[],int):0:0 -> <init>
    1:1:java.lang.Object get(int):0:0 -> a
com.google.common.collect.Iterators$EmptyModifiableIterator -> l2.b0$c:
    com.google.common.collect.Iterators$EmptyModifiableIterator INSTANCE -> f
    com.google.common.collect.Iterators$EmptyModifiableIterator[] $VALUES -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.google.common.collect.Iterators$EmptyModifiableIterator[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll2/b0$c;"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
    1:1:com.google.common.collect.Iterators$EmptyModifiableIterator valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll2/b0$c;"}
    1:1:com.google.common.collect.Iterators$EmptyModifiableIterator[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll2/b0$c;"}
com.google.common.collect.Iterators$SingletonIterator -> l2.b0$d:
    java.lang.Object valueOrSentinel -> f
    java.lang.Object SENTINEL -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
com.google.common.collect.ListMultimap -> l2.c0:
com.google.common.collect.Lists -> l2.d0:
    1:1:java.util.List cast(java.lang.Iterable):0:0 -> a
    1:1:int computeArrayListCapacity(int):0:0 -> b
    1:1:boolean equalsImpl(java.util.List,java.lang.Object):0:0 -> c
    1:1:int indexOfImpl(java.util.List,java.lang.Object):0:0 -> d
    1:1:int indexOfRandomAccess(java.util.List,java.lang.Object):0:0 -> e
    1:1:int lastIndexOfImpl(java.util.List,java.lang.Object):0:0 -> f
    1:1:int lastIndexOfRandomAccess(java.util.List,java.lang.Object):0:0 -> g
    1:1:java.util.ArrayList newArrayList():0:0 -> h
    1:1:java.util.ArrayList newArrayList(java.util.Iterator):0:0 -> i
    1:1:java.util.ArrayList newArrayList(java.lang.Object[]):0:0 -> j
    1:1:java.util.List transform(java.util.List,com.google.common.base.Function):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lk2/f;)Ljava/util/List;"}
com.google.common.collect.Lists$TransformingRandomAccessList -> l2.d0$a:
    java.util.List fromList -> f
    com.google.common.base.Function function -> g
    1:1:void <init>(java.util.List,com.google.common.base.Function):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lk2/f;)V"}
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:java.lang.Object remove(int):0:0 -> remove
    1:1:void removeRange(int,int):0:0 -> removeRange
    1:1:int size():0:0 -> size
com.google.common.collect.Lists$TransformingRandomAccessList$1 -> l2.d0$a$a:
    com.google.common.collect.Lists$TransformingRandomAccessList this$0 -> g
    1:1:void <init>(com.google.common.collect.Lists$TransformingRandomAccessList,java.util.ListIterator):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d0$a;Ljava/util/ListIterator;)V"}
    1:1:java.lang.Object transform(java.lang.Object):0:0 -> a
com.google.common.collect.Lists$TransformingSequentialList -> l2.d0$b:
    java.util.List fromList -> f
    com.google.common.base.Function function -> g
    1:1:void <init>(java.util.List,com.google.common.base.Function):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;Lk2/f;)V"}
    1:1:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:void removeRange(int,int):0:0 -> removeRange
    1:1:int size():0:0 -> size
com.google.common.collect.Lists$TransformingSequentialList$1 -> l2.d0$b$a:
    com.google.common.collect.Lists$TransformingSequentialList this$0 -> g
    1:1:void <init>(com.google.common.collect.Lists$TransformingSequentialList,java.util.ListIterator):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/d0$b;Ljava/util/ListIterator;)V"}
    1:1:java.lang.Object transform(java.lang.Object):0:0 -> a
com.google.common.collect.Maps -> l2.f0:
    1:1:int capacity(int):0:0 -> a
    1:1:boolean containsValueImpl(java.util.Map,java.lang.Object):0:0 -> b
    1:1:boolean equalsImpl(java.util.Map,java.lang.Object):0:0 -> c
    1:1:java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object):0:0 -> d
    1:1:com.google.common.base.Function keyFunction():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk2/f;"}
    1:1:java.util.HashMap newHashMapWithExpectedSize(int):0:0 -> f
    1:1:java.util.IdentityHashMap newIdentityHashMap():0:0 -> g
    1:1:boolean safeContainsKey(java.util.Map,java.lang.Object):0:0 -> h
    1:1:java.lang.Object safeGet(java.util.Map,java.lang.Object):0:0 -> i
    1:1:java.lang.Object safeRemove(java.util.Map,java.lang.Object):0:0 -> j
    1:1:java.lang.String toStringImpl(java.util.Map):0:0 -> k
    1:1:com.google.common.base.Function valueFunction():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lk2/f;"}
    1:1:java.util.Iterator valueIterator(java.util.Iterator):0:0 -> m
com.google.common.collect.Maps$1 -> l2.e0:
com.google.common.collect.Maps$2 -> l2.f0$a:
    1:1:void <init>(java.util.Iterator):0:0 -> <init>
    1:1:java.lang.Object transform(java.lang.Object):0:0 -> a
    1:1:java.lang.Object transform(java.util.Map$Entry):0:0 -> b
com.google.common.collect.Maps$EntryFunction -> l2.f0$b:
    com.google.common.collect.Maps$EntryFunction KEY -> f
    com.google.common.collect.Maps$EntryFunction VALUE -> g
    com.google.common.collect.Maps$EntryFunction[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    2:2:void <init>(java.lang.String,int,com.google.common.collect.Maps$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ILl2/e0;)V"}
    1:1:com.google.common.collect.Maps$EntryFunction[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll2/f0$b;"}
    1:1:com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ll2/f0$b;"}
    1:1:com.google.common.collect.Maps$EntryFunction[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ll2/f0$b;"}
com.google.common.collect.Maps$EntryFunction$1 -> l2.f0$b$a:
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:java.lang.Object apply(java.lang.Object):0:0 -> apply
    1:1:java.lang.Object apply(java.util.Map$Entry):0:0 -> b
com.google.common.collect.Maps$EntryFunction$2 -> l2.f0$b$b:
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:java.lang.Object apply(java.lang.Object):0:0 -> apply
    1:1:java.lang.Object apply(java.util.Map$Entry):0:0 -> b
com.google.common.collect.Maps$EntrySet -> l2.f0$c:
    void <init>() -> <init>
    java.util.Map map() -> a
    1:1:void clear():0:0 -> clear
    boolean contains(java.lang.Object) -> contains
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
com.google.common.collect.Maps$KeySet -> l2.f0$d:
    java.util.Map map -> f
    1:1:void <init>(java.util.Map):0:0 -> <init>
    1:1:java.util.Map map():0:0 -> a
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:int size():0:0 -> size
com.google.common.collect.Maps$Values -> l2.f0$e:
    java.util.Map map -> f
    1:1:void <init>(java.util.Map):0:0 -> <init>
    1:1:java.util.Map map():0:0 -> a
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
com.google.common.collect.Maps$ViewCachingAbstractMap -> l2.f0$f:
    java.util.Set entrySet -> f
    java.util.Collection values -> g
    void <init>() -> <init>
    java.util.Set createEntrySet() -> a
    1:1:java.util.Collection createValues():0:0 -> b
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:java.util.Collection values():0:0 -> values
com.google.common.collect.Multimap -> l2.g0:
    java.util.Collection entries() -> a
    java.util.Map asMap() -> b
    boolean containsEntry(java.lang.Object,java.lang.Object) -> c
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    int size() -> size
    java.util.Collection values() -> values
com.google.common.collect.MultimapBuilder -> l2.h0:
    void <init>() -> <init>
    1:1:void <init>(com.google.common.collect.MultimapBuilder$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/h0$a;)V"}
    1:1:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/h0$e;"}
    1:1:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys hashKeys(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll2/h0$e;"}
    1:1:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys treeKeys():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/h0$e;"}
    1:1:com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys treeKeys(java.util.Comparator):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Comparator;)Ll2/h0$e;"}
com.google.common.collect.MultimapBuilder$1 -> l2.h0$a:
    int val$expectedKeys -> a
    1:1:void <init>(int):0:0 -> <init>
    1:1:java.util.Map createMap():0:0 -> c
com.google.common.collect.MultimapBuilder$3 -> l2.h0$b:
    java.util.Comparator val$comparator -> a
    1:1:void <init>(java.util.Comparator):0:0 -> <init>
    1:1:java.util.Map createMap():0:0 -> c
com.google.common.collect.MultimapBuilder$ArrayListSupplier -> l2.h0$c:
    int expectedValuesPerKey -> f
    1:1:void <init>(int):0:0 -> <init>
    1:1:java.util.List get():0:0 -> a
    1:1:java.lang.Object get():0:0 -> get
com.google.common.collect.MultimapBuilder$ListMultimapBuilder -> l2.h0$d:
    1:1:void <init>():0:0 -> <init>
    com.google.common.collect.ListMultimap build() -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/c0;"}
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys -> l2.h0$e:
    void <init>() -> <init>
    1:1:com.google.common.collect.MultimapBuilder$ListMultimapBuilder arrayListValues():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/h0$d;"}
    1:1:com.google.common.collect.MultimapBuilder$ListMultimapBuilder arrayListValues(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ll2/h0$d;"}
    java.util.Map createMap() -> c
com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys$1 -> l2.h0$e$a:
    int val$expectedValuesPerKey -> a
    com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys this$0 -> b
    1:1:void <init>(com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/h0$e;I)V"}
    1:1:com.google.common.collect.ListMultimap build():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/c0;"}
com.google.common.collect.Multimaps -> l2.i0:
    1:1:boolean equalsImpl(com.google.common.collect.Multimap,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/g0;Ljava/lang/Object;)Z"}
    1:1:com.google.common.collect.ListMultimap newListMultimap(java.util.Map,com.google.common.base.Supplier):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;Lk2/r;)Ll2/c0;"}
com.google.common.collect.Multimaps$CustomListMultimap -> l2.i0$a:
    com.google.common.base.Supplier factory -> l
    1:1:void <init>(java.util.Map,com.google.common.base.Supplier):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Map;Lk2/r;)V"}
    1:1:java.util.List createCollection():0:0 -> B
    1:1:java.util.Map createAsMap():0:0 -> e
    1:1:java.util.Set createKeySet():0:0 -> g
    1:1:java.util.Collection createCollection():0:0 -> r
com.google.common.collect.Multimaps$Entries -> l2.i0$b:
    void <init>() -> <init>
    com.google.common.collect.Multimap multimap() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/g0;"}
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:int size():0:0 -> size
com.google.common.collect.NaturalOrdering -> l2.j0:
    com.google.common.collect.NaturalOrdering INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object):0:0 -> compare
    1:1:com.google.common.collect.Ordering reverse():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/m0;"}
    1:1:int compare(java.lang.Comparable,java.lang.Comparable):0:0 -> h
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.collect.NullnessCasts -> l2.k0:
    1:1:java.lang.Object uncheckedCastNullableTToT(java.lang.Object):0:0 -> a
    1:1:java.lang.Object unsafeNull():0:0 -> b
com.google.common.collect.ObjectArrays -> l2.l0:
    1:1:java.lang.Object checkElementNotNull(java.lang.Object,int):0:0 -> a
    1:1:java.lang.Object[] checkElementsNotNull(java.lang.Object[]):0:0 -> b
    1:1:java.lang.Object[] checkElementsNotNull(java.lang.Object[],int):0:0 -> c
    1:1:java.lang.Object[] newArray(java.lang.Object[],int):0:0 -> d
com.google.common.collect.Ordering -> l2.m0:
    void <init>() -> <init>
    1:1:com.google.common.collect.Ordering compound(java.util.Comparator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Comparator;)Ll2/m0;"}
    1:1:com.google.common.collect.Ordering from(java.util.Comparator):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Comparator;)Ll2/m0;"}
    1:1:com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;)Ll2/v;"}
    int compare(java.lang.Object,java.lang.Object) -> compare
    1:1:com.google.common.collect.Ordering natural():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/m0;"}
    1:1:com.google.common.collect.Ordering onKeys():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/m0;"}
    1:1:com.google.common.collect.Ordering onResultOf(com.google.common.base.Function):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lk2/f;)Ll2/m0;"}
    1:1:com.google.common.collect.Ordering reverse():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/m0;"}
com.google.common.collect.Platform -> l2.n0:
    1:1:java.lang.Object[] copy(java.lang.Object[],int,int,java.lang.Object[]):0:0 -> a
    1:1:java.lang.Object[] newArray(java.lang.Object[],int):0:0 -> b
    1:1:java.util.Map newHashMapWithExpectedSize(int):0:0 -> c
    1:1:java.util.Map preservesInsertionOrderOnPutsMap():0:0 -> d
com.google.common.collect.RegularImmutableList -> l2.o0:
    java.lang.Object[] array -> h
    int size -> i
    com.google.common.collect.ImmutableList EMPTY -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object[],int):0:0 -> <init>
    1:1:int copyIntoArray(java.lang.Object[],int):0:0 -> b
    1:1:java.lang.Object[] internalArray():0:0 -> c
    1:1:int internalArrayEnd():0:0 -> d
    1:1:int internalArrayStart():0:0 -> e
    1:1:boolean isPartialView():0:0 -> f
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:int size():0:0 -> size
com.google.common.collect.RegularImmutableMap -> l2.p0:
    java.lang.Object hashTable -> j
    java.lang.Object[] alternatingKeysAndValues -> k
    int size -> l
    com.google.common.collect.ImmutableMap EMPTY -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object,java.lang.Object[],int):0:0 -> <init>
    1:1:com.google.common.collect.ImmutableSet createEntrySet():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z;"}
    1:1:com.google.common.collect.ImmutableSet createKeySet():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/z;"}
    1:1:com.google.common.collect.ImmutableCollection createValues():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/t;"}
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:boolean isPartialView():0:0 -> h
    1:1:com.google.common.collect.RegularImmutableMap create(int,java.lang.Object[]):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[Ljava/lang/Object;)Ll2/p0;"}
    1:1:com.google.common.collect.RegularImmutableMap create(int,java.lang.Object[],com.google.common.collect.ImmutableMap$Builder):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[Ljava/lang/Object;Ll2/x$a;)Ll2/p0;"}
    1:1:java.lang.Object createHashTable(java.lang.Object[],int,int,int):0:0 -> o
    1:1:java.lang.Object get(java.lang.Object,java.lang.Object[],int,int,java.lang.Object):0:0 -> p
    1:1:int size():0:0 -> size
com.google.common.collect.RegularImmutableMap$EntrySet -> l2.p0$a:
    com.google.common.collect.ImmutableMap map -> h
    java.lang.Object[] alternatingKeysAndValues -> i
    int keyOffset -> j
    int size -> k
    1:1:void <init>(com.google.common.collect.ImmutableMap,java.lang.Object[],int,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/x;[Ljava/lang/Object;II)V"}
    1:1:int copyIntoArray(java.lang.Object[],int):0:0 -> b
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean isPartialView():0:0 -> f
    1:1:com.google.common.collect.UnmodifiableIterator iterator():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:com.google.common.collect.ImmutableList createAsList():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:int size():0:0 -> size
    1:1:int access$000(com.google.common.collect.RegularImmutableMap$EntrySet):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/p0$a;)I"}
    1:1:java.lang.Object[] access$100(com.google.common.collect.RegularImmutableMap$EntrySet):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/p0$a;)[Ljava/lang/Object;"}
    1:1:int access$200(com.google.common.collect.RegularImmutableMap$EntrySet):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/p0$a;)I"}
com.google.common.collect.RegularImmutableMap$EntrySet$1 -> l2.p0$a$a:
    com.google.common.collect.RegularImmutableMap$EntrySet this$0 -> h
    1:1:void <init>(com.google.common.collect.RegularImmutableMap$EntrySet):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/p0$a;)V"}
    1:1:boolean isPartialView():0:0 -> f
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:int size():0:0 -> size
    1:1:java.util.Map$Entry get(int):0:0 -> z
com.google.common.collect.RegularImmutableMap$KeySet -> l2.p0$b:
    com.google.common.collect.ImmutableMap map -> h
    com.google.common.collect.ImmutableList list -> i
    1:1:void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/x;Ll2/v;)V"}
    1:1:com.google.common.collect.ImmutableList asList():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:int copyIntoArray(java.lang.Object[],int):0:0 -> b
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean isPartialView():0:0 -> f
    1:1:com.google.common.collect.UnmodifiableIterator iterator():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
com.google.common.collect.RegularImmutableMap$KeysOrValuesAsList -> l2.p0$c:
    java.lang.Object[] alternatingKeysAndValues -> h
    int offset -> i
    int size -> j
    1:1:void <init>(java.lang.Object[],int,int):0:0 -> <init>
    1:1:boolean isPartialView():0:0 -> f
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:int size():0:0 -> size
com.google.common.collect.RegularImmutableSet -> l2.q0:
    java.lang.Object[] elements -> h
    int hashCode -> i
    java.lang.Object[] table -> j
    int mask -> k
    int size -> l
    java.lang.Object[] EMPTY_ARRAY -> m
    com.google.common.collect.RegularImmutableSet EMPTY -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object[],int,java.lang.Object[],int,int):0:0 -> <init>
    1:1:int copyIntoArray(java.lang.Object[],int):0:0 -> b
    1:1:java.lang.Object[] internalArray():0:0 -> c
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:int internalArrayEnd():0:0 -> d
    1:1:int internalArrayStart():0:0 -> e
    1:1:boolean isPartialView():0:0 -> f
    1:1:com.google.common.collect.UnmodifiableIterator iterator():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:com.google.common.collect.ImmutableList createAsList():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:boolean isHashCodeFast():0:0 -> o
    1:1:int size():0:0 -> size
com.google.common.collect.ReverseNaturalOrdering -> l2.r0:
    com.google.common.collect.ReverseNaturalOrdering INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object):0:0 -> compare
    1:1:com.google.common.collect.Ordering reverse():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/m0;"}
    1:1:int compare(java.lang.Comparable,java.lang.Comparable):0:0 -> h
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.collect.ReverseOrdering -> l2.s0:
    com.google.common.collect.Ordering forwardOrder -> f
    1:1:void <init>(com.google.common.collect.Ordering):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/m0;)V"}
    1:1:int compare(java.lang.Object,java.lang.Object):0:0 -> compare
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:com.google.common.collect.Ordering reverse():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/m0;"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.collect.Sets -> l2.u0:
    1:1:boolean equalsImpl(java.util.Set,java.lang.Object):0:0 -> a
    1:1:java.util.Set filter(java.util.Set,com.google.common.base.Predicate):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Set;Lk2/n;)Ljava/util/Set;"}
    1:1:java.util.SortedSet filter(java.util.SortedSet,com.google.common.base.Predicate):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/SortedSet;Lk2/n;)Ljava/util/SortedSet;"}
    1:1:int hashCodeImpl(java.util.Set):0:0 -> d
    1:1:com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Set;Ljava/util/Set;)Ll2/u0$e;"}
    1:1:java.util.HashSet newHashSet():0:0 -> f
    1:1:java.util.HashSet newHashSetWithExpectedSize(int):0:0 -> g
    1:1:java.util.Set newIdentityHashSet():0:0 -> h
    1:1:boolean removeAllImpl(java.util.Set,java.util.Collection):0:0 -> i
    1:1:boolean removeAllImpl(java.util.Set,java.util.Iterator):0:0 -> j
com.google.common.collect.Sets$1 -> l2.t0:
com.google.common.collect.Sets$2 -> l2.u0$a:
    java.util.Set val$set1 -> f
    java.util.Set val$set2 -> g
    1:1:void <init>(java.util.Set,java.util.Set):0:0 -> <init>
    1:1:com.google.common.collect.UnmodifiableIterator iterator():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
com.google.common.collect.Sets$2$1 -> l2.u0$a$a:
    java.util.Iterator itr -> h
    com.google.common.collect.Sets$2 this$0 -> i
    1:1:void <init>(com.google.common.collect.Sets$2):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/u0$a;)V"}
    1:1:java.lang.Object computeNext():0:0 -> a
com.google.common.collect.Sets$FilteredSet -> l2.u0$b:
    1:1:void <init>(java.util.Set,com.google.common.base.Predicate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Set;Lk2/n;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
com.google.common.collect.Sets$FilteredSortedSet -> l2.u0$c:
    1:1:void <init>(java.util.SortedSet,com.google.common.base.Predicate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/SortedSet;Lk2/n;)V"}
    1:1:java.util.Comparator comparator():0:0 -> comparator
    1:1:java.lang.Object first():0:0 -> first
    1:1:java.util.SortedSet headSet(java.lang.Object):0:0 -> headSet
    1:1:java.lang.Object last():0:0 -> last
    1:1:java.util.SortedSet subSet(java.lang.Object,java.lang.Object):0:0 -> subSet
    1:1:java.util.SortedSet tailSet(java.lang.Object):0:0 -> tailSet
com.google.common.collect.Sets$ImprovedAbstractSet -> l2.u0$d:
    void <init>() -> <init>
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
com.google.common.collect.Sets$SetView -> l2.u0$e:
    void <init>() -> <init>
    1:1:void <init>(com.google.common.collect.Sets$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll2/t0;)V"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
com.google.common.collect.SingletonImmutableSet -> l2.v0:
    java.lang.Object element -> h
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:com.google.common.collect.ImmutableList asList():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/v;"}
    1:1:int copyIntoArray(java.lang.Object[],int):0:0 -> b
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean isPartialView():0:0 -> f
    1:1:com.google.common.collect.UnmodifiableIterator iterator():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ll2/y0;"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.collect.TransformedIterator -> l2.w0:
    java.util.Iterator backingIterator -> f
    1:1:void <init>(java.util.Iterator):0:0 -> <init>
    java.lang.Object transform(java.lang.Object) -> a
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
com.google.common.collect.TransformedListIterator -> l2.x0:
    1:1:void <init>(java.util.ListIterator):0:0 -> <init>
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:java.util.ListIterator backingIterator():0:0 -> b
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:1:int nextIndex():0:0 -> nextIndex
    1:1:java.lang.Object previous():0:0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
    1:1:void set(java.lang.Object):0:0 -> set
com.google.common.collect.UnmodifiableIterator -> l2.y0:
    void <init>() -> <init>
    1:1:void remove():0:0 -> remove
com.google.common.collect.UnmodifiableListIterator -> l2.z0:
    void <init>() -> <init>
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:void set(java.lang.Object):0:0 -> set
com.google.common.io.ByteStreams -> m2.a:
    java.io.OutputStream NULL_OUTPUT_STREAM -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:byte[] combineBuffers(java.util.Queue,int):0:0 -> a
    1:1:byte[] toByteArray(java.io.InputStream):0:0 -> b
    1:1:byte[] toByteArrayInternal(java.io.InputStream,java.util.Queue,int):0:0 -> c
com.google.common.io.ByteStreams$1 -> m2.a$a:
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void write(int):0:0 -> write
    2:2:void write(byte[]):0:0 -> write
    3:3:void write(byte[],int,int):0:0 -> write
com.google.common.math.BigIntegerMath -> n2.a:
    java.math.BigInteger SQRT2_PRECOMPUTED_BITS -> a
    double LN_10 -> b
    double LN_2 -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.math.BigInteger divide(java.math.BigInteger,java.math.BigInteger,java.math.RoundingMode):0:0 -> a
com.google.common.math.DoubleMath -> n2.b:
    double LN_2 -> a
    double[] everySixteenthFactorial -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:boolean isMathematicalInteger(double):0:0 -> a
    1:1:double roundIntermediate(double,java.math.RoundingMode):0:0 -> b
    1:1:long roundToLong(double,java.math.RoundingMode):0:0 -> c
com.google.common.math.DoubleMath$1 -> n2.b$a:
    int[] $SwitchMap$java$math$RoundingMode -> a
    1:1:void <clinit>():0:0 -> <clinit>
com.google.common.math.DoubleUtils -> n2.c:
    1:1:long getSignificand(double):0:0 -> a
    1:1:boolean isFinite(double):0:0 -> b
com.google.common.math.IntMath -> n2.d:
    byte[] maxLog10ForLeadingZeros -> a
    int[] powersOf10 -> b
    int[] halfPowersOf10 -> c
    int[] factorials -> d
    int[] biggestBinomials -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int checkedAdd(int,int):0:0 -> a
    1:1:int divide(int,int,java.math.RoundingMode):0:0 -> b
    1:1:int mod(int,int):0:0 -> c
    1:1:int saturatedMultiply(int,int):0:0 -> d
com.google.common.math.IntMath$1 -> n2.d$a:
    int[] $SwitchMap$java$math$RoundingMode -> a
    1:1:void <clinit>():0:0 -> <clinit>
com.google.common.math.LongMath -> n2.e:
    byte[] maxLog10ForLeadingZeros -> a
    long[] powersOf10 -> b
    long[] halfPowersOf10 -> c
    long[] factorials -> d
    int[] biggestBinomials -> e
    int[] biggestSimpleBinomials -> f
    long[][] millerRabinBaseSets -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:long checkedAdd(long,long):0:0 -> a
    1:1:long divide(long,long,java.math.RoundingMode):0:0 -> b
    1:1:long gcd(long,long):0:0 -> c
    1:1:long saturatedMultiply(long,long):0:0 -> d
com.google.common.math.LongMath$1 -> n2.e$a:
    int[] $SwitchMap$java$math$RoundingMode -> a
    1:1:void <clinit>():0:0 -> <clinit>
com.google.common.math.MathPreconditions -> n2.f:
    1:1:void checkInRangeForRoundingInputs(boolean,double,java.math.RoundingMode):0:0 -> a
    1:1:void checkNoOverflow(boolean,java.lang.String,int,int):0:0 -> b
    1:1:void checkNoOverflow(boolean,java.lang.String,long,long):0:0 -> c
    1:1:long checkNonNegative(java.lang.String,long):0:0 -> d
    1:1:void checkRoundingUnnecessary(boolean):0:0 -> e
com.google.common.primitives.Booleans -> o2.a:
    1:1:int compare(boolean,boolean):0:0 -> a
    1:1:boolean contains(boolean[],boolean):0:0 -> b
com.google.common.primitives.Bytes -> o2.b:
    1:1:int indexOf(byte[],byte[]):0:0 -> a
com.google.common.primitives.Chars -> o2.c:
    1:1:char checkedCast(long):0:0 -> a
    1:1:boolean contains(char[],char):0:0 -> b
    1:1:char fromBytes(byte,byte):0:0 -> c
com.google.common.primitives.Floats -> o2.d:
    1:1:int hashCode(float):0:0 -> a
com.google.common.primitives.FloatsMethodsForWeb -> o2.e:
com.google.common.primitives.ImmutableIntArray -> o2.f:
    int[] array -> f
    int start -> g
    int end -> h
    com.google.common.primitives.ImmutableIntArray EMPTY -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int[]):0:0 -> <init>
    2:2:void <init>(int[],int,int):0:0 -> <init>
    1:1:com.google.common.primitives.ImmutableIntArray copyOf(int[]):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([I)Lo2/f;"}
    1:1:int get(int):0:0 -> b
    1:1:boolean isEmpty():0:0 -> c
    1:1:int length():0:0 -> d
    1:1:com.google.common.primitives.ImmutableIntArray of():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lo2/f;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.primitives.Ints -> o2.g:
    1:1:int access$000(int[],int,int,int):0:0 -> a
    1:1:int access$100(int[],int,int,int):0:0 -> b
    1:1:java.util.List asList(int[]):0:0 -> c
    1:1:int checkedCast(long):0:0 -> d
    1:1:int compare(int,int):0:0 -> e
    1:1:int constrainToRange(int,int,int):0:0 -> f
    1:1:int fromByteArray(byte[]):0:0 -> g
    1:1:int fromBytes(byte,byte,byte,byte):0:0 -> h
    1:1:int hashCode(int):0:0 -> i
    1:1:int indexOf(int[],int):0:0 -> j
    1:1:int indexOf(int[],int,int,int):0:0 -> k
    1:1:int lastIndexOf(int[],int,int,int):0:0 -> l
    1:1:int saturatedCast(long):0:0 -> m
    1:1:int[] toArray(java.util.Collection):0:0 -> n
    1:1:java.lang.Integer tryParse(java.lang.String):0:0 -> o
    1:1:java.lang.Integer tryParse(java.lang.String,int):0:0 -> p
com.google.common.primitives.Ints$IntArrayAsList -> o2.g$a:
    int[] array -> f
    int start -> g
    int end -> h
    1:1:void <init>(int[]):0:0 -> <init>
    2:2:void <init>(int[],int,int):0:0 -> <init>
    1:1:java.lang.Integer get(int):0:0 -> a
    1:1:java.lang.Integer set(int,java.lang.Integer):0:0 -> b
    1:1:int[] toIntArray():0:0 -> c
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:int hashCode():0:0 -> hashCode
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:int size():0:0 -> size
    1:1:java.util.List subList(int,int):0:0 -> subList
    1:1:java.lang.String toString():0:0 -> toString
com.google.common.primitives.IntsMethodsForWeb -> o2.h:
com.google.common.primitives.Longs -> o2.i:
    1:1:int compare(long,long):0:0 -> a
    1:1:int hashCode(long):0:0 -> b
    1:1:long max(long[]):0:0 -> c
    1:1:java.lang.Long tryParse(java.lang.String,int):0:0 -> d
com.google.common.primitives.Longs$AsciiDigits -> o2.i$a:
    byte[] asciiDigits -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int digit(char):0:0 -> a
com.google.common.primitives.UnsignedBytes -> o2.j:
    1:1:byte checkedCast(long):0:0 -> a
    1:1:int toInt(byte):0:0 -> b
com.google.common.util.concurrent.DirectExecutor -> p2.a:
    com.google.common.util.concurrent.DirectExecutor INSTANCE -> f
    com.google.common.util.concurrent.DirectExecutor[] $VALUES -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:com.google.common.util.concurrent.DirectExecutor[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lp2/a;"}
    1:1:void execute(java.lang.Runnable):0:0 -> execute
    1:1:java.lang.String toString():0:0 -> toString
    1:1:com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lp2/a;"}
    1:1:com.google.common.util.concurrent.DirectExecutor[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lp2/a;"}
com.google.common.util.concurrent.ListenableFuture -> p2.b:
com.google.common.util.concurrent.MoreExecutors -> p2.c:
    1:1:java.util.concurrent.Executor directExecutor():0:0 -> a
io.flutter.FlutterInjector -> q2.a:
    io.flutter.embedding.engine.loader.FlutterLoader flutterLoader -> a
    io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory -> b
    java.util.concurrent.ExecutorService executorService -> c
    io.flutter.FlutterInjector instance -> d
    boolean accessed -> e
    1:1:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d;Ls2/a;Lio/flutter/embedding/engine/FlutterJNI$c;Ljava/util/concurrent/ExecutorService;)V"}
    2:2:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager,io.flutter.embedding.engine.FlutterJNI$Factory,java.util.concurrent.ExecutorService,io.flutter.FlutterInjector$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d;Ls2/a;Lio/flutter/embedding/engine/FlutterJNI$c;Ljava/util/concurrent/ExecutorService;Lq2/a$a;)V"}
    1:1:io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ls2/a;"}
    1:1:java.util.concurrent.ExecutorService executorService():0:0 -> b
    1:1:io.flutter.embedding.engine.loader.FlutterLoader flutterLoader():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt2/d;"}
    1:1:io.flutter.embedding.engine.FlutterJNI$Factory getFlutterJNIFactory():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/FlutterJNI$c;"}
    1:1:io.flutter.FlutterInjector instance():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq2/a;"}
io.flutter.FlutterInjector$1 -> q2.a$a:
io.flutter.FlutterInjector$Builder -> q2.a$b:
    io.flutter.embedding.engine.loader.FlutterLoader flutterLoader -> a
    io.flutter.embedding.engine.FlutterJNI$Factory flutterJniFactory -> b
    java.util.concurrent.ExecutorService executorService -> c
    void <init>() -> <init>
    1:1:io.flutter.FlutterInjector build():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq2/a;"}
    1:1:void fillDefaults():0:0 -> b
io.flutter.FlutterInjector$Builder$NamedThreadFactory -> q2.a$b$a:
    int threadId -> a
    io.flutter.FlutterInjector$Builder this$0 -> b
    1:1:void <init>(io.flutter.FlutterInjector$Builder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq2/a$b;)V"}
    2:2:void <init>(io.flutter.FlutterInjector$Builder,io.flutter.FlutterInjector$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq2/a$b;Lq2/a$a;)V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
io.flutter.Log -> q2.b:
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void d(java.lang.String,java.lang.String):0:0 -> a
    1:1:void e(java.lang.String,java.lang.String):0:0 -> b
    1:1:void e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> c
    1:1:java.lang.String getStackTraceString(java.lang.Throwable):0:0 -> d
    1:1:void i(java.lang.String,java.lang.String):0:0 -> e
    1:1:void v(java.lang.String,java.lang.String):0:0 -> f
    1:1:void w(java.lang.String,java.lang.String):0:0 -> g
    1:1:void w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> h
    1:1:void wtf(java.lang.String,java.lang.String):0:0 -> i
io.flutter.embedding.android.AndroidTouchProcessor -> io.flutter.embedding.android.c:
    io.flutter.embedding.engine.renderer.FlutterRenderer renderer -> a
    io.flutter.embedding.android.MotionEventTracker motionEventTracker -> b
    boolean trackMotionEvents -> c
    java.util.Map ongoingPans -> d
    int cachedVerticalScrollFactor -> e
    android.graphics.Matrix IDENTITY_TRANSFORM -> f
    1:1:void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer):0:0 -> a
    1:1:void addPointerForIndex(android.view.MotionEvent,int,int,int,android.graphics.Matrix,java.nio.ByteBuffer,android.content.Context):0:0 -> b
    1:1:float getHorizontalScrollFactor(android.content.Context):0:0 -> c
    1:1:int getPointerChangeForAction(int):0:0 -> d
    1:1:int getPointerChangeForPanZoom(int):0:0 -> e
    1:1:int getPointerDeviceTypeForToolType(int):0:0 -> f
    1:1:float getVerticalScrollFactor(android.content.Context):0:0 -> g
    1:1:float getVerticalScrollFactorAbove26(android.content.Context):0:0 -> h
    1:1:int getVerticalScrollFactorPre26(android.content.Context):0:0 -> i
    1:1:boolean onGenericMotionEvent(android.view.MotionEvent,android.content.Context):0:0 -> j
    1:1:boolean onTouchEvent(android.view.MotionEvent):0:0 -> k
    1:1:boolean onTouchEvent(android.view.MotionEvent,android.graphics.Matrix):0:0 -> l
io.flutter.embedding.android.AndroidTouchProcessor$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.android.AndroidTouchProcessor$$InternalSyntheticApiModelOutline$1$40d1bdd3d9a4ae6292f4999315675ea20ec0780bb2ad4da275be9f3530c5b86d$0.m(android.view.ViewConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.AndroidTouchProcessor$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.android.AndroidTouchProcessor$$InternalSyntheticApiModelOutline$1$6235febe81a466ec2127c50ba238fb0c515d3798be5ce3f658a4f9d1e01cc5e1$0.m(android.view.ViewConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.ExclusiveAppComponent -> io.flutter.embedding.android.d:
    void detachFromFlutterEngine() -> e
    java.lang.Object getAppComponent() -> f
io.flutter.embedding.android.FlutterActivity -> io.flutter.embedding.android.i:
    boolean hasRegisteredBackCallback -> a
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate delegate -> b
    androidx.lifecycle.LifecycleRegistry lifecycle -> c
    android.window.OnBackInvokedCallback onBackInvokedCallback -> d
    int FLUTTER_VIEW_ID -> e
    1:1:boolean shouldHandleDeeplinking():0:0 -> A
    1:1:io.flutter.embedding.android.TransparencyMode getTransparencyMode():0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/q0;"}
    1:1:void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)V"}
    1:1:void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    1:1:void cancelBackGesture():0:0 -> E
    1:1:void commitBackGesture():0:0 -> F
    1:1:void configureStatusBarForFullscreenFlutterExperience():0:0 -> G
    1:1:void configureWindowForTransparency():0:0 -> H
    1:1:android.view.View createFlutterView():0:0 -> I
    1:1:android.window.OnBackInvokedCallback createOnBackInvokedCallback():0:0 -> J
    1:1:io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode getBackgroundMode():0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/k;"}
    1:1:io.flutter.embedding.engine.FlutterEngine getFlutterEngine():0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/a;"}
    1:1:android.os.Bundle getMetaData():0:0 -> M
    1:1:boolean isDebuggable():0:0 -> N
    1:1:void registerOnBackInvokedCallback():0:0 -> O
    1:1:void release():0:0 -> P
    1:1:void startBackGesture(android.window.BackEvent):0:0 -> Q
    1:1:boolean stillAttachedForEvent(java.lang.String):0:0 -> R
    1:1:void switchLaunchThemeForNormalTheme():0:0 -> S
    1:1:void unregisterOnBackInvokedCallback():0:0 -> T
    1:1:void updateBackGestureProgress(android.window.BackEvent):0:0 -> U
    1:1:boolean popSystemNavigator():0:0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:android.content.Context getContext():0:0 -> c
    1:1:android.app.Activity getActivity():0:0 -> d
    1:1:void detachFromFlutterEngine():0:0 -> e
    1:1:void onFlutterUiDisplayed():0:0 -> f
    1:1:void setFrameworkHandlesBack(boolean):0:0 -> g
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h;"}
    1:1:java.lang.String getCachedEngineGroupId():0:0 -> i
    1:1:java.lang.String getInitialRoute():0:0 -> j
    1:1:io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/l;"}
    1:1:java.util.List getDartEntrypointArgs():0:0 -> l
    1:1:boolean shouldAttachEngineToActivity():0:0 -> m
    1:1:io.flutter.embedding.android.RenderMode getRenderMode():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/p0;"}
    1:1:boolean shouldDestroyEngineWithHost():0:0 -> o
    1:1:boolean attachToEngineAutomatically():0:0 -> p
    1:1:boolean shouldDispatchAppLifecycleState():0:0 -> q
    1:1:java.lang.String getCachedEngineId():0:0 -> r
    1:1:boolean shouldRestoreAndSaveState():0:0 -> s
    1:1:java.lang.String getDartEntrypointFunctionName():0:0 -> t
    1:1:void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    1:1:java.lang.String getDartEntrypointLibraryUri():0:0 -> v
    1:1:io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lio/flutter/embedding/engine/a;)Lio/flutter/plugin/platform/h;"}
    1:1:void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)V"}
    1:1:java.lang.String getAppBundlePath():0:0 -> y
    1:1:io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lio/flutter/embedding/engine/a;"}
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.window.OnBackInvokedDispatcher io.flutter.embedding.android.FlutterActivity$$InternalSyntheticApiModelOutline$1$4a058921c8974a8c38611995d69c484b95f39d7f62bb539ba29e4b33e9e4bf7a$0.m(io.flutter.embedding.android.FlutterActivity):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/i;)Landroid/window/OnBackInvokedDispatcher;"}
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticApiModelOutline$1$4a058921c8974a8c38611995d69c484b95f39d7f62bb539ba29e4b33e9e4bf7a$1.m(android.window.OnBackInvokedDispatcher,android.window.OnBackInvokedCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.android.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticApiModelOutline$2$f6c463170a20e77c9917833bf47b4562ef9256679b78d93960abaa6bddcdbcef$1.m(android.window.OnBackInvokedDispatcher,int,android.window.OnBackInvokedCallback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterActivity$$ExternalSyntheticLambda3 -> io.flutter.embedding.android.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.FlutterActivity io.flutter.embedding.android.FlutterActivity$$InternalSyntheticLambda$1$543e0c1115ba3b1c026cffac3390e7ede24b8c07ebd0da6764a7a37076b68952$0.f$0 -> a
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticLambda$1$543e0c1115ba3b1c026cffac3390e7ede24b8c07ebd0da6764a7a37076b68952$0.<init>(io.flutter.embedding.android.FlutterActivity):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/i;)V"}
    1:1:void io.flutter.embedding.android.FlutterActivity$$InternalSyntheticLambda$1$543e0c1115ba3b1c026cffac3390e7ede24b8c07ebd0da6764a7a37076b68952$0.onBackInvoked():0:0 -> onBackInvoked
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterActivity$1 -> io.flutter.embedding.android.i$a:
    io.flutter.embedding.android.FlutterActivity this$0 -> a
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate -> io.flutter.embedding.android.j:
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host host -> a
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> b
    io.flutter.embedding.android.FlutterView flutterView -> c
    io.flutter.plugin.platform.PlatformPlugin platformPlugin -> d
    android.view.ViewTreeObserver$OnPreDrawListener activePreDrawListener -> e
    boolean isFlutterEngineFromHost -> f
    boolean isFlutterUiDisplayed -> g
    boolean isFirstFrameRendered -> h
    boolean isAttached -> i
    java.lang.Integer previousVisibility -> j
    io.flutter.embedding.engine.FlutterEngineGroup engineGroup -> k
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> l
    1:1:void <init>(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j$c;)V"}
    2:2:void <init>(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j$c;Lio/flutter/embedding/engine/d;)V"}
    1:1:void onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> A
    1:1:void onRestoreInstanceState(android.os.Bundle):0:0 -> B
    1:1:void onResume():0:0 -> C
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> D
    1:1:void onStart():0:0 -> E
    1:1:void onStop():0:0 -> F
    1:1:void onTrimMemory(int):0:0 -> G
    1:1:void onUserLeaveHint():0:0 -> H
    1:1:void onWindowFocusChanged(boolean):0:0 -> I
    1:1:void release():0:0 -> J
    1:1:void setUpFlutterEngine():0:0 -> K
    1:1:void startBackGesture(android.window.BackEvent):0:0 -> L
    1:1:void updateBackGestureProgress(android.window.BackEvent):0:0 -> M
    1:1:void updateSystemUiOverlays():0:0 -> N
    1:1:io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host access$000(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;)Lio/flutter/embedding/android/j$c;"}
    1:1:boolean access$100(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;)Z"}
    1:1:boolean access$102(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;Z)Z"}
    1:1:boolean access$202(io.flutter.embedding.android.FlutterActivityAndFragmentDelegate,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/j;Z)Z"}
    1:1:void detachFromFlutterEngine():0:0 -> e
    1:1:java.lang.Object getAppComponent():0:0 -> f
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options addEntrypointOptions(io.flutter.embedding.engine.FlutterEngineGroup$Options):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/d$b;)Lio/flutter/embedding/engine/d$b;"}
    1:1:void cancelBackGesture():0:0 -> h
    1:1:void commitBackGesture():0:0 -> i
    1:1:void delayFirstAndroidViewDraw(io.flutter.embedding.android.FlutterView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)V"}
    1:1:void doInitialFlutterViewRun():0:0 -> k
    1:1:void ensureAlive():0:0 -> l
    1:1:android.app.Activity getAppComponent():0:0 -> m
    1:1:io.flutter.embedding.engine.FlutterEngine getFlutterEngine():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/a;"}
    1:1:boolean isAttached():0:0 -> o
    1:1:boolean isFlutterEngineFromHost():0:0 -> p
    1:1:java.lang.String maybeGetInitialRouteFromIntent(android.content.Intent):0:0 -> q
    1:1:void onActivityResult(int,int,android.content.Intent):0:0 -> r
    1:1:void onAttach(android.content.Context):0:0 -> s
    1:1:void onBackPressed():0:0 -> t
    1:1:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle,int,boolean):0:0 -> u
    1:1:void onDestroyView():0:0 -> v
    1:1:void onDetach():0:0 -> w
    1:1:void onNewIntent(android.content.Intent):0:0 -> x
    1:1:void onPause():0:0 -> y
    1:1:void onPostResume():0:0 -> z
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$1 -> io.flutter.embedding.android.j$a:
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$2 -> io.flutter.embedding.android.j$b:
    io.flutter.embedding.android.FlutterView val$flutterView -> a
    io.flutter.embedding.android.FlutterActivityAndFragmentDelegate this$0 -> b
io.flutter.embedding.android.FlutterActivityAndFragmentDelegate$Host -> io.flutter.embedding.android.j$c:
    boolean shouldHandleDeeplinking() -> A
    io.flutter.embedding.android.TransparencyMode getTransparencyMode() -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/q0;"}
    void onFlutterTextureViewCreated(io.flutter.embedding.android.FlutterTextureView) -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)V"}
    void configureFlutterEngine(io.flutter.embedding.engine.FlutterEngine) -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    void onFlutterUiNoLongerDisplayed() -> b
    android.content.Context getContext() -> c
    android.app.Activity getActivity() -> d
    void detachFromFlutterEngine() -> e
    void onFlutterUiDisplayed() -> f
    androidx.lifecycle.Lifecycle getLifecycle() -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Landroidx/lifecycle/h;"}
    java.lang.String getCachedEngineGroupId() -> i
    java.lang.String getInitialRoute() -> j
    io.flutter.embedding.engine.FlutterShellArgs getFlutterShellArgs() -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/l;"}
    java.util.List getDartEntrypointArgs() -> l
    boolean shouldAttachEngineToActivity() -> m
    io.flutter.embedding.android.RenderMode getRenderMode() -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/p0;"}
    boolean shouldDestroyEngineWithHost() -> o
    boolean attachToEngineAutomatically() -> p
    boolean shouldDispatchAppLifecycleState() -> q
    java.lang.String getCachedEngineId() -> r
    boolean shouldRestoreAndSaveState() -> s
    java.lang.String getDartEntrypointFunctionName() -> t
    void cleanUpFlutterEngine(io.flutter.embedding.engine.FlutterEngine) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    java.lang.String getDartEntrypointLibraryUri() -> v
    io.flutter.plugin.platform.PlatformPlugin providePlatformPlugin(android.app.Activity,io.flutter.embedding.engine.FlutterEngine) -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Lio/flutter/embedding/engine/a;)Lio/flutter/plugin/platform/h;"}
    void onFlutterSurfaceViewCreated(io.flutter.embedding.android.FlutterSurfaceView) -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)V"}
    java.lang.String getAppBundlePath() -> y
    io.flutter.embedding.engine.FlutterEngine provideFlutterEngine(android.content.Context) -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lio/flutter/embedding/engine/a;"}
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode -> io.flutter.embedding.android.k:
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode opaque -> f
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode transparent -> g
    io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $VALUES -> h
    1:1:io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/k;"}
io.flutter.embedding.android.FlutterImageView -> io.flutter.embedding.android.r:
    android.media.ImageReader imageReader -> a
    android.media.Image currentImage -> b
    android.graphics.Bitmap currentBitmap -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> d
    io.flutter.embedding.android.FlutterImageView$SurfaceKind kind -> e
    boolean isAttachedToFlutterRenderer -> f
    1:1:void <init>(android.content.Context,int,int,io.flutter.embedding.android.FlutterImageView$SurfaceKind):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;IILio/flutter/embedding/android/r$b;)V"}
    2:2:void <init>(android.content.Context,android.media.ImageReader,io.flutter.embedding.android.FlutterImageView$SurfaceKind):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/media/ImageReader;Lio/flutter/embedding/android/r$b;)V"}
    1:1:boolean acquireLatestImage():0:0 -> a
    1:1:void closeCurrentImage():0:0 -> b
    1:1:void closeImageReader():0:0 -> c
    1:1:void pause():0:0 -> d
    1:1:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> e
    1:1:void detachFromRenderer():0:0 -> f
    1:1:void resume():0:0 -> g
    1:1:android.media.ImageReader createImageReader(int,int):0:0 -> h
    1:1:void init():0:0 -> i
    1:1:void logW(java.lang.String,java.lang.Object[]):0:0 -> j
    1:1:void resizeIfNeeded(int,int):0:0 -> k
    1:1:void updateCurrentBitmap():0:0 -> l
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$bf67bebaa6e8ab187d9f1bff46ef87b185aa6936818b5d195eccda11d5391fa1$0.m(int,int,int,int,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.hardware.HardwareBuffer io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$0.m(android.media.Image):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.android.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace$Named io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline3 -> io.flutter.embedding.android.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$2.m(android.graphics.ColorSpace$Named):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline4 -> io.flutter.embedding.android.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$3.m(android.hardware.HardwareBuffer,android.graphics.ColorSpace):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$$ExternalSyntheticApiModelOutline5 -> io.flutter.embedding.android.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterImageView$$InternalSyntheticApiModelOutline$1$d1a8c58429280f3e2dd54e0c4bf91959d6429602b8bda5da00e0aed293d7b5e1$4.m(android.hardware.HardwareBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterImageView$1 -> io.flutter.embedding.android.r$a:
    int[] $SwitchMap$io$flutter$embedding$android$FlutterImageView$SurfaceKind -> a
io.flutter.embedding.android.FlutterImageView$SurfaceKind -> io.flutter.embedding.android.r$b:
    io.flutter.embedding.android.FlutterImageView$SurfaceKind background -> f
    io.flutter.embedding.android.FlutterImageView$SurfaceKind overlay -> g
    io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $VALUES -> h
    1:1:io.flutter.embedding.android.FlutterImageView$SurfaceKind[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/r$b;"}
io.flutter.embedding.android.FlutterSurfaceView -> io.flutter.embedding.android.s:
    boolean renderTransparently -> a
    boolean isSurfaceAvailableForRendering -> b
    boolean isPaused -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> d
    android.view.SurfaceHolder$Callback surfaceCallback -> e
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> f
    1:1:void <init>(android.content.Context,android.util.AttributeSet,boolean):0:0 -> <init>
    2:2:void <init>(android.content.Context,boolean):0:0 -> <init>
    1:1:boolean access$002(io.flutter.embedding.android.FlutterSurfaceView,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;Z)Z"}
    1:1:boolean access$100(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)Z"}
    1:1:void access$200(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)V"}
    1:1:void pause():0:0 -> d
    1:1:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> e
    1:1:void detachFromRenderer():0:0 -> f
    1:1:void resume():0:0 -> g
    1:1:void access$300(io.flutter.embedding.android.FlutterSurfaceView,int,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;II)V"}
    1:1:void access$400(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)V"}
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer access$500(io.flutter.embedding.android.FlutterSurfaceView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/s;)Lio/flutter/embedding/engine/renderer/FlutterRenderer;"}
    1:1:void changeSurfaceSize(int,int):0:0 -> k
    1:1:void connectSurfaceToRenderer():0:0 -> l
    1:1:void disconnectSurfaceFromRenderer():0:0 -> m
    1:1:void init():0:0 -> n
    1:1:boolean isSurfaceAvailableForRendering():0:0 -> o
    1:1:boolean shouldNotify():0:0 -> p
io.flutter.embedding.android.FlutterSurfaceView$1 -> io.flutter.embedding.android.s$a:
    io.flutter.embedding.android.FlutterSurfaceView this$0 -> a
io.flutter.embedding.android.FlutterSurfaceView$2 -> io.flutter.embedding.android.s$b:
    io.flutter.embedding.android.FlutterSurfaceView this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterTextureView -> io.flutter.embedding.android.t:
    boolean isSurfaceAvailableForRendering -> a
    boolean isPaused -> b
    io.flutter.embedding.engine.renderer.FlutterRenderer flutterRenderer -> c
    android.view.Surface renderSurface -> d
    android.view.TextureView$SurfaceTextureListener surfaceTextureListener -> e
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    1:1:boolean access$002(io.flutter.embedding.android.FlutterTextureView,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;Z)Z"}
    1:1:boolean access$100(io.flutter.embedding.android.FlutterTextureView):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)Z"}
    1:1:void access$200(io.flutter.embedding.android.FlutterTextureView):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)V"}
    1:1:void pause():0:0 -> d
    1:1:void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> e
    1:1:void detachFromRenderer():0:0 -> f
    1:1:void resume():0:0 -> g
    1:1:void access$300(io.flutter.embedding.android.FlutterTextureView,int,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;II)V"}
    1:1:void access$400(io.flutter.embedding.android.FlutterTextureView):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)V"}
    1:1:android.view.Surface access$500(io.flutter.embedding.android.FlutterTextureView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;)Landroid/view/Surface;"}
    1:1:android.view.Surface access$502(io.flutter.embedding.android.FlutterTextureView,android.view.Surface):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/t;Landroid/view/Surface;)Landroid/view/Surface;"}
    1:1:void changeSurfaceSize(int,int):0:0 -> l
    1:1:void connectSurfaceToRenderer():0:0 -> m
    1:1:void disconnectSurfaceFromRenderer():0:0 -> n
    1:1:void init():0:0 -> o
    1:1:boolean isSurfaceAvailableForRendering():0:0 -> p
    1:1:boolean shouldNotify():0:0 -> q
io.flutter.embedding.android.FlutterTextureView$1 -> io.flutter.embedding.android.t$a:
    io.flutter.embedding.android.FlutterTextureView this$0 -> a
io.flutter.embedding.android.FlutterView -> io.flutter.embedding.android.e0:
    io.flutter.embedding.android.FlutterSurfaceView flutterSurfaceView -> a
    io.flutter.embedding.android.FlutterTextureView flutterTextureView -> b
    io.flutter.embedding.android.FlutterImageView flutterImageView -> c
    io.flutter.embedding.engine.renderer.RenderSurface renderSurface -> d
    io.flutter.embedding.engine.renderer.RenderSurface previousRenderSurface -> e
    java.util.Set flutterUiDisplayListeners -> f
    boolean isFlutterUiDisplayed -> g
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> h
    java.util.Set flutterEngineAttachmentListeners -> i
    io.flutter.plugin.mouse.MouseCursorPlugin mouseCursorPlugin -> j
    io.flutter.plugin.editing.TextInputPlugin textInputPlugin -> k
    io.flutter.plugin.editing.SpellCheckPlugin spellCheckPlugin -> l
    io.flutter.plugin.localization.LocalizationPlugin localizationPlugin -> m
    io.flutter.embedding.android.KeyboardManager keyboardManager -> n
    io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor -> o
    io.flutter.view.AccessibilityBridge accessibilityBridge -> p
    android.view.textservice.TextServicesManager textServicesManager -> q
    io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper windowInfoRepo -> r
    io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics viewportMetrics -> s
    io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener -> t
    android.database.ContentObserver systemSettingsObserver -> u
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> v
    androidx.core.util.Consumer windowInfoListener -> w
    1:1:void <init>(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterSurfaceView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;Lio/flutter/embedding/android/s;)V"}
    2:2:void <init>(android.content.Context,android.util.AttributeSet,io.flutter.embedding.android.FlutterTextureView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/util/AttributeSet;Lio/flutter/embedding/android/t;)V"}
    3:3:void <init>(android.content.Context,io.flutter.embedding.android.FlutterSurfaceView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/android/s;)V"}
    4:4:void <init>(android.content.Context,io.flutter.embedding.android.FlutterTextureView):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/android/t;)V"}
    1:1:void revertImageView(java.lang.Runnable):0:0 -> A
    1:1:void sendUserSettingsToFlutter():0:0 -> B
    1:1:void sendViewportMetricsToFlutter():0:0 -> C
    1:1:void redispatch(android.view.KeyEvent):0:0 -> a
    1:1:boolean onTextInputKeyEvent(android.view.KeyEvent):0:0 -> b
    1:1:android.view.PointerIcon getSystemPointerIcon(int):0:0 -> c
    1:1:boolean $r8$lambda$d2mxEi96GCrk9QQKk7dEG7SoNrw(android.view.textservice.SpellCheckerInfo):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void access$000(io.flutter.embedding.android.FlutterView,boolean,boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;ZZ)V"}
    1:1:io.flutter.embedding.engine.FlutterEngine access$100(io.flutter.embedding.android.FlutterView):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)Lio/flutter/embedding/engine/a;"}
    1:1:boolean access$202(io.flutter.embedding.android.FlutterView,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;Z)Z"}
    1:1:io.flutter.plugin.common.BinaryMessenger getBinaryMessenger():0:0 -> getBinaryMessenger
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/b;"}
    1:1:java.util.Set access$300(io.flutter.embedding.android.FlutterView):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)Ljava/util/Set;"}
    1:1:io.flutter.embedding.android.FlutterImageView access$400(io.flutter.embedding.android.FlutterView):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)Lio/flutter/embedding/android/r;"}
    1:1:void access$500(io.flutter.embedding.android.FlutterView):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)V"}
    1:1:boolean acquireLatestImageViewFrame():0:0 -> k
    1:1:void addOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/l;)V"}
    1:1:void attachOverlaySurfaceToRender(io.flutter.embedding.android.FlutterImageView):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/r;)V"}
    1:1:void attachToFlutterEngine(io.flutter.embedding.engine.FlutterEngine):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
    1:1:io.flutter.embedding.android.FlutterView$ZeroSides calculateShouldZeroSides():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/e0$f;"}
    1:1:void convertToImageView():0:0 -> p
    1:1:io.flutter.embedding.android.FlutterImageView createImageView():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/r;"}
    1:1:io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper createWindowInfoRepo():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/r0;"}
    1:1:void detachFromFlutterEngine():0:0 -> s
    1:1:void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo):0:0 -> setWindowInfoListenerDisplayFeatures
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/j;)V"}
    1:1:int guessBottomKeyboardInset(android.view.WindowInsets):0:0 -> t
    1:1:void init():0:0 -> u
    1:1:boolean isAttachedToFlutterEngine():0:0 -> v
    1:1:boolean lambda$sendUserSettingsToFlutter$0(android.view.textservice.SpellCheckerInfo):0:0 -> w
    1:1:void releaseImageView():0:0 -> x
    1:1:void removeOnFirstFrameRenderedListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/l;)V"}
    1:1:void resetWillNotDraw(boolean,boolean):0:0 -> z
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.android.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$02bc130575321d6f7153919c9c0399495529118b10b6d4ed7fdcaac70f3e4629$0.m(io.flutter.embedding.android.FlutterView,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;I)V"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.android.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$098bad75e91e01c9cf58f2698a334adb9f54566cd7e946e95bf6296c3638371e$0.m(io.flutter.embedding.android.FlutterView):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)Landroid/view/WindowInsets;"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.android.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$098bad75e91e01c9cf58f2698a334adb9f54566cd7e946e95bf6296c3638371e$2.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline3 -> io.flutter.embedding.android.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$1974b9bc396d10aaf33ea08c51ac9f006d75aeec6982d8513d441865065adf5a$25.m(android.view.DisplayCutout):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline4 -> io.flutter.embedding.android.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$0.m(android.view.textservice.TextServicesManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline5 -> io.flutter.embedding.android.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.stream.Stream io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$1.m(java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline6 -> io.flutter.embedding.android.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$3.m(java.util.stream.Stream,java.util.function.Predicate):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline7 -> io.flutter.embedding.android.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$4.m(android.view.textservice.TextServicesManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticApiModelOutline8 -> io.flutter.embedding.android.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.PointerIcon io.flutter.embedding.android.FlutterView$$InternalSyntheticApiModelOutline$3$495da519877a75317e821ed8b69ee11ce60911adcbb1583f10aca20cfddcf862$0.m(android.content.Context,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$$ExternalSyntheticLambda9 -> io.flutter.embedding.android.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void io.flutter.embedding.android.FlutterView$$InternalSyntheticLambda$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$2.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.android.FlutterView$$InternalSyntheticLambda$1$c4c6007cd547f9ce602424902c34cd0890267c293b00c52a08dd4f1a30e59df3$2.test(java.lang.Object):0:0 -> test
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.FlutterView$1 -> io.flutter.embedding.android.e0$a:
    io.flutter.embedding.android.FlutterView this$0 -> a
    1:1:void onAccessibilityChanged(boolean,boolean):0:0 -> a
io.flutter.embedding.android.FlutterView$2 -> io.flutter.embedding.android.e0$b:
    io.flutter.embedding.android.FlutterView this$0 -> a
io.flutter.embedding.android.FlutterView$3 -> io.flutter.embedding.android.e0$c:
    io.flutter.embedding.android.FlutterView this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterView$4 -> io.flutter.embedding.android.e0$d:
    io.flutter.embedding.android.FlutterView this$0 -> a
    1:1:void accept(androidx.window.layout.WindowLayoutInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le2/j;)V"}
io.flutter.embedding.android.FlutterView$5 -> io.flutter.embedding.android.e0$e:
    io.flutter.embedding.engine.renderer.FlutterRenderer val$renderer -> a
    java.lang.Runnable val$onDone -> b
    io.flutter.embedding.android.FlutterView this$0 -> c
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.android.FlutterView$ZeroSides -> io.flutter.embedding.android.e0$f:
    io.flutter.embedding.android.FlutterView$ZeroSides NONE -> f
    io.flutter.embedding.android.FlutterView$ZeroSides LEFT -> g
    io.flutter.embedding.android.FlutterView$ZeroSides RIGHT -> h
    io.flutter.embedding.android.FlutterView$ZeroSides BOTH -> i
    io.flutter.embedding.android.FlutterView$ZeroSides[] $VALUES -> j
    1:1:io.flutter.embedding.android.FlutterView$ZeroSides[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/e0$f;"}
io.flutter.embedding.android.KeyChannelResponder -> io.flutter.embedding.android.g0:
    io.flutter.embedding.engine.systemchannels.KeyEventChannel keyEventChannel -> a
    io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.KeyEventChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/i;)V"}
    1:1:void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/m0$d$a;)V"}
    1:1:void $r8$lambda$2j1oQDNrug8exq2tp8d8ktXWyJI(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;Z)V"}
    1:1:void lambda$handleEvent$0(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;Z)V"}
io.flutter.embedding.android.KeyChannelResponder$$ExternalSyntheticLambda0 -> io.flutter.embedding.android.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback io.flutter.embedding.android.KeyChannelResponder$$InternalSyntheticLambda$1$cf5bb92e2b133ed4958c8cd4422a67f2702c41d504a4d346cc4c4bc1e1bd865e$0.f$0 -> a
    1:1:void io.flutter.embedding.android.KeyChannelResponder$$InternalSyntheticLambda$1$cf5bb92e2b133ed4958c8cd4422a67f2702c41d504a4d346cc4c4bc1e1bd865e$0.<init>(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;)V"}
    1:1:void io.flutter.embedding.android.KeyChannelResponder$$InternalSyntheticLambda$1$cf5bb92e2b133ed4958c8cd4422a67f2702c41d504a4d346cc4c4bc1e1bd865e$0.onFrameworkResponse(boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyData -> io.flutter.embedding.android.h0:
    long timestamp -> a
    io.flutter.embedding.android.KeyData$Type type -> b
    long physicalKey -> c
    long logicalKey -> d
    boolean synthesized -> e
    io.flutter.embedding.android.KeyData$DeviceType deviceType -> f
    java.lang.String character -> g
    1:1:java.nio.ByteBuffer toBytes():0:0 -> a
io.flutter.embedding.android.KeyData$DeviceType -> io.flutter.embedding.android.h0$a:
    long value -> f
    io.flutter.embedding.android.KeyData$DeviceType kKeyboard -> g
    io.flutter.embedding.android.KeyData$DeviceType kDirectionalPad -> h
    io.flutter.embedding.android.KeyData$DeviceType kGamepad -> i
    io.flutter.embedding.android.KeyData$DeviceType kJoystick -> j
    io.flutter.embedding.android.KeyData$DeviceType kHdmi -> k
    io.flutter.embedding.android.KeyData$DeviceType[] $VALUES -> l
    1:1:io.flutter.embedding.android.KeyData$DeviceType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/h0$a;"}
    1:1:long getValue():0:0 -> b
io.flutter.embedding.android.KeyData$Type -> io.flutter.embedding.android.h0$b:
    long value -> f
    io.flutter.embedding.android.KeyData$Type kDown -> g
    io.flutter.embedding.android.KeyData$Type kUp -> h
    io.flutter.embedding.android.KeyData$Type kRepeat -> i
    io.flutter.embedding.android.KeyData$Type[] $VALUES -> j
    1:1:io.flutter.embedding.android.KeyData$Type[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/h0$b;"}
    1:1:long getValue():0:0 -> b
io.flutter.embedding.android.KeyEmbedderResponder -> io.flutter.embedding.android.l0:
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.util.HashMap pressingRecords -> b
    java.util.HashMap togglingGoals -> c
    io.flutter.embedding.android.KeyboardManager$CharacterCombiner characterCombiner -> d
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;)V"}
    1:1:void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/m0$d$a;)V"}
    1:1:void $r8$lambda$Usbaa64Go-Inz_pnHu4Hlllp4NQ(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,android.view.KeyEvent):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0;Lio/flutter/embedding/android/n0$c;Landroid/view/KeyEvent;)V"}
    1:1:void $r8$lambda$VKF-feFqVV2c2diHOYJl9TFRWNI(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,java.nio.ByteBuffer):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;Ljava/nio/ByteBuffer;)V"}
    1:1:void $r8$lambda$u49qZcV7pBZIuZzpJy2XDxE4ka4(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,long,android.view.KeyEvent):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0;Lio/flutter/embedding/android/n0$c;JLandroid/view/KeyEvent;)V"}
    1:1:io.flutter.embedding.android.KeyData$Type getEventType(android.view.KeyEvent):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;)Lio/flutter/embedding/android/h0$b;"}
    1:1:java.lang.Long getLogicalKey(android.view.KeyEvent):0:0 -> f
    1:1:java.lang.Long getPhysicalKey(android.view.KeyEvent):0:0 -> g
    1:1:java.util.Map getPressedState():0:0 -> h
    1:1:boolean handleEventImpl(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/m0$d$a;)Z"}
    1:1:long keyOfPlane(long,long):0:0 -> j
    1:1:void lambda$sendKeyEvent$2(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback,java.nio.ByteBuffer):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;Ljava/nio/ByteBuffer;)V"}
    1:1:void lambda$synchronizePressingKey$0(io.flutter.embedding.android.KeyboardMap$KeyPair,long,android.view.KeyEvent):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/n0$c;JLandroid/view/KeyEvent;)V"}
    1:1:void lambda$synchronizePressingKey$1(io.flutter.embedding.android.KeyboardMap$KeyPair,android.view.KeyEvent):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/n0$c;Landroid/view/KeyEvent;)V"}
    1:1:void sendKeyEvent(io.flutter.embedding.android.KeyData,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/h0;Lio/flutter/embedding/android/m0$d$a;)V"}
    1:1:void synchronizePressingKey(io.flutter.embedding.android.KeyboardMap$PressingGoal,boolean,long,long,android.view.KeyEvent,java.util.ArrayList):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/n0$d;ZJJLandroid/view/KeyEvent;Ljava/util/ArrayList;)V"}
    1:1:void synchronizeTogglingKey(io.flutter.embedding.android.KeyboardMap$TogglingGoal,boolean,long,android.view.KeyEvent):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/n0$e;ZJLandroid/view/KeyEvent;)V"}
    1:1:void synthesizeEvent(boolean,java.lang.Long,java.lang.Long,long):0:0 -> q
    1:1:void updatePressingState(java.lang.Long,java.lang.Long):0:0 -> r
io.flutter.embedding.android.KeyEmbedderResponder$$ExternalSyntheticLambda0 -> io.flutter.embedding.android.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$6507d676e68eca9658ab3e3290a65055cc36dddf2daa4d3e93e689f917200d2b$0.f$0 -> a
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$6507d676e68eca9658ab3e3290a65055cc36dddf2daa4d3e93e689f917200d2b$0.<init>(io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$d$a;)V"}
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$6507d676e68eca9658ab3e3290a65055cc36dddf2daa4d3e93e689f917200d2b$0.reply(java.nio.ByteBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyEmbedderResponder$$ExternalSyntheticLambda1 -> io.flutter.embedding.android.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyEmbedderResponder io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$0 -> f
    io.flutter.embedding.android.KeyboardMap$KeyPair io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$1 -> g
    long io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$2 -> h
    android.view.KeyEvent io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.f$3 -> i
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.<init>(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,long,android.view.KeyEvent):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0;Lio/flutter/embedding/android/n0$c;JLandroid/view/KeyEvent;)V"}
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyEmbedderResponder$$ExternalSyntheticLambda2 -> io.flutter.embedding.android.k0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.android.KeyEmbedderResponder io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.f$0 -> f
    io.flutter.embedding.android.KeyboardMap$KeyPair io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.f$1 -> g
    android.view.KeyEvent io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.f$2 -> h
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.<init>(io.flutter.embedding.android.KeyEmbedderResponder,io.flutter.embedding.android.KeyboardMap$KeyPair,android.view.KeyEvent):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/l0;Lio/flutter/embedding/android/n0$c;Landroid/view/KeyEvent;)V"}
    1:1:void io.flutter.embedding.android.KeyEmbedderResponder$$InternalSyntheticLambda$1$b443f1685234fb1a1fec61ee582d5e8ff9a32d81e104782d09b7b851ae380117$1.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.android.KeyEmbedderResponder$1 -> io.flutter.embedding.android.l0$a:
    int[] $SwitchMap$io$flutter$embedding$android$KeyData$Type -> a
io.flutter.embedding.android.KeyboardManager -> io.flutter.embedding.android.m0:
    io.flutter.embedding.android.KeyboardManager$Responder[] responders -> a
    java.util.HashSet redispatchedEvents -> b
    io.flutter.embedding.android.KeyboardManager$ViewDelegate viewDelegate -> c
    1:1:java.util.Map getKeyboardState():0:0 -> a
    1:1:boolean handleEvent(android.view.KeyEvent):0:0 -> b
    1:1:void access$000(io.flutter.embedding.android.KeyboardManager,android.view.KeyEvent):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0;Landroid/view/KeyEvent;)V"}
    1:1:void destroy():0:0 -> d
    1:1:void onUnhandled(android.view.KeyEvent):0:0 -> e
io.flutter.embedding.android.KeyboardManager$1 -> io.flutter.embedding.android.m0$a:
io.flutter.embedding.android.KeyboardManager$CharacterCombiner -> io.flutter.embedding.android.m0$b:
    int combiningCharacter -> a
    1:1:java.lang.Character applyCombiningCharacterToBaseCharacter(int):0:0 -> a
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder -> io.flutter.embedding.android.m0$c:
    android.view.KeyEvent keyEvent -> a
    int unrepliedCount -> b
    boolean isEventHandled -> c
    io.flutter.embedding.android.KeyboardManager this$0 -> d
    1:1:io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback buildCallback():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/m0$d$a;"}
io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder$Callback -> io.flutter.embedding.android.m0$c$a:
    boolean isCalled -> a
    io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder this$1 -> b
    1:1:void <init>(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$c;)V"}
    2:2:void <init>(io.flutter.embedding.android.KeyboardManager$PerEventCallbackBuilder,io.flutter.embedding.android.KeyboardManager$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/m0$c;Lio/flutter/embedding/android/m0$a;)V"}
    1:1:void onKeyEventHandled(boolean):0:0 -> a
io.flutter.embedding.android.KeyboardManager$Responder -> io.flutter.embedding.android.m0$d:
    void handleEvent(android.view.KeyEvent,io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/KeyEvent;Lio/flutter/embedding/android/m0$d$a;)V"}
io.flutter.embedding.android.KeyboardManager$Responder$OnKeyEventHandledCallback -> io.flutter.embedding.android.m0$d$a:
    void onKeyEventHandled(boolean) -> a
io.flutter.embedding.android.KeyboardManager$ViewDelegate -> io.flutter.embedding.android.m0$e:
    void redispatch(android.view.KeyEvent) -> a
    boolean onTextInputKeyEvent(android.view.KeyEvent) -> b
    io.flutter.plugin.common.BinaryMessenger getBinaryMessenger() -> getBinaryMessenger
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/b;"}
io.flutter.embedding.android.KeyboardMap -> io.flutter.embedding.android.n0:
    java.util.HashMap scanCodeToPhysical -> a
    java.util.HashMap keyCodeToLogical -> b
    io.flutter.embedding.android.KeyboardMap$PressingGoal[] pressingGoals -> c
    1:1:io.flutter.embedding.android.KeyboardMap$TogglingGoal[] getTogglingGoals():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/n0$e;"}
io.flutter.embedding.android.KeyboardMap$1 -> io.flutter.embedding.android.n0$a:
io.flutter.embedding.android.KeyboardMap$2 -> io.flutter.embedding.android.n0$b:
io.flutter.embedding.android.KeyboardMap$KeyPair -> io.flutter.embedding.android.n0$c:
    long physicalKey -> a
    long logicalKey -> b
io.flutter.embedding.android.KeyboardMap$PressingGoal -> io.flutter.embedding.android.n0$d:
    int mask -> a
    io.flutter.embedding.android.KeyboardMap$KeyPair[] keys -> b
io.flutter.embedding.android.KeyboardMap$TogglingGoal -> io.flutter.embedding.android.n0$e:
    int mask -> a
    long physicalKey -> b
    long logicalKey -> c
    boolean enabled -> d
io.flutter.embedding.android.MotionEventTracker -> io.flutter.embedding.android.o0:
    android.util.LongSparseArray eventById -> a
    java.util.PriorityQueue unusedEvents -> b
    io.flutter.embedding.android.MotionEventTracker INSTANCE -> c
    1:1:io.flutter.embedding.android.MotionEventTracker getInstance():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/o0;"}
    1:1:android.view.MotionEvent pop(io.flutter.embedding.android.MotionEventTracker$MotionEventId):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/o0$a;)Landroid/view/MotionEvent;"}
    1:1:io.flutter.embedding.android.MotionEventTracker$MotionEventId track(android.view.MotionEvent):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/MotionEvent;)Lio/flutter/embedding/android/o0$a;"}
io.flutter.embedding.android.MotionEventTracker$MotionEventId -> io.flutter.embedding.android.o0$a:
    long id -> a
    java.util.concurrent.atomic.AtomicLong ID_COUNTER -> b
    1:1:long access$000(io.flutter.embedding.android.MotionEventTracker$MotionEventId):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/o0$a;)J"}
    1:1:io.flutter.embedding.android.MotionEventTracker$MotionEventId createUnique():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/android/o0$a;"}
    1:1:io.flutter.embedding.android.MotionEventTracker$MotionEventId from(long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lio/flutter/embedding/android/o0$a;"}
    1:1:long getId():0:0 -> d
io.flutter.embedding.android.RenderMode -> io.flutter.embedding.android.p0:
    io.flutter.embedding.android.RenderMode surface -> f
    io.flutter.embedding.android.RenderMode texture -> g
    io.flutter.embedding.android.RenderMode image -> h
    io.flutter.embedding.android.RenderMode[] $VALUES -> i
    1:1:io.flutter.embedding.android.RenderMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/p0;"}
io.flutter.embedding.android.TransparencyMode -> io.flutter.embedding.android.q0:
    io.flutter.embedding.android.TransparencyMode opaque -> f
    io.flutter.embedding.android.TransparencyMode transparent -> g
    io.flutter.embedding.android.TransparencyMode[] $VALUES -> h
    1:1:io.flutter.embedding.android.TransparencyMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/android/q0;"}
io.flutter.embedding.android.WindowInfoRepositoryCallbackAdapterWrapper -> io.flutter.embedding.android.r0:
    androidx.window.java.layout.WindowInfoTrackerCallbackAdapter adapter -> a
    1:1:void <init>(androidx.window.java.layout.WindowInfoTrackerCallbackAdapter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld2/a;)V"}
    1:1:void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ljava/util/concurrent/Executor;Lg/a;)V"}
    1:1:void removeWindowLayoutInfoListener(androidx.core.util.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lg/a;)V"}
io.flutter.embedding.engine.FlutterEngine -> io.flutter.embedding.engine.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    io.flutter.embedding.engine.renderer.FlutterRenderer renderer -> b
    io.flutter.embedding.engine.dart.DartExecutor dartExecutor -> c
    io.flutter.embedding.engine.FlutterEngineConnectionRegistry pluginRegistry -> d
    io.flutter.plugin.localization.LocalizationPlugin localizationPlugin -> e
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel -> f
    io.flutter.embedding.engine.systemchannels.DeferredComponentChannel deferredComponentChannel -> g
    io.flutter.embedding.engine.systemchannels.LifecycleChannel lifecycleChannel -> h
    io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel -> i
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel -> j
    io.flutter.embedding.engine.systemchannels.NavigationChannel navigationChannel -> k
    io.flutter.embedding.engine.systemchannels.BackGestureChannel backGestureChannel -> l
    io.flutter.embedding.engine.systemchannels.RestorationChannel restorationChannel -> m
    io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel -> n
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel processTextChannel -> o
    io.flutter.embedding.engine.systemchannels.SettingsChannel settingsChannel -> p
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel spellCheckChannel -> q
    io.flutter.embedding.engine.systemchannels.SystemChannel systemChannel -> r
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> s
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> t
    java.util.Set engineLifecycleListeners -> u
    io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener engineLifecycleListener -> v
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lt2/d;Lio/flutter/embedding/engine/FlutterJNI;Lio/flutter/plugin/platform/r;[Ljava/lang/String;ZZ)V"}
    2:2:void <init>(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterJNI,io.flutter.plugin.platform.PlatformViewsController,java.lang.String[],boolean,boolean,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lt2/d;Lio/flutter/embedding/engine/FlutterJNI;Lio/flutter/plugin/platform/r;[Ljava/lang/String;ZZLio/flutter/embedding/engine/d;)V"}
    1:1:io.flutter.embedding.engine.FlutterEngine spawn(android.content.Context,io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.lang.String,java.util.List,io.flutter.plugin.platform.PlatformViewsController,boolean,boolean):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lr2/a$b;Ljava/lang/String;Ljava/util/List;Lio/flutter/plugin/platform/r;ZZ)Lio/flutter/embedding/engine/a;"}
    1:1:void updateDisplayMetrics(float,float,float):0:0 -> a
    1:1:java.util.Set access$000(io.flutter.embedding.engine.FlutterEngine):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)Ljava/util/Set;"}
    1:1:io.flutter.plugin.platform.PlatformViewsController access$100(io.flutter.embedding.engine.FlutterEngine):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)Lio/flutter/plugin/platform/r;"}
    1:1:io.flutter.embedding.engine.systemchannels.RestorationChannel access$200(io.flutter.embedding.engine.FlutterEngine):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)Ly2/s;"}
    1:1:void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a$b;)V"}
    1:1:void attachToJni():0:0 -> f
    1:1:void destroy():0:0 -> g
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel getAccessibilityChannel():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/a;"}
    1:1:io.flutter.embedding.engine.plugins.activity.ActivityControlSurface getActivityControlSurface():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lw2/b;"}
    1:1:io.flutter.embedding.engine.systemchannels.BackGestureChannel getBackGestureChannel():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/f;"}
    1:1:io.flutter.embedding.engine.dart.DartExecutor getDartExecutor():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr2/a;"}
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel getLifecycleChannel():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/k;"}
    1:1:io.flutter.plugin.localization.LocalizationPlugin getLocalizationPlugin():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La3/f;"}
    1:1:io.flutter.embedding.engine.systemchannels.MouseCursorChannel getMouseCursorChannel():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/m;"}
    1:1:io.flutter.embedding.engine.systemchannels.NavigationChannel getNavigationChannel():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/n;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel getPlatformChannel():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/o;"}
    1:1:io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/r;"}
    1:1:io.flutter.embedding.engine.plugins.PluginRegistry getPlugins():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lv2/b;"}
    1:1:io.flutter.embedding.engine.systemchannels.ProcessTextChannel getProcessTextChannel():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/r;"}
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer getRenderer():0:0 -> t
    1:1:io.flutter.embedding.engine.systemchannels.RestorationChannel getRestorationChannel():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/s;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel getSettingsChannel():0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/t;"}
    1:1:io.flutter.embedding.engine.systemchannels.SpellCheckChannel getSpellCheckChannel():0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/u;"}
    1:1:io.flutter.embedding.engine.systemchannels.SystemChannel getSystemChannel():0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/v;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel getTextInputChannel():0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/w;"}
    1:1:boolean isAttachedToJni():0:0 -> z
io.flutter.embedding.engine.FlutterEngine$1 -> io.flutter.embedding.engine.a$a:
    io.flutter.embedding.engine.FlutterEngine this$0 -> a
    1:1:void onPreEngineRestart():0:0 -> a
    1:1:void onEngineWillDestroy():0:0 -> b
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener -> io.flutter.embedding.engine.a$b:
    void onPreEngineRestart() -> a
    void onEngineWillDestroy() -> b
io.flutter.embedding.engine.FlutterEngineCache -> io.flutter.embedding.engine.b:
    java.util.Map cachedEngines -> a
    io.flutter.embedding.engine.FlutterEngineCache instance -> b
    1:1:io.flutter.embedding.engine.FlutterEngine get(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/embedding/engine/a;"}
    1:1:io.flutter.embedding.engine.FlutterEngineCache getInstance():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/b;"}
    1:1:void put(java.lang.String,io.flutter.embedding.engine.FlutterEngine):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lio/flutter/embedding/engine/a;)V"}
    1:1:void remove(java.lang.String):0:0 -> d
io.flutter.embedding.engine.FlutterEngineConnectionRegistry -> io.flutter.embedding.engine.c:
    java.util.Map plugins -> a
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> b
    io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding pluginBinding -> c
    java.util.Map activityAwarePlugins -> d
    io.flutter.embedding.android.ExclusiveAppComponent exclusiveActivity -> e
    io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding activityPluginBinding -> f
    boolean isWaitingForActivityReattachment -> g
    java.util.Map serviceAwarePlugins -> h
    android.app.Service service -> i
    java.util.Map broadcastReceiverAwarePlugins -> j
    android.content.BroadcastReceiver broadcastReceiver -> k
    java.util.Map contentProviderAwarePlugins -> l
    android.content.ContentProvider contentProvider -> m
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/engine/a;Lt2/d;Lio/flutter/embedding/engine/d;)V"}
    1:1:boolean onActivityResult(int,int,android.content.Intent):0:0 -> a
    1:1:void onNewIntent(android.content.Intent):0:0 -> b
    1:1:void add(io.flutter.embedding.engine.plugins.FlutterPlugin):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv2/a;)V"}
    1:1:void onRestoreInstanceState(android.os.Bundle):0:0 -> d
    1:1:boolean onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> e
    1:1:void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/d;Landroidx/lifecycle/h;)V"}
    1:1:void detachFromActivity():0:0 -> g
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> h
    1:1:void onUserLeaveHint():0:0 -> i
    1:1:void detachFromActivityForConfigChanges():0:0 -> j
    1:1:void attachToActivityInternal(android.app.Activity,androidx.lifecycle.Lifecycle):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/h;)V"}
    1:1:void destroy():0:0 -> l
    1:1:void detachFromActivityInternal():0:0 -> m
    1:1:void detachFromAppComponent():0:0 -> n
    1:1:void detachFromBroadcastReceiver():0:0 -> o
    1:1:void detachFromContentProvider():0:0 -> p
    1:1:void detachFromService():0:0 -> q
    1:1:boolean has(java.lang.Class):0:0 -> r
    1:1:boolean isAttachedToActivity():0:0 -> s
    1:1:boolean isAttachedToBroadcastReceiver():0:0 -> t
    1:1:boolean isAttachedToContentProvider():0:0 -> u
    1:1:boolean isAttachedToService():0:0 -> v
    1:1:void remove(java.lang.Class):0:0 -> w
    1:1:void remove(java.util.Set):0:0 -> x
    1:1:void removeAll():0:0 -> y
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1 -> io.flutter.embedding.engine.c$a:
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$DefaultFlutterAssets -> io.flutter.embedding.engine.c$b:
    io.flutter.embedding.engine.loader.FlutterLoader flutterLoader -> a
    1:1:void <init>(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d;)V"}
    2:2:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,io.flutter.embedding.engine.FlutterEngineConnectionRegistry$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d;Lio/flutter/embedding/engine/c$a;)V"}
io.flutter.embedding.engine.FlutterEngineConnectionRegistry$FlutterEngineActivityPluginBinding -> io.flutter.embedding.engine.c$c:
    android.app.Activity activity -> a
    io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference hiddenLifecycleReference -> b
    java.util.Set onRequestPermissionsResultListeners -> c
    java.util.Set onActivityResultListeners -> d
    java.util.Set onNewIntentListeners -> e
    java.util.Set onUserLeaveHintListeners -> f
    java.util.Set onWindowFocusChangedListeners -> g
    java.util.Set onSaveInstanceStateListeners -> h
    1:1:void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l;)V"}
    1:1:void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l;)V"}
    1:1:boolean onActivityResult(int,int,android.content.Intent):0:0 -> c
    1:1:android.app.Activity getActivity():0:0 -> d
    1:1:void onNewIntent(android.content.Intent):0:0 -> e
    1:1:boolean onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> f
    1:1:void onRestoreInstanceState(android.os.Bundle):0:0 -> g
    1:1:void onSaveInstanceState(android.os.Bundle):0:0 -> h
    1:1:void onUserLeaveHint():0:0 -> i
io.flutter.embedding.engine.FlutterEngineGroup -> io.flutter.embedding.engine.d:
    java.util.List activeEngines -> a
    1:1:io.flutter.embedding.engine.FlutterEngine createAndRunEngine(io.flutter.embedding.engine.FlutterEngineGroup$Options):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/d$b;)Lio/flutter/embedding/engine/a;"}
    1:1:io.flutter.embedding.engine.FlutterEngine createEngine(android.content.Context,io.flutter.plugin.platform.PlatformViewsController,boolean,boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/plugin/platform/r;ZZ)Lio/flutter/embedding/engine/a;"}
io.flutter.embedding.engine.FlutterEngineGroup$1 -> io.flutter.embedding.engine.d$a:
    io.flutter.embedding.engine.FlutterEngine val$engineToCleanUpOnDestroy -> a
    io.flutter.embedding.engine.FlutterEngineGroup this$0 -> b
    1:1:void onPreEngineRestart():0:0 -> a
    1:1:void onEngineWillDestroy():0:0 -> b
io.flutter.embedding.engine.FlutterEngineGroup$Options -> io.flutter.embedding.engine.d$b:
    android.content.Context context -> a
    io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint dartEntrypoint -> b
    java.lang.String initialRoute -> c
    java.util.List dartEntrypointArgs -> d
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> e
    boolean automaticallyRegisterPlugins -> f
    boolean waitForRestorationData -> g
    1:1:boolean getAutomaticallyRegisterPlugins():0:0 -> a
    1:1:android.content.Context getContext():0:0 -> b
    1:1:io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint getDartEntrypoint():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr2/a$b;"}
    1:1:java.util.List getDartEntrypointArgs():0:0 -> d
    1:1:java.lang.String getInitialRoute():0:0 -> e
    1:1:io.flutter.plugin.platform.PlatformViewsController getPlatformViewsController():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/r;"}
    1:1:boolean getWaitForRestorationData():0:0 -> g
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setAutomaticallyRegisterPlugins(boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a$b;)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setDartEntrypointArgs(java.util.List):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setInitialRoute(java.lang.String):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/embedding/engine/d$b;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroup$Options setWaitForRestorationData(boolean):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Lio/flutter/embedding/engine/d$b;"}
io.flutter.embedding.engine.FlutterEngineGroupCache -> io.flutter.embedding.engine.e:
    java.util.Map cachedEngineGroups -> a
    io.flutter.embedding.engine.FlutterEngineGroupCache instance -> b
    1:1:io.flutter.embedding.engine.FlutterEngineGroup get(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/embedding/engine/d;"}
    1:1:io.flutter.embedding.engine.FlutterEngineGroupCache getInstance():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/e;"}
io.flutter.embedding.engine.FlutterJNI -> io.flutter.embedding.engine.FlutterJNI:
    1:1:void $r8$lambda$2fUF03zsar2dpLbGJv6IUmJU-0A(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int):0:0 -> dispatchSemanticsAction
    2:2:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action):0:0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;)V"}
    3:3:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0:0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;Ljava/lang/Object;)V"}
    1:1:void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager):0:0 -> setDeferredComponentManager
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ls2/a;)V"}
    1:1:void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> setLocalizationPlugin
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La3/f;)V"}
    1:1:void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler):0:0 -> setPlatformMessageHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/d;)V"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.engine.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ImageDecoder$Source io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$0.m(java.nio.ByteBuffer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.engine.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$2.m(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.engine.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$2.m(android.graphics.ImageDecoder,android.graphics.ColorSpace):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticApiModelOutline3 -> io.flutter.embedding.engine.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$3.m(android.graphics.ImageDecoder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticApiModelOutline4 -> io.flutter.embedding.engine.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.util.Size io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$4.m(android.graphics.ImageDecoder$ImageInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticLambda5 -> io.flutter.embedding.engine.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    long io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.f$0 -> a
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.<init>(long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> onHeaderDecoded
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate -> io.flutter.embedding.engine.FlutterJNI$a:
    void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]) -> a
    void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]) -> b
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate -> io.flutter.embedding.engine.FlutterJNI$b:
    void asyncWaitForVsync(long) -> a
io.flutter.embedding.engine.FlutterJNI$Factory -> io.flutter.embedding.engine.FlutterJNI$c:
    1:1:io.flutter.embedding.engine.FlutterJNI provideFlutterJNI():0:0 -> a
io.flutter.embedding.engine.FlutterShellArgs -> io.flutter.embedding.engine.l:
    java.util.Set args -> a
    1:1:io.flutter.embedding.engine.FlutterShellArgs fromIntent(android.content.Intent):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Intent;)Lio/flutter/embedding/engine/l;"}
    1:1:java.lang.String[] toArray():0:0 -> b
io.flutter.embedding.engine.dart.DartExecutor -> r2.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    android.content.res.AssetManager assetManager -> b
    io.flutter.embedding.engine.dart.DartMessenger dartMessenger -> c
    io.flutter.plugin.common.BinaryMessenger binaryMessenger -> d
    boolean isApplicationRunning -> e
    java.lang.String isolateServiceId -> f
    io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler isolateChannelMessageHandler -> g
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI,android.content.res.AssetManager):0:0 -> <init>
    1:1:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;Lz2/b$b;)V"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer):0:0 -> b
    1:1:java.lang.String access$002(io.flutter.embedding.engine.dart.DartExecutor,java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz2/b$a;)V"}
    1:1:io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener access$100(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)Lr2/a$d;"}
    1:1:void executeDartEntrypoint(io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint,java.util.List):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a$b;Ljava/util/List;)V"}
    1:1:boolean isExecutingDart():0:0 -> g
    1:1:void notifyLowMemoryWarning():0:0 -> h
    1:1:void onAttachedToJNI():0:0 -> i
    1:1:void onDetachedFromJNI():0:0 -> j
io.flutter.embedding.engine.dart.DartExecutor$1 -> r2.a$a:
    io.flutter.embedding.engine.dart.DartExecutor this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lz2/b$b;)V"}
io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint -> r2.a$b:
    java.lang.String pathToBundle -> a
    java.lang.String dartEntrypointLibrary -> b
    java.lang.String dartEntrypointFunctionName -> c
    1:1:void <init>(java.lang.String,java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.dart.DartExecutor$DartEntrypoint createDefault():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr2/a$b;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
io.flutter.embedding.engine.dart.DartExecutor$DefaultBinaryMessenger -> r2.a$c:
    io.flutter.embedding.engine.dart.DartMessenger messenger -> a
    1:1:void <init>(io.flutter.embedding.engine.dart.DartMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/c;)V"}
    2:2:void <init>(io.flutter.embedding.engine.dart.DartMessenger,io.flutter.embedding.engine.dart.DartExecutor$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/c;Lr2/a$a;)V"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;Lz2/b$b;)V"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer):0:0 -> b
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz2/b$a;)V"}
io.flutter.embedding.engine.dart.DartExecutor$IsolateServiceIdListener -> r2.a$d:
io.flutter.embedding.engine.dart.DartMessenger -> r2.c:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    java.util.Map messageHandlers -> b
    java.util.Map bufferedMessages -> c
    java.lang.Object handlersLock -> d
    java.util.concurrent.atomic.AtomicBoolean enableBufferingIncomingMessages -> e
    java.util.Map pendingReplies -> f
    int nextReplyId -> g
    io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue platformTaskQueue -> h
    java.util.WeakHashMap createdTaskQueues -> i
    io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory taskQueueFactory -> j
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI):0:0 -> <init>
    2:2:void <init>(io.flutter.embedding.engine.FlutterJNI,io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/FlutterJNI;Lr2/c$f;)V"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;Lz2/b$b;)V"}
    1:1:void send(java.lang.String,java.nio.ByteBuffer):0:0 -> b
    1:1:void handlePlatformMessageResponse(int,java.nio.ByteBuffer):0:0 -> c
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz2/b$a;)V"}
    1:1:void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long):0:0 -> e
    1:1:void $r8$lambda$2j2MERcK825A5j1fv5sZ7xB2Iuo(io.flutter.embedding.engine.dart.DartMessenger,java.lang.String,int,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,long):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/c;Ljava/lang/String;ILr2/c$d;Ljava/nio/ByteBuffer;J)V"}
    1:1:void dispatchMessageToQueue(java.lang.String,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int,long):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lr2/c$d;Ljava/nio/ByteBuffer;IJ)V"}
    1:1:void handleError(java.lang.Error):0:0 -> h
    1:1:void invokeHandler(io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/c$d;Ljava/nio/ByteBuffer;I)V"}
    1:1:void lambda$dispatchMessageToQueue$0(java.lang.String,int,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;ILr2/c$d;Ljava/nio/ByteBuffer;J)V"}
    1:1:void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz2/b$a;Lz2/b$c;)V"}
io.flutter.embedding.engine.dart.DartMessenger$$ExternalSyntheticLambda0 -> r2.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.dart.DartMessenger io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$0 -> f
    java.lang.String io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$1 -> g
    int io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$2 -> h
    io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$3 -> i
    java.nio.ByteBuffer io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$4 -> j
    long io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.f$5 -> k
    1:1:void io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.<init>(io.flutter.embedding.engine.dart.DartMessenger,java.lang.String,int,io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo,java.nio.ByteBuffer,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/c;Ljava/lang/String;ILr2/c$d;Ljava/nio/ByteBuffer;J)V"}
    1:1:void io.flutter.embedding.engine.dart.DartMessenger$$InternalSyntheticLambda$1$5dd8b6f7959f08bc8717eff7469e77e06ef5aed51cc0cee17f1e13794798223f$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.dart.DartMessenger$BufferedMessageInfo -> r2.c$a:
    java.nio.ByteBuffer message -> a
    int replyId -> b
    long messageData -> c
    1:1:void <init>(java.nio.ByteBuffer,int,long):0:0 -> <init>
io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue -> r2.c$b:
    void dispatch(java.lang.Runnable) -> a
io.flutter.embedding.engine.dart.DartMessenger$DefaultTaskQueueFactory -> r2.c$c:
    java.util.concurrent.ExecutorService executorService -> a
    1:1:void <init>():0:0 -> <init>
io.flutter.embedding.engine.dart.DartMessenger$HandlerInfo -> r2.c$d:
    io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler handler -> a
    io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue taskQueue -> b
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler,io.flutter.embedding.engine.dart.DartMessenger$DartMessengerTaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b$a;Lr2/c$b;)V"}
io.flutter.embedding.engine.dart.DartMessenger$Reply -> r2.c$e:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    int replyId -> b
    java.util.concurrent.atomic.AtomicBoolean done -> c
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI,int):0:0 -> <init>
    1:1:void reply(java.nio.ByteBuffer):0:0 -> a
io.flutter.embedding.engine.dart.DartMessenger$TaskQueueFactory -> r2.c$f:
io.flutter.embedding.engine.dart.PlatformMessageHandler -> r2.d:
    void handlePlatformMessageResponse(int,java.nio.ByteBuffer) -> c
    void handleMessageFromDart(java.lang.String,java.nio.ByteBuffer,int,long) -> e
io.flutter.embedding.engine.dart.PlatformTaskQueue -> r2.e:
    android.os.Handler handler -> a
    1:1:void <init>():0:0 -> <init>
    1:1:void dispatch(java.lang.Runnable):0:0 -> a
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager -> s2.a:
    void setJNI(io.flutter.embedding.engine.FlutterJNI) -> a
io.flutter.embedding.engine.loader.ApplicationInfoLoader -> t2.a:
    java.lang.String PUBLIC_AOT_SHARED_LIBRARY_NAME -> a
    java.lang.String PUBLIC_VM_SNAPSHOT_DATA_KEY -> b
    java.lang.String PUBLIC_ISOLATE_SNAPSHOT_DATA_KEY -> c
    java.lang.String PUBLIC_FLUTTER_ASSETS_DIR_KEY -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:android.content.pm.ApplicationInfo getApplicationInfo(android.content.Context):0:0 -> a
    1:1:boolean getBoolean(android.os.Bundle,java.lang.String,boolean):0:0 -> b
    1:1:java.lang.String getNetworkPolicy(android.content.pm.ApplicationInfo,android.content.Context):0:0 -> c
    1:1:java.lang.String getString(android.os.Bundle,java.lang.String):0:0 -> d
    1:1:io.flutter.embedding.engine.loader.FlutterApplicationInfo load(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lt2/b;"}
    1:1:void parseDomain(android.content.res.XmlResourceParser,org.json.JSONArray,boolean):0:0 -> f
    1:1:void parseDomainConfig(android.content.res.XmlResourceParser,org.json.JSONArray,boolean):0:0 -> g
    1:1:void skipTag(android.content.res.XmlResourceParser):0:0 -> h
io.flutter.embedding.engine.loader.FlutterApplicationInfo -> t2.b:
    java.lang.String aotSharedLibraryName -> a
    java.lang.String vmSnapshotData -> b
    java.lang.String isolateSnapshotData -> c
    java.lang.String flutterAssetsDir -> d
    java.lang.String domainNetworkPolicy -> e
    java.lang.String nativeLibraryDir -> f
    boolean automaticallyRegisterPlugins -> g
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean):0:0 -> <init>
io.flutter.embedding.engine.loader.FlutterLoader -> t2.d:
    boolean initialized -> a
    io.flutter.embedding.engine.loader.FlutterLoader$Settings settings -> b
    long initStartTimestampMillis -> c
    io.flutter.embedding.engine.loader.FlutterApplicationInfo flutterApplicationInfo -> d
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> e
    java.util.concurrent.ExecutorService executorService -> f
    java.util.concurrent.Future initResultFuture -> g
    1:1:void <init>(io.flutter.embedding.engine.FlutterJNI,java.util.concurrent.ExecutorService):0:0 -> <init>
    1:1:io.flutter.embedding.engine.loader.ResourceExtractor access$000(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d;Landroid/content/Context;)Lt2/e;"}
    1:1:io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d;)Lio/flutter/embedding/engine/FlutterJNI;"}
    1:1:io.flutter.embedding.engine.loader.FlutterApplicationInfo access$200(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d;)Lt2/b;"}
    1:1:java.util.concurrent.ExecutorService access$300(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d;)Ljava/util/concurrent/ExecutorService;"}
    1:1:boolean automaticallyRegisterPlugins():0:0 -> e
    1:1:void ensureInitializationComplete(android.content.Context,java.lang.String[]):0:0 -> f
    1:1:java.lang.String findAppBundlePath():0:0 -> g
    1:1:java.lang.String fullAssetPathFrom(java.lang.String):0:0 -> h
    1:1:java.lang.String getLookupKeyForAsset(java.lang.String):0:0 -> i
    1:1:java.lang.String getLookupKeyForAsset(java.lang.String,java.lang.String):0:0 -> j
    1:1:io.flutter.embedding.engine.loader.ResourceExtractor initResources(android.content.Context):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lt2/e;"}
    1:1:boolean initialized():0:0 -> l
    1:1:boolean isLeakVM(android.os.Bundle):0:0 -> m
    1:1:void startInitialization(android.content.Context):0:0 -> n
    1:1:void startInitialization(android.content.Context,io.flutter.embedding.engine.loader.FlutterLoader$Settings):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lt2/d$c;)V"}
io.flutter.embedding.engine.loader.FlutterLoader$1 -> t2.d$a:
    android.content.Context val$appContext -> a
    io.flutter.embedding.engine.loader.FlutterLoader this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.loader.FlutterLoader,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d;Landroid/content/Context;)V"}
    1:1:void $r8$lambda$7aDWRJH5QhLJRySlof0NX61HOhE(io.flutter.embedding.engine.loader.FlutterLoader$1):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d$a;)V"}
    1:1:io.flutter.embedding.engine.loader.FlutterLoader$InitResult call():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lt2/d$b;"}
    1:1:void lambda$call$0():0:0 -> c
    1:1:java.lang.Object call():0:0 -> call
io.flutter.embedding.engine.loader.FlutterLoader$1$$ExternalSyntheticLambda0 -> t2.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.loader.FlutterLoader$1 io.flutter.embedding.engine.loader.FlutterLoader$1$$InternalSyntheticLambda$1$4c58083b2370a8fcdf0f833c7e06d30029e23fa1df6021353fa19987ec472ed7$0.f$0 -> f
    1:1:void io.flutter.embedding.engine.loader.FlutterLoader$1$$InternalSyntheticLambda$1$4c58083b2370a8fcdf0f833c7e06d30029e23fa1df6021353fa19987ec472ed7$0.<init>(io.flutter.embedding.engine.loader.FlutterLoader$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d$a;)V"}
    1:1:void io.flutter.embedding.engine.loader.FlutterLoader$1$$InternalSyntheticLambda$1$4c58083b2370a8fcdf0f833c7e06d30029e23fa1df6021353fa19987ec472ed7$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.loader.FlutterLoader$InitResult -> t2.d$b:
    java.lang.String appStoragePath -> a
    java.lang.String engineCachesPath -> b
    java.lang.String dataDirPath -> c
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String):0:0 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.lang.String,io.flutter.embedding.engine.loader.FlutterLoader$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lt2/d$a;)V"}
io.flutter.embedding.engine.loader.FlutterLoader$Settings -> t2.d$c:
    java.lang.String logTag -> a
    void <init>() -> <init>
    1:1:java.lang.String getLogTag():0:0 -> a
io.flutter.embedding.engine.loader.ResourceExtractor -> t2.e:
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView -> u2.a:
    void readyToDisplay(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,int,int,int,int) -> a
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator -> io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$a:
    android.graphics.Matrix matrix -> a
    android.graphics.Rect rect -> b
    float[] radiis -> c
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType type -> d
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack this$0 -> e
    1:1:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix):0:0 -> <init>
    2:2:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect):0:0 -> <init>
    3:3:void <init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[]):0:0 -> <init>
    1:1:android.graphics.Matrix getMatrix():0:0 -> a
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType -> io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$b:
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RECT -> f
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_RRECT -> g
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType CLIP_PATH -> h
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType TRANSFORM -> i
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType OPACITY -> j
    io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $VALUES -> k
    1:1:io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorsStack$b;"}
io.flutter.embedding.engine.plugins.FlutterPlugin -> v2.a:
    void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv2/a$b;)V"}
    void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding) -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv2/a$b;)V"}
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets -> v2.a$a:
io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding -> v2.a$b:
    android.content.Context applicationContext -> a
    io.flutter.embedding.engine.FlutterEngine flutterEngine -> b
    io.flutter.plugin.common.BinaryMessenger binaryMessenger -> c
    io.flutter.view.TextureRegistry textureRegistry -> d
    io.flutter.plugin.platform.PlatformViewRegistry platformViewRegistry -> e
    io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets -> f
    io.flutter.embedding.engine.FlutterEngineGroup group -> g
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.FlutterEngine,io.flutter.plugin.common.BinaryMessenger,io.flutter.view.TextureRegistry,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets,io.flutter.embedding.engine.FlutterEngineGroup):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/embedding/engine/a;Lz2/b;Lio/flutter/view/TextureRegistry;Lio/flutter/plugin/platform/l;Lv2/a$a;Lio/flutter/embedding/engine/d;)V"}
    1:1:android.content.Context getApplicationContext():0:0 -> a
    1:1:io.flutter.plugin.common.BinaryMessenger getBinaryMessenger():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/b;"}
    1:1:io.flutter.view.TextureRegistry getTextureRegistry():0:0 -> c
io.flutter.embedding.engine.plugins.PluginRegistry -> v2.b:
    void add(io.flutter.embedding.engine.plugins.FlutterPlugin) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv2/a;)V"}
io.flutter.embedding.engine.plugins.activity.ActivityAware -> w2.a:
    void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw2/c;)V"}
    void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw2/c;)V"}
    void onDetachedFromActivity() -> e
    void onDetachedFromActivityForConfigChanges() -> g
io.flutter.embedding.engine.plugins.activity.ActivityControlSurface -> w2.b:
    boolean onActivityResult(int,int,android.content.Intent) -> a
    void onNewIntent(android.content.Intent) -> b
    void onRestoreInstanceState(android.os.Bundle) -> d
    boolean onRequestPermissionsResult(int,java.lang.String[],int[]) -> e
    void attachToActivity(io.flutter.embedding.android.ExclusiveAppComponent,androidx.lifecycle.Lifecycle) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/d;Landroidx/lifecycle/h;)V"}
    void detachFromActivity() -> g
    void onSaveInstanceState(android.os.Bundle) -> h
    void onUserLeaveHint() -> i
    void detachFromActivityForConfigChanges() -> j
io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding -> w2.c:
    void addActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l;)V"}
    void removeActivityResultListener(io.flutter.plugin.common.PluginRegistry$ActivityResultListener) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/l;)V"}
    android.app.Activity getActivity() -> d
io.flutter.embedding.engine.plugins.util.GeneratedPluginRegister -> x2.a:
    1:1:void registerGeneratedPlugins(io.flutter.embedding.engine.FlutterEngine):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/a;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer -> io.flutter.embedding.engine.renderer.FlutterRenderer:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    java.util.concurrent.atomic.AtomicLong nextTextureId -> b
    android.view.Surface surface -> c
    boolean isDisplayingFlutterUi -> d
    android.os.Handler handler -> e
    java.util.Set onTrimMemoryListeners -> f
    java.util.List imageReaderProducers -> g
    io.flutter.embedding.engine.renderer.FlutterUiDisplayListener flutterUiDisplayListener -> h
    boolean debugForceSurfaceProducerGlTextures -> i
    1:1:void surfaceChanged(int,int):0:0 -> A
    1:1:void swapSurface(android.view.Surface):0:0 -> B
    1:1:void unregisterTexture(long):0:0 -> C
    1:1:io.flutter.view.TextureRegistry$SurfaceProducer createSurfaceProducer():0:0 -> a
    1:1:boolean access$002(io.flutter.embedding.engine.renderer.FlutterRenderer,boolean):0:0 -> b
    1:1:java.util.List access$100(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> c
    1:1:void access$300(io.flutter.embedding.engine.renderer.FlutterRenderer,long):0:0 -> d
    1:1:io.flutter.embedding.engine.FlutterJNI access$400(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> e
    1:1:android.os.Handler access$500(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> f
    1:1:void access$600(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> g
    1:1:void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/l;)V"}
    1:1:void addOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$b;)V"}
    1:1:void clearDeadListeners():0:0 -> j
    1:1:io.flutter.view.TextureRegistry$SurfaceTextureEntry createSurfaceTexture():0:0 -> k
    1:1:void dispatchPointerDataPacket(java.nio.ByteBuffer,int):0:0 -> l
    1:1:boolean isDisplayingFlutterUi():0:0 -> m
    1:1:boolean isSoftwareRenderingEnabled():0:0 -> n
    1:1:void onTrimMemory(int):0:0 -> o
    1:1:void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer):0:0 -> p
    1:1:io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(long,android.graphics.SurfaceTexture):0:0 -> q
    1:1:io.flutter.view.TextureRegistry$SurfaceTextureEntry registerSurfaceTexture(android.graphics.SurfaceTexture):0:0 -> r
    1:1:void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper):0:0 -> s
    1:1:void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/l;)V"}
    1:1:void removeOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$b;)V"}
    1:1:void scheduleEngineFrame():0:0 -> v
    1:1:void setSemanticsEnabled(boolean):0:0 -> w
    1:1:void setViewportMetrics(io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$h;)V"}
    1:1:void startRenderingToSurface(android.view.Surface,boolean):0:0 -> y
    1:1:void stopRenderingToSurface():0:0 -> z
io.flutter.embedding.engine.renderer.FlutterRenderer$1 -> io.flutter.embedding.engine.renderer.FlutterRenderer$a:
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> a
    1:1:void onFlutterUiNoLongerDisplayed():0:0 -> b
    1:1:void onFlutterUiDisplayed():0:0 -> f
io.flutter.embedding.engine.renderer.FlutterRenderer$2 -> io.flutter.embedding.engine.renderer.FlutterRenderer$b:
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> a
    1:1:void onResume(androidx.lifecycle.LifecycleOwner):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:void onDestroy(androidx.lifecycle.LifecycleOwner):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:void onCreate(androidx.lifecycle.LifecycleOwner):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:void onPause(androidx.lifecycle.LifecycleOwner):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:void onStop(androidx.lifecycle.LifecycleOwner):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
    1:1:void onStart(androidx.lifecycle.LifecycleOwner):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/l;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeature -> io.flutter.embedding.engine.renderer.FlutterRenderer$c:
    android.graphics.Rect bounds -> a
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType type -> b
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState state -> c
    1:1:void <init>(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Lio/flutter/embedding/engine/renderer/FlutterRenderer$e;)V"}
    2:2:void <init>(android.graphics.Rect,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType,io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/Rect;Lio/flutter/embedding/engine/renderer/FlutterRenderer$e;Lio/flutter/embedding/engine/renderer/FlutterRenderer$d;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState -> io.flutter.embedding.engine.renderer.FlutterRenderer$d:
    int encodedValue -> f
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState UNKNOWN -> g
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_FLAT -> h
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState POSTURE_HALF_OPENED -> i
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $VALUES -> j
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/engine/renderer/FlutterRenderer$d;"}
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType -> io.flutter.embedding.engine.renderer.FlutterRenderer$e:
    int encodedValue -> f
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType UNKNOWN -> g
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType FOLD -> h
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType HINGE -> i
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType CUTOUT -> j
    io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $VALUES -> k
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/embedding/engine/renderer/FlutterRenderer$e;"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.engine.renderer.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(android.media.ImageReader$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline1 -> io.flutter.embedding.engine.renderer.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m(android.media.ImageReader$Builder,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline2 -> io.flutter.embedding.engine.renderer.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$2.m(android.media.ImageReader$Builder,long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline3 -> io.flutter.embedding.engine.renderer.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$3.m(android.media.ImageReader$Builder):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline4 -> io.flutter.embedding.engine.renderer.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.hardware.SyncFence io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$0.m(android.media.Image):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline5 -> io.flutter.embedding.engine.renderer.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$1.m(android.hardware.SyncFence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline6 -> io.flutter.embedding.engine.renderer.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$15$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline7 -> io.flutter.embedding.engine.renderer.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$15$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$a:
    android.media.Image image -> a
    long queuedTime -> b
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> c
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$b:
    android.media.ImageReader reader -> a
    java.util.ArrayDeque imageQueue -> b
    boolean closed -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> d
    1:1:void $r8$lambda$bzaxe3VKCrf8UL5Q_l-VbmtBXzA(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader,android.media.ImageReader):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$b;Landroid/media/ImageReader;)V"}
    1:1:java.util.ArrayDeque access$900(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$b;)Ljava/util/ArrayDeque;"}
    1:1:boolean canPrune():0:0 -> c
    1:1:void close():0:0 -> d
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$a;"}
    1:1:void lambda$new$0(android.media.ImageReader):0:0 -> f
    1:1:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage queueImage(android.media.Image):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/Image;)Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$a;"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$ExternalSyntheticLambda0 -> io.flutter.embedding.engine.renderer.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.f$0 -> a
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.<init>(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer$b;)V"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0:0 -> onImageAvailable
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry -> io.flutter.embedding.engine.renderer.FlutterRenderer$f:
    long id -> a
    io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper -> b
    boolean released -> c
    io.flutter.view.TextureRegistry$OnTrimMemoryListener trimMemoryListener -> d
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> e
    1:1:void $r8$lambda$ICrsTe21BUDjhdNfJ8CRGXJcObo(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry,android.graphics.SurfaceTexture):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$f;Landroid/graphics/SurfaceTexture;)V"}
    1:1:void $r8$lambda$gt4Os6mFgDUmcxZZp-cTDjxa15Y(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$f;)V"}
    1:1:void lambda$new$0():0:0 -> c
    1:1:void lambda$new$1(android.graphics.SurfaceTexture):0:0 -> d
    1:1:void removeListener():0:0 -> e
    1:1:io.flutter.embedding.engine.renderer.SurfaceTextureWrapper textureWrapper():0:0 -> f
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$$ExternalSyntheticLambda0 -> io.flutter.embedding.engine.renderer.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$$InternalSyntheticLambda$3$94cf53601e2b3dba48150a38a02c2ffb6f6f636971bfaf5ca2f1473c12308333$0.f$0 -> f
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$$InternalSyntheticLambda$3$94cf53601e2b3dba48150a38a02c2ffb6f6f636971bfaf5ca2f1473c12308333$0.<init>(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$f;)V"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$$InternalSyntheticLambda$3$94cf53601e2b3dba48150a38a02c2ffb6f6f636971bfaf5ca2f1473c12308333$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$$ExternalSyntheticLambda1 -> io.flutter.embedding.engine.renderer.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$$InternalSyntheticLambda$3$94cf53601e2b3dba48150a38a02c2ffb6f6f636971bfaf5ca2f1473c12308333$1.f$0 -> f
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$$InternalSyntheticLambda$3$94cf53601e2b3dba48150a38a02c2ffb6f6f636971bfaf5ca2f1473c12308333$1.<init>(io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$f;)V"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$SurfaceTextureRegistryEntry$$InternalSyntheticLambda$3$94cf53601e2b3dba48150a38a02c2ffb6f6f636971bfaf5ca2f1473c12308333$1.onFrameAvailable(android.graphics.SurfaceTexture):0:0 -> onFrameAvailable
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.renderer.FlutterRenderer$TextureFinalizerRunnable -> io.flutter.embedding.engine.renderer.FlutterRenderer$g:
    long id -> f
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> g
io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics -> io.flutter.embedding.engine.renderer.FlutterRenderer$h:
    float devicePixelRatio -> a
    int width -> b
    int height -> c
    int viewPaddingTop -> d
    int viewPaddingRight -> e
    int viewPaddingBottom -> f
    int viewPaddingLeft -> g
    int viewInsetTop -> h
    int viewInsetRight -> i
    int viewInsetBottom -> j
    int viewInsetLeft -> k
    int systemGestureInsetTop -> l
    int systemGestureInsetRight -> m
    int systemGestureInsetBottom -> n
    int systemGestureInsetLeft -> o
    int physicalTouchSlop -> p
    java.util.List displayFeatures -> q
    1:1:boolean validate():0:0 -> a
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener -> io.flutter.embedding.engine.renderer.l:
    void onFlutterUiNoLongerDisplayed() -> b
    void onFlutterUiDisplayed() -> f
io.flutter.embedding.engine.renderer.RenderSurface -> io.flutter.embedding.engine.renderer.m:
    void pause() -> d
    void attachToRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer) -> e
    void detachFromRenderer() -> f
    void resume() -> g
io.flutter.embedding.engine.renderer.SurfaceTextureSurfaceProducer -> io.flutter.embedding.engine.renderer.n:
    long id -> a
    int requestBufferWidth -> b
    int requestedBufferHeight -> c
    boolean released -> d
    android.view.Surface surface -> e
    io.flutter.view.TextureRegistry$SurfaceTextureEntry texture -> f
    android.os.Handler handler -> g
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> h
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper -> io.flutter.embedding.engine.renderer.SurfaceTextureWrapper:
    1:1:void <init>(android.graphics.SurfaceTexture):0:0 -> <init>
    2:2:void <init>(android.graphics.SurfaceTexture,java.lang.Runnable):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.AccessibilityChannel -> y2.a:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> b
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler handler -> c
    io.flutter.plugin.common.BasicMessageChannel$MessageHandler parsingMessageHandler -> d
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor,io.flutter.embedding.engine.FlutterJNI):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;Lio/flutter/embedding/engine/FlutterJNI;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$000(io.flutter.embedding.engine.systemchannels.AccessibilityChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/a;)Ly2/a$b;"}
    1:1:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;)V"}
    1:1:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/l$g;Ljava/lang/Object;)V"}
    1:1:void onAndroidAccessibilityDisabled():0:0 -> d
    1:1:void onAndroidAccessibilityEnabled():0:0 -> e
    1:1:void setAccessibilityFeatures(int):0:0 -> f
    1:1:void setAccessibilityMessageHandler(io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/a$b;)V"}
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$1 -> y2.a$a:
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.AccessibilityChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/a;)V"}
    1:1:void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler -> y2.a$b:
    void onTooltip(java.lang.String) -> c
    void onFocus(int) -> d
    void onLongPress(int) -> e
    void announce(java.lang.String) -> f
    void onTap(int) -> g
io.flutter.embedding.engine.systemchannels.BackGestureChannel -> y2.f:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler -> b
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:java.util.Map backEventToJsonMap(android.window.BackEvent):0:0 -> a
    1:1:void cancelBackGesture():0:0 -> b
    1:1:void commitBackGesture():0:0 -> c
    1:1:void startBackGesture(android.window.BackEvent):0:0 -> d
    1:1:void updateBackGestureProgress(android.window.BackEvent):0:0 -> e
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline0 -> y2.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$0.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline1 -> y2.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$1.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline2 -> y2.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:float io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$2.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$$ExternalSyntheticApiModelOutline3 -> y2.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.embedding.engine.systemchannels.BackGestureChannel$$InternalSyntheticApiModelOutline$2$6f4240b544f0b0183f72c4fd485efe7b1d401f090825499e19d68fc26db834e5$3.m(android.window.BackEvent):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.BackGestureChannel$1 -> y2.f$a:
    io.flutter.embedding.engine.systemchannels.BackGestureChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.BackGestureChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/f;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel -> y2.g:
    io.flutter.plugin.common.MethodChannel channel -> a
    java.util.Map componentNameToResults -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager access$000(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/g;)Ls2/a;"}
io.flutter.embedding.engine.systemchannels.DeferredComponentChannel$1 -> y2.g$a:
    io.flutter.embedding.engine.systemchannels.DeferredComponentChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.DeferredComponentChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/g;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.KeyEventChannel -> y2.i:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;)V"}
    1:1:void $r8$lambda$RL0HJ5TnZGrDabOeA71yhjryCe4(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/i$a;Ljava/lang/Object;)V"}
    1:1:io.flutter.plugin.common.BasicMessageChannel$Reply createReplyHandler(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/i$a;)Lz2/a$e;"}
    1:1:java.util.Map encodeKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/i$b;Z)Ljava/util/Map;"}
    1:1:void lambda$createReplyHandler$0(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/i$a;Ljava/lang/Object;)V"}
    1:1:void sendFlutterKeyEvent(io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent,boolean,io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/i$b;ZLy2/i$a;)V"}
io.flutter.embedding.engine.systemchannels.KeyEventChannel$$ExternalSyntheticLambda0 -> y2.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler io.flutter.embedding.engine.systemchannels.KeyEventChannel$$InternalSyntheticLambda$2$2a0e2abef616d6cea4b4f1a8a10072820346c8d644dd4afd70e232766d86619d$0.f$0 -> a
    1:1:void io.flutter.embedding.engine.systemchannels.KeyEventChannel$$InternalSyntheticLambda$2$2a0e2abef616d6cea4b4f1a8a10072820346c8d644dd4afd70e232766d86619d$0.<init>(io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/i$a;)V"}
    1:1:void io.flutter.embedding.engine.systemchannels.KeyEventChannel$$InternalSyntheticLambda$2$2a0e2abef616d6cea4b4f1a8a10072820346c8d644dd4afd70e232766d86619d$0.reply(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.systemchannels.KeyEventChannel$EventResponseHandler -> y2.i$a:
    void onFrameworkResponse(boolean) -> a
io.flutter.embedding.engine.systemchannels.KeyEventChannel$FlutterKeyEvent -> y2.i$b:
    android.view.KeyEvent event -> a
    java.lang.Character complexCharacter -> b
    1:1:void <init>(android.view.KeyEvent,java.lang.Character):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.KeyboardChannel -> y2.j:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler keyboardMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler access$000(io.flutter.embedding.engine.systemchannels.KeyboardChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/j;)Ly2/j$b;"}
    1:1:void setKeyboardMethodHandler(io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/j$b;)V"}
io.flutter.embedding.engine.systemchannels.KeyboardChannel$1 -> y2.j$a:
    java.util.Map pressedState -> a
    io.flutter.embedding.engine.systemchannels.KeyboardChannel this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.KeyboardChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/j;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.KeyboardChannel$KeyboardMethodHandler -> y2.j$b:
    java.util.Map getKeyboardState() -> a
io.flutter.embedding.engine.systemchannels.LifecycleChannel -> y2.k:
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState lastAndroidState -> a
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState lastFlutterState -> b
    boolean lastFocus -> c
    io.flutter.plugin.common.BasicMessageChannel channel -> d
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    2:2:void <init>(io.flutter.plugin.common.BasicMessageChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a;)V"}
    1:1:void aWindowIsFocused():0:0 -> a
    1:1:void appIsDetached():0:0 -> b
    1:1:void appIsInactive():0:0 -> c
    1:1:void appIsPaused():0:0 -> d
    1:1:void appIsResumed():0:0 -> e
    1:1:void noWindowsAreFocused():0:0 -> f
    1:1:void sendState(io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/k$b;Z)V"}
io.flutter.embedding.engine.systemchannels.LifecycleChannel$1 -> y2.k$a:
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$LifecycleChannel$AppLifecycleState -> a
    1:1:void <clinit>():0:0 -> <clinit>
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState -> y2.k$b:
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState DETACHED -> f
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState RESUMED -> g
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState INACTIVE -> h
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState HIDDEN -> i
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState PAUSED -> j
    io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/k$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/k$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/k$b;"}
io.flutter.embedding.engine.systemchannels.LocalizationChannel -> y2.l:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler handler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler access$000(io.flutter.embedding.engine.systemchannels.LocalizationChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/l;)Ly2/l$b;"}
    1:1:void sendLocales(java.util.List):0:0 -> b
    1:1:void setLocalizationMessageHandler(io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/l$b;)V"}
io.flutter.embedding.engine.systemchannels.LocalizationChannel$1 -> y2.l$a:
    io.flutter.embedding.engine.systemchannels.LocalizationChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.LocalizationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/l;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler -> y2.l$b:
    java.lang.String getStringResource(java.lang.String,java.lang.String) -> a
io.flutter.embedding.engine.systemchannels.MouseCursorChannel -> y2.m:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler mouseCursorMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler access$000(io.flutter.embedding.engine.systemchannels.MouseCursorChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/m;)Ly2/m$b;"}
    1:1:void setMethodHandler(io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/m$b;)V"}
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$1 -> y2.m$a:
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.MouseCursorChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/m;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.MouseCursorChannel$MouseCursorMethodHandler -> y2.m$b:
    void activateSystemCursor(java.lang.String) -> a
io.flutter.embedding.engine.systemchannels.NavigationChannel -> y2.n:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.plugin.common.MethodChannel$MethodCallHandler defaultHandler -> b
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:void popRoute():0:0 -> a
    1:1:void pushRouteInformation(java.lang.String):0:0 -> b
    1:1:void setInitialRoute(java.lang.String):0:0 -> c
io.flutter.embedding.engine.systemchannels.NavigationChannel$1 -> y2.n$a:
    io.flutter.embedding.engine.systemchannels.NavigationChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.NavigationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/n;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.PlatformChannel -> y2.o:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler platformMessageHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodCallHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o;)Ly2/o$h;"}
    1:1:int access$100(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o;Lorg/json/JSONArray;)I"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription access$200(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o;Lorg/json/JSONObject;)Ly2/o$c;"}
    1:1:java.util.List access$300(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONArray):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o;Lorg/json/JSONArray;)Ljava/util/List;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode access$400(io.flutter.embedding.engine.systemchannels.PlatformChannel,java.lang.String):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o;Ljava/lang/String;)Ly2/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle access$500(io.flutter.embedding.engine.systemchannels.PlatformChannel,org.json.JSONObject):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o;Lorg/json/JSONObject;)Ly2/o$j;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription decodeAppSwitcherDescription(org.json.JSONObject):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly2/o$c;"}
    1:1:int decodeOrientations(org.json.JSONArray):0:0 -> h
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle decodeSystemChromeStyle(org.json.JSONObject):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly2/o$j;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode decodeSystemUiMode(java.lang.String):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$k;"}
    1:1:java.util.List decodeSystemUiOverlays(org.json.JSONArray):0:0 -> k
    1:1:void setPlatformMessageHandler(io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$h;)V"}
    1:1:void systemChromeChanged(boolean):0:0 -> m
io.flutter.embedding.engine.systemchannels.PlatformChannel$1 -> y2.o$a:
    io.flutter.embedding.engine.systemchannels.PlatformChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.PlatformChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$2 -> y2.o$b:
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$DeviceOrientation -> a
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay -> b
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiMode -> c
    1:1:void <clinit>():0:0 -> <clinit>
io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription -> y2.o$c:
    int color -> a
    java.lang.String label -> b
    1:1:void <init>(int,java.lang.String):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness -> y2.o$d:
    java.lang.String encodedName -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness LIGHT -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness DARK -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $VALUES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$d;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat -> y2.o$e:
    java.lang.String encodedName -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat PLAIN_TEXT -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $VALUES -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$e;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation -> y2.o$f:
    java.lang.String encodedName -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_UP -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation PORTRAIT_DOWN -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_LEFT -> i
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation LANDSCAPE_RIGHT -> j
    io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$f;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$f;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$f;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$f;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType -> y2.o$g:
    java.lang.String encodedName -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType STANDARD -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType LIGHT_IMPACT -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType MEDIUM_IMPACT -> i
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType HEAVY_IMPACT -> j
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType SELECTION_CLICK -> k
    io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $VALUES -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$g;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler -> y2.o$h:
    void popSystemNavigator() -> a
    void setSystemUiChangeListener() -> b
    void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$i;)V"}
    void restoreSystemUiOverlays() -> d
    void setClipboardData(java.lang.String) -> e
    java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$e;)Ljava/lang/CharSequence;"}
    void setFrameworkHandlesBack(boolean) -> g
    void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$j;)V"}
    void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$k;)V"}
    void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$c;)V"}
    void setPreferredOrientations(int) -> k
    void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$g;)V"}
    void showSystemOverlays(java.util.List) -> m
    void share(java.lang.String) -> n
    boolean clipboardHasStrings() -> o
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType -> y2.o$i:
    java.lang.String encodedName -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType CLICK -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType ALERT -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $VALUES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$i;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$i;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$i;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$i;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle -> y2.o$j:
    java.lang.Integer statusBarColor -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness statusBarIconBrightness -> b
    java.lang.Boolean systemStatusBarContrastEnforced -> c
    java.lang.Integer systemNavigationBarColor -> d
    io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness systemNavigationBarIconBrightness -> e
    java.lang.Integer systemNavigationBarDividerColor -> f
    java.lang.Boolean systemNavigationBarContrastEnforced -> g
    1:1:void <init>(java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Boolean,java.lang.Integer,io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness,java.lang.Integer,java.lang.Boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Integer;Ly2/o$d;Ljava/lang/Boolean;Ljava/lang/Integer;Ly2/o$d;Ljava/lang/Integer;Ljava/lang/Boolean;)V"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode -> y2.o$k:
    java.lang.String encodedName -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode LEAN_BACK -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode IMMERSIVE_STICKY -> i
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode EDGE_TO_EDGE -> j
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$k;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$k;"}
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay -> y2.o$l:
    java.lang.String encodedName -> f
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay TOP_OVERLAYS -> g
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay BOTTOM_OVERLAYS -> h
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $VALUES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$l;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$l;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/o$l;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/o$l;"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel -> y2.q:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler handler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler access$000(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q;)Ly2/q$g;"}
    1:1:java.lang.String access$100(java.lang.Exception):0:0 -> b
    1:1:java.lang.String detailedExceptionString(java.lang.Exception):0:0 -> c
    1:1:void setPlatformViewsHandler(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$g;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1 -> y2.q$a:
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
    1:1:void $r8$lambda$pMHhgo3vaqdzoS3K-OFSVbonOaM(io.flutter.plugin.common.MethodChannel$Result,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j$d;Ly2/q$c;)V"}
    1:1:void clearFocus(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
    1:1:void create(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
    1:1:void dispose(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
    1:1:void lambda$resize$0(io.flutter.plugin.common.MethodChannel$Result,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j$d;Ly2/q$c;)V"}
    1:1:void offset(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
    1:1:void resize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
    1:1:void setDirection(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
    1:1:void synchronizeToNativeViewHierarchy(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
    1:1:void touch(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$ExternalSyntheticLambda0 -> y2.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.common.MethodChannel$Result io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$InternalSyntheticLambda$2$06a0318edf43c68b535b7196357da0ff9ff18d83e350c6ea0dc6b00c1c7bbad1$0.f$0 -> a
    1:1:void io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$InternalSyntheticLambda$2$06a0318edf43c68b535b7196357da0ff9ff18d83e350c6ea0dc6b00c1c7bbad1$0.<init>(io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j$d;)V"}
    1:1:void io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$1$$InternalSyntheticLambda$2$06a0318edf43c68b535b7196357da0ff9ff18d83e350c6ea0dc6b00c1c7bbad1$0.run(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$c;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized -> y2.q$b:
    void run(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$c;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferSize -> y2.q$c:
    int width -> a
    int height -> b
    1:1:void <init>(int,int):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest -> y2.q$d:
    int viewId -> a
    java.lang.String viewType -> b
    double logicalWidth -> c
    double logicalHeight -> d
    double logicalTop -> e
    double logicalLeft -> f
    int direction -> g
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode displayMode -> h
    java.nio.ByteBuffer params -> i
    1:1:void <init>(int,java.lang.String,double,double,double,double,int,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode,java.nio.ByteBuffer):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/String;DDDDILy2/q$d$a;Ljava/nio/ByteBuffer;)V"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode -> y2.q$d$a:
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_VIRTUAL_FALLBACK -> f
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode TEXTURE_WITH_HYBRID_FALLBACK -> g
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode HYBRID_ONLY -> h
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] $VALUES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/q$d$a;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/q$d$a;"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/q$d$a;"}
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest -> y2.q$e:
    int viewId -> a
    double newLogicalWidth -> b
    double newLogicalHeight -> c
    1:1:void <init>(int,double,double):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch -> y2.q$f:
    int viewId -> a
    java.lang.Number downTime -> b
    java.lang.Number eventTime -> c
    int action -> d
    int pointerCount -> e
    java.lang.Object rawPointerPropertiesList -> f
    java.lang.Object rawPointerCoords -> g
    int metaState -> h
    int buttonState -> i
    float xPrecision -> j
    float yPrecision -> k
    int deviceId -> l
    int edgeFlags -> m
    int source -> n
    int flags -> o
    long motionEventId -> p
    1:1:void <init>(int,java.lang.Number,java.lang.Number,int,int,java.lang.Object,java.lang.Object,int,int,float,float,int,int,int,int,long):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler -> y2.q$g:
    void clearFocus(int) -> a
    void createForPlatformViewLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$d;)V"}
    void synchronizeToNativeViewHierarchy(boolean) -> c
    void offset(int,double,double) -> d
    void setDirection(int,int) -> e
    void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$f;)V"}
    void resize(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$e;Ly2/q$b;)V"}
    void dispose(int) -> h
    long createForTextureLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$d;)J"}
io.flutter.embedding.engine.systemchannels.ProcessTextChannel -> y2.r:
    io.flutter.plugin.common.MethodChannel channel -> a
    android.content.pm.PackageManager packageManager -> b
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler processTextMethodHandler -> c
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> d
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor,android.content.pm.PackageManager):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;Landroid/content/pm/PackageManager;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler access$000(io.flutter.embedding.engine.systemchannels.ProcessTextChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/r;)Ly2/r$b;"}
    1:1:void setMethodHandler(io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/r$b;)V"}
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$1 -> y2.r$a:
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.ProcessTextChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/r;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.ProcessTextChannel$ProcessTextMethodHandler -> y2.r$b:
    java.util.Map queryTextActions() -> b
    void processTextAction(java.lang.String,java.lang.String,boolean,io.flutter.plugin.common.MethodChannel$Result) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;ZLz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.RestorationChannel -> y2.s:
    boolean waitForRestorationData -> a
    byte[] restorationData -> b
    io.flutter.plugin.common.MethodChannel channel -> c
    io.flutter.plugin.common.MethodChannel$Result pendingFrameworkRestorationChannelRequest -> d
    boolean engineHasProvidedData -> e
    boolean frameworkHasRequestedData -> f
    io.flutter.plugin.common.MethodChannel$MethodCallHandler handler -> g
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;Z)V"}
    2:2:void <init>(io.flutter.plugin.common.MethodChannel,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j;Z)V"}
    1:1:byte[] access$000(io.flutter.embedding.engine.systemchannels.RestorationChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/s;)[B"}
    1:1:byte[] access$002(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/s;[B)[B"}
    1:1:boolean access$102(io.flutter.embedding.engine.systemchannels.RestorationChannel,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/s;Z)Z"}
    1:1:boolean access$200(io.flutter.embedding.engine.systemchannels.RestorationChannel):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/s;)Z"}
    1:1:java.util.Map access$300(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/s;[B)Ljava/util/Map;"}
    1:1:io.flutter.plugin.common.MethodChannel$Result access$402(io.flutter.embedding.engine.systemchannels.RestorationChannel,io.flutter.plugin.common.MethodChannel$Result):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/s;Lz2/j$d;)Lz2/j$d;"}
    1:1:void clearData():0:0 -> g
    1:1:byte[] getRestorationData():0:0 -> h
    1:1:java.util.Map packageData(byte[]):0:0 -> i
    1:1:void setRestorationData(byte[]):0:0 -> j
io.flutter.embedding.engine.systemchannels.RestorationChannel$1 -> y2.s$a:
    byte[] val$data -> a
    io.flutter.embedding.engine.systemchannels.RestorationChannel this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.RestorationChannel,byte[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/s;[B)V"}
    1:1:void error(java.lang.String,java.lang.String,java.lang.Object):0:0 -> a
    1:1:void success(java.lang.Object):0:0 -> b
    1:1:void notImplemented():0:0 -> c
io.flutter.embedding.engine.systemchannels.RestorationChannel$2 -> y2.s$b:
    io.flutter.embedding.engine.systemchannels.RestorationChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.RestorationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/s;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.SettingsChannel -> y2.t:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue CONFIGURATION_QUEUE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue access$100():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/t$a;"}
    1:1:android.util.DisplayMetrics getPastDisplayMetrics(int):0:0 -> b
    1:1:boolean hasNonlinearTextScalingSupport():0:0 -> c
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder startMessage():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly2/t$b;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue -> y2.t$a:
    java.util.concurrent.ConcurrentLinkedQueue sentQueue -> a
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration currentConfiguration -> b
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration previousEnqueuedConfiguration -> c
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.concurrent.ConcurrentLinkedQueue access$200(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/t$a;)Ljava/util/concurrent/ConcurrentLinkedQueue;"}
    1:1:io.flutter.plugin.common.BasicMessageChannel$Reply enqueueConfiguration(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/t$a$b;)Lz2/a$e;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration getConfiguration(int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ly2/t$a$b;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$1 -> y2.t$a$a:
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration val$configurationToRemove -> a
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue this$0 -> b
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue,io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/t$a;Ly2/t$a$b;)V"}
    1:1:void reply(java.lang.Object):0:0 -> a
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration -> y2.t$a$b:
    int generationNumber -> a
    android.util.DisplayMetrics displayMetrics -> b
    int nextConfigGeneration -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.util.DisplayMetrics):0:0 -> <init>
    1:1:android.util.DisplayMetrics access$000(io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/t$a$b;)Landroid/util/DisplayMetrics;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder -> y2.t$b:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    java.util.Map message -> b
    android.util.DisplayMetrics displayMetrics -> c
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a;)V"}
    1:1:void send():0:0 -> a
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setBrieflyShowPassword(boolean):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ly2/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setDisplayMetrics(android.util.DisplayMetrics):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/util/DisplayMetrics;)Ly2/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setNativeSpellCheckServiceDefined(boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ly2/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setPlatformBrightness(io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/t$c;)Ly2/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setTextScaleFactor(float):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(F)Ly2/t$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$MessageBuilder setUse24HourFormat(boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Ly2/t$b;"}
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness -> y2.t$c:
    java.lang.String name -> f
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness light -> g
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness dark -> h
    io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $VALUES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/t$c;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/t$c;"}
    1:1:io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/t$c;"}
io.flutter.embedding.engine.systemchannels.SpellCheckChannel -> y2.u:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler spellCheckMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler access$000(io.flutter.embedding.engine.systemchannels.SpellCheckChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/u;)Ly2/u$b;"}
    1:1:void setSpellCheckMethodHandler(io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/u$b;)V"}
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$1 -> y2.u$a:
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.SpellCheckChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/u;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.SpellCheckChannel$SpellCheckMethodHandler -> y2.u$b:
    void initiateSpellCheck(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.SystemChannel -> y2.v:
    io.flutter.plugin.common.BasicMessageChannel channel -> a
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:void sendMemoryPressureWarning():0:0 -> a
io.flutter.embedding.engine.systemchannels.TextInputChannel -> y2.w:
    io.flutter.plugin.common.MethodChannel channel -> a
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler textInputMethodHandler -> b
    io.flutter.plugin.common.MethodChannel$MethodCallHandler parsingMethodHandler -> c
    1:1:void <init>(io.flutter.embedding.engine.dart.DartExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr2/a;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler access$000(io.flutter.embedding.engine.systemchannels.TextInputChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/w;)Ly2/w$f;"}
    1:1:void commitContent(int,java.util.Map):0:0 -> b
    1:1:java.util.HashMap createEditingDeltaJSON(java.util.ArrayList):0:0 -> c
    1:1:java.util.HashMap createEditingStateJSON(java.lang.String,int,int,int,int):0:0 -> d
    1:1:void done(int):0:0 -> e
    1:1:void go(int):0:0 -> f
    1:1:void newline(int):0:0 -> g
    1:1:void next(int):0:0 -> h
    1:1:void performPrivateCommand(int,java.lang.String,android.os.Bundle):0:0 -> i
    1:1:void previous(int):0:0 -> j
    1:1:void requestExistingInputState():0:0 -> k
    1:1:void search(int):0:0 -> l
    1:1:void send(int):0:0 -> m
    1:1:void setTextInputMethodHandler(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/w$f;)V"}
    1:1:void unspecifiedAction(int):0:0 -> o
    1:1:void updateEditingState(int,java.lang.String,int,int,int,int):0:0 -> p
    1:1:void updateEditingStateWithDeltas(int,java.util.ArrayList):0:0 -> q
    1:1:void updateEditingStateWithTag(int,java.util.HashMap):0:0 -> r
io.flutter.embedding.engine.systemchannels.TextInputChannel$1 -> y2.w$a:
    io.flutter.embedding.engine.systemchannels.TextInputChannel this$0 -> a
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/w;)V"}
    1:1:void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration -> y2.w$b:
    boolean obscureText -> a
    boolean autocorrect -> b
    boolean enableSuggestions -> c
    boolean enableIMEPersonalizedLearning -> d
    boolean enableDeltaModel -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization textCapitalization -> f
    io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType inputType -> g
    java.lang.Integer inputAction -> h
    java.lang.String actionLabel -> i
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill autofill -> j
    java.lang.String[] contentCommitMimeTypes -> k
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[] fields -> l
    1:1:void <init>(boolean,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization,io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,java.lang.Integer,java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill,java.lang.String[],io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration[]):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZZZZLy2/w$d;Ly2/w$c;Ljava/lang/Integer;Ljava/lang/String;Ly2/w$b$a;[Ljava/lang/String;[Ly2/w$b;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly2/w$b;"}
    1:1:java.lang.Integer inputActionFromTextInputAction(java.lang.String):0:0 -> b
io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill -> y2.w$b$a:
    java.lang.String uniqueIdentifier -> a
    java.lang.String[] hints -> b
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState editState -> c
    java.lang.String hintText -> d
    1:1:void <init>(java.lang.String,java.lang.String[],java.lang.String,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ly2/w$e;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration$Autofill fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly2/w$b$a;"}
    1:1:java.lang.String translateAutofillHint(java.lang.String):0:0 -> b
io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType -> y2.w$c:
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType type -> a
    boolean isSigned -> b
    boolean isDecimal -> c
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/w$g;ZZ)V"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly2/w$c;"}
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization -> y2.w$d:
    java.lang.String encodedName -> f
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization CHARACTERS -> g
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization WORDS -> h
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization SENTENCES -> i
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization NONE -> j
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/w$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/w$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/w$d;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/w$d;"}
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState -> y2.w$e:
    java.lang.String text -> a
    int selectionStart -> b
    int selectionEnd -> c
    int composingStart -> d
    int composingEnd -> e
    1:1:void <init>(java.lang.String,int,int,int,int):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState fromJson(org.json.JSONObject):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lorg/json/JSONObject;)Ly2/w$e;"}
    1:1:boolean hasComposing():0:0 -> b
    1:1:boolean hasSelection():0:0 -> c
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputMethodHandler -> y2.w$f:
    void sendAppPrivateCommand(java.lang.String,android.os.Bundle) -> a
    void clearClient() -> b
    void show() -> c
    void setPlatformViewClient(int,boolean) -> d
    void setEditableSizeAndTransform(double,double,double[]) -> e
    void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/w$e;)V"}
    void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration) -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILy2/w$b;)V"}
    void requestAutofill() -> h
    void finishAutofillContext(boolean) -> i
    void hide() -> j
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType -> y2.w$g:
    java.lang.String encodedName -> f
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType TEXT -> g
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType DATETIME -> h
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NAME -> i
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType POSTAL_ADDRESS -> j
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NUMBER -> k
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType PHONE -> l
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType MULTILINE -> m
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType EMAIL_ADDRESS -> n
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType URL -> o
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType VISIBLE_PASSWORD -> p
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType NONE -> q
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $VALUES -> r
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/w$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType fromValue(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/w$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ly2/w$g;"}
    1:1:io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ly2/w$g;"}
io.flutter.plugin.common.BasicMessageChannel -> z2.a:
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.lang.String name -> b
    io.flutter.plugin.common.MessageCodec codec -> c
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;Ljava/lang/String;Lz2/h;)V"}
    2:2:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MessageCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;Ljava/lang/String;Lz2/h;Lz2/b$c;)V"}
    1:1:io.flutter.plugin.common.MessageCodec access$200(io.flutter.plugin.common.BasicMessageChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a;)Lz2/h;"}
    1:1:java.lang.String access$300(io.flutter.plugin.common.BasicMessageChannel):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a;)Ljava/lang/String;"}
    1:1:void send(java.lang.Object):0:0 -> c
    1:1:void send(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
    1:1:void setMessageHandler(io.flutter.plugin.common.BasicMessageChannel$MessageHandler):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a$d;)V"}
io.flutter.plugin.common.BasicMessageChannel$1 -> z2.a$a:
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler -> z2.a$b:
    io.flutter.plugin.common.BasicMessageChannel$MessageHandler handler -> a
    io.flutter.plugin.common.BasicMessageChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a;Lz2/a$d;)V"}
    2:2:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$MessageHandler,io.flutter.plugin.common.BasicMessageChannel$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a;Lz2/a$d;Lz2/a$a;)V"}
    1:1:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lz2/b$b;)V"}
io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler$1 -> z2.a$b$a:
    io.flutter.plugin.common.BinaryMessenger$BinaryReply val$callback -> a
    io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler this$1 -> b
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel$IncomingMessageHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a$b;Lz2/b$b;)V"}
    1:1:void reply(java.lang.Object):0:0 -> a
io.flutter.plugin.common.BasicMessageChannel$IncomingReplyHandler -> z2.a$c:
    io.flutter.plugin.common.BasicMessageChannel$Reply callback -> a
    io.flutter.plugin.common.BasicMessageChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a;Lz2/a$e;)V"}
    2:2:void <init>(io.flutter.plugin.common.BasicMessageChannel,io.flutter.plugin.common.BasicMessageChannel$Reply,io.flutter.plugin.common.BasicMessageChannel$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/a;Lz2/a$e;Lz2/a$a;)V"}
    1:1:void reply(java.nio.ByteBuffer):0:0 -> a
io.flutter.plugin.common.BasicMessageChannel$MessageHandler -> z2.a$d:
    void onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugin.common.BasicMessageChannel$Reply -> z2.a$e:
    void reply(java.lang.Object) -> a
io.flutter.plugin.common.BinaryMessenger -> z2.b:
    void send(java.lang.String,java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/nio/ByteBuffer;Lz2/b$b;)V"}
    void send(java.lang.String,java.nio.ByteBuffer) -> b
    void setMessageHandler(java.lang.String,io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lz2/b$a;)V"}
io.flutter.plugin.common.BinaryMessenger$BinaryMessageHandler -> z2.b$a:
    void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lz2/b$b;)V"}
io.flutter.plugin.common.BinaryMessenger$BinaryReply -> z2.b$b:
    void reply(java.nio.ByteBuffer) -> a
io.flutter.plugin.common.BinaryMessenger$TaskQueue -> z2.b$c:
io.flutter.plugin.common.EventChannel -> z2.c:
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.lang.String name -> b
    io.flutter.plugin.common.MethodCodec codec -> c
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;Ljava/lang/String;)V"}
    2:2:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;Ljava/lang/String;Lz2/k;)V"}
    3:3:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;Ljava/lang/String;Lz2/k;Lz2/b$c;)V"}
    1:1:io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.EventChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c;)Lz2/k;"}
    1:1:java.lang.String access$200(io.flutter.plugin.common.EventChannel):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c;)Ljava/lang/String;"}
    1:1:io.flutter.plugin.common.BinaryMessenger access$400(io.flutter.plugin.common.EventChannel):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c;)Lz2/b;"}
    1:1:void setStreamHandler(io.flutter.plugin.common.EventChannel$StreamHandler):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c$d;)V"}
io.flutter.plugin.common.EventChannel$1 -> z2.c$a:
io.flutter.plugin.common.EventChannel$EventSink -> z2.c$b:
    void error(java.lang.String,java.lang.String,java.lang.Object) -> a
    void success(java.lang.Object) -> b
    void endOfStream() -> c
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler -> z2.c$c:
    io.flutter.plugin.common.EventChannel$StreamHandler handler -> a
    java.util.concurrent.atomic.AtomicReference activeSink -> b
    io.flutter.plugin.common.EventChannel this$0 -> c
    1:1:void <init>(io.flutter.plugin.common.EventChannel,io.flutter.plugin.common.EventChannel$StreamHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c;Lz2/c$d;)V"}
    1:1:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lz2/b$b;)V"}
    1:1:java.util.concurrent.atomic.AtomicReference access$300(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c$c;)Ljava/util/concurrent/atomic/AtomicReference;"}
    1:1:void onCancel(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/b$b;)V"}
    1:1:void onListen(java.lang.Object,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/b$b;)V"}
io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler$EventSinkImplementation -> z2.c$c$a:
    java.util.concurrent.atomic.AtomicBoolean hasEnded -> a
    io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler this$1 -> b
    1:1:void <init>(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c$c;)V"}
    2:2:void <init>(io.flutter.plugin.common.EventChannel$IncomingStreamRequestHandler,io.flutter.plugin.common.EventChannel$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c$c;Lz2/c$a;)V"}
    1:1:void error(java.lang.String,java.lang.String,java.lang.Object):0:0 -> a
    1:1:void success(java.lang.Object):0:0 -> b
    1:1:void endOfStream():0:0 -> c
io.flutter.plugin.common.EventChannel$StreamHandler -> z2.c$d:
    void onCancel(java.lang.Object) -> a
    void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/c$b;)V"}
io.flutter.plugin.common.FlutterException -> z2.d:
    java.lang.String code -> f
    java.lang.Object details -> g
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.Object):0:0 -> <init>
io.flutter.plugin.common.JSONMessageCodec -> z2.e:
    io.flutter.plugin.common.JSONMessageCodec INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object decodeMessage(java.nio.ByteBuffer):0:0 -> a
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.Object):0:0 -> b
io.flutter.plugin.common.JSONMethodCodec -> z2.f:
    io.flutter.plugin.common.JSONMethodCodec INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;)Ljava/nio/ByteBuffer;"}
    1:1:java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object):0:0 -> b
    1:1:io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)Lz2/i;"}
    1:1:java.lang.Object decodeEnvelope(java.nio.ByteBuffer):0:0 -> d
    1:1:java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String):0:0 -> e
    1:1:java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object):0:0 -> f
    1:1:java.lang.Object unwrapNull(java.lang.Object):0:0 -> g
io.flutter.plugin.common.JSONUtil -> z2.g:
    1:1:java.lang.Object wrap(java.lang.Object):0:0 -> a
io.flutter.plugin.common.MessageCodec -> z2.h:
    java.lang.Object decodeMessage(java.nio.ByteBuffer) -> a
    java.nio.ByteBuffer encodeMessage(java.lang.Object) -> b
io.flutter.plugin.common.MethodCall -> z2.i:
    java.lang.String method -> a
    java.lang.Object arguments -> b
    1:1:void <init>(java.lang.String,java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object arguments():0:0 -> a
io.flutter.plugin.common.MethodChannel -> z2.j:
    io.flutter.plugin.common.BinaryMessenger messenger -> a
    java.lang.String name -> b
    io.flutter.plugin.common.MethodCodec codec -> c
    1:1:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;Ljava/lang/String;Lz2/k;)V"}
    2:2:void <init>(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugin.common.MethodCodec,io.flutter.plugin.common.BinaryMessenger$TaskQueue):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;Ljava/lang/String;Lz2/k;Lz2/b$c;)V"}
    1:1:io.flutter.plugin.common.MethodCodec access$000(io.flutter.plugin.common.MethodChannel):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j;)Lz2/k;"}
    1:1:java.lang.String access$100(io.flutter.plugin.common.MethodChannel):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j;)Ljava/lang/String;"}
    1:1:void invokeMethod(java.lang.String,java.lang.Object):0:0 -> c
    1:1:void invokeMethod(java.lang.String,java.lang.Object,io.flutter.plugin.common.MethodChannel$Result):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Object;Lz2/j$d;)V"}
    1:1:void setMethodCallHandler(io.flutter.plugin.common.MethodChannel$MethodCallHandler):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j$c;)V"}
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler -> z2.j$a:
    io.flutter.plugin.common.MethodChannel$MethodCallHandler handler -> a
    io.flutter.plugin.common.MethodChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$MethodCallHandler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j;Lz2/j$c;)V"}
    1:1:void onMessage(java.nio.ByteBuffer,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;Lz2/b$b;)V"}
io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler$1 -> z2.j$a$a:
    io.flutter.plugin.common.BinaryMessenger$BinaryReply val$reply -> a
    io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler this$1 -> b
    1:1:void <init>(io.flutter.plugin.common.MethodChannel$IncomingMethodCallHandler,io.flutter.plugin.common.BinaryMessenger$BinaryReply):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j$a;Lz2/b$b;)V"}
    1:1:void error(java.lang.String,java.lang.String,java.lang.Object):0:0 -> a
    1:1:void success(java.lang.Object):0:0 -> b
    1:1:void notImplemented():0:0 -> c
io.flutter.plugin.common.MethodChannel$IncomingResultHandler -> z2.j$b:
    io.flutter.plugin.common.MethodChannel$Result callback -> a
    io.flutter.plugin.common.MethodChannel this$0 -> b
    1:1:void <init>(io.flutter.plugin.common.MethodChannel,io.flutter.plugin.common.MethodChannel$Result):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/j;Lz2/j$d;)V"}
    1:1:void reply(java.nio.ByteBuffer):0:0 -> a
io.flutter.plugin.common.MethodChannel$MethodCallHandler -> z2.j$c:
    void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;Lz2/j$d;)V"}
io.flutter.plugin.common.MethodChannel$Result -> z2.j$d:
    void error(java.lang.String,java.lang.String,java.lang.Object) -> a
    void success(java.lang.Object) -> b
    void notImplemented() -> c
io.flutter.plugin.common.MethodCodec -> z2.k:
    java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;)Ljava/nio/ByteBuffer;"}
    java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object) -> b
    io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)Lz2/i;"}
    java.lang.Object decodeEnvelope(java.nio.ByteBuffer) -> d
    java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String) -> e
    java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object) -> f
io.flutter.plugin.common.PluginRegistry$ActivityResultListener -> z2.l:
    boolean onActivityResult(int,int,android.content.Intent) -> a
io.flutter.plugin.common.StandardMessageCodec -> z2.m:
    io.flutter.plugin.common.StandardMessageCodec INSTANCE -> a
    boolean LITTLE_ENDIAN -> b
    java.nio.charset.Charset UTF8 -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object decodeMessage(java.nio.ByteBuffer):0:0 -> a
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.Object):0:0 -> b
    1:1:void readAlignment(java.nio.ByteBuffer,int):0:0 -> c
    1:1:byte[] readBytes(java.nio.ByteBuffer):0:0 -> d
    1:1:int readSize(java.nio.ByteBuffer):0:0 -> e
    1:1:java.lang.Object readValue(java.nio.ByteBuffer):0:0 -> f
    1:1:java.lang.Object readValueOfType(byte,java.nio.ByteBuffer):0:0 -> g
    1:1:void writeAlignment(java.io.ByteArrayOutputStream,int):0:0 -> h
    1:1:void writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> i
    1:1:void writeChar(java.io.ByteArrayOutputStream,int):0:0 -> j
    1:1:void writeDouble(java.io.ByteArrayOutputStream,double):0:0 -> k
    1:1:void writeFloat(java.io.ByteArrayOutputStream,float):0:0 -> l
    1:1:void writeInt(java.io.ByteArrayOutputStream,int):0:0 -> m
    1:1:void writeLong(java.io.ByteArrayOutputStream,long):0:0 -> n
    1:1:void writeSize(java.io.ByteArrayOutputStream,int):0:0 -> o
    1:1:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> p
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream -> z2.m$a:
    void <init>() -> <init>
    1:1:byte[] buffer():0:0 -> a
io.flutter.plugin.common.StandardMethodCodec -> z2.n:
    io.flutter.plugin.common.StandardMessageCodec messageCodec -> a
    io.flutter.plugin.common.StandardMethodCodec INSTANCE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(io.flutter.plugin.common.StandardMessageCodec):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/m;)V"}
    1:1:java.nio.ByteBuffer encodeMethodCall(io.flutter.plugin.common.MethodCall):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/i;)Ljava/nio/ByteBuffer;"}
    1:1:java.nio.ByteBuffer encodeSuccessEnvelope(java.lang.Object):0:0 -> b
    1:1:io.flutter.plugin.common.MethodCall decodeMethodCall(java.nio.ByteBuffer):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/nio/ByteBuffer;)Lz2/i;"}
    1:1:java.lang.Object decodeEnvelope(java.nio.ByteBuffer):0:0 -> d
    1:1:java.nio.ByteBuffer encodeErrorEnvelopeWithStacktrace(java.lang.String,java.lang.String,java.lang.Object,java.lang.String):0:0 -> e
    1:1:java.nio.ByteBuffer encodeErrorEnvelope(java.lang.String,java.lang.String,java.lang.Object):0:0 -> f
io.flutter.plugin.common.StringCodec -> z2.o:
    java.nio.charset.Charset UTF8 -> a
    io.flutter.plugin.common.StringCodec INSTANCE -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object decodeMessage(java.nio.ByteBuffer):0:0 -> a
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.Object):0:0 -> b
    1:1:java.lang.String decodeMessage(java.nio.ByteBuffer):0:0 -> c
    1:1:java.nio.ByteBuffer encodeMessage(java.lang.String):0:0 -> d
io.flutter.plugin.editing.FlutterTextUtils -> io.flutter.plugin.editing.a:
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> a
    1:1:int getOffsetAfter(java.lang.CharSequence,int):0:0 -> a
    1:1:int getOffsetBefore(java.lang.CharSequence,int):0:0 -> b
    1:1:boolean isEmoji(int):0:0 -> c
    1:1:boolean isEmojiModifier(int):0:0 -> d
    1:1:boolean isEmojiModifierBase(int):0:0 -> e
    1:1:boolean isKeycapBase(int):0:0 -> f
    1:1:boolean isRegionalIndicatorSymbol(int):0:0 -> g
    1:1:boolean isTagSpecChar(int):0:0 -> h
    1:1:boolean isVariationSelector(int):0:0 -> i
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$4c819f8c8ad227d9802b1a549dcea82babc035996fc947c4508511c1b3807738$0.m(android.view.View,android.view.WindowInsetsAnimation$Callback):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1 -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$a:
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$2cc005fa53a8049e244b5ffce5b2e308ea0dcdb0fed28f3a858d514c163d0b4f$0.m(android.view.WindowInsetsAnimation):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsetsAnimation io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.editing.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$7.m(int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.editing.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$8.m(android.view.WindowInsets$Builder,int,android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline4 -> io.flutter.plugin.editing.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$15$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(android.view.WindowInsets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$ExternalSyntheticApiModelOutline5 -> io.flutter.plugin.editing.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$15$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$b:
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0 -> a
    1:1:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback):0:0 -> <init>
    2:2:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/ImeSyncDeferringInsetsCallback;Lio/flutter/plugin/editing/ImeSyncDeferringInsetsCallback$a;)V"}
io.flutter.plugin.editing.InputConnectionAdaptor -> io.flutter.plugin.editing.m:
    android.view.View mFlutterView -> a
    int mClient -> b
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> c
    io.flutter.plugin.editing.ListenableEditingState mEditable -> d
    android.view.inputmethod.EditorInfo mEditorInfo -> e
    android.view.inputmethod.ExtractedTextRequest mExtractRequest -> f
    boolean mMonitorCursorUpdate -> g
    android.view.inputmethod.CursorAnchorInfo$Builder mCursorAnchorInfoBuilder -> h
    android.view.inputmethod.ExtractedText mExtractedText -> i
    android.view.inputmethod.InputMethodManager mImm -> j
    android.text.Layout mLayout -> k
    io.flutter.plugin.editing.FlutterTextUtils flutterTextUtils -> l
    io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate keyboardDelegate -> m
    int batchEditNestDepth -> n
    1:1:void <init>(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;ILy2/w;Lio/flutter/plugin/editing/m$a;Lio/flutter/plugin/editing/n;Landroid/view/inputmethod/EditorInfo;)V"}
    2:2:void <init>(android.view.View,int,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate,io.flutter.plugin.editing.ListenableEditingState,android.view.inputmethod.EditorInfo,io.flutter.embedding.engine.FlutterJNI):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;ILy2/w;Lio/flutter/plugin/editing/m$a;Lio/flutter/plugin/editing/n;Landroid/view/inputmethod/EditorInfo;Lio/flutter/embedding/engine/FlutterJNI;)V"}
    1:1:void didChangeEditingState(boolean,boolean,boolean):0:0 -> a
    1:1:boolean doPerformContextMenuAction(int):0:0 -> b
    1:1:android.view.inputmethod.CursorAnchorInfo getCursorAnchorInfo():0:0 -> c
    1:1:android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest):0:0 -> d
    1:1:boolean handleHorizontalMovement(boolean,boolean):0:0 -> e
    1:1:boolean handleKeyEvent(android.view.KeyEvent):0:0 -> f
    1:1:boolean handleVerticalMovement(boolean,boolean):0:0 -> g
    1:1:byte[] readStreamFully(java.io.InputStream,int):0:0 -> h
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$0.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.ClipDescription io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$1.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.editing.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.net.Uri io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$3.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.editing.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.InputConnectionAdaptor$$InternalSyntheticApiModelOutline$1$165413ffad71b7ab66417e0f701d66637a9487b406a398e631f55959322aa537$5.m(android.view.inputmethod.InputContentInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.InputConnectionAdaptor$KeyboardDelegate -> io.flutter.plugin.editing.m$a:
    boolean handleEvent(android.view.KeyEvent) -> b
io.flutter.plugin.editing.ListenableEditingState -> io.flutter.plugin.editing.n:
    int mBatchEditNestDepth -> a
    int mChangeNotificationDepth -> b
    java.util.ArrayList mListeners -> c
    java.util.ArrayList mPendingListeners -> d
    java.util.ArrayList mBatchTextEditingDeltas -> e
    java.lang.String mToStringCache -> f
    java.lang.String mTextWhenBeginBatchEdit -> g
    int mSelectionStartWhenBeginBatchEdit -> h
    int mSelectionEndWhenBeginBatchEdit -> i
    int mComposingStartWhenBeginBatchEdit -> j
    int mComposingEndWhenBeginBatchEdit -> k
    android.view.inputmethod.BaseInputConnection mDummyConnection -> l
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,android.view.View):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/w$e;Landroid/view/View;)V"}
    1:1:void addEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/n$b;)V"}
    1:1:void beginBatchEdit():0:0 -> b
    1:1:void clearBatchDeltas():0:0 -> c
    1:1:void endBatchEdit():0:0 -> d
    1:1:java.util.ArrayList extractBatchTextEditingDeltas():0:0 -> e
    1:1:int getComposingEnd():0:0 -> f
    1:1:int getComposingStart():0:0 -> g
    1:1:int getSelectionEnd():0:0 -> h
    1:1:int getSelectionStart():0:0 -> i
    1:1:void notifyListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher,boolean,boolean,boolean):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/n$b;ZZZ)V"}
    1:1:void notifyListenersIfNeeded(boolean,boolean,boolean):0:0 -> k
    1:1:void removeEditingStateListener(io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/n$b;)V"}
    1:1:void setComposingRange(int,int):0:0 -> m
    1:1:void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/w$e;)V"}
    1:1:android.text.Editable replace(int,int,java.lang.CharSequence,int,int):0:0 -> replace
    2:2:android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int):0:0 -> replace
io.flutter.plugin.editing.ListenableEditingState$1 -> io.flutter.plugin.editing.n$a:
    android.text.Editable val$self -> a
    io.flutter.plugin.editing.ListenableEditingState this$0 -> b
io.flutter.plugin.editing.ListenableEditingState$EditingStateWatcher -> io.flutter.plugin.editing.n$b:
    void didChangeEditingState(boolean,boolean,boolean) -> a
io.flutter.plugin.editing.SpellCheckPlugin -> io.flutter.plugin.editing.o:
    io.flutter.embedding.engine.systemchannels.SpellCheckChannel mSpellCheckChannel -> a
    android.view.textservice.TextServicesManager mTextServicesManager -> b
    android.view.textservice.SpellCheckerSession mSpellCheckerSession -> c
    io.flutter.plugin.common.MethodChannel$Result pendingResult -> d
    1:1:void <init>(android.view.textservice.TextServicesManager,io.flutter.embedding.engine.systemchannels.SpellCheckChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/textservice/TextServicesManager;Ly2/u;)V"}
    1:1:void initiateSpellCheck(java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;Lz2/j$d;)V"}
    1:1:void destroy():0:0 -> b
    1:1:void performSpellCheck(java.lang.String,java.lang.String):0:0 -> c
io.flutter.plugin.editing.TextEditingDelta -> io.flutter.plugin.editing.p:
    java.lang.CharSequence oldText -> a
    java.lang.CharSequence deltaText -> b
    int deltaStart -> c
    int deltaEnd -> d
    int newSelectionStart -> e
    int newSelectionEnd -> f
    int newComposingStart -> g
    int newComposingEnd -> h
    1:1:void <init>(java.lang.CharSequence,int,int,int,int):0:0 -> <init>
    2:2:void <init>(java.lang.CharSequence,int,int,java.lang.CharSequence,int,int,int,int):0:0 -> <init>
    1:1:void setDeltas(java.lang.CharSequence,java.lang.CharSequence,int,int):0:0 -> a
    1:1:org.json.JSONObject toJSON():0:0 -> b
io.flutter.plugin.editing.TextInputPlugin -> io.flutter.plugin.editing.k0:
    android.view.View mView -> a
    android.view.inputmethod.InputMethodManager mImm -> b
    android.view.autofill.AutofillManager afm -> c
    io.flutter.embedding.engine.systemchannels.TextInputChannel textInputChannel -> d
    io.flutter.plugin.editing.TextInputPlugin$InputTarget inputTarget -> e
    io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration configuration -> f
    android.util.SparseArray autofillConfiguration -> g
    io.flutter.plugin.editing.ListenableEditingState mEditable -> h
    boolean mRestartInputPending -> i
    android.view.inputmethod.InputConnection lastInputConnection -> j
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> k
    android.graphics.Rect lastClientRect -> l
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback imeSyncCallback -> m
    io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState mLastKnownFrameworkTextEditingState -> n
    boolean isInputConnectionLocked -> o
    1:1:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel,io.flutter.plugin.platform.PlatformViewsController):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ly2/w;Lio/flutter/plugin/platform/r;)V"}
    1:1:void setPlatformViewTextInputClient(int,boolean):0:0 -> A
    1:1:void setTextInputClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILy2/w$b;)V"}
    1:1:void setTextInputEditingState(android.view.View,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ly2/w$e;)V"}
    1:1:void showTextInput(android.view.View):0:0 -> D
    1:1:void unlockPlatformViewInputConnection():0:0 -> E
    1:1:void updateAutofillConfigurationIfNeeded(io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/w$b;)V"}
    1:1:void didChangeEditingState(boolean,boolean,boolean):0:0 -> a
    1:1:android.view.View access$000(io.flutter.plugin.editing.TextInputPlugin):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)Landroid/view/View;"}
    1:1:io.flutter.plugin.editing.TextInputPlugin$InputTarget access$100(io.flutter.plugin.editing.TextInputPlugin):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)Lio/flutter/plugin/editing/k0$c;"}
    1:1:void access$200(io.flutter.plugin.editing.TextInputPlugin):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)V"}
    1:1:void access$300(io.flutter.plugin.editing.TextInputPlugin,android.view.View):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;Landroid/view/View;)V"}
    1:1:void access$400(io.flutter.plugin.editing.TextInputPlugin):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)V"}
    1:1:android.view.autofill.AutofillManager access$500(io.flutter.plugin.editing.TextInputPlugin):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)Landroid/view/autofill/AutofillManager;"}
    1:1:void access$600(io.flutter.plugin.editing.TextInputPlugin,int,boolean):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;IZ)V"}
    1:1:void access$700(io.flutter.plugin.editing.TextInputPlugin,double,double,double[]):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;DD[D)V"}
    1:1:void autofill(android.util.SparseArray):0:0 -> j
    1:1:void clearTextInputClient():0:0 -> k
    1:1:boolean composingChanged(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/w$e;Ly2/w$e;)Z"}
    1:1:android.view.inputmethod.InputConnection createInputConnection(android.view.View,io.flutter.embedding.android.KeyboardManager,android.view.inputmethod.EditorInfo):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Lio/flutter/embedding/android/m0;Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;"}
    1:1:void destroy():0:0 -> n
    1:1:android.view.inputmethod.InputMethodManager getInputMethodManager():0:0 -> o
    1:1:boolean handleKeyEvent(android.view.KeyEvent):0:0 -> p
    1:1:void hideTextInput(android.view.View):0:0 -> q
    1:1:int inputTypeFromTextInputType(io.flutter.embedding.engine.systemchannels.TextInputChannel$InputType,boolean,boolean,boolean,boolean,io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/w$c;ZZZZLy2/w$d;)I"}
    1:1:void lockPlatformViewInputConnection():0:0 -> s
    1:1:boolean needsAutofill():0:0 -> t
    1:1:void notifyValueChanged(java.lang.String):0:0 -> u
    1:1:void notifyViewEntered():0:0 -> v
    1:1:void notifyViewExited():0:0 -> w
    1:1:void onProvideAutofillVirtualStructure(android.view.ViewStructure,int):0:0 -> x
    1:1:void saveEditableSizeAndTransform(double,double,double[]):0:0 -> y
    1:1:void sendTextInputAppPrivateCommand(java.lang.String,android.os.Bundle):0:0 -> z
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillId io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$0.m(android.view.ViewStructure):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$10.m(android.view.ViewStructure,android.view.autofill.AutofillValue):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline10 -> io.flutter.plugin.editing.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$7.m(android.view.ViewStructure,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline11 -> io.flutter.plugin.editing.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$04208460e651786f72e333e91f0aa7676853e5f852a815d1a35bfb1aa660fbc3$0.m(android.view.autofill.AutofillManager,android.view.View,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline12 -> io.flutter.plugin.editing.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Class io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$5a2148ec32b344cd3d3fdaf17d3e08695b023a81eb15238f7dd60b7857b83fa0$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline13 -> io.flutter.plugin.editing.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillManager io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$5a2148ec32b344cd3d3fdaf17d3e08695b023a81eb15238f7dd60b7857b83fa0$2.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline14 -> io.flutter.plugin.editing.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillValue io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$8693f9705179b32774124c2325baf330fb0498fcc7507e40655d130c4bd5824f$0.m(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline15 -> io.flutter.plugin.editing.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$8693f9705179b32774124c2325baf330fb0498fcc7507e40655d130c4bd5824f$1.m(android.view.autofill.AutofillValue):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline16 -> io.flutter.plugin.editing.x:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$2$167979d7e754c907d06dfc44ef11126f153da013177993deb4c41ec718baa78e$1.m(android.view.autofill.AutofillManager,android.view.View,int,android.view.autofill.AutofillValue):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline17 -> io.flutter.plugin.editing.y:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$2$c4faf0440f3301184472391db70fbc212b094ce96da5013bccb54e79433792fa$0.m(android.view.autofill.AutofillManager,android.view.View,int,android.graphics.Rect):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.editing.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$11.m(android.view.ViewStructure,int,int,int,int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.editing.b0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.autofill.AutofillValue io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$12.m(java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline4 -> io.flutter.plugin.editing.c0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$1.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline5 -> io.flutter.plugin.editing.d0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.ViewStructure io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$2.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline6 -> io.flutter.plugin.editing.e0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$3.m(android.view.ViewStructure,android.view.autofill.AutofillId,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline7 -> io.flutter.plugin.editing.f0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$4.m(android.view.ViewStructure,java.lang.String[]):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline8 -> io.flutter.plugin.editing.g0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$5.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$$ExternalSyntheticApiModelOutline9 -> io.flutter.plugin.editing.h0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$$InternalSyntheticApiModelOutline$1$0183889cb4ba90cda743c7f55b11a07b8e0796a0d48383d5abd70a422a49412b$6.m(android.view.ViewStructure,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$1 -> io.flutter.plugin.editing.k0$a:
    io.flutter.plugin.editing.TextInputPlugin this$0 -> a
    1:1:void sendAppPrivateCommand(java.lang.String,android.os.Bundle):0:0 -> a
    1:1:void clearClient():0:0 -> b
    1:1:void show():0:0 -> c
    1:1:void setPlatformViewClient(int,boolean):0:0 -> d
    1:1:void setEditableSizeAndTransform(double,double,double[]):0:0 -> e
    1:1:void setEditingState(io.flutter.embedding.engine.systemchannels.TextInputChannel$TextEditState):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/w$e;)V"}
    1:1:void setClient(int,io.flutter.embedding.engine.systemchannels.TextInputChannel$Configuration):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILy2/w$b;)V"}
    1:1:void requestAutofill():0:0 -> h
    1:1:void finishAutofillContext(boolean):0:0 -> i
    1:1:void hide():0:0 -> j
io.flutter.plugin.editing.TextInputPlugin$1$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.i0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$1$$InternalSyntheticApiModelOutline$2$a706a7eaf3a6647c571296dd4b19a9aa478a2dbfcb873e58d346d4607ff319be$0.m(android.view.autofill.AutofillManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$1$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.editing.j0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.TextInputPlugin$1$$InternalSyntheticApiModelOutline$2$a706a7eaf3a6647c571296dd4b19a9aa478a2dbfcb873e58d346d4607ff319be$1.m(android.view.autofill.AutofillManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.TextInputPlugin$2 -> io.flutter.plugin.editing.k0$b:
    boolean val$isAffine -> a
    double[] val$matrix -> b
    double[] val$minMax -> c
    io.flutter.plugin.editing.TextInputPlugin this$0 -> d
    1:1:void inspect(double,double):0:0 -> a
io.flutter.plugin.editing.TextInputPlugin$InputTarget -> io.flutter.plugin.editing.k0$c:
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type type -> a
    int id -> b
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type -> io.flutter.plugin.editing.k0$c$a:
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type NO_TARGET -> f
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type FRAMEWORK_CLIENT -> g
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type VIRTUAL_DISPLAY_PLATFORM_VIEW -> h
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type PHYSICAL_DISPLAY_PLATFORM_VIEW -> i
    io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $VALUES -> j
    1:1:io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/plugin/editing/k0$c$a;"}
io.flutter.plugin.editing.TextInputPlugin$MinMax -> io.flutter.plugin.editing.k0$d:
    void inspect(double,double) -> a
io.flutter.plugin.localization.LocalizationPlugin -> a3.f:
    io.flutter.embedding.engine.systemchannels.LocalizationChannel localizationChannel -> a
    android.content.Context context -> b
    io.flutter.embedding.engine.systemchannels.LocalizationChannel$LocalizationMessageHandler localizationMessageHandler -> c
    1:1:void <init>(android.content.Context,io.flutter.embedding.engine.systemchannels.LocalizationChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ly2/l;)V"}
    1:1:android.content.Context access$000(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La3/f;)Landroid/content/Context;"}
    1:1:java.util.Locale localeFromString(java.lang.String):0:0 -> b
    1:1:java.util.Locale resolveNativeLocale(java.util.List):0:0 -> c
    1:1:void sendLocalesToFlutter(android.content.res.Configuration):0:0 -> d
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline0 -> a3.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$1$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$1.m(android.os.LocaleList):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline1 -> a3.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Locale io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$1$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$2.m(android.os.LocaleList,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline2 -> a3.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Locale io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$1$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$3.m(java.util.List,java.util.Collection):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline3 -> a3.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Locale$LanguageRange io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$15$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$0.m(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$$ExternalSyntheticApiModelOutline4 -> a3.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.localization.LocalizationPlugin$$InternalSyntheticApiModelOutline$15$19b1336f100aff430c2aea63e9faf3205518a39db2d973e1b83afa2f34efd940$3.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.localization.LocalizationPlugin$1 -> a3.f$a:
    io.flutter.plugin.localization.LocalizationPlugin this$0 -> a
    1:1:void <init>(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La3/f;)V"}
    1:1:java.lang.String getStringResource(java.lang.String,java.lang.String):0:0 -> a
io.flutter.plugin.mouse.MouseCursorPlugin -> b3.b:
    io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate mView -> a
    io.flutter.embedding.engine.systemchannels.MouseCursorChannel mouseCursorChannel -> b
    java.util.HashMap systemCursorConstants -> c
    1:1:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate,io.flutter.embedding.engine.systemchannels.MouseCursorChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b$c;Ly2/m;)V"}
    1:1:android.view.PointerIcon access$000(io.flutter.plugin.mouse.MouseCursorPlugin,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;Ljava/lang/String;)Landroid/view/PointerIcon;"}
    1:1:io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate access$100(io.flutter.plugin.mouse.MouseCursorPlugin):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;)Lb3/b$c;"}
    1:1:void destroy():0:0 -> c
    1:1:android.view.PointerIcon resolveSystemCursor(java.lang.String):0:0 -> d
io.flutter.plugin.mouse.MouseCursorPlugin$$ExternalSyntheticApiModelOutline0 -> b3.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object io.flutter.plugin.mouse.MouseCursorPlugin$$InternalSyntheticApiModelOutline$2$13fd82c24a20d9ccb523762e03e691b8db1270b5e7779d677df150a434fe20e1$0.m(java.util.HashMap,java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.mouse.MouseCursorPlugin$1 -> b3.b$a:
    io.flutter.plugin.mouse.MouseCursorPlugin this$0 -> a
    1:1:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;)V"}
    1:1:void activateSystemCursor(java.lang.String):0:0 -> a
io.flutter.plugin.mouse.MouseCursorPlugin$2 -> b3.b$b:
    io.flutter.plugin.mouse.MouseCursorPlugin this$0 -> f
    1:1:void <init>(io.flutter.plugin.mouse.MouseCursorPlugin):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb3/b;)V"}
io.flutter.plugin.mouse.MouseCursorPlugin$MouseCursorViewDelegate -> b3.b$c:
    android.view.PointerIcon getSystemPointerIcon(int) -> c
    void setPointerIcon(android.view.PointerIcon) -> setPointerIcon
io.flutter.plugin.platform.AccessibilityEventsDelegate -> io.flutter.plugin.platform.a:
    io.flutter.view.AccessibilityBridge accessibilityBridge -> a
    1:1:boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean):0:0 -> a
    1:1:void setAccessibilityBridge(io.flutter.view.AccessibilityBridge):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
io.flutter.plugin.platform.PlatformOverlayView -> io.flutter.plugin.platform.b:
    io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityDelegate -> g
io.flutter.plugin.platform.PlatformPlugin -> io.flutter.plugin.platform.h:
    android.app.Activity activity -> a
    io.flutter.embedding.engine.systemchannels.PlatformChannel platformChannel -> b
    io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate platformPluginDelegate -> c
    io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle currentTheme -> d
    int mEnabledOverlays -> e
    io.flutter.embedding.engine.systemchannels.PlatformChannel$PlatformMessageHandler mPlatformMessageHandler -> f
    1:1:void <init>(android.app.Activity,io.flutter.embedding.engine.systemchannels.PlatformChannel,io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Ly2/o;Lio/flutter/plugin/platform/h$d;)V"}
    1:1:void setSystemChromeEnabledSystemUIOverlays(java.util.List):0:0 -> A
    1:1:void setSystemChromePreferredOrientations(int):0:0 -> B
    1:1:void setSystemChromeSystemUIOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$j;)V"}
    1:1:void share(java.lang.String):0:0 -> D
    1:1:void updateSystemUiOverlays():0:0 -> E
    1:1:void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$g;)V"}
    1:1:void access$000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ly2/o$i;)V"}
    1:1:void access$100(io.flutter.plugin.platform.PlatformPlugin,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;I)V"}
    1:1:java.lang.CharSequence access$1000(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ly2/o$e;)Ljava/lang/CharSequence;"}
    1:1:void access$1100(io.flutter.plugin.platform.PlatformPlugin,java.lang.String):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ljava/lang/String;)V"}
    1:1:boolean access$1200(io.flutter.plugin.platform.PlatformPlugin):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)Z"}
    1:1:void access$1300(io.flutter.plugin.platform.PlatformPlugin,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ljava/lang/String;)V"}
    1:1:io.flutter.embedding.engine.systemchannels.PlatformChannel access$1400(io.flutter.plugin.platform.PlatformPlugin):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)Ly2/o;"}
    1:1:void access$200(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ly2/o$c;)V"}
    1:1:void access$300(io.flutter.plugin.platform.PlatformPlugin,java.util.List):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ljava/util/List;)V"}
    1:1:void access$400(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ly2/o$k;)V"}
    1:1:void access$500(io.flutter.plugin.platform.PlatformPlugin):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)V"}
    1:1:void access$600(io.flutter.plugin.platform.PlatformPlugin):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)V"}
    1:1:void access$700(io.flutter.plugin.platform.PlatformPlugin,io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Ly2/o$j;)V"}
    1:1:void access$800(io.flutter.plugin.platform.PlatformPlugin,boolean):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;Z)V"}
    1:1:void access$900(io.flutter.plugin.platform.PlatformPlugin):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h;)V"}
    1:1:boolean clipboardHasStrings():0:0 -> p
    1:1:void destroy():0:0 -> q
    1:1:java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$e;)Ljava/lang/CharSequence;"}
    1:1:void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$i;)V"}
    1:1:void popSystemNavigator():0:0 -> t
    1:1:void restoreSystemChromeSystemUIOverlays():0:0 -> u
    1:1:void setClipboardData(java.lang.String):0:0 -> v
    1:1:void setFrameworkHandlesBack(boolean):0:0 -> w
    1:1:void setSystemChromeApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$c;)V"}
    1:1:void setSystemChromeChangeListener():0:0 -> y
    1:1:void setSystemChromeEnabledSystemUIMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$k;)V"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.platform.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$1$e22893835d7798a2bd839d9070b861ced926cbc8d9e08e23d1de9cb60d556b23$0.m(android.view.Window,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.platform.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$1$e22893835d7798a2bd839d9070b861ced926cbc8d9e08e23d1de9cb60d556b23$1.m(android.view.Window,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.platform.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$1$e22893835d7798a2bd839d9070b861ced926cbc8d9e08e23d1de9cb60d556b23$2.m(android.view.Window,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.platform.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.app.ActivityManager$TaskDescription io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$15$b2a4e8a5d811cba4baa05d0d4d81eb75d968beda73bb8093557ff22eebe40135$0.m(java.lang.String,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$$ExternalSyntheticApiModelOutline4 -> io.flutter.plugin.platform.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$$InternalSyntheticApiModelOutline$15$b2a4e8a5d811cba4baa05d0d4d81eb75d968beda73bb8093557ff22eebe40135$1.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$1 -> io.flutter.plugin.platform.h$a:
    io.flutter.plugin.platform.PlatformPlugin this$0 -> a
    1:1:void popSystemNavigator():0:0 -> a
    1:1:void setSystemUiChangeListener():0:0 -> b
    1:1:void playSystemSound(io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$i;)V"}
    1:1:void restoreSystemUiOverlays():0:0 -> d
    1:1:void setClipboardData(java.lang.String):0:0 -> e
    1:1:java.lang.CharSequence getClipboardData(io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$e;)Ljava/lang/CharSequence;"}
    1:1:void setFrameworkHandlesBack(boolean):0:0 -> g
    1:1:void setSystemUiOverlayStyle(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemChromeStyle):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$j;)V"}
    1:1:void showSystemUiMode(io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$k;)V"}
    1:1:void setApplicationSwitcherDescription(io.flutter.embedding.engine.systemchannels.PlatformChannel$AppSwitcherDescription):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$c;)V"}
    1:1:void setPreferredOrientations(int):0:0 -> k
    1:1:void vibrateHapticFeedback(io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/o$g;)V"}
    1:1:void showSystemOverlays(java.util.List):0:0 -> m
    1:1:void share(java.lang.String):0:0 -> n
    1:1:boolean clipboardHasStrings():0:0 -> o
io.flutter.plugin.platform.PlatformPlugin$2 -> io.flutter.plugin.platform.h$b:
    android.view.View val$decorView -> a
    io.flutter.plugin.platform.PlatformPlugin this$0 -> b
    1:1:void $r8$lambda$9FqC1sSWYJ_hsKn0VYLiRoem8So(io.flutter.plugin.platform.PlatformPlugin$2,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h$b;I)V"}
    1:1:void lambda$onSystemUiVisibilityChange$0(int):0:0 -> b
io.flutter.plugin.platform.PlatformPlugin$2$$ExternalSyntheticLambda0 -> io.flutter.plugin.platform.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.platform.PlatformPlugin$2 io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.f$0 -> f
    int io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.f$1 -> g
    1:1:void io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.<init>(io.flutter.plugin.platform.PlatformPlugin$2,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/h$b;I)V"}
    1:1:void io.flutter.plugin.platform.PlatformPlugin$2$$InternalSyntheticLambda$2$98d42420615e67cd125f78441563d4957a7e16ad96e9ebe33be10666bcded632$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformPlugin$3 -> io.flutter.plugin.platform.h$c:
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$HapticFeedbackType -> a
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$SystemUiOverlay -> b
    int[] $SwitchMap$io$flutter$embedding$engine$systemchannels$PlatformChannel$Brightness -> c
io.flutter.plugin.platform.PlatformPlugin$PlatformPluginDelegate -> io.flutter.plugin.platform.h$d:
    boolean popSystemNavigator() -> a
    void setFrameworkHandlesBack(boolean) -> g
io.flutter.plugin.platform.PlatformView -> io.flutter.plugin.platform.j:
io.flutter.plugin.platform.PlatformViewFactory -> io.flutter.plugin.platform.k:
io.flutter.plugin.platform.PlatformViewRegistry -> io.flutter.plugin.platform.l:
io.flutter.plugin.platform.PlatformViewRegistryImpl -> io.flutter.plugin.platform.m:
    java.util.Map viewFactories -> a
    1:1:io.flutter.plugin.platform.PlatformViewFactory getFactory(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lio/flutter/plugin/platform/k;"}
io.flutter.plugin.platform.PlatformViewWrapper -> io.flutter.plugin.platform.n:
    void setLayoutParams(android.widget.FrameLayout$LayoutParams) -> a
io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate -> io.flutter.plugin.platform.o:
    void detachAccessibilityBridge() -> a
    void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    boolean usesVirtualDisplay(int) -> c
    android.view.View getPlatformViewById(int) -> d
io.flutter.plugin.platform.PlatformViewsController -> io.flutter.plugin.platform.r:
    io.flutter.plugin.platform.PlatformViewRegistryImpl registry -> a
    io.flutter.embedding.android.AndroidTouchProcessor androidTouchProcessor -> b
    android.content.Context context -> c
    io.flutter.embedding.android.FlutterView flutterView -> d
    io.flutter.view.TextureRegistry textureRegistry -> e
    io.flutter.plugin.editing.TextInputPlugin textInputPlugin -> f
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel platformViewsChannel -> g
    io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate -> h
    java.util.HashMap vdControllers -> i
    java.util.HashMap contextToEmbeddedView -> j
    android.util.SparseArray platformViews -> k
    android.util.SparseArray platformViewParent -> l
    android.util.SparseArray overlayLayerViews -> m
    android.util.SparseArray viewWrappers -> n
    int nextOverlayLayerId -> o
    boolean flutterViewConvertedToImageView -> p
    boolean synchronizeToNativeViewHierarchy -> q
    java.util.HashSet currentFrameUsedOverlayLayerIds -> r
    java.util.HashSet currentFrameUsedPlatformViewIds -> s
    io.flutter.embedding.android.MotionEventTracker motionEventTracker -> t
    boolean usesSoftwareRendering -> u
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewsHandler channelHandler -> v
    java.lang.Class[] VIEW_TYPES_REQUIRE_VIRTUAL_DISPLAY -> w
    1:1:io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface():0:0 -> A
    1:1:io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface(io.flutter.plugin.platform.PlatformOverlayView):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/b;)Lio/flutter/embedding/engine/FlutterOverlaySurface;"}
    1:1:io.flutter.plugin.platform.PlatformView createPlatformView(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest,boolean):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$d;Z)Lio/flutter/plugin/platform/j;"}
    1:1:void destroyOverlaySurfaces():0:0 -> D
    1:1:void detach():0:0 -> E
    1:1:void detachFromView():0:0 -> F
    1:1:void detachTextInputPlugin():0:0 -> G
    1:1:void diposeAllViews():0:0 -> H
    1:1:void enforceMinimumAndroidApiVersion(int):0:0 -> I
    1:1:void ensureValidRequest(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$d;)V"}
    1:1:void finishFrame(boolean):0:0 -> K
    1:1:float getDisplayDensity():0:0 -> L
    1:1:io.flutter.plugin.platform.PlatformViewRegistry getRegistry():0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/l;"}
    1:1:void initializePlatformViewIfNeeded(int):0:0 -> N
    1:1:void initializeRootImageViewIfNeeded():0:0 -> O
    1:1:void lambda$onEndFrame$3():0:0 -> P
    1:1:void lockInputConnection(io.flutter.plugin.platform.VirtualDisplayController):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/y;)V"}
    1:1:void onAttachedToJNI():0:0 -> R
    1:1:void onBeginFrame():0:0 -> S
    1:1:void onDetachedFromJNI():0:0 -> T
    1:1:void onDisplayOverlaySurface(int,int,int,int,int):0:0 -> U
    1:1:void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack):0:0 -> V
    1:1:void onEndFrame():0:0 -> W
    1:1:void onPreEngineRestart():0:0 -> X
    1:1:void onResume():0:0 -> Y
    1:1:void onTrimMemory(int):0:0 -> Z
    1:1:void detachAccessibilityBridge():0:0 -> a
    1:1:android.view.MotionEvent$PointerCoords parsePointerCoords(java.lang.Object,float):0:0 -> a0
    1:1:void attachAccessibilityBridge(io.flutter.view.AccessibilityBridge):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    1:1:java.util.List parsePointerCoordsList(java.lang.Object,float):0:0 -> b0
    1:1:boolean usesVirtualDisplay(int):0:0 -> c
    1:1:android.view.MotionEvent$PointerProperties parsePointerProperties(java.lang.Object):0:0 -> c0
    1:1:android.view.View getPlatformViewById(int):0:0 -> d
    1:1:java.util.List parsePointerPropertiesList(java.lang.Object):0:0 -> d0
    1:1:void $r8$lambda$JeMmwXVKKKBO6MRWj6kpn9gXeqM(io.flutter.plugin.platform.PlatformViewsController):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)V"}
    1:1:void removeOverlaySurfaces():0:0 -> e0
    1:1:void access$000(io.flutter.plugin.platform.PlatformViewsController,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;I)V"}
    1:1:void setSoftwareRendering(boolean):0:0 -> f0
    1:1:void access$100(io.flutter.plugin.platform.PlatformViewsController,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Ly2/q$d;)V"}
    1:1:int toLogicalPixels(double,float):0:0 -> g0
    1:1:int access$1100(io.flutter.plugin.platform.PlatformViewsController,double):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;D)I"}
    1:1:android.view.MotionEvent toMotionEvent(float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch,boolean):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(FLy2/q$f;Z)Landroid/view/MotionEvent;"}
    1:1:float access$1200(io.flutter.plugin.platform.PlatformViewsController):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)F"}
    1:1:int toPhysicalPixels(double):0:0 -> i0
    1:1:void access$1300(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Lio/flutter/plugin/platform/y;)V"}
    1:1:void translateMotionEvent(android.view.MotionEvent,android.view.MotionEvent$PointerCoords[]):0:0 -> j0
    1:1:android.content.Context access$1500(io.flutter.plugin.platform.PlatformViewsController):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Landroid/content/Context;"}
    1:1:void unlockInputConnection(io.flutter.plugin.platform.VirtualDisplayController):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/y;)V"}
    1:1:boolean access$1600(int):0:0 -> l
    1:1:boolean validateDirection(int):0:0 -> l0
    1:1:boolean access$1702(io.flutter.plugin.platform.PlatformViewsController,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Z)Z"}
    1:1:void access$1800(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.VirtualDisplayController):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Lio/flutter/plugin/platform/y;)V"}
    1:1:int access$1900(io.flutter.plugin.platform.PlatformViewsController,double,float):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;DF)I"}
    1:1:void access$200(io.flutter.plugin.platform.PlatformViewsController,io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;Lio/flutter/plugin/platform/j;Ly2/q$d;)V"}
    1:1:android.util.SparseArray access$300(io.flutter.plugin.platform.PlatformViewsController):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Landroid/util/SparseArray;"}
    1:1:io.flutter.view.TextureRegistry access$400(io.flutter.plugin.platform.PlatformViewsController):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Lio/flutter/view/TextureRegistry;"}
    1:1:io.flutter.embedding.android.FlutterView access$500(io.flutter.plugin.platform.PlatformViewsController):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Lio/flutter/embedding/android/e0;"}
    1:1:android.util.SparseArray access$900(io.flutter.plugin.platform.PlatformViewsController):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)Landroid/util/SparseArray;"}
    1:1:void attach(android.content.Context,io.flutter.view.TextureRegistry,io.flutter.embedding.engine.dart.DartExecutor):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lio/flutter/view/TextureRegistry;Lr2/a;)V"}
    1:1:void attachTextInputPlugin(io.flutter.plugin.editing.TextInputPlugin):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/k0;)V"}
    1:1:void attachToFlutterRenderer(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> w
    1:1:void attachToView(io.flutter.embedding.android.FlutterView):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/android/e0;)V"}
    1:1:boolean checkInputConnectionProxy(android.view.View):0:0 -> y
    1:1:void configureForHybridComposition(io.flutter.plugin.platform.PlatformView,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/j;Ly2/q$d;)V"}
io.flutter.plugin.platform.PlatformViewsController$$ExternalSyntheticLambda0 -> io.flutter.plugin.platform.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.platform.PlatformViewsController io.flutter.plugin.platform.PlatformViewsController$$InternalSyntheticLambda$1$c2433f7ec18a30d7a6689997dabdea3449704686993ef34df7a45e332a8d08e1$0.f$0 -> f
    1:1:void io.flutter.plugin.platform.PlatformViewsController$$InternalSyntheticLambda$1$c2433f7ec18a30d7a6689997dabdea3449704686993ef34df7a45e332a8d08e1$0.<init>(io.flutter.plugin.platform.PlatformViewsController):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r;)V"}
    1:1:void io.flutter.plugin.platform.PlatformViewsController$$InternalSyntheticLambda$1$c2433f7ec18a30d7a6689997dabdea3449704686993ef34df7a45e332a8d08e1$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.PlatformViewsController$1 -> io.flutter.plugin.platform.r$a:
    io.flutter.plugin.platform.PlatformViewsController this$0 -> a
    1:1:void clearFocus(int):0:0 -> a
    1:1:void createForPlatformViewLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$d;)V"}
    1:1:void synchronizeToNativeViewHierarchy(boolean):0:0 -> c
    1:1:void offset(int,double,double):0:0 -> d
    1:1:void setDirection(int,int):0:0 -> e
    1:1:void onTouch(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewTouch):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$f;)V"}
    1:1:void resize(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewResizeRequest,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$e;Ly2/q$b;)V"}
    1:1:void dispose(int):0:0 -> h
    1:1:long createForTextureLayer(io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/q$d;)J"}
    1:1:void $r8$lambda$s1Tgy9tT2SoAjsa1sAiyORJW1wI(io.flutter.plugin.platform.PlatformViewsController$1,io.flutter.plugin.platform.VirtualDisplayController,float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r$a;Lio/flutter/plugin/platform/y;FLy2/q$b;)V"}
    1:1:void lambda$resize$0(io.flutter.plugin.platform.VirtualDisplayController,float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/y;FLy2/q$b;)V"}
io.flutter.plugin.platform.PlatformViewsController$1$$ExternalSyntheticLambda0 -> io.flutter.plugin.platform.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugin.platform.PlatformViewsController$1 io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$0 -> f
    io.flutter.plugin.platform.VirtualDisplayController io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$1 -> g
    float io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$2 -> h
    io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.f$3 -> i
    1:1:void io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.<init>(io.flutter.plugin.platform.PlatformViewsController$1,io.flutter.plugin.platform.VirtualDisplayController,float,io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewBufferResized):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/r$a;Lio/flutter/plugin/platform/y;FLy2/q$b;)V"}
    1:1:void io.flutter.plugin.platform.PlatformViewsController$1$$InternalSyntheticLambda$3$706094a6c8b071e402a56a55e46fad00e66e930a8a18b2e4b7f26c2dba986503$0.run():0:0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup -> io.flutter.plugin.platform.s:
    android.graphics.Rect viewBounds -> a
    android.graphics.Rect childRect -> b
    1:1:int atMost(int):0:0 -> a
io.flutter.plugin.platform.SingleViewPresentation -> io.flutter.plugin.platform.SingleViewPresentation:
    1:1:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/a;Lio/flutter/plugin/platform/SingleViewPresentation$d;Landroid/view/View$OnFocusChangeListener;Z)V"}
    2:2:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/j;Lio/flutter/plugin/platform/a;ILandroid/view/View$OnFocusChangeListener;)V"}
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout -> io.flutter.plugin.platform.SingleViewPresentation$a:
io.flutter.plugin.platform.SingleViewPresentation$ImmContext -> io.flutter.plugin.platform.SingleViewPresentation$b:
    android.view.inputmethod.InputMethodManager inputMethodManager -> a
    1:1:void <init>(android.content.Context):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.view.inputmethod.InputMethodManager):0:0 -> <init>
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext -> io.flutter.plugin.platform.SingleViewPresentation$c:
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
    android.view.WindowManager windowManager -> b
    android.content.Context flutterAppWindowContext -> c
    1:1:android.view.WindowManager getWindowManager():0:0 -> a
    1:1:boolean isCalledFromAlertDialog():0:0 -> b
io.flutter.plugin.platform.SingleViewPresentation$PresentationState -> io.flutter.plugin.platform.SingleViewPresentation$d:
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowViewGroup -> b
    1:1:io.flutter.plugin.platform.PlatformView access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;)Lio/flutter/plugin/platform/j;"}
    1:1:io.flutter.plugin.platform.PlatformView access$002(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.PlatformView):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;Lio/flutter/plugin/platform/j;)Lio/flutter/plugin/platform/j;"}
    1:1:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;)Lio/flutter/plugin/platform/s;"}
    1:1:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;Lio/flutter/plugin/platform/s;)Lio/flutter/plugin/platform/s;"}
    1:1:io.flutter.plugin.platform.WindowManagerHandler access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;)Lio/flutter/plugin/platform/z;"}
    1:1:io.flutter.plugin.platform.WindowManagerHandler access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.WindowManagerHandler):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/platform/SingleViewPresentation$d;Lio/flutter/plugin/platform/z;)Lio/flutter/plugin/platform/z;"}
io.flutter.plugin.platform.SingleViewWindowManager -> io.flutter.plugin.platform.x:
    android.view.WindowManager delegate -> a
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowRootView -> b
    1:1:void addCrossWindowBlurEnabledListener(java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
    2:2:void addCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.platform.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$573fc38649fc257e28a079cf4377be00db9d882e093f28e1ee82d89fe072ef33$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.platform.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$953a50dd753cf993668a5b905947d63b7720120083cc0cc67dc3ddce466ca3e4$0.m(android.view.WindowManager):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline2 -> io.flutter.plugin.platform.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9b7d142d148c8d8a447edf4d1839198704c3a116777d705c82e3b6107b939476$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline3 -> io.flutter.plugin.platform.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9f3564965ce31d288bde81f28853716eb3fae64fc3aab63ca1d7fbaecc73ea7a$0.m(android.view.WindowManager,java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.VirtualDisplayController -> io.flutter.plugin.platform.y:
    void clearSurface() -> a
    void dispatchTouchEvent(android.view.MotionEvent) -> b
    int getRenderTargetHeight() -> c
    int getRenderTargetWidth() -> d
    android.view.View getView() -> e
    void onInputConnectionLocked() -> f
    void onInputConnectionUnlocked() -> g
    void resetSurface() -> h
    void resize(int,int,java.lang.Runnable) -> i
io.flutter.plugin.platform.WindowManagerHandler -> io.flutter.plugin.platform.z:
io.flutter.plugin.text.ProcessTextPlugin -> c3.c:
    io.flutter.embedding.engine.systemchannels.ProcessTextChannel processTextChannel -> a
    android.content.pm.PackageManager packageManager -> b
    io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding -> c
    java.util.Map resolveInfosById -> d
    java.util.Map requestsByCode -> e
    1:1:void <init>(io.flutter.embedding.engine.systemchannels.ProcessTextChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ly2/r;)V"}
    1:1:boolean onActivityResult(int,int,android.content.Intent):0:0 -> a
    1:1:java.util.Map queryTextActions():0:0 -> b
    1:1:void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw2/c;)V"}
    1:1:void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lw2/c;)V"}
    1:1:void onDetachedFromActivity():0:0 -> e
    1:1:void processTextAction(java.lang.String,java.lang.String,boolean,io.flutter.plugin.common.MethodChannel$Result):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;ZLz2/j$d;)V"}
    1:1:void onDetachedFromActivityForConfigChanges():0:0 -> g
    1:1:void cacheResolveInfos():0:0 -> h
    1:1:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv2/a$b;)V"}
    1:1:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv2/a$b;)V"}
io.flutter.plugin.text.ProcessTextPlugin$$ExternalSyntheticApiModelOutline0 -> c3.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.pm.PackageManager$ResolveInfoFlags io.flutter.plugin.text.ProcessTextPlugin$$InternalSyntheticApiModelOutline$2$dc93043cc68045efc8ccd0a0e7c3269815a87650a2619b2ad812579627478cc8$0.m(long):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.text.ProcessTextPlugin$$ExternalSyntheticApiModelOutline1 -> c3.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.plugin.text.ProcessTextPlugin$$InternalSyntheticApiModelOutline$2$dc93043cc68045efc8ccd0a0e7c3269815a87650a2619b2ad812579627478cc8$1.m(android.content.pm.PackageManager,android.content.Intent,android.content.pm.PackageManager$ResolveInfoFlags):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugins.videoplayer.ExoPlayerEventListener -> d3.a:
    androidx.media3.exoplayer.ExoPlayer exoPlayer -> a
    io.flutter.plugins.videoplayer.VideoPlayerCallbacks events -> b
    boolean isBuffering -> c
    boolean isInitialized -> d
    1:1:void <init>(androidx.media3.exoplayer.ExoPlayer,io.flutter.plugins.videoplayer.VideoPlayerCallbacks,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w;Ld3/w;Z)V"}
    1:1:void onPlaybackSuppressionReasonChanged(int):0:0 -> B
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onTracksChanged(androidx.media3.common.Tracks):0:0 -> C
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l0;)V"}
    1:1:void onPlayerStateChanged(boolean,int):0:0 -> D
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onPlayerError(androidx.media3.common.PlaybackException):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b0;)V"}
    1:1:int getRotationCorrectionFromFormat(androidx.media3.exoplayer.ExoPlayer):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w;)I"}
    1:1:void onPlaybackStateChanged(int):0:0 -> G
    1:1:void onPlayWhenReadyChanged(boolean,int):0:0 -> H
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int getRotationCorrectionFromUnappliedRotation(io.flutter.plugins.videoplayer.ExoPlayerEventListener$RotationDegrees):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/a$a;)I"}
    1:1:void sendInitialized():0:0 -> J
    1:1:void onLoadingChanged(boolean):0:0 -> K
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onDeviceInfoChanged(androidx.media3.common.DeviceInfo):0:0 -> L
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/l;)V"}
    1:1:void onPositionDiscontinuity(int):0:0 -> M
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void setBuffering(boolean):0:0 -> N
    1:1:void onTimelineChanged(androidx.media3.common.Timeline,int):0:0 -> Q
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/i0;I)V"}
    1:1:void onSurfaceSizeChanged(int,int):0:0 -> U
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onAvailableCommandsChanged(androidx.media3.common.Player$Commands):0:0 -> W
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$b;)V"}
    1:1:void onRepeatModeChanged(int):0:0 -> X
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onMediaItemTransition(androidx.media3.common.MediaItem,int):0:0 -> Y
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/u;I)V"}
    1:1:void onIsLoadingChanged(boolean):0:0 -> Z
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onRenderedFirstFrame():0:0 -> b0
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onVideoSizeChanged(androidx.media3.common.VideoSize):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/p0;)V"}
    1:1:void onAudioAttributesChanged(androidx.media3.common.AudioAttributes):0:0 -> c0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)V"}
    1:1:void onSkipSilenceEnabledChanged(boolean):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onEvents(androidx.media3.common.Player,androidx.media3.common.Player$Events):0:0 -> d0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0;Lj/d0$c;)V"}
    1:1:void onMediaMetadataChanged(androidx.media3.common.MediaMetadata):0:0 -> f0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/w;)V"}
    1:1:void onMetadata(androidx.media3.common.Metadata):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/x;)V"}
    1:1:void onVolumeChanged(float):0:0 -> j0
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onCues(androidx.media3.common.text.CueGroup):0:0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;)V"}
    1:1:void onPositionDiscontinuity(androidx.media3.common.Player$PositionInfo,androidx.media3.common.Player$PositionInfo,int):0:0 -> l0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d0$e;Lj/d0$e;I)V"}
    1:1:void onPlayerErrorChanged(androidx.media3.common.PlaybackException):0:0 -> n0
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b0;)V"}
    1:1:void onDeviceVolumeChanged(int,boolean):0:0 -> o0
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void onIsPlayingChanged(boolean):0:0 -> p0
    1:1:void onPlaybackParametersChanged(androidx.media3.common.PlaybackParameters):0:0 -> r
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/c0;)V"}
    1:1:void onCues(java.util.List):0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugins.videoplayer.ExoPlayerEventListener$RotationDegrees -> d3.a$a:
    int degrees -> f
    io.flutter.plugins.videoplayer.ExoPlayerEventListener$RotationDegrees ROTATE_0 -> g
    io.flutter.plugins.videoplayer.ExoPlayerEventListener$RotationDegrees ROTATE_90 -> h
    io.flutter.plugins.videoplayer.ExoPlayerEventListener$RotationDegrees ROTATE_180 -> i
    io.flutter.plugins.videoplayer.ExoPlayerEventListener$RotationDegrees ROTATE_270 -> j
    io.flutter.plugins.videoplayer.ExoPlayerEventListener$RotationDegrees[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int,int):0:0 -> <init>
    1:1:io.flutter.plugins.videoplayer.ExoPlayerEventListener$RotationDegrees[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ld3/a$a;"}
    1:1:io.flutter.plugins.videoplayer.ExoPlayerEventListener$RotationDegrees fromDegrees(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Ld3/a$a;"}
    1:1:int getDegrees():0:0 -> c
    1:1:io.flutter.plugins.videoplayer.ExoPlayerEventListener$RotationDegrees valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ld3/a$a;"}
    1:1:io.flutter.plugins.videoplayer.ExoPlayerEventListener$RotationDegrees[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ld3/a$a;"}
io.flutter.plugins.videoplayer.ExoPlayerState -> d3.b:
    long position -> a
    int repeatMode -> b
    float volume -> c
    androidx.media3.common.PlaybackParameters playbackParameters -> d
    1:1:void <init>(long,int,float,androidx.media3.common.PlaybackParameters):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JIFLj/c0;)V"}
    1:1:void restore(androidx.media3.exoplayer.ExoPlayer):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w;)V"}
    1:1:io.flutter.plugins.videoplayer.ExoPlayerState save(androidx.media3.exoplayer.ExoPlayer):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w;)Ld3/b;"}
io.flutter.plugins.videoplayer.HttpVideoAsset -> d3.c:
    io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat streamingFormat -> b
    java.util.Map httpHeaders -> c
    1:1:void <init>(java.lang.String,io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat,java.util.Map):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ld3/t$a;Ljava/util/Map;)V"}
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory getMediaSourceFactory(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lg0/f0$a;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory getMediaSourceFactory(android.content.Context,androidx.media3.datasource.DefaultHttpDataSource$Factory):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lo/m$b;)Lg0/f0$a;"}
    1:1:void unstableUpdateDataSourceFactory(androidx.media3.datasource.DefaultHttpDataSource$Factory,java.util.Map,java.lang.String):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lo/m$b;Ljava/util/Map;Ljava/lang/String;)V"}
io.flutter.plugins.videoplayer.HttpVideoAsset$1 -> d3.c$a:
    int[] $SwitchMap$io$flutter$plugins$videoplayer$VideoAsset$StreamingFormat -> a
    1:1:void <clinit>():0:0 -> <clinit>
io.flutter.plugins.videoplayer.LocalVideoAsset -> d3.d:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory getMediaSourceFactory(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lg0/f0$a;"}
io.flutter.plugins.videoplayer.Messages -> d3.q:
    1:1:java.util.ArrayList wrapError(java.lang.Throwable):0:0 -> a
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi -> d3.q$a:
    void dispose(java.lang.Long) -> a
    void initialize() -> b
    void setLooping(java.lang.Long,java.lang.Boolean) -> c
    java.lang.Long create(io.flutter.plugins.videoplayer.Messages$CreateMessage) -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$b;)Ljava/lang/Long;"}
    java.lang.Long position(java.lang.Long) -> e
    void setVolume(java.lang.Long,java.lang.Double) -> f
    void seekTo(java.lang.Long,java.lang.Long) -> g
    void setMixWithOthers(java.lang.Boolean) -> h
    void pause(java.lang.Long) -> j
    void play(java.lang.Long) -> l
    void setPlaybackSpeed(java.lang.Long,java.lang.Double) -> m
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$ExternalSyntheticLambda0 -> d3.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$0.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$0.<init>(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$0.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$ExternalSyntheticLambda1 -> d3.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$10.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$10.<init>(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$10.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$ExternalSyntheticLambda10 -> d3.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$9.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$9.<init>(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$9.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$ExternalSyntheticLambda2 -> d3.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$1.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$1.<init>(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$1.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$ExternalSyntheticLambda3 -> d3.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$2.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$2.<init>(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$2.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$ExternalSyntheticLambda4 -> d3.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$3.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$3.<init>(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$3.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$ExternalSyntheticLambda5 -> d3.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$4.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$4.<init>(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$4.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$ExternalSyntheticLambda6 -> d3.l:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$5.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$5.<init>(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$5.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$ExternalSyntheticLambda7 -> d3.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$6.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$6.<init>(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$6.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$ExternalSyntheticLambda8 -> d3.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$7.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$7.<init>(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$7.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$ExternalSyntheticLambda9 -> d3.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$8.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$8.<init>(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$$InternalSyntheticLambda$4$49aa4e97cfc8b1f40a07bb762ec29c2282eadba70480cbdb4327cc492f5eed80$8.onMessage(java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/a$e;)V"}
io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi$-CC -> d3.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:3:io.flutter.plugin.common.MessageCodec io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.getCodec():0:0 -> a
    1:3:io.flutter.plugin.common.MessageCodec getCodec():0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz2/h;"}
    1:23:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.lambda$setUp$0(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> b
    1:23:void lambda$setUp$0(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;Ljava/lang/Object;Lz2/a$e;)V"}
    1:31:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.lambda$setUp$1(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> c
    1:31:void lambda$setUp$1(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;Ljava/lang/Object;Lz2/a$e;)V"}
    1:31:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.lambda$setUp$10(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> d
    1:31:void lambda$setUp$10(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;Ljava/lang/Object;Lz2/a$e;)V"}
    1:31:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.lambda$setUp$2(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> e
    1:31:void lambda$setUp$2(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;Ljava/lang/Object;Lz2/a$e;)V"}
    1:38:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.lambda$setUp$3(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> f
    1:38:void lambda$setUp$3(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;Ljava/lang/Object;Lz2/a$e;)V"}
    1:38:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.lambda$setUp$4(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> g
    1:38:void lambda$setUp$4(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;Ljava/lang/Object;Lz2/a$e;)V"}
    1:38:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.lambda$setUp$5(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> h
    1:38:void lambda$setUp$5(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;Ljava/lang/Object;Lz2/a$e;)V"}
    1:31:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.lambda$setUp$6(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> i
    1:31:void lambda$setUp$6(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;Ljava/lang/Object;Lz2/a$e;)V"}
    1:31:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.lambda$setUp$7(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> j
    1:31:void lambda$setUp$7(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;Ljava/lang/Object;Lz2/a$e;)V"}
    1:38:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.lambda$setUp$8(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> k
    1:38:void lambda$setUp$8(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;Ljava/lang/Object;Lz2/a$e;)V"}
    1:31:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.lambda$setUp$9(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0:0 -> l
    1:31:void lambda$setUp$9(io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi,java.lang.Object,io.flutter.plugin.common.BasicMessageChannel$Reply):0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$a;Ljava/lang/Object;Lz2/a$e;)V"}
    3:6:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.setUp(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> m
    3:6:void setUp(io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;Ld3/q$a;)V"}
    1:1:void io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi.setUp(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0:0 -> n
    1:1:void setUp(io.flutter.plugin.common.BinaryMessenger,java.lang.String,io.flutter.plugins.videoplayer.Messages$AndroidVideoPlayerApi):0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;Ljava/lang/String;Ld3/q$a;)V"}
io.flutter.plugins.videoplayer.Messages$CreateMessage -> d3.q$b:
    java.lang.String asset -> a
    java.lang.String uri -> b
    java.lang.String packageName -> c
    java.lang.String formatHint -> d
    java.util.Map httpHeaders -> e
    void <init>() -> <init>
    1:1:io.flutter.plugins.videoplayer.Messages$CreateMessage fromList(java.util.ArrayList):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/ArrayList;)Ld3/q$b;"}
    1:1:java.lang.String getAsset():0:0 -> b
    1:1:java.lang.String getFormatHint():0:0 -> c
    1:1:java.util.Map getHttpHeaders():0:0 -> d
    1:1:java.lang.String getPackageName():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.String getUri():0:0 -> f
    1:1:void setAsset(java.lang.String):0:0 -> g
    1:1:void setFormatHint(java.lang.String):0:0 -> h
    1:1:int hashCode():0:0 -> hashCode
    1:1:void setHttpHeaders(java.util.Map):0:0 -> i
    1:1:void setPackageName(java.lang.String):0:0 -> j
    1:1:void setUri(java.lang.String):0:0 -> k
    1:1:java.util.ArrayList toList():0:0 -> l
io.flutter.plugins.videoplayer.Messages$PigeonCodec -> d3.q$c:
    io.flutter.plugins.videoplayer.Messages$PigeonCodec INSTANCE -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object readValueOfType(byte,java.nio.ByteBuffer):0:0 -> g
    1:1:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> p
io.flutter.plugins.videoplayer.QueuingEventSink -> d3.r:
    io.flutter.plugin.common.EventChannel$EventSink delegate -> a
    java.util.ArrayList eventQueue -> b
    boolean done -> c
    1:1:void <init>():0:0 -> <init>
    1:1:void error(java.lang.String,java.lang.String,java.lang.Object):0:0 -> a
    1:1:void success(java.lang.Object):0:0 -> b
    1:1:void endOfStream():0:0 -> c
    1:1:void enqueue(java.lang.Object):0:0 -> d
    1:1:void maybeFlush():0:0 -> e
    1:1:void setDelegate(io.flutter.plugin.common.EventChannel$EventSink):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c$b;)V"}
io.flutter.plugins.videoplayer.QueuingEventSink$EndOfStreamEvent -> d3.r$a:
    void <init>() -> <init>
io.flutter.plugins.videoplayer.QueuingEventSink$ErrorEvent -> d3.r$b:
    java.lang.String code -> a
    java.lang.String message -> b
    java.lang.Object details -> c
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.Object):0:0 -> <init>
io.flutter.plugins.videoplayer.RtspVideoAsset -> d3.s:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:androidx.media3.common.MediaItem getMediaItem():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    1:1:androidx.media3.exoplayer.source.MediaSource$Factory getMediaSourceFactory(android.content.Context):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lg0/f0$a;"}
io.flutter.plugins.videoplayer.VideoAsset -> d3.t:
    java.lang.String assetUrl -> a
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:io.flutter.plugins.videoplayer.VideoAsset fromAssetUrl(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ld3/t;"}
    1:1:io.flutter.plugins.videoplayer.VideoAsset fromRemoteUrl(java.lang.String,io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat,java.util.Map):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ld3/t$a;Ljava/util/Map;)Ld3/t;"}
    1:1:io.flutter.plugins.videoplayer.VideoAsset fromRtspUrl(java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ld3/t;"}
    androidx.media3.common.MediaItem getMediaItem() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/u;"}
    androidx.media3.exoplayer.source.MediaSource$Factory getMediaSourceFactory(android.content.Context) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lg0/f0$a;"}
io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat -> d3.t$a:
    io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat UNKNOWN -> f
    io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat SMOOTH -> g
    io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat DYNAMIC_ADAPTIVE -> h
    io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat HTTP_LIVE -> i
    io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ld3/t$a;"}
    1:1:io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Ld3/t$a;"}
    1:1:io.flutter.plugins.videoplayer.VideoAsset$StreamingFormat[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Ld3/t$a;"}
io.flutter.plugins.videoplayer.VideoPlayer -> d3.v:
    io.flutter.plugins.videoplayer.VideoPlayer$ExoPlayerProvider exoPlayerProvider -> a
    androidx.media3.common.MediaItem mediaItem -> b
    io.flutter.view.TextureRegistry$SurfaceProducer surfaceProducer -> c
    io.flutter.plugins.videoplayer.VideoPlayerCallbacks videoPlayerEvents -> d
    io.flutter.plugins.videoplayer.VideoPlayerOptions options -> e
    androidx.media3.exoplayer.ExoPlayer exoPlayer -> f
    io.flutter.plugins.videoplayer.ExoPlayerState savedStateDuring -> g
    1:1:void <init>(io.flutter.plugins.videoplayer.VideoPlayer$ExoPlayerProvider,io.flutter.plugins.videoplayer.VideoPlayerCallbacks,io.flutter.view.TextureRegistry$SurfaceProducer,androidx.media3.common.MediaItem,io.flutter.plugins.videoplayer.VideoPlayerOptions):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/v$a;Ld3/w;Lio/flutter/view/TextureRegistry$SurfaceProducer;Lj/u;Ld3/y;)V"}
    1:1:void onSurfaceDestroyed():0:0 -> a
    1:1:void onSurfaceCreated():0:0 -> b
    1:1:androidx.media3.exoplayer.ExoPlayer $r8$lambda$ufTJ_o32pBEKt13FyZWxrAcxD2w(android.content.Context,io.flutter.plugins.videoplayer.VideoAsset):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ld3/t;)Lq/w;"}
    1:1:io.flutter.plugins.videoplayer.VideoPlayer create(android.content.Context,io.flutter.plugins.videoplayer.VideoPlayerCallbacks,io.flutter.view.TextureRegistry$SurfaceProducer,io.flutter.plugins.videoplayer.VideoAsset,io.flutter.plugins.videoplayer.VideoPlayerOptions):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ld3/w;Lio/flutter/view/TextureRegistry$SurfaceProducer;Ld3/t;Ld3/y;)Ld3/v;"}
    1:1:androidx.media3.exoplayer.ExoPlayer createVideoPlayer():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/w;"}
    1:1:void dispose():0:0 -> f
    1:1:long getPosition():0:0 -> g
    1:1:androidx.media3.exoplayer.ExoPlayer lambda$create$0(android.content.Context,io.flutter.plugins.videoplayer.VideoAsset):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ld3/t;)Lq/w;"}
    1:1:void pause():0:0 -> i
    1:1:void play():0:0 -> j
    1:1:void seekTo(int):0:0 -> k
    1:1:void sendBufferingUpdate():0:0 -> l
    1:1:void setAudioAttributes(androidx.media3.exoplayer.ExoPlayer,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/w;Z)V"}
    1:1:void setLooping(boolean):0:0 -> n
    1:1:void setPlaybackSpeed(double):0:0 -> o
    1:1:void setVolume(double):0:0 -> p
io.flutter.plugins.videoplayer.VideoPlayer$$ExternalSyntheticLambda0 -> d3.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.content.Context io.flutter.plugins.videoplayer.VideoPlayer$$InternalSyntheticLambda$6$1574c993f9e52ecb1acdf16e16e51eed443488ddd65a73a626d21a68729d73a8$0.f$0 -> a
    io.flutter.plugins.videoplayer.VideoAsset io.flutter.plugins.videoplayer.VideoPlayer$$InternalSyntheticLambda$6$1574c993f9e52ecb1acdf16e16e51eed443488ddd65a73a626d21a68729d73a8$0.f$1 -> b
    1:1:void io.flutter.plugins.videoplayer.VideoPlayer$$InternalSyntheticLambda$6$1574c993f9e52ecb1acdf16e16e51eed443488ddd65a73a626d21a68729d73a8$0.<init>(android.content.Context,io.flutter.plugins.videoplayer.VideoAsset):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ld3/t;)V"}
    1:1:androidx.media3.exoplayer.ExoPlayer io.flutter.plugins.videoplayer.VideoPlayer$$InternalSyntheticLambda$6$1574c993f9e52ecb1acdf16e16e51eed443488ddd65a73a626d21a68729d73a8$0.get():0:0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/w;"}
io.flutter.plugins.videoplayer.VideoPlayer$ExoPlayerProvider -> d3.v$a:
    androidx.media3.exoplayer.ExoPlayer get() -> get
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq/w;"}
io.flutter.plugins.videoplayer.VideoPlayerCallbacks -> d3.w:
    void onBufferingUpdate(long) -> a
    void onError(java.lang.String,java.lang.String,java.lang.Object) -> b
    void onBufferingEnd() -> c
    void onBufferingStart() -> d
    void onIsPlayingStateUpdate(boolean) -> e
    void onInitialized(int,int,long,int) -> f
    void onCompleted() -> g
io.flutter.plugins.videoplayer.VideoPlayerEventCallbacks -> d3.x:
    io.flutter.plugin.common.EventChannel$EventSink eventSink -> a
    1:1:void <init>(io.flutter.plugin.common.EventChannel$EventSink):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c$b;)V"}
    1:1:void onBufferingUpdate(long):0:0 -> a
    1:1:void onError(java.lang.String,java.lang.String,java.lang.Object):0:0 -> b
    1:1:void onBufferingEnd():0:0 -> c
    1:1:void onBufferingStart():0:0 -> d
    1:1:void onIsPlayingStateUpdate(boolean):0:0 -> e
    1:1:void onInitialized(int,int,long,int):0:0 -> f
    1:1:void onCompleted():0:0 -> g
    1:1:io.flutter.plugins.videoplayer.VideoPlayerEventCallbacks bindTo(io.flutter.plugin.common.EventChannel):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c;)Ld3/x;"}
    1:1:io.flutter.plugins.videoplayer.VideoPlayerEventCallbacks withSink(io.flutter.plugin.common.EventChannel$EventSink):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/c$b;)Ld3/x;"}
io.flutter.plugins.videoplayer.VideoPlayerEventCallbacks$1 -> d3.x$a:
    io.flutter.plugins.videoplayer.QueuingEventSink val$eventSink -> a
    1:1:void <init>(io.flutter.plugins.videoplayer.QueuingEventSink):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/r;)V"}
    1:1:void onCancel(java.lang.Object):0:0 -> a
    1:1:void onListen(java.lang.Object,io.flutter.plugin.common.EventChannel$EventSink):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz2/c$b;)V"}
io.flutter.plugins.videoplayer.VideoPlayerOptions -> d3.y:
    boolean mixWithOthers -> a
    void <init>() -> <init>
io.flutter.plugins.videoplayer.VideoPlayerPlugin -> d3.b0:
    android.util.LongSparseArray videoPlayers -> a
    io.flutter.plugins.videoplayer.VideoPlayerPlugin$FlutterState flutterState -> b
    io.flutter.plugins.videoplayer.VideoPlayerOptions options -> c
    1:1:void <init>():0:0 -> <init>
    1:1:void dispose(java.lang.Long):0:0 -> a
    1:1:void initialize():0:0 -> b
    1:1:void setLooping(java.lang.Long,java.lang.Boolean):0:0 -> c
    1:1:java.lang.Long create(io.flutter.plugins.videoplayer.Messages$CreateMessage):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/q$b;)Ljava/lang/Long;"}
    1:1:java.lang.Long position(java.lang.Long):0:0 -> e
    1:1:void setVolume(java.lang.Long,java.lang.Double):0:0 -> f
    1:1:void seekTo(java.lang.Long,java.lang.Long):0:0 -> g
    1:1:void setMixWithOthers(java.lang.Boolean):0:0 -> h
    1:1:void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv2/a$b;)V"}
    1:1:void pause(java.lang.Long):0:0 -> j
    1:1:void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv2/a$b;)V"}
    1:1:void play(java.lang.Long):0:0 -> l
    1:1:void setPlaybackSpeed(java.lang.Long,java.lang.Double):0:0 -> m
    1:1:void disposeAllPlayers():0:0 -> n
    1:1:io.flutter.plugins.videoplayer.VideoPlayer getPlayer(long):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Ld3/v;"}
    1:1:void onDestroy():0:0 -> p
io.flutter.plugins.videoplayer.VideoPlayerPlugin$$ExternalSyntheticLambda0 -> d3.z:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.loader.FlutterLoader io.flutter.plugins.videoplayer.VideoPlayerPlugin$$InternalSyntheticLambda$1$07642a70ccc2244c732cdca90fa00146a4369d915341ef85f3bab6f70af94198$0.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.VideoPlayerPlugin$$InternalSyntheticLambda$1$07642a70ccc2244c732cdca90fa00146a4369d915341ef85f3bab6f70af94198$0.<init>(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d;)V"}
    1:1:java.lang.String io.flutter.plugins.videoplayer.VideoPlayerPlugin$$InternalSyntheticLambda$1$07642a70ccc2244c732cdca90fa00146a4369d915341ef85f3bab6f70af94198$0.get(java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugins.videoplayer.VideoPlayerPlugin$$ExternalSyntheticLambda1 -> d3.a0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.loader.FlutterLoader io.flutter.plugins.videoplayer.VideoPlayerPlugin$$InternalSyntheticLambda$1$07642a70ccc2244c732cdca90fa00146a4369d915341ef85f3bab6f70af94198$1.f$0 -> a
    1:1:void io.flutter.plugins.videoplayer.VideoPlayerPlugin$$InternalSyntheticLambda$1$07642a70ccc2244c732cdca90fa00146a4369d915341ef85f3bab6f70af94198$1.<init>(io.flutter.embedding.engine.loader.FlutterLoader):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lt2/d;)V"}
    1:1:java.lang.String io.flutter.plugins.videoplayer.VideoPlayerPlugin$$InternalSyntheticLambda$1$07642a70ccc2244c732cdca90fa00146a4369d915341ef85f3bab6f70af94198$1.get(java.lang.String,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugins.videoplayer.VideoPlayerPlugin$FlutterState -> d3.b0$a:
    android.content.Context applicationContext -> a
    io.flutter.plugin.common.BinaryMessenger binaryMessenger -> b
    io.flutter.plugins.videoplayer.VideoPlayerPlugin$KeyForAssetFn keyForAsset -> c
    io.flutter.plugins.videoplayer.VideoPlayerPlugin$KeyForAssetAndPackageName keyForAssetAndPackageName -> d
    io.flutter.view.TextureRegistry textureRegistry -> e
    1:1:void <init>(android.content.Context,io.flutter.plugin.common.BinaryMessenger,io.flutter.plugins.videoplayer.VideoPlayerPlugin$KeyForAssetFn,io.flutter.plugins.videoplayer.VideoPlayerPlugin$KeyForAssetAndPackageName,io.flutter.view.TextureRegistry):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Lz2/b;Ld3/b0$c;Ld3/b0$b;Lio/flutter/view/TextureRegistry;)V"}
    1:1:void startListening(io.flutter.plugins.videoplayer.VideoPlayerPlugin,io.flutter.plugin.common.BinaryMessenger):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld3/b0;Lz2/b;)V"}
    1:1:void stopListening(io.flutter.plugin.common.BinaryMessenger):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz2/b;)V"}
io.flutter.plugins.videoplayer.VideoPlayerPlugin$KeyForAssetAndPackageName -> d3.b0$b:
    java.lang.String get(java.lang.String,java.lang.String) -> a
io.flutter.plugins.videoplayer.VideoPlayerPlugin$KeyForAssetFn -> d3.b0$c:
    java.lang.String get(java.lang.String) -> a
io.flutter.util.HandlerCompat -> e3.a:
    1:1:android.os.Handler createAsyncHandler(android.os.Looper):0:0 -> a
io.flutter.util.PathUtils -> e3.c:
    1:1:java.lang.String getCacheDirectory(android.content.Context):0:0 -> a
    1:1:java.lang.String getDataDirPath(android.content.Context):0:0 -> b
    1:1:java.lang.String getDataDirectory(android.content.Context):0:0 -> c
    1:1:java.lang.String getFilesDir(android.content.Context):0:0 -> d
io.flutter.util.PathUtils$$ExternalSyntheticApiModelOutline0 -> e3.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.io.File io.flutter.util.PathUtils$$InternalSyntheticApiModelOutline$2$c91e5e777cb21248c695a4194b0ebdf6921bd06a45d71c0191b2ba57388c3c5c$0.m(android.content.Context):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.util.Preconditions -> e3.d:
    1:1:void checkState(boolean,java.lang.Object):0:0 -> a
io.flutter.util.Predicate -> e3.e:
    boolean test(java.lang.Object) -> test
io.flutter.util.TraceSection -> e3.f:
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:void begin(java.lang.String):0:0 -> a
    1:1:void beginAsyncSection(java.lang.String,int):0:0 -> b
    1:1:java.lang.String cropSectionName(java.lang.String):0:0 -> c
    1:1:void close():0:0 -> close
    1:1:void end():0:0 -> d
    1:1:void endAsyncSection(java.lang.String,int):0:0 -> e
    1:1:io.flutter.util.TraceSection scoped(java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le3/f;"}
io.flutter.util.ViewUtils -> e3.g:
    1:1:void calculateMaximumDisplayMetrics(android.content.Context,io.flutter.util.ViewUtils$DisplayUpdater):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Le3/g$a;)V"}
    1:1:android.app.Activity getActivity(android.content.Context):0:0 -> b
io.flutter.util.ViewUtils$DisplayUpdater -> e3.g$a:
    void updateDisplayMetrics(float,float,float) -> a
io.flutter.view.AccessibilityBridge -> io.flutter.view.l:
    int FOCUSABLE_FLAGS -> A
    int FIRST_RESOURCE_ID -> B
    int systemAction -> C
    android.view.View rootAccessibilityView -> a
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel accessibilityChannel -> b
    android.view.accessibility.AccessibilityManager accessibilityManager -> c
    io.flutter.view.AccessibilityViewEmbedder accessibilityViewEmbedder -> d
    io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate platformViewsAccessibilityDelegate -> e
    android.content.ContentResolver contentResolver -> f
    java.util.Map flutterSemanticsTree -> g
    java.util.Map customAccessibilityActions -> h
    io.flutter.view.AccessibilityBridge$SemanticsNode accessibilityFocusedSemanticsNode -> i
    java.lang.Integer embeddedAccessibilityFocusedNodeId -> j
    java.lang.Integer embeddedInputFocusedNodeId -> k
    int accessibilityFeatureFlags -> l
    io.flutter.view.AccessibilityBridge$SemanticsNode inputFocusedSemanticsNode -> m
    io.flutter.view.AccessibilityBridge$SemanticsNode lastInputFocusedSemanticsNode -> n
    io.flutter.view.AccessibilityBridge$SemanticsNode hoveredObject -> o
    java.util.List flutterNavigationStack -> p
    int previousRouteId -> q
    java.lang.Integer lastLeftFrameInset -> r
    io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener onAccessibilityChangeListener -> s
    boolean accessibleNavigation -> t
    boolean isReleased -> u
    io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler accessibilityMessageHandler -> v
    android.view.accessibility.AccessibilityManager$AccessibilityStateChangeListener accessibilityStateChangeListener -> w
    android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener touchExplorationStateChangeListener -> x
    android.database.ContentObserver animationScaleObserver -> y
    int SCROLLABLE_ACTIONS -> z
    1:1:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ly2/a;Landroid/view/accessibility/AccessibilityManager;Landroid/content/ContentResolver;Lio/flutter/plugin/platform/o;)V"}
    2:2:void <init>(android.view.View,io.flutter.embedding.engine.systemchannels.AccessibilityChannel,android.view.accessibility.AccessibilityManager,android.content.ContentResolver,io.flutter.view.AccessibilityViewEmbedder,io.flutter.plugin.platform.PlatformViewsAccessibilityDelegate):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;Ly2/a;Landroid/view/accessibility/AccessibilityManager;Landroid/content/ContentResolver;Lio/flutter/view/AccessibilityViewEmbedder;Lio/flutter/plugin/platform/o;)V"}
    1:1:void handleTouchExploration(float,float,boolean):0:0 -> A
    1:1:boolean isAccessibilityEnabled():0:0 -> B
    1:1:boolean isImportant(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean isTouchExplorationEnabled():0:0 -> D
    1:1:boolean lambda$shouldSetCollectionInfo$0(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$l;)Z"}
    1:1:boolean lambda$shouldSetCollectionInfo$1(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int):0:0 -> G
    1:1:android.view.accessibility.AccessibilityEvent obtainAccessibilityEvent(int,int):0:0 -> H
    1:1:android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View):0:0 -> I
    1:1:android.view.accessibility.AccessibilityNodeInfo obtainAccessibilityNodeInfo(android.view.View,int):0:0 -> J
    1:1:boolean onAccessibilityHoverEvent(android.view.MotionEvent):0:0 -> K
    1:1:boolean onAccessibilityHoverEvent(android.view.MotionEvent,boolean):0:0 -> L
    1:1:void onTouchExplorationExit():0:0 -> M
    1:1:void onWindowNameChange(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)V"}
    1:1:boolean performCursorMoveAction(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle,boolean):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;ILandroid/os/Bundle;Z)Z"}
    1:1:boolean performSetText(io.flutter.view.AccessibilityBridge$SemanticsNode,int,android.os.Bundle):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;ILandroid/os/Bundle;)Z"}
    1:1:void predictCursorMovement(io.flutter.view.AccessibilityBridge$SemanticsNode,int,boolean,boolean):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;IZZ)V"}
    1:1:void release():0:0 -> R
    1:1:void sendAccessibilityEvent(int,int):0:0 -> S
    1:1:void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent):0:0 -> T
    1:1:void sendLatestAccessibilityFlagsToFlutter():0:0 -> U
    1:1:void sendWindowContentChangeEvent(int):0:0 -> V
    1:1:void setAccessibilityPaneTitle(java.lang.String):0:0 -> W
    1:1:void setAccessibleNavigation(boolean):0:0 -> X
    1:1:void setBoldTextFlag():0:0 -> Y
    1:1:void setOnAccessibilityChangeListener(io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$k;)V"}
    1:1:boolean $r8$lambda$YZB7OHASiHhGuAwlsDaF5NL1-OU(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean shouldSetCollectionInfo(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean $r8$lambda$rCW4KhEHJoU73TZTzdmyAQLb0vw(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$l;)Z"}
    1:1:void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]):0:0 -> b0
    1:1:android.view.View access$100(io.flutter.view.AccessibilityBridge):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Landroid/view/View;"}
    1:1:void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> c0
    1:1:android.content.ContentResolver access$1000(io.flutter.view.AccessibilityBridge):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Landroid/content/ContentResolver;"}
    1:1:void willRemoveSemanticsNode(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)V"}
    1:1:int access$1172(io.flutter.view.AccessibilityBridge,int):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)I"}
    1:1:int access$1176(io.flutter.view.AccessibilityBridge,int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)I"}
    1:1:void access$1200(io.flutter.view.AccessibilityBridge):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    1:1:void access$1300(io.flutter.view.AccessibilityBridge):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)V"}
    1:1:android.view.accessibility.AccessibilityEvent access$200(io.flutter.view.AccessibilityBridge,int,int):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;II)Landroid/view/accessibility/AccessibilityEvent;"}
    1:1:void access$300(io.flutter.view.AccessibilityBridge,android.view.accessibility.AccessibilityEvent):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;Landroid/view/accessibility/AccessibilityEvent;)V"}
    1:1:boolean access$400(io.flutter.view.AccessibilityBridge):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Z"}
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel$AccessibilityMessageHandler access$500(io.flutter.view.AccessibilityBridge):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Ly2/a$b;"}
    1:1:io.flutter.embedding.engine.systemchannels.AccessibilityChannel access$600(io.flutter.view.AccessibilityBridge):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Ly2/a;"}
    1:1:void access$700(io.flutter.view.AccessibilityBridge,boolean):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;Z)V"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$7000(io.flutter.view.AccessibilityBridge,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)Lio/flutter/view/l$l;"}
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$7100(io.flutter.view.AccessibilityBridge,int):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;I)Lio/flutter/view/l$h;"}
    1:1:int access$7400():0:0 -> q
    1:1:int access$7500():0:0 -> r
    1:1:io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener access$800(io.flutter.view.AccessibilityBridge):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Lio/flutter/view/l$k;"}
    1:1:android.view.accessibility.AccessibilityManager access$900(io.flutter.view.AccessibilityBridge):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l;)Landroid/view/accessibility/AccessibilityManager;"}
    1:1:android.view.accessibility.AccessibilityEvent createTextChangedEvent(int,java.lang.String,java.lang.String):0:0 -> u
    1:1:boolean doesLayoutInDisplayCutoutModeRequireLeftInset():0:0 -> v
    1:1:android.graphics.Rect getBoundsInScreen(android.graphics.Rect):0:0 -> w
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction getOrCreateAccessibilityAction(int):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lio/flutter/view/l$h;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode getOrCreateSemanticsNode(int):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lio/flutter/view/l$l;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode getRootSemanticsNode():0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/view/l$l;"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline0 -> io.flutter.view.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$57f3d27dd81c9c0c9cb3f040a2bc2f4ed710e0754977b37dad43901665f0d5da$0.m(android.content.res.Configuration):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline1 -> io.flutter.view.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$969d1d15ebd1ecc79248d7e183a1573114e6c0da06897b17061c4ac59ef7fb41$0.m(android.view.View):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline2 -> io.flutter.view.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$0.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline3 -> io.flutter.view.d:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$2.m(android.view.accessibility.AccessibilityNodeInfo,android.view.View,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline4 -> io.flutter.view.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$3.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline5 -> io.flutter.view.f:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$4.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline6 -> io.flutter.view.g:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$1$cb6fc7fa606cdd24faccdeb3ee16ec3c57878be3ea147301bfb824e341182070$5.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline7 -> io.flutter.view.h:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$2$55564eb321b33ff5930e54c9297f28898a6bb281bf60848001096cf5a3b01a74$0.m(android.view.View,java.lang.CharSequence):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticApiModelOutline8 -> io.flutter.view.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityBridge$$InternalSyntheticApiModelOutline$2$c67eedf3b68f03bc228175118b5b0c43d36ae01689b1e7247ea04402d47da507$0.m(android.view.WindowManager$LayoutParams):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticLambda10 -> io.flutter.view.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$1.test(java.lang.Object):0:0 -> test
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$$ExternalSyntheticLambda9 -> io.flutter.view.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.view.AccessibilityBridge$SemanticsNode io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$0.f$0 -> a
    1:1:void io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$0.<init>(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)V"}
    1:1:boolean io.flutter.view.AccessibilityBridge$$InternalSyntheticLambda$2$ab86a6a690ec9dc6f1378ff23b45b494234a02a0fc2e0e7fff7a6cc803388d3e$0.test(java.lang.Object):0:0 -> test
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityBridge$1 -> io.flutter.view.l$a:
    io.flutter.view.AccessibilityBridge this$0 -> a
    1:1:void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> a
    1:1:void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[]):0:0 -> b
    1:1:void onTooltip(java.lang.String):0:0 -> c
    1:1:void onFocus(int):0:0 -> d
    1:1:void onLongPress(int):0:0 -> e
    1:1:void announce(java.lang.String):0:0 -> f
    1:1:void onTap(int):0:0 -> g
io.flutter.view.AccessibilityBridge$2 -> io.flutter.view.l$b:
    io.flutter.view.AccessibilityBridge this$0 -> a
io.flutter.view.AccessibilityBridge$3 -> io.flutter.view.l$c:
    io.flutter.view.AccessibilityBridge this$0 -> a
    1:1:void onChange(boolean):0:0 -> onChange
    2:2:void onChange(boolean,android.net.Uri):0:0 -> onChange
io.flutter.view.AccessibilityBridge$4 -> io.flutter.view.l$d:
    android.view.accessibility.AccessibilityManager val$accessibilityManager -> a
    io.flutter.view.AccessibilityBridge this$0 -> b
io.flutter.view.AccessibilityBridge$5 -> io.flutter.view.l$e:
    int[] $SwitchMap$io$flutter$view$AccessibilityBridge$StringAttributeType -> a
io.flutter.view.AccessibilityBridge$AccessibilityFeature -> io.flutter.view.l$f:
    int value -> f
    io.flutter.view.AccessibilityBridge$AccessibilityFeature ACCESSIBLE_NAVIGATION -> g
    io.flutter.view.AccessibilityBridge$AccessibilityFeature INVERT_COLORS -> h
    io.flutter.view.AccessibilityBridge$AccessibilityFeature DISABLE_ANIMATIONS -> i
    io.flutter.view.AccessibilityBridge$AccessibilityFeature BOLD_TEXT -> j
    io.flutter.view.AccessibilityBridge$AccessibilityFeature REDUCE_MOTION -> k
    io.flutter.view.AccessibilityBridge$AccessibilityFeature HIGH_CONTRAST -> l
    io.flutter.view.AccessibilityBridge$AccessibilityFeature ON_OFF_SWITCH_LABELS -> m
    io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $VALUES -> n
    1:1:io.flutter.view.AccessibilityBridge$AccessibilityFeature[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$f;"}
io.flutter.view.AccessibilityBridge$Action -> io.flutter.view.l$g:
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_WORD -> A
    io.flutter.view.AccessibilityBridge$Action SET_TEXT -> B
    io.flutter.view.AccessibilityBridge$Action FOCUS -> C
    io.flutter.view.AccessibilityBridge$Action[] $VALUES -> D
    int value -> f
    io.flutter.view.AccessibilityBridge$Action TAP -> g
    io.flutter.view.AccessibilityBridge$Action LONG_PRESS -> h
    io.flutter.view.AccessibilityBridge$Action SCROLL_LEFT -> i
    io.flutter.view.AccessibilityBridge$Action SCROLL_RIGHT -> j
    io.flutter.view.AccessibilityBridge$Action SCROLL_UP -> k
    io.flutter.view.AccessibilityBridge$Action SCROLL_DOWN -> l
    io.flutter.view.AccessibilityBridge$Action INCREASE -> m
    io.flutter.view.AccessibilityBridge$Action DECREASE -> n
    io.flutter.view.AccessibilityBridge$Action SHOW_ON_SCREEN -> o
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_CHARACTER -> p
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_BACKWARD_BY_CHARACTER -> q
    io.flutter.view.AccessibilityBridge$Action SET_SELECTION -> r
    io.flutter.view.AccessibilityBridge$Action COPY -> s
    io.flutter.view.AccessibilityBridge$Action CUT -> t
    io.flutter.view.AccessibilityBridge$Action PASTE -> u
    io.flutter.view.AccessibilityBridge$Action DID_GAIN_ACCESSIBILITY_FOCUS -> v
    io.flutter.view.AccessibilityBridge$Action DID_LOSE_ACCESSIBILITY_FOCUS -> w
    io.flutter.view.AccessibilityBridge$Action CUSTOM_ACTION -> x
    io.flutter.view.AccessibilityBridge$Action DISMISS -> y
    io.flutter.view.AccessibilityBridge$Action MOVE_CURSOR_FORWARD_BY_WORD -> z
    1:1:io.flutter.view.AccessibilityBridge$Action[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$g;"}
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction -> io.flutter.view.l$h:
    int resourceId -> a
    int id -> b
    int overrideId -> c
    java.lang.String label -> d
    java.lang.String hint -> e
    1:1:java.lang.String access$3000(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)Ljava/lang/String;"}
    1:1:java.lang.String access$3002(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:int access$3700(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)I"}
    1:1:int access$3702(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;I)I"}
    1:1:java.lang.String access$3800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)Ljava/lang/String;"}
    1:1:java.lang.String access$3802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,java.lang.String):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:int access$4600(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)I"}
    1:1:int access$4602(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;I)I"}
    1:1:int access$4800(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;)I"}
    1:1:int access$4802(io.flutter.view.AccessibilityBridge$CustomAccessibilityAction,int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$h;I)I"}
io.flutter.view.AccessibilityBridge$Flag -> io.flutter.view.l$i:
    io.flutter.view.AccessibilityBridge$Flag IS_READ_ONLY -> A
    io.flutter.view.AccessibilityBridge$Flag IS_FOCUSABLE -> B
    io.flutter.view.AccessibilityBridge$Flag IS_LINK -> C
    io.flutter.view.AccessibilityBridge$Flag IS_SLIDER -> D
    io.flutter.view.AccessibilityBridge$Flag IS_KEYBOARD_KEY -> E
    io.flutter.view.AccessibilityBridge$Flag IS_CHECK_STATE_MIXED -> F
    io.flutter.view.AccessibilityBridge$Flag HAS_EXPANDED_STATE -> G
    io.flutter.view.AccessibilityBridge$Flag IS_EXPANDED -> H
    io.flutter.view.AccessibilityBridge$Flag[] $VALUES -> I
    int value -> f
    io.flutter.view.AccessibilityBridge$Flag HAS_CHECKED_STATE -> g
    io.flutter.view.AccessibilityBridge$Flag IS_CHECKED -> h
    io.flutter.view.AccessibilityBridge$Flag IS_SELECTED -> i
    io.flutter.view.AccessibilityBridge$Flag IS_BUTTON -> j
    io.flutter.view.AccessibilityBridge$Flag IS_TEXT_FIELD -> k
    io.flutter.view.AccessibilityBridge$Flag IS_FOCUSED -> l
    io.flutter.view.AccessibilityBridge$Flag HAS_ENABLED_STATE -> m
    io.flutter.view.AccessibilityBridge$Flag IS_ENABLED -> n
    io.flutter.view.AccessibilityBridge$Flag IS_IN_MUTUALLY_EXCLUSIVE_GROUP -> o
    io.flutter.view.AccessibilityBridge$Flag IS_HEADER -> p
    io.flutter.view.AccessibilityBridge$Flag IS_OBSCURED -> q
    io.flutter.view.AccessibilityBridge$Flag SCOPES_ROUTE -> r
    io.flutter.view.AccessibilityBridge$Flag NAMES_ROUTE -> s
    io.flutter.view.AccessibilityBridge$Flag IS_HIDDEN -> t
    io.flutter.view.AccessibilityBridge$Flag IS_IMAGE -> u
    io.flutter.view.AccessibilityBridge$Flag IS_LIVE_REGION -> v
    io.flutter.view.AccessibilityBridge$Flag HAS_TOGGLED_STATE -> w
    io.flutter.view.AccessibilityBridge$Flag IS_TOGGLED -> x
    io.flutter.view.AccessibilityBridge$Flag HAS_IMPLICIT_SCROLLING -> y
    io.flutter.view.AccessibilityBridge$Flag IS_MULTILINE -> z
    1:1:io.flutter.view.AccessibilityBridge$Flag[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$i;"}
io.flutter.view.AccessibilityBridge$LocaleStringAttribute -> io.flutter.view.l$j:
    java.lang.String locale -> d
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(io.flutter.view.AccessibilityBridge$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$a;)V"}
io.flutter.view.AccessibilityBridge$OnAccessibilityChangeListener -> io.flutter.view.l$k:
    void onAccessibilityChanged(boolean,boolean) -> a
io.flutter.view.AccessibilityBridge$SemanticsNode -> io.flutter.view.l$l:
    int previousNodeId -> A
    io.flutter.view.AccessibilityBridge$TextDirection textDirection -> B
    boolean hadPreviousConfig -> C
    int previousFlags -> D
    int previousActions -> E
    int previousTextSelectionBase -> F
    int previousTextSelectionExtent -> G
    float previousScrollPosition -> H
    float previousScrollExtentMax -> I
    float previousScrollExtentMin -> J
    java.lang.String previousValue -> K
    java.lang.String previousLabel -> L
    float left -> M
    float top -> N
    float right -> O
    float bottom -> P
    float[] transform -> Q
    io.flutter.view.AccessibilityBridge$SemanticsNode parent -> R
    java.util.List childrenInTraversalOrder -> S
    java.util.List childrenInHitTestOrder -> T
    java.util.List customAccessibilityActions -> U
    io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onTapOverride -> V
    io.flutter.view.AccessibilityBridge$CustomAccessibilityAction onLongPressOverride -> W
    boolean inverseTransformDirty -> X
    float[] inverseTransform -> Y
    boolean globalGeometryDirty -> Z
    io.flutter.view.AccessibilityBridge accessibilityBridge -> a
    float[] globalTransform -> a0
    int id -> b
    android.graphics.Rect globalRect -> b0
    int flags -> c
    int actions -> d
    int maxValueLength -> e
    int currentValueLength -> f
    int textSelectionBase -> g
    int textSelectionExtent -> h
    int platformViewId -> i
    int scrollChildren -> j
    int scrollIndex -> k
    float scrollPosition -> l
    float scrollExtentMax -> m
    float scrollExtentMin -> n
    java.lang.String identifier -> o
    java.lang.String label -> p
    java.util.List labelAttributes -> q
    java.lang.String value -> r
    java.util.List valueAttributes -> s
    java.lang.String increasedValue -> t
    java.util.List increasedValueAttributes -> u
    java.lang.String decreasedValue -> v
    java.util.List decreasedValueAttributes -> w
    java.lang.String hint -> x
    java.util.List hintAttributes -> y
    java.lang.String tooltip -> z
    1:1:java.lang.CharSequence access$3300(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> A
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/CharSequence;"}
    1:1:float max(float,float,float,float):0:0 -> A0
    1:1:java.lang.CharSequence access$3400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/CharSequence;"}
    1:1:float min(float,float,float,float):0:0 -> B0
    1:1:java.lang.String access$3500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:boolean nullableHasAncestor(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate):0:0 -> C0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Le3/e;)Z"}
    1:1:java.util.List access$3600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:void transformPoint(float[],float[],float[]):0:0 -> D0
    1:1:java.util.List access$3900(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:void updateRecursively(float[],java.util.Set,boolean):0:0 -> E0
    1:1:int access$4000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:void updateWith(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> F0
    1:1:java.lang.String access$4100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> G
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.util.List access$4202(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List):0:0 -> H
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/util/List;)Ljava/util/List;"}
    1:1:java.util.List access$4300(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> I
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:java.lang.String access$4400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> J
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.util.List access$4500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$4700(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],boolean):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;[FZ)Lio/flutter/view/l$l;"}
    1:1:void access$4900(io.flutter.view.AccessibilityBridge$SemanticsNode,java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[]):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/nio/ByteBuffer;[Ljava/lang/String;[Ljava/nio/ByteBuffer;)V"}
    1:1:boolean access$5000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:boolean access$5102(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Z)Z"}
    1:1:boolean access$5202(io.flutter.view.AccessibilityBridge$SemanticsNode,boolean):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Z)Z"}
    1:1:void access$5300(io.flutter.view.AccessibilityBridge$SemanticsNode,float[],java.util.Set,boolean):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;[FLjava/util/Set;Z)V"}
    1:1:void access$5400(io.flutter.view.AccessibilityBridge$SemanticsNode,java.util.List):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/util/List;)V"}
    1:1:boolean access$5500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:float access$5600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> T
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)F"}
    1:1:float access$5700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)F"}
    1:1:float access$5800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> V
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)F"}
    1:1:boolean access$5900(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action):0:0 -> W
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$g;)Z"}
    1:1:int access$6000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.util.List access$6100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/util/List;"}
    1:1:boolean access$6200(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> Z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:int access$000(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:boolean access$6300(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag):0:0 -> a0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$i;)Z"}
    1:1:int access$002(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:java.lang.String access$6400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:int access$1400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.lang.String access$6500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:boolean access$1500(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.util.Predicate):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Le3/e;)Z"}
    1:1:int access$6600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:int access$1600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:int access$6700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:android.graphics.Rect access$1700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Landroid/graphics/Rect;"}
    1:1:java.lang.String access$6800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> f0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.lang.String access$1800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:void collectRoutes(java.util.List):0:0 -> g0
    1:1:boolean access$1900(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Z"}
    1:1:android.text.SpannableString createSpannableString(java.lang.String,java.util.List):0:0 -> h0
    1:1:boolean access$2000(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Flag):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$i;)Z"}
    1:1:boolean didChangeLabel():0:0 -> i0
    1:1:int access$2100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:boolean didScroll():0:0 -> j0
    1:1:int access$2102(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:void ensureInverseTransform():0:0 -> k0
    1:1:int access$2200(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode getAncestor(io.flutter.util.Predicate):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le3/e;)Lio/flutter/view/l$l;"}
    1:1:int access$2202(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:android.graphics.Rect getGlobalRect():0:0 -> m0
    1:1:int access$2212(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:java.lang.CharSequence getHint():0:0 -> n0
    1:1:int access$2220(io.flutter.view.AccessibilityBridge$SemanticsNode,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;I)I"}
    1:1:java.lang.CharSequence getLabel():0:0 -> o0
    1:1:boolean access$2300(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$Action):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$g;)Z"}
    1:1:java.lang.String getRouteName():0:0 -> p0
    1:1:int access$2400(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.util.List getStringAttributesFromBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer[]):0:0 -> q0
    1:1:java.lang.String access$2500(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/String;"}
    1:1:java.lang.CharSequence getTextFieldHint():0:0 -> r0
    1:1:java.lang.String access$2502(io.flutter.view.AccessibilityBridge$SemanticsNode,java.lang.String):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Ljava/lang/String;)Ljava/lang/String;"}
    1:1:java.lang.CharSequence getValue():0:0 -> s0
    1:1:int access$2600(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:java.lang.CharSequence getValueLabelHint():0:0 -> t0
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$2700(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Lio/flutter/view/l$l;"}
    1:1:boolean hadAction(io.flutter.view.AccessibilityBridge$Action):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$g;)Z"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode access$2702(io.flutter.view.AccessibilityBridge$SemanticsNode,io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;Lio/flutter/view/l$l;)Lio/flutter/view/l$l;"}
    1:1:boolean hadFlag(io.flutter.view.AccessibilityBridge$Flag):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$i;)Z"}
    1:1:int access$2800(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)I"}
    1:1:boolean hasAction(io.flutter.view.AccessibilityBridge$Action):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$g;)Z"}
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$2900(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Lio/flutter/view/l$h;"}
    1:1:boolean hasFlag(io.flutter.view.AccessibilityBridge$Flag):0:0 -> x0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$i;)Z"}
    1:1:io.flutter.view.AccessibilityBridge$CustomAccessibilityAction access$3100(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Lio/flutter/view/l$h;"}
    1:1:io.flutter.view.AccessibilityBridge$SemanticsNode hitTest(float[],boolean):0:0 -> y0
      # {"id":"com.android.tools.r8.residualsignature","signature":"([FZ)Lio/flutter/view/l$l;"}
    1:1:java.lang.CharSequence access$3200(io.flutter.view.AccessibilityBridge$SemanticsNode):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$l;)Ljava/lang/CharSequence;"}
    1:1:boolean isFocusable():0:0 -> z0
io.flutter.view.AccessibilityBridge$SpellOutStringAttribute -> io.flutter.view.l$m:
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(io.flutter.view.AccessibilityBridge$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$a;)V"}
io.flutter.view.AccessibilityBridge$StringAttribute -> io.flutter.view.l$n:
    int start -> a
    int end -> b
    io.flutter.view.AccessibilityBridge$StringAttributeType type -> c
    void <init>() -> <init>
    1:1:void <init>(io.flutter.view.AccessibilityBridge$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/l$a;)V"}
io.flutter.view.AccessibilityBridge$StringAttributeType -> io.flutter.view.l$o:
    io.flutter.view.AccessibilityBridge$StringAttributeType SPELLOUT -> f
    io.flutter.view.AccessibilityBridge$StringAttributeType LOCALE -> g
    io.flutter.view.AccessibilityBridge$StringAttributeType[] $VALUES -> h
    1:1:io.flutter.view.AccessibilityBridge$StringAttributeType[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$o;"}
io.flutter.view.AccessibilityBridge$TextDirection -> io.flutter.view.l$p:
    io.flutter.view.AccessibilityBridge$TextDirection UNKNOWN -> f
    io.flutter.view.AccessibilityBridge$TextDirection LTR -> g
    io.flutter.view.AccessibilityBridge$TextDirection RTL -> h
    io.flutter.view.AccessibilityBridge$TextDirection[] $VALUES -> i
    1:1:io.flutter.view.AccessibilityBridge$TextDirection[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lio/flutter/view/l$p;"}
    1:1:io.flutter.view.AccessibilityBridge$TextDirection fromInt(int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lio/flutter/view/l$p;"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline0 -> io.flutter.view.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$0.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline1 -> io.flutter.view.n:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$10.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline2 -> io.flutter.view.o:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$11.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline3 -> io.flutter.view.p:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$1.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline4 -> io.flutter.view.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$2.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline5 -> io.flutter.view.r:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$3.m(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline6 -> io.flutter.view.s:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$4.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline7 -> io.flutter.view.t:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$6.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline8 -> io.flutter.view.u:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$7.m(android.view.accessibility.AccessibilityNodeInfo,java.util.List):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline9 -> io.flutter.view.v:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$8.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$1 -> io.flutter.view.AccessibilityViewEmbedder$a:
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors -> io.flutter.view.AccessibilityViewEmbedder$b:
    java.lang.reflect.Method getSourceNodeId -> a
    java.lang.reflect.Method getParentNodeId -> b
    java.lang.reflect.Method getRecordSourceNodeId -> c
    java.lang.reflect.Method getChildId -> d
    java.lang.reflect.Field childNodeIdsField -> e
    java.lang.reflect.Method longArrayGetIndex -> f
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$a;)V"}
    1:1:java.lang.Long access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityNodeInfo;)Ljava/lang/Long;"}
    1:1:int access$200(long):0:0 -> b
    1:1:java.lang.Long access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityNodeInfo;)Ljava/lang/Long;"}
    1:1:java.lang.Long access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityNodeInfo;I)Ljava/lang/Long;"}
    1:1:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/AccessibilityViewEmbedder$b;Landroid/view/accessibility/AccessibilityRecord;)Ljava/lang/Long;"}
    1:1:java.lang.Long getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> f
    1:1:java.lang.Long getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> g
    1:1:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0:0 -> h
    1:1:java.lang.Long getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> i
    1:1:int getVirtualNodeId(long):0:0 -> j
    1:1:boolean isBitSet(long,int):0:0 -> k
    1:1:java.lang.Long yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo):0:0 -> l
io.flutter.view.AccessibilityViewEmbedder$ViewAndId -> io.flutter.view.AccessibilityViewEmbedder$c:
    android.view.View view -> a
    int id -> b
    1:1:void <init>(android.view.View,int):0:0 -> <init>
    2:2:void <init>(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;ILio/flutter/view/AccessibilityViewEmbedder$a;)V"}
io.flutter.view.TextureRegistry -> io.flutter.view.TextureRegistry:
    io.flutter.view.TextureRegistry$SurfaceProducer createSurfaceProducer() -> a
io.flutter.view.TextureRegistry$ImageTextureEntry -> io.flutter.view.TextureRegistry$ImageTextureEntry:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$OnFrameConsumedListener -> io.flutter.view.TextureRegistry$a:
io.flutter.view.TextureRegistry$OnTrimMemoryListener -> io.flutter.view.TextureRegistry$b:
io.flutter.view.TextureRegistry$SurfaceProducer -> io.flutter.view.TextureRegistry$SurfaceProducer:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceProducer$Callback -> io.flutter.view.TextureRegistry$SurfaceProducer$a:
    void onSurfaceDestroyed() -> a
    void onSurfaceCreated() -> b
io.flutter.view.TextureRegistry$SurfaceTextureEntry -> io.flutter.view.TextureRegistry$SurfaceTextureEntry:
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC -> io.flutter.view.w:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/TextureRegistry$a;)V"}
    1:1:void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/TextureRegistry$b;)V"}
io.flutter.view.VsyncWaiter -> io.flutter.view.x:
    long refreshPeriodNanos -> a
    io.flutter.embedding.engine.FlutterJNI flutterJNI -> b
    io.flutter.view.VsyncWaiter$FrameCallback frameCallback -> c
    io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate -> d
    io.flutter.view.VsyncWaiter instance -> e
    io.flutter.view.VsyncWaiter$DisplayListener listener -> f
    1:1:long access$000(io.flutter.view.VsyncWaiter):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;)J"}
    1:1:long access$002(io.flutter.view.VsyncWaiter,long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;J)J"}
    1:1:io.flutter.embedding.engine.FlutterJNI access$100(io.flutter.view.VsyncWaiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;)Lio/flutter/embedding/engine/FlutterJNI;"}
    1:1:io.flutter.view.VsyncWaiter$FrameCallback access$200(io.flutter.view.VsyncWaiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;)Lio/flutter/view/x$c;"}
    1:1:io.flutter.view.VsyncWaiter$FrameCallback access$202(io.flutter.view.VsyncWaiter,io.flutter.view.VsyncWaiter$FrameCallback):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x;Lio/flutter/view/x$c;)Lio/flutter/view/x$c;"}
    1:1:io.flutter.view.VsyncWaiter getInstance(android.hardware.display.DisplayManager,io.flutter.embedding.engine.FlutterJNI):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/hardware/display/DisplayManager;Lio/flutter/embedding/engine/FlutterJNI;)Lio/flutter/view/x;"}
    1:1:void init():0:0 -> g
io.flutter.view.VsyncWaiter$1 -> io.flutter.view.x$a:
    io.flutter.view.VsyncWaiter this$0 -> a
    1:1:void asyncWaitForVsync(long):0:0 -> a
    1:1:android.view.Choreographer$FrameCallback obtainFrameCallback(long):0:0 -> b
io.flutter.view.VsyncWaiter$DisplayListener -> io.flutter.view.x$b:
    android.hardware.display.DisplayManager displayManager -> a
    io.flutter.view.VsyncWaiter this$0 -> b
    1:1:void register():0:0 -> a
io.flutter.view.VsyncWaiter$FrameCallback -> io.flutter.view.x$c:
    long cookie -> f
    io.flutter.view.VsyncWaiter this$0 -> g
    1:1:long access$302(io.flutter.view.VsyncWaiter$FrameCallback,long):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/x$c;J)J"}
kotlin.ExceptionsKt -> f3.a:
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ExceptionsKt__ExceptionsKt -> f3.b:
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
kotlin.Function -> f3.c:
kotlin.KotlinNothingValueException -> f3.d:
    void <init>() -> <init>
kotlin.Lazy -> f3.e:
    java.lang.Object getValue() -> getValue
kotlin.LazyKt -> f3.f:
    1:1:kotlin.Lazy lazy(kotlin.jvm.functions.Function0):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/a;)Lf3/e;"}
kotlin.LazyKt__LazyJVMKt -> f3.g:
    1:1:kotlin.Lazy lazy(kotlin.jvm.functions.Function0):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/a;)Lf3/e;"}
kotlin.LazyKt__LazyKt -> f3.h:
kotlin.NoWhenBranchMatchedException -> f3.i:
    void <init>() -> <init>
kotlin.Pair -> f3.j:
    java.lang.Object first -> f
    java.lang.Object second -> g
    1:1:void <init>(java.lang.Object,java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object component1():0:0 -> a
    1:1:java.lang.Object component2():0:0 -> b
    1:1:java.lang.Object getFirst():0:0 -> c
    1:1:java.lang.Object getSecond():0:0 -> d
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.Result -> f3.k:
    kotlin.Result$Companion Companion -> f
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> a
    1:1:java.lang.Throwable exceptionOrNull-impl(java.lang.Object):0:0 -> b
    1:1:boolean isFailure-impl(java.lang.Object):0:0 -> c
    1:1:boolean isSuccess-impl(java.lang.Object):0:0 -> d
kotlin.Result$Companion -> f3.k$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
kotlin.Result$Failure -> f3.k$b:
    java.lang.Throwable exception -> f
    1:1:void <init>(java.lang.Throwable):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.ResultKt -> f3.l:
    1:1:java.lang.Object createFailure(java.lang.Throwable):0:0 -> a
    1:1:void throwOnFailure(java.lang.Object):0:0 -> b
kotlin.SynchronizedLazyImpl -> f3.m:
    kotlin.jvm.functions.Function0 initializer -> f
    java.lang.Object _value -> g
    java.lang.Object lock -> h
    1:1:void <init>(kotlin.jvm.functions.Function0,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/a;Ljava/lang/Object;)V"}
    2:2:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/a;Ljava/lang/Object;ILq3/g;)V"}
    1:1:boolean isInitialized():0:0 -> a
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:java.lang.String toString():0:0 -> toString
kotlin.TuplesKt -> f3.n:
    1:1:kotlin.Pair to(java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;)Lf3/j;"}
kotlin.UNINITIALIZED_VALUE -> f3.o:
    kotlin.UNINITIALIZED_VALUE INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.UninitializedPropertyAccessException -> f3.p:
    1:1:void <init>(java.lang.String):0:0 -> <init>
kotlin.Unit -> f3.q:
    kotlin.Unit INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.AbstractCollection -> g3.a:
kotlin.collections.AbstractList -> g3.b:
    kotlin.collections.AbstractList$Companion Companion -> f
    1:1:void <clinit>():0:0 -> <clinit>
kotlin.collections.AbstractList$Companion -> g3.b$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:void checkElementIndex$kotlin_stdlib(int,int):0:0 -> a
    1:1:void checkPositionIndex$kotlin_stdlib(int,int):0:0 -> b
kotlin.collections.AbstractMutableList -> g3.c:
    void <init>() -> <init>
    int getSize() -> a
    java.lang.Object removeAt(int) -> b
    1:1:java.lang.Object remove(int):0:0 -> remove
    1:1:int size():0:0 -> size
kotlin.collections.ArrayAsCollection -> g3.d:
    java.lang.Object[] values -> f
    boolean isVarargs -> g
    1:1:void <init>(java.lang.Object[],boolean):0:0 -> <init>
    1:1:int getSize():0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
kotlin.collections.ArrayDeque -> g3.e:
    int head -> f
    java.lang.Object[] elementData -> g
    int size -> h
    kotlin.collections.ArrayDeque$Companion Companion -> i
    java.lang.Object[] emptyElementData -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:int getSize():0:0 -> a
    1:1:void add(int,java.lang.Object):0:0 -> add
    2:2:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:java.lang.Object removeAt(int):0:0 -> b
    1:1:void addFirst(java.lang.Object):0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:void addLast(java.lang.Object):0:0 -> d
    1:1:void copyCollectionElements(int,java.util.Collection):0:0 -> e
    1:1:void copyElements(int):0:0 -> f
    1:1:int decremented(int):0:0 -> g
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:void ensureCapacity(int):0:0 -> h
    1:1:int incremented(int):0:0 -> i
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:int negativeMod(int):0:0 -> j
    1:1:int positiveMod(int):0:0 -> k
    1:1:java.lang.Object removeFirst():0:0 -> l
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.lang.Object removeFirstOrNull():0:0 -> m
    1:1:java.lang.Object removeLast():0:0 -> n
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
kotlin.collections.ArrayDeque$Companion -> g3.e$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:int newCapacity$kotlin_stdlib(int,int):0:0 -> a
kotlin.collections.ArraysKt -> g3.f:
    1:1:java.util.List drop(java.lang.Object[],int):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:char single(char[]):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object singleOrNull(java.lang.Object[]):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.ArraysKt__ArraysJVMKt -> g3.g:
    1:1:java.lang.Object[] arrayOfNulls(java.lang.Object[],int):0:0 -> a
kotlin.collections.ArraysKt__ArraysKt -> g3.h:
kotlin.collections.ArraysKt___ArraysJvmKt -> g3.i:
    1:1:java.util.List asList(java.lang.Object[]):0:0 -> b
    1:1:java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int):0:0 -> c
    1:1:java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object):0:0 -> d
    1:1:void fill(java.lang.Object[],java.lang.Object,int,int):0:0 -> e
kotlin.collections.ArraysKt___ArraysKt -> g3.j:
    1:1:boolean contains(java.lang.Object[],java.lang.Object):0:0 -> f
    1:1:java.util.List drop(java.lang.Object[],int):0:0 -> g
    1:1:int getLastIndex(java.lang.Object[]):0:0 -> h
    1:1:int indexOf(java.lang.Object[],java.lang.Object):0:0 -> i
    1:1:char single(char[]):0:0 -> j
    1:1:java.lang.Object singleOrNull(java.lang.Object[]):0:0 -> k
    1:1:java.util.List takeLast(java.lang.Object[],int):0:0 -> l
    1:1:java.util.List toList(java.lang.Object[]):0:0 -> m
    1:1:java.util.List toMutableList(java.lang.Object[]):0:0 -> n
kotlin.collections.ArraysUtilJVM -> g3.k:
    1:1:java.util.List asList(java.lang.Object[]):0:0 -> a
kotlin.collections.CollectionsKt -> g3.l:
    1:1:java.util.List listOf(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.ArrayList arrayListOf(java.lang.Object[]):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List emptyList():0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List listOf(java.lang.Object[]):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List optimizeReadOnlyList(java.util.List):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void throwIndexOverflow():0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int collectionSizeOrDefault(java.lang.Iterable,int):0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean addAll(java.util.Collection,java.lang.Iterable):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> n
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lp3/l;ILjava/lang/Object;)Ljava/lang/String;"}
    1:1:java.util.List toList(java.lang.Iterable):0:0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Set toSet(java.lang.Iterable):0:0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.CollectionsKt__CollectionsJVMKt -> g3.m:
    1:1:java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean):0:0 -> a
    1:1:java.util.List listOf(java.lang.Object):0:0 -> b
kotlin.collections.CollectionsKt__CollectionsKt -> g3.n:
    1:1:java.util.ArrayList arrayListOf(java.lang.Object[]):0:0 -> c
    1:1:java.util.Collection asCollection(java.lang.Object[]):0:0 -> d
    1:1:java.util.List emptyList():0:0 -> e
    1:1:int getLastIndex(java.util.List):0:0 -> f
    1:1:java.util.List listOf(java.lang.Object[]):0:0 -> g
    1:1:java.util.List optimizeReadOnlyList(java.util.List):0:0 -> h
    1:1:void throwIndexOverflow():0:0 -> i
kotlin.collections.CollectionsKt__IterablesKt -> g3.o:
    1:1:int collectionSizeOrDefault(java.lang.Iterable,int):0:0 -> j
kotlin.collections.CollectionsKt__IteratorsJVMKt -> g3.p:
kotlin.collections.CollectionsKt__IteratorsKt -> g3.q:
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> g3.r:
kotlin.collections.CollectionsKt__MutableCollectionsKt -> g3.s:
    1:1:boolean addAll(java.util.Collection,java.lang.Iterable):0:0 -> k
kotlin.collections.CollectionsKt__ReversedViewsKt -> g3.t:
kotlin.collections.CollectionsKt___CollectionsJvmKt -> g3.u:
kotlin.collections.CollectionsKt___CollectionsKt -> g3.v:
    1:1:java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lp3/l;)Ljava/lang/Appendable;"}
    1:1:java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lp3/l;)Ljava/lang/String;"}
    1:1:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lp3/l;ILjava/lang/Object;)Ljava/lang/String;"}
    1:1:java.util.Collection toCollection(java.lang.Iterable,java.util.Collection):0:0 -> o
    1:1:java.util.List toList(java.lang.Iterable):0:0 -> p
    1:1:java.util.List toMutableList(java.lang.Iterable):0:0 -> q
    1:1:java.util.List toMutableList(java.util.Collection):0:0 -> r
    1:1:java.util.Set toSet(java.lang.Iterable):0:0 -> s
kotlin.collections.EmptyIterator -> g3.w:
    kotlin.collections.EmptyIterator INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Void next():0:0 -> a
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:java.lang.Void previous():0:0 -> b
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:1:java.lang.Object next():0:0 -> next
    1:1:int nextIndex():0:0 -> nextIndex
    1:1:java.lang.Object previous():0:0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
    1:1:void remove():0:0 -> remove
    1:1:void set(java.lang.Object):0:0 -> set
kotlin.collections.EmptyList -> g3.x:
    kotlin.collections.EmptyList INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean contains(java.lang.Void):0:0 -> a
    1:1:void add(int,java.lang.Object):0:0 -> add
    2:2:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:java.lang.Void get(int):0:0 -> b
    1:1:int getSize():0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:int indexOf(java.lang.Void):0:0 -> d
    1:1:int lastIndexOf(java.lang.Void):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object get(int):0:0 -> get
    1:1:int hashCode():0:0 -> hashCode
    1:1:int indexOf(java.lang.Object):0:0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:int lastIndexOf(java.lang.Object):0:0 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:java.lang.Object remove(int):0:0 -> remove
    2:2:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:int size():0:0 -> size
    1:1:java.util.List subList(int,int):0:0 -> subList
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.EmptyMap -> g3.y:
    kotlin.collections.EmptyMap INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean containsValue(java.lang.Void):0:0 -> a
    1:1:java.lang.Void get(java.lang.Object):0:0 -> b
    1:1:java.util.Set getEntries():0:0 -> c
    1:1:void clear():0:0 -> clear
    1:1:boolean containsKey(java.lang.Object):0:0 -> containsKey
    1:1:boolean containsValue(java.lang.Object):0:0 -> containsValue
    1:1:java.util.Set getKeys():0:0 -> d
    1:1:int getSize():0:0 -> e
    1:1:java.util.Set entrySet():0:0 -> entrySet
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.util.Collection getValues():0:0 -> f
    1:1:java.lang.Void remove(java.lang.Object):0:0 -> g
    1:1:java.lang.Object get(java.lang.Object):0:0 -> get
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Set keySet():0:0 -> keySet
    1:1:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
    1:1:void putAll(java.util.Map):0:0 -> putAll
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
    1:1:int size():0:0 -> size
    1:1:java.lang.String toString():0:0 -> toString
    1:1:java.util.Collection values():0:0 -> values
kotlin.collections.EmptySet -> g3.z:
    kotlin.collections.EmptySet INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean contains(java.lang.Void):0:0 -> a
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:int getSize():0:0 -> b
    1:1:void clear():0:0 -> clear
    1:1:boolean contains(java.lang.Object):0:0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:int size():0:0 -> size
    1:1:java.lang.Object[] toArray():0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlin.collections.IntIterator -> g3.a0:
    void <init>() -> <init>
    int nextInt() -> a
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
kotlin.collections.MapsKt -> g3.b0:
    1:1:int mapCapacity(int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.Map toMap(java.lang.Iterable):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.MapsKt__MapWithDefaultKt -> g3.c0:
kotlin.collections.MapsKt__MapsJVMKt -> g3.d0:
    1:1:int mapCapacity(int):0:0 -> a
    1:1:java.util.Map mapOf(kotlin.Pair):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf3/j;)Ljava/util/Map;"}
    1:1:java.util.Map toSingletonMap(java.util.Map):0:0 -> c
kotlin.collections.MapsKt__MapsKt -> g3.e0:
    1:1:java.util.Map emptyMap():0:0 -> d
    1:1:java.util.Map optimizeReadOnlyMap(java.util.Map):0:0 -> e
    1:1:void putAll(java.util.Map,java.lang.Iterable):0:0 -> f
    1:1:java.util.Map toMap(java.lang.Iterable):0:0 -> g
    1:1:java.util.Map toMap(java.lang.Iterable,java.util.Map):0:0 -> h
kotlin.collections.MapsKt___MapsJvmKt -> g3.f0:
kotlin.collections.MapsKt___MapsKt -> g3.g0:
kotlin.collections.SetsKt__SetsJVMKt -> g3.h0:
    1:1:java.util.Set setOf(java.lang.Object):0:0 -> a
kotlin.collections.SetsKt__SetsKt -> g3.i0:
    1:1:java.util.Set emptySet():0:0 -> b
    1:1:java.util.Set optimizeReadOnlySet(java.util.Set):0:0 -> c
kotlin.coroutines.AbstractCoroutineContextElement -> h3.a:
    kotlin.coroutines.CoroutineContext$Key key -> f
    1:1:void <init>(kotlin.coroutines.CoroutineContext$Key):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)V"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext$Key getKey():0:0 -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g$c;"}
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lp3/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Lh3/g;"}
kotlin.coroutines.AbstractCoroutineContextKey -> h3.b:
    kotlin.jvm.functions.Function1 safeCast -> f
    kotlin.coroutines.CoroutineContext$Key topmostKey -> g
    1:1:void <init>(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;Lp3/l;)V"}
    1:1:boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Z"}
    1:1:kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$b;)Lh3/g$b;"}
kotlin.coroutines.CombinedContext -> h3.c:
    kotlin.coroutines.CoroutineContext left -> f
    kotlin.coroutines.CoroutineContext$Element element -> g
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Lh3/g$b;)V"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g$b;"}
    1:1:boolean contains(kotlin.coroutines.CoroutineContext$Element):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$b;)Z"}
    1:1:boolean containsAll(kotlin.coroutines.CombinedContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/c;)Z"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:int size():0:0 -> m
    1:1:java.lang.String toString():0:0 -> toString
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lp3/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Lh3/g;"}
kotlin.coroutines.CombinedContext$toString$1 -> h3.c$a:
    kotlin.coroutines.CombinedContext$toString$1 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Lh3/g$b;)Ljava/lang/String;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
kotlin.coroutines.Continuation -> h3.d:
    kotlin.coroutines.CoroutineContext getContext() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g;"}
    void resumeWith(java.lang.Object) -> t
kotlin.coroutines.ContinuationInterceptor -> h3.e:
    kotlin.coroutines.ContinuationInterceptor$Key Key -> a
    1:1:void <clinit>():0:0 -> <clinit>
    kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)Lh3/d;"}
    void releaseInterceptedContinuation(kotlin.coroutines.Continuation) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)V"}
kotlin.coroutines.ContinuationInterceptor$DefaultImpls -> h3.e$a:
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/e;Lh3/g$c;)Lh3/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/e;Lh3/g$c;)Lh3/g;"}
kotlin.coroutines.ContinuationInterceptor$Key -> h3.e$b:
    kotlin.coroutines.ContinuationInterceptor$Key $$INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.coroutines.ContinuationKt -> h3.f:
    1:1:void startCoroutine(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;Ljava/lang/Object;Lh3/d;)V"}
kotlin.coroutines.CoroutineContext -> h3.g:
    kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g$b;"}
    java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lp3/p;)Ljava/lang/Object;"}
    kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g;"}
    kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Lh3/g;"}
kotlin.coroutines.CoroutineContext$DefaultImpls -> h3.g$a:
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Lh3/g;)Lh3/g;"}
kotlin.coroutines.CoroutineContext$Element -> h3.g$b:
    kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g$b;"}
    kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g$c;"}
kotlin.coroutines.CoroutineContext$Element$DefaultImpls -> h3.g$b$a:
    1:1:java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$b;Ljava/lang/Object;Lp3/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$b;Lh3/g$c;)Lh3/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$b;Lh3/g$c;)Lh3/g;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$b;Lh3/g;)Lh3/g;"}
kotlin.coroutines.CoroutineContext$Key -> h3.g$c:
kotlin.coroutines.CoroutineContext$plus$1 -> h3.g$a$a:
    kotlin.coroutines.CoroutineContext$plus$1 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Lh3/g$b;)Lh3/g;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
kotlin.coroutines.EmptyCoroutineContext -> h3.h:
    kotlin.coroutines.EmptyCoroutineContext INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g$b;"}
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lp3/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Lh3/g;"}
kotlin.coroutines.intrinsics.CoroutineSingletons -> i3.a:
    kotlin.coroutines.intrinsics.CoroutineSingletons COROUTINE_SUSPENDED -> f
    kotlin.coroutines.intrinsics.CoroutineSingletons UNDECIDED -> g
    kotlin.coroutines.intrinsics.CoroutineSingletons RESUMED -> h
    kotlin.coroutines.intrinsics.CoroutineSingletons[] $VALUES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlin.coroutines.intrinsics.CoroutineSingletons[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Li3/a;"}
    1:1:kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Li3/a;"}
    1:1:kotlin.coroutines.intrinsics.CoroutineSingletons[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Li3/a;"}
kotlin.coroutines.intrinsics.IntrinsicsKt -> i3.b:
    1:1:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;Ljava/lang/Object;Lh3/d;)Lh3/d;"}
    1:1:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)Lh3/d;"}
    1:1:java.lang.Object getCOROUTINE_SUSPENDED():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt -> i3.c:
    1:1:kotlin.coroutines.Continuation createCoroutineUnintercepted(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;Ljava/lang/Object;Lh3/d;)Lh3/d;"}
    1:1:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)Lh3/d;"}
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$3 -> i3.c$a:
    int label -> g
    kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined -> h
    java.lang.Object $receiver$inlined -> i
    1:1:void <init>(kotlin.coroutines.Continuation,kotlin.jvm.functions.Function2,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;Lp3/p;Ljava/lang/Object;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnintercepted$$inlined$createCoroutineFromSuspendFunction$IntrinsicsKt__IntrinsicsJvmKt$4 -> i3.c$b:
    int label -> i
    kotlin.jvm.functions.Function2 $this_createCoroutineUnintercepted$inlined -> j
    java.lang.Object $receiver$inlined -> k
    1:1:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;Lh3/g;Lp3/p;Ljava/lang/Object;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt -> i3.d:
    1:1:java.lang.Object getCOROUTINE_SUSPENDED():0:0 -> c
kotlin.coroutines.jvm.internal.BaseContinuationImpl -> j3.a:
    kotlin.coroutines.Continuation completion -> f
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Lh3/d;"}
    1:1:kotlin.coroutines.Continuation getCompletion():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/d;"}
    1:1:java.lang.StackTraceElement getStackTraceElement():0:0 -> g
    java.lang.Object invokeSuspend(java.lang.Object) -> i
    1:1:void releaseIntercepted():0:0 -> j
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj3/e;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> t
    1:1:java.lang.String toString():0:0 -> toString
kotlin.coroutines.jvm.internal.Boxing -> j3.b:
    1:1:java.lang.Boolean boxBoolean(boolean):0:0 -> a
kotlin.coroutines.jvm.internal.CompletedContinuation -> j3.c:
    kotlin.coroutines.jvm.internal.CompletedContinuation INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> t
    1:1:java.lang.String toString():0:0 -> toString
kotlin.coroutines.jvm.internal.ContinuationImpl -> j3.d:
    kotlin.coroutines.CoroutineContext _context -> g
    kotlin.coroutines.Continuation intercepted -> h
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)V"}
    2:2:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;Lh3/g;)V"}
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g;"}
    1:1:void releaseIntercepted():0:0 -> j
    1:1:kotlin.coroutines.Continuation intercepted():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/d;"}
kotlin.coroutines.jvm.internal.CoroutineStackFrame -> j3.e:
    kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj3/e;"}
kotlin.coroutines.jvm.internal.DebugMetadata -> j3.f:
    java.lang.String c() -> c
    java.lang.String f() -> f
    int[] l() -> l
    java.lang.String m() -> m
    int v() -> v
kotlin.coroutines.jvm.internal.DebugMetadataKt -> j3.g:
    1:1:void checkDebugMetadataVersion(int,int):0:0 -> a
    1:1:kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj3/a;)Lj3/f;"}
    1:1:int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj3/a;)I"}
    1:1:java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj3/a;)Ljava/lang/StackTraceElement;"}
kotlin.coroutines.jvm.internal.DebugProbesKt -> j3.h:
    1:1:kotlin.coroutines.Continuation probeCoroutineCreated(kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)Lh3/d;"}
    1:1:void probeCoroutineResumed(kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)V"}
    1:1:void probeCoroutineSuspended(kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)V"}
kotlin.coroutines.jvm.internal.ModuleNameRetriever -> j3.i:
    kotlin.coroutines.jvm.internal.ModuleNameRetriever INSTANCE -> a
    kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache notOnJava9 -> b
    kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache cache -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj3/a;)Lj3/i$a;"}
    1:1:java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj3/a;)Ljava/lang/String;"}
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache -> j3.i$a:
    java.lang.reflect.Method getModuleMethod -> a
    java.lang.reflect.Method getDescriptorMethod -> b
    java.lang.reflect.Method nameMethod -> c
    1:1:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method):0:0 -> <init>
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl -> j3.j:
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)V"}
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g;"}
kotlin.coroutines.jvm.internal.SuspendLambda -> j3.k:
    int arity -> i
    1:1:void <init>(int,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILh3/d;)V"}
    1:1:int getArity():0:0 -> f
    1:1:java.lang.String toString():0:0 -> toString
kotlin.internal.PlatformImplementations -> k3.a:
    void <init>() -> <init>
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
    1:1:kotlin.random.Random defaultPlatformRandom():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr3/c;"}
kotlin.internal.PlatformImplementations$ReflectThrowable -> k3.a$a:
    kotlin.internal.PlatformImplementations$ReflectThrowable INSTANCE -> a
    java.lang.reflect.Method addSuppressed -> b
    java.lang.reflect.Method getSuppressed -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.internal.PlatformImplementationsKt -> k3.b:
    kotlin.internal.PlatformImplementations IMPLEMENTATIONS -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlin.internal.ProgressionUtilKt -> k3.c:
    1:1:int differenceModulo(int,int,int):0:0 -> a
    1:1:int getProgressionLastElement(int,int,int):0:0 -> b
    1:1:int mod(int,int):0:0 -> c
kotlin.internal.jdk7.JDK7PlatformImplementations -> l3.a:
    void <init>() -> <init>
    1:1:void addSuppressed(java.lang.Throwable,java.lang.Throwable):0:0 -> a
    1:1:boolean sdkIsNullOrAtLeast(int):0:0 -> c
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion -> l3.a$a:
    kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion INSTANCE -> a
    java.lang.Integer sdkVersion -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.internal.jdk8.JDK8PlatformImplementations -> m3.a:
    void <init>() -> <init>
    1:1:kotlin.random.Random defaultPlatformRandom():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr3/c;"}
    1:1:boolean sdkIsNullOrAtLeast(int):0:0 -> c
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion -> m3.a$a:
    kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion INSTANCE -> a
    java.lang.Integer sdkVersion -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlin.io.CloseableKt -> n3.a:
    1:1:void closeFinally(java.io.Closeable,java.lang.Throwable):0:0 -> a
kotlin.jvm.JvmClassMappingKt -> o3.a:
    1:1:java.lang.Class getJavaClass(kotlin.reflect.KClass):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu3/b;)Ljava/lang/Class;"}
    1:1:java.lang.Class getJavaObjectType(kotlin.reflect.KClass):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu3/b;)Ljava/lang/Class;"}
    1:1:kotlin.reflect.KClass getKotlinClass(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lu3/b;"}
kotlin.jvm.functions.Function0 -> p3.a:
    java.lang.Object invoke() -> e
kotlin.jvm.functions.Function1 -> p3.l:
    java.lang.Object invoke(java.lang.Object) -> b
kotlin.jvm.functions.Function10 -> p3.b:
kotlin.jvm.functions.Function11 -> p3.c:
kotlin.jvm.functions.Function12 -> p3.d:
kotlin.jvm.functions.Function13 -> p3.e:
kotlin.jvm.functions.Function14 -> p3.f:
kotlin.jvm.functions.Function15 -> p3.g:
kotlin.jvm.functions.Function16 -> p3.h:
kotlin.jvm.functions.Function17 -> p3.i:
kotlin.jvm.functions.Function18 -> p3.j:
kotlin.jvm.functions.Function19 -> p3.k:
kotlin.jvm.functions.Function2 -> p3.p:
    java.lang.Object invoke(java.lang.Object,java.lang.Object) -> h
kotlin.jvm.functions.Function20 -> p3.m:
kotlin.jvm.functions.Function21 -> p3.n:
kotlin.jvm.functions.Function22 -> p3.o:
kotlin.jvm.functions.Function3 -> p3.q:
kotlin.jvm.functions.Function4 -> p3.r:
kotlin.jvm.functions.Function5 -> p3.s:
kotlin.jvm.functions.Function6 -> p3.t:
kotlin.jvm.functions.Function7 -> p3.u:
kotlin.jvm.functions.Function8 -> p3.v:
kotlin.jvm.functions.Function9 -> p3.w:
kotlin.jvm.internal.ArrayIterator -> q3.a:
    java.lang.Object[] array -> f
    int index -> g
    1:1:void <init>(java.lang.Object[]):0:0 -> <init>
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
kotlin.jvm.internal.ArrayIteratorKt -> q3.b:
    1:1:java.util.Iterator iterator(java.lang.Object[]):0:0 -> a
kotlin.jvm.internal.CallableReference -> q3.c:
    kotlin.reflect.KCallable reflected -> f
    java.lang.Object receiver -> g
    java.lang.Class owner -> h
    java.lang.String name -> i
    java.lang.String signature -> j
    boolean isTopLevel -> k
    java.lang.Object NO_RECEIVER -> l
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean):0:0 -> <init>
    1:1:kotlin.reflect.KCallable compute():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu3/a;"}
    kotlin.reflect.KCallable computeReflected() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu3/a;"}
    1:1:java.lang.Object getBoundReceiver():0:0 -> d
    1:1:java.lang.String getName():0:0 -> g
    1:1:kotlin.reflect.KDeclarationContainer getOwner():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu3/d;"}
    1:1:java.lang.String getSignature():0:0 -> j
kotlin.jvm.internal.CallableReference$NoReceiver -> q3.c$a:
    kotlin.jvm.internal.CallableReference$NoReceiver INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.jvm.internal.CallableReference$NoReceiver access$000():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lq3/c$a;"}
kotlin.jvm.internal.ClassBasedDeclarationContainer -> q3.d:
    java.lang.Class getJClass() -> c
kotlin.jvm.internal.ClassReference -> q3.e:
    java.lang.Class jClass -> a
    kotlin.jvm.internal.ClassReference$Companion Companion -> b
    java.util.Map FUNCTION_CLASSES -> c
    java.util.HashMap primitiveFqNames -> d
    java.util.HashMap primitiveWrapperFqNames -> e
    java.util.HashMap classFqNames -> f
    java.util.Map simpleNames -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Class):0:0 -> <init>
    1:1:java.lang.String getQualifiedName():0:0 -> a
    1:1:java.lang.String getSimpleName():0:0 -> b
    1:1:java.lang.Class getJClass():0:0 -> c
    1:1:boolean isInstance(java.lang.Object):0:0 -> d
    1:1:java.util.HashMap access$getClassFqNames$cp():0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.util.Map access$getFUNCTION_CLASSES$cp():0:0 -> f
    1:1:java.util.Map access$getSimpleNames$cp():0:0 -> g
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.ClassReference$Companion -> q3.e$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:java.lang.String getClassQualifiedName(java.lang.Class):0:0 -> a
    1:1:java.lang.String getClassSimpleName(java.lang.Class):0:0 -> b
    1:1:boolean isInstance(java.lang.Object,java.lang.Class):0:0 -> c
kotlin.jvm.internal.CollectionToArray -> q3.f:
    java.lang.Object[] EMPTY -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Object[] toArray(java.util.Collection):0:0 -> a
    1:1:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):0:0 -> b
kotlin.jvm.internal.DefaultConstructorMarker -> q3.g:
kotlin.jvm.internal.FunctionBase -> q3.h:
    int getArity() -> f
kotlin.jvm.internal.FunctionReference -> q3.i:
    int arity -> m
    int flags -> n
    1:1:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    1:1:kotlin.reflect.KCallable computeReflected():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu3/a;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int getArity():0:0 -> f
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.FunctionReferenceImpl -> q3.j:
    1:1:void <init>(int,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    2:2:void <init>(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
kotlin.jvm.internal.Intrinsics -> q3.k:
    1:1:boolean areEqual(java.lang.Object,java.lang.Object):0:0 -> a
    1:1:void checkNotNull(java.lang.Object):0:0 -> b
    1:1:void checkNotNull(java.lang.Object,java.lang.String):0:0 -> c
    1:1:void checkNotNullExpressionValue(java.lang.Object,java.lang.String):0:0 -> d
    1:1:void checkNotNullParameter(java.lang.Object,java.lang.String):0:0 -> e
    1:1:int compare(int,int):0:0 -> f
    1:1:java.lang.String createParameterIsNullExceptionMessage(java.lang.String):0:0 -> g
    1:1:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable):0:0 -> h
    1:1:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String):0:0 -> i
    1:1:void throwJavaNpe():0:0 -> j
    1:1:void throwJavaNpe(java.lang.String):0:0 -> k
    1:1:void throwParameterIsNullNPE(java.lang.String):0:0 -> l
    1:1:void throwUninitializedProperty(java.lang.String):0:0 -> m
    1:1:void throwUninitializedPropertyAccessException(java.lang.String):0:0 -> n
kotlin.jvm.internal.Lambda -> q3.l:
    int arity -> f
    1:1:void <init>(int):0:0 -> <init>
    1:1:int getArity():0:0 -> f
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.PackageReference -> q3.m:
    java.lang.Class jClass -> a
    java.lang.String moduleName -> b
    1:1:void <init>(java.lang.Class,java.lang.String):0:0 -> <init>
    1:1:java.lang.Class getJClass():0:0 -> c
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.PropertyReference -> q3.p:
    boolean syntheticJavaProperty -> m
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    1:1:kotlin.reflect.KCallable compute():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu3/a;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.PropertyReference0 -> q3.n:
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
    1:1:kotlin.reflect.KCallable computeReflected():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu3/a;"}
    1:1:java.lang.Object invoke():0:0 -> e
kotlin.jvm.internal.PropertyReference0Impl -> q3.o:
    1:1:void <init>(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int):0:0 -> <init>
kotlin.jvm.internal.Ref$ObjectRef -> q3.q:
    java.lang.Object element -> f
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.Reflection -> q3.r:
    kotlin.jvm.internal.ReflectionFactory factory -> a
    kotlin.reflect.KClass[] EMPTY_K_CLASS_ARRAY -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/i;)Lu3/e;"}
    1:1:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lu3/b;"}
    1:1:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lu3/d;"}
    1:1:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/n;)Lu3/f;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/h;)Ljava/lang/String;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/l;)Ljava/lang/String;"}
kotlin.jvm.internal.ReflectionFactory -> q3.s:
    void <init>() -> <init>
    1:1:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/i;)Lu3/e;"}
    1:1:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;)Lu3/b;"}
    1:1:kotlin.reflect.KDeclarationContainer getOrCreateKotlinPackage(java.lang.Class,java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/lang/String;)Lu3/d;"}
    1:1:kotlin.reflect.KProperty0 property0(kotlin.jvm.internal.PropertyReference0):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/n;)Lu3/f;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/h;)Ljava/lang/String;"}
    1:1:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/l;)Ljava/lang/String;"}
kotlin.jvm.internal.TypeIntrinsics -> q3.t:
    1:1:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int):0:0 -> a
    1:1:int getFunctionArity(java.lang.Object):0:0 -> b
    1:1:boolean isFunctionOfArity(java.lang.Object,int):0:0 -> c
    1:1:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable):0:0 -> d
    1:1:java.lang.ClassCastException throwCce(java.lang.ClassCastException):0:0 -> e
    1:1:void throwCce(java.lang.Object,java.lang.String):0:0 -> f
    1:1:void throwCce(java.lang.String):0:0 -> g
kotlin.random.AbstractPlatformRandom -> r3.a:
    void <init>() -> <init>
    1:1:int nextInt():0:0 -> b
    java.util.Random getImpl() -> c
kotlin.random.FallbackThreadLocalRandom -> r3.b:
    kotlin.random.FallbackThreadLocalRandom$implStorage$1 implStorage -> h
    1:1:void <init>():0:0 -> <init>
    1:1:java.util.Random getImpl():0:0 -> c
kotlin.random.FallbackThreadLocalRandom$implStorage$1 -> r3.b$a:
    void <init>() -> <init>
    1:1:java.util.Random initialValue():0:0 -> a
    1:1:java.lang.Object initialValue():0:0 -> initialValue
kotlin.random.Random -> r3.c:
    kotlin.random.Random$Default Default -> f
    kotlin.random.Random defaultRandom -> g
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.random.Random access$getDefaultRandom$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lr3/c;"}
    int nextInt() -> b
kotlin.random.Random$Default -> r3.c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:int nextInt():0:0 -> b
kotlin.random.jdk8.PlatformThreadLocalRandom -> s3.a:
    void <init>() -> <init>
    1:1:java.util.Random getImpl():0:0 -> c
kotlin.ranges.IntProgression -> t3.a:
    int first -> f
    int last -> g
    int step -> h
    kotlin.ranges.IntProgression$Companion Companion -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,int):0:0 -> <init>
    1:1:int getFirst():0:0 -> a
    1:1:int getLast():0:0 -> b
    1:1:int getStep():0:0 -> c
    1:1:kotlin.collections.IntIterator iterator():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg3/a0;"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    1:1:java.lang.String toString():0:0 -> toString
kotlin.ranges.IntProgression$Companion -> t3.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:kotlin.ranges.IntProgression fromClosedRange(int,int,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(III)Lt3/a;"}
kotlin.ranges.IntProgressionIterator -> t3.b:
    int step -> f
    int finalElement -> g
    boolean hasNext -> h
    int next -> i
    1:1:void <init>(int,int,int):0:0 -> <init>
    1:1:int nextInt():0:0 -> a
    1:1:boolean hasNext():0:0 -> hasNext
kotlin.ranges.IntRange -> t3.c:
    kotlin.ranges.IntRange$Companion Companion -> j
    kotlin.ranges.IntRange EMPTY -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int):0:0 -> <init>
    1:1:boolean contains(int):0:0 -> e
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.lang.String toString():0:0 -> toString
kotlin.ranges.IntRange$Companion -> t3.c$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
kotlin.ranges.RangesKt -> t3.d:
    1:1:int coerceAtLeast(int,int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int coerceAtMost(int,int):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:long coerceAtMost(long,long):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:kotlin.ranges.IntProgression downTo(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lt3/a;"}
kotlin.ranges.RangesKt__RangesKt -> t3.e:
kotlin.ranges.RangesKt___RangesKt -> t3.f:
    1:1:int coerceAtLeast(int,int):0:0 -> a
    1:1:int coerceAtMost(int,int):0:0 -> b
    1:1:long coerceAtMost(long,long):0:0 -> c
    1:1:kotlin.ranges.IntProgression downTo(int,int):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lt3/a;"}
kotlin.reflect.KCallable -> u3.a:
kotlin.reflect.KClass -> u3.b:
    java.lang.String getQualifiedName() -> a
    java.lang.String getSimpleName() -> b
    boolean isInstance(java.lang.Object) -> d
kotlin.reflect.KClasses -> u3.c:
    1:1:java.lang.Object cast(kotlin.reflect.KClass,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lu3/b;Ljava/lang/Object;)Ljava/lang/Object;"}
kotlin.reflect.KDeclarationContainer -> u3.d:
kotlin.reflect.KFunction -> u3.e:
kotlin.reflect.KProperty -> u3.g:
kotlin.reflect.KProperty0 -> u3.f:
    java.lang.Object get() -> get
kotlin.sequences.ConstrainedOnceSequence -> v3.a:
    java.util.concurrent.atomic.AtomicReference sequenceRef -> a
    1:1:void <init>(kotlin.sequences.Sequence):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv3/b;)V"}
    1:1:java.util.Iterator iterator():0:0 -> iterator
kotlin.sequences.Sequence -> v3.b:
    java.util.Iterator iterator() -> iterator
kotlin.sequences.SequencesKt -> v3.c:
    1:1:kotlin.sequences.Sequence asSequence(java.util.Iterator):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;)Lv3/b;"}
    1:1:java.util.List toList(kotlin.sequences.Sequence):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv3/b;)Ljava/util/List;"}
kotlin.sequences.SequencesKt__SequenceBuilderKt -> v3.d:
kotlin.sequences.SequencesKt__SequencesJVMKt -> v3.e:
kotlin.sequences.SequencesKt__SequencesKt -> v3.f:
    1:1:kotlin.sequences.Sequence asSequence(java.util.Iterator):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/Iterator;)Lv3/b;"}
    1:1:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv3/b;)Lv3/b;"}
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1 -> v3.f$a:
    java.util.Iterator $this_asSequence$inlined -> a
    1:1:void <init>(java.util.Iterator):0:0 -> <init>
    1:1:java.util.Iterator iterator():0:0 -> iterator
kotlin.sequences.SequencesKt___SequencesJvmKt -> v3.g:
kotlin.sequences.SequencesKt___SequencesKt -> v3.h:
    1:1:java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv3/b;Ljava/util/Collection;)Ljava/util/Collection;"}
    1:1:java.util.List toList(kotlin.sequences.Sequence):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv3/b;)Ljava/util/List;"}
    1:1:java.util.List toMutableList(kotlin.sequences.Sequence):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lv3/b;)Ljava/util/List;"}
kotlin.text.CharsKt__CharJVMKt -> w3.a:
    1:1:int checkRadix(int):0:0 -> a
    1:1:int digitOf(char,int):0:0 -> b
    1:1:boolean isWhitespace(char):0:0 -> c
kotlin.text.CharsKt__CharKt -> w3.b:
    1:1:boolean equals(char,char,boolean):0:0 -> d
kotlin.text.StringsKt -> w3.c:
    1:1:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> B
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> E
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> F
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence trim(java.lang.CharSequence):0:0 -> G
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:char last(java.lang.CharSequence):0:0 -> H
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Appendable;Ljava/lang/Object;Lp3/l;)V"}
    1:1:java.lang.Long toLongOrNull(java.lang.String):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean isBlank(java.lang.CharSequence):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> y
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> z
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.text.StringsKt__AppendableKt -> w3.d:
    1:1:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Appendable;Ljava/lang/Object;Lp3/l;)V"}
kotlin.text.StringsKt__IndentKt -> w3.e:
kotlin.text.StringsKt__RegexExtensionsJVMKt -> w3.f:
kotlin.text.StringsKt__RegexExtensionsKt -> w3.g:
kotlin.text.StringsKt__StringBuilderJVMKt -> w3.h:
kotlin.text.StringsKt__StringBuilderKt -> w3.i:
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> w3.j:
kotlin.text.StringsKt__StringNumberConversionsKt -> w3.k:
    1:1:java.lang.Long toLongOrNull(java.lang.String):0:0 -> b
    1:1:java.lang.Long toLongOrNull(java.lang.String,int):0:0 -> c
kotlin.text.StringsKt__StringsJVMKt -> w3.l:
    1:1:boolean isBlank(java.lang.CharSequence):0:0 -> d
    1:1:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean):0:0 -> e
    1:1:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean):0:0 -> f
    1:1:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> g
    1:1:boolean startsWith(java.lang.String,java.lang.String,boolean):0:0 -> h
    1:1:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object):0:0 -> i
kotlin.text.StringsKt__StringsKt -> w3.m:
    1:1:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String):0:0 -> A
    1:1:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> B
    1:1:java.lang.String substringBefore(java.lang.String,char,java.lang.String):0:0 -> C
    1:1:java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String):0:0 -> D
    1:1:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> E
    1:1:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> F
    1:1:java.lang.CharSequence trim(java.lang.CharSequence):0:0 -> G
    1:1:kotlin.ranges.IntRange getIndices(java.lang.CharSequence):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/CharSequence;)Lt3/c;"}
    1:1:int getLastIndex(java.lang.CharSequence):0:0 -> k
    1:1:int indexOf(java.lang.CharSequence,char,int,boolean):0:0 -> l
    1:1:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean):0:0 -> m
    1:1:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean):0:0 -> n
    1:1:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object):0:0 -> o
    1:1:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object):0:0 -> p
    1:1:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object):0:0 -> q
    1:1:int indexOfAny(java.lang.CharSequence,char[],int,boolean):0:0 -> r
    1:1:int lastIndexOf(java.lang.CharSequence,char,int,boolean):0:0 -> s
    1:1:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object):0:0 -> t
    1:1:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):0:0 -> u
    1:1:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean):0:0 -> v
    1:1:java.lang.String substringAfter(java.lang.String,char,java.lang.String):0:0 -> w
    1:1:java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String):0:0 -> x
    1:1:java.lang.String substringAfter$default(java.lang.String,char,java.lang.String,int,java.lang.Object):0:0 -> y
    1:1:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object):0:0 -> z
kotlin.text.StringsKt___StringsJvmKt -> w3.n:
kotlin.text.StringsKt___StringsKt -> w3.o:
    1:1:char last(java.lang.CharSequence):0:0 -> H
kotlinx.coroutines.AbstractCoroutine -> x3.a:
    kotlin.coroutines.CoroutineContext context -> h
    1:1:void <init>(kotlin.coroutines.CoroutineContext,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;ZZ)V"}
    1:1:void afterResume(java.lang.Object):0:0 -> F0
    1:1:void onCancelled(java.lang.Throwable,boolean):0:0 -> G0
    1:1:void onCompleted(java.lang.Object):0:0 -> H0
    1:1:void start(kotlinx.coroutines.CoroutineStart,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> I0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/f0;Ljava/lang/Object;Lp3/p;)V"}
    1:1:java.lang.String cancellationExceptionMessage():0:0 -> M
    1:1:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> b0
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g;"}
    1:1:boolean isActive():0:0 -> d
    1:1:java.lang.String nameString$kotlinx_coroutines_core():0:0 -> k0
    1:1:void onCompletionInternal(java.lang.Object):0:0 -> p0
    1:1:kotlin.coroutines.CoroutineContext getCoroutineContext():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> t
kotlinx.coroutines.AbstractTimeSource -> x3.b:
kotlinx.coroutines.AbstractTimeSourceKt -> x3.c:
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.AbstractTimeSource getTimeSource():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/b;"}
kotlinx.coroutines.Active -> x3.d:
    kotlinx.coroutines.Active INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.BlockingEventLoop -> x3.e:
    java.lang.Thread thread -> n
    1:1:void <init>(java.lang.Thread):0:0 -> <init>
    1:1:java.lang.Thread getThread():0:0 -> E
kotlinx.coroutines.BuildersKt -> x3.f:
    1:1:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/d0;Lh3/g;Lx3/f0;Lp3/p;)Lx3/e1;"}
    1:1:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/d0;Lh3/g;Lx3/f0;Lp3/p;ILjava/lang/Object;)Lx3/e1;"}
kotlinx.coroutines.BuildersKt__Builders_commonKt -> x3.g:
    1:1:kotlinx.coroutines.Job launch(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/d0;Lh3/g;Lx3/f0;Lp3/p;)Lx3/e1;"}
    1:1:kotlinx.coroutines.Job launch$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function2,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/d0;Lh3/g;Lx3/f0;Lp3/p;ILjava/lang/Object;)Lx3/e1;"}
kotlinx.coroutines.CancelHandler -> x3.h:
kotlinx.coroutines.CancelHandlerBase -> x3.i:
kotlinx.coroutines.CancellableContinuation -> x3.j:
    void completeResume(java.lang.Object) -> A
    java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1) -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Lp3/l;)Ljava/lang/Object;"}
kotlinx.coroutines.CancellableContinuationImpl -> x3.k:
    kotlin.coroutines.Continuation delegate -> i
    kotlin.coroutines.CoroutineContext context -> j
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _decisionAndIndex$FU -> k
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> l
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _parentHandle$FU -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlin.coroutines.Continuation,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;I)V"}
    1:1:void completeResume(java.lang.Object):0:0 -> A
    1:1:kotlinx.coroutines.DisposableHandle installParentHandle():0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/o0;"}
    1:1:void invokeOnCancellationImpl(java.lang.Object):0:0 -> C
    1:1:boolean isCompleted():0:0 -> D
    1:1:boolean isReusable():0:0 -> E
    1:1:void multipleHandlersError(java.lang.Object,java.lang.Object):0:0 -> F
    1:1:java.lang.String nameString():0:0 -> G
    1:1:void parentCancelled$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> H
    1:1:void releaseClaimedReusableContinuation$kotlinx_coroutines_core():0:0 -> I
    1:1:boolean resetStateReusable():0:0 -> J
    1:1:void resume(java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> K
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lp3/l;)V"}
    1:1:void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1):0:0 -> L
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILp3/l;)V"}
    1:1:void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> M
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/k;Ljava/lang/Object;ILp3/l;ILjava/lang/Object;)V"}
    1:1:java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object):0:0 -> N
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/r1;Ljava/lang/Object;ILp3/l;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:1:boolean tryResume():0:0 -> O
    1:1:kotlinx.coroutines.internal.Symbol tryResumeImpl(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Lp3/l;)Lc4/h0;"}
    1:1:boolean trySuspend():0:0 -> Q
    1:1:void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/e0;I)V"}
    1:1:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable):0:0 -> b
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g;"}
    1:1:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/d;"}
    1:1:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> e
    1:1:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> f
    1:1:java.lang.Object takeState$kotlinx_coroutines_core():0:0 -> h
    1:1:java.lang.Void alreadyResumedError(java.lang.Object):0:0 -> i
    1:1:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/h;Ljava/lang/Throwable;)V"}
    1:1:void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;Ljava/lang/Throwable;)V"}
    1:1:void callSegmentOnCancellation(kotlinx.coroutines.internal.Segment,java.lang.Throwable):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/e0;Ljava/lang/Throwable;)V"}
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj3/e;"}
    1:1:boolean cancel(java.lang.Throwable):0:0 -> n
    1:1:boolean cancelLater(java.lang.Throwable):0:0 -> o
    1:1:void detachChild$kotlinx_coroutines_core():0:0 -> p
    1:1:void detachChildIfNonResuable():0:0 -> q
    1:1:void dispatchResume(int):0:0 -> r
    1:1:java.lang.Throwable getContinuationCancellationCause(kotlinx.coroutines.Job):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;)Ljava/lang/Throwable;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> t
    1:1:java.lang.String toString():0:0 -> toString
    1:1:kotlinx.coroutines.DisposableHandle getParentHandle():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/o0;"}
    1:1:java.lang.Object getResult():0:0 -> v
    1:1:java.lang.Object getState$kotlinx_coroutines_core():0:0 -> w
    1:1:java.lang.String getStateDebugRepresentation():0:0 -> x
    1:1:java.lang.Object tryResume(java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Ljava/lang/Object;Lp3/l;)Ljava/lang/Object;"}
    1:1:void initCancellability():0:0 -> z
kotlinx.coroutines.CancellableContinuationImplKt -> x3.l:
    kotlinx.coroutines.internal.Symbol RESUME_TOKEN -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.CancellableContinuationKt -> x3.m:
    1:1:kotlinx.coroutines.CancellableContinuationImpl getOrCreateCancellableContinuation(kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)Lx3/k;"}
kotlinx.coroutines.CancelledContinuation -> x3.n:
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _resumed$FU -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlin.coroutines.Continuation,java.lang.Throwable,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;Ljava/lang/Throwable;Z)V"}
    1:1:boolean makeResumed():0:0 -> c
kotlinx.coroutines.ChildContinuation -> x3.o:
    kotlinx.coroutines.CancellableContinuationImpl child -> j
    1:1:void <init>(kotlinx.coroutines.CancellableContinuationImpl):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/k;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
    1:1:void invoke(java.lang.Throwable):0:0 -> w
kotlinx.coroutines.ChildHandle -> x3.p:
    boolean childCancelled(java.lang.Throwable) -> c
kotlinx.coroutines.ChildHandleNode -> x3.q:
    kotlinx.coroutines.ChildJob childJob -> j
    1:1:void <init>(kotlinx.coroutines.ChildJob):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/r;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
    1:1:boolean childCancelled(java.lang.Throwable):0:0 -> c
    1:1:void invoke(java.lang.Throwable):0:0 -> w
kotlinx.coroutines.ChildJob -> x3.r:
    void parentCancelled(kotlinx.coroutines.ParentJob) -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/s1;)V"}
kotlinx.coroutines.CompletableJob -> x3.s:
kotlinx.coroutines.CompletedContinuation -> x3.t:
    java.lang.Object result -> a
    kotlin.jvm.functions.Function1 onCancellation -> b
    java.lang.Object idempotentResume -> c
    java.lang.Throwable cancelCause -> d
    1:1:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lx3/h;Lp3/l;Ljava/lang/Object;Ljava/lang/Throwable;)V"}
    2:2:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lx3/h;Lp3/l;Ljava/lang/Object;Ljava/lang/Throwable;ILq3/g;)V"}
    1:1:kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lx3/h;Lp3/l;Ljava/lang/Object;Ljava/lang/Throwable;)Lx3/t;"}
    1:1:kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/t;Ljava/lang/Object;Lx3/h;Lp3/l;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lx3/t;"}
    1:1:boolean getCancelled():0:0 -> c
    1:1:void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/k;Ljava/lang/Throwable;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.CompletedExceptionally -> x3.u:
    java.lang.Throwable cause -> a
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _handled$FU -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Throwable,boolean):0:0 -> <init>
    2:2:void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;ZILq3/g;)V"}
    1:1:boolean getHandled():0:0 -> a
    1:1:boolean makeHandled():0:0 -> b
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.CompletedWithCancellation -> x3.v:
    java.lang.Object result -> a
    kotlin.jvm.functions.Function1 onCancellation -> b
    1:1:void <init>(java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lp3/l;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.CompletionHandlerBase -> x3.w:
    void <init>() -> <init>
    void invoke(java.lang.Throwable) -> w
kotlinx.coroutines.CompletionHandlerException -> x3.x:
    1:1:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
kotlinx.coroutines.CompletionStateKt -> x3.y:
    1:1:java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lp3/l;)Ljava/lang/Object;"}
    1:1:java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lx3/j;)Ljava/lang/Object;"}
    1:1:java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lp3/l;ILjava/lang/Object;)Ljava/lang/Object;"}
kotlinx.coroutines.CoroutineContextKt -> x3.z:
    1:1:kotlin.coroutines.CoroutineContext foldCopies(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Lh3/g;Z)Lh3/g;"}
    1:1:java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Ljava/lang/String;"}
    1:1:boolean hasCopyableElements(kotlin.coroutines.CoroutineContext):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Z"}
    1:1:kotlin.coroutines.CoroutineContext newCoroutineContext(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/d0;Lh3/g;)Lh3/g;"}
    1:1:kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj3/e;)Lx3/x1;"}
    1:1:kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;Lh3/g;Ljava/lang/Object;)Lx3/x1;"}
kotlinx.coroutines.CoroutineContextKt$foldCopies$1 -> x3.z$a:
    kotlinx.coroutines.CoroutineContextKt$foldCopies$1 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Lh3/g$b;)Lh3/g;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
kotlinx.coroutines.CoroutineContextKt$foldCopies$folded$1 -> x3.z$b:
    kotlin.jvm.internal.Ref$ObjectRef $leftoverContext -> g
    boolean $isNewCoroutine -> h
    1:1:void <init>(kotlin.jvm.internal.Ref$ObjectRef,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/q;Z)V"}
    1:1:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Lh3/g$b;)Lh3/g;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 -> x3.z$c:
    kotlinx.coroutines.CoroutineContextKt$hasCopyableElements$1 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Boolean invoke(boolean,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZLh3/g$b;)Ljava/lang/Boolean;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
kotlinx.coroutines.CoroutineDispatcher -> x3.a0:
    kotlinx.coroutines.CoroutineDispatcher$Key Key -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g$b;"}
    void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)V"}
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Z"}
    1:1:kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)Lh3/d;"}
    1:1:kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lx3/a0;"}
    1:1:void releaseInterceptedContinuation(kotlin.coroutines.Continuation):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)V"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g;"}
kotlinx.coroutines.CoroutineDispatcher$Key -> x3.a0$a:
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
kotlinx.coroutines.CoroutineDispatcher$Key$1 -> x3.a0$a$a:
    kotlinx.coroutines.CoroutineDispatcher$Key$1 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$b;)Lx3/a0;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
kotlinx.coroutines.CoroutineExceptionHandler -> x3.b0:
    kotlinx.coroutines.CoroutineExceptionHandler$Key Key -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.CoroutineExceptionHandler$Key -> x3.b0$a:
    kotlinx.coroutines.CoroutineExceptionHandler$Key $$INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlinx.coroutines.CoroutineExceptionHandlerKt -> x3.c0:
    1:1:void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Throwable;)V"}
    1:1:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable):0:0 -> b
kotlinx.coroutines.CoroutineScope -> x3.d0:
    kotlin.coroutines.CoroutineContext getCoroutineContext() -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g;"}
kotlinx.coroutines.CoroutineScopeKt -> x3.e0:
    1:1:kotlinx.coroutines.CoroutineScope CoroutineScope(kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Lx3/d0;"}
    1:1:java.lang.Object coroutineScope(kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;Lh3/d;)Ljava/lang/Object;"}
kotlinx.coroutines.CoroutineStart -> x3.f0:
    kotlinx.coroutines.CoroutineStart DEFAULT -> f
    kotlinx.coroutines.CoroutineStart LAZY -> g
    kotlinx.coroutines.CoroutineStart ATOMIC -> h
    kotlinx.coroutines.CoroutineStart UNDISPATCHED -> i
    kotlinx.coroutines.CoroutineStart[] $VALUES -> j
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlinx.coroutines.CoroutineStart[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lx3/f0;"}
    1:1:void invoke(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;Ljava/lang/Object;Lh3/d;)V"}
    1:1:boolean isLazy():0:0 -> c
    1:1:kotlinx.coroutines.CoroutineStart valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lx3/f0;"}
    1:1:kotlinx.coroutines.CoroutineStart[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lx3/f0;"}
kotlinx.coroutines.CoroutineStart$WhenMappings -> x3.f0$a:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.CoroutinesInternalError -> x3.g0:
    1:1:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
kotlinx.coroutines.DebugStringsKt -> x3.h0:
    1:1:java.lang.String getClassSimpleName(java.lang.Object):0:0 -> a
    1:1:java.lang.String getHexAddress(java.lang.Object):0:0 -> b
    1:1:java.lang.String toDebugString(kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)Ljava/lang/String;"}
kotlinx.coroutines.DefaultExecutor -> x3.i0:
    kotlinx.coroutines.DefaultExecutor INSTANCE -> n
    long KEEP_ALIVE_NANOS -> o
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void shutdown():0:0 -> D
    1:1:java.lang.Thread getThread():0:0 -> E
    1:1:void enqueue(java.lang.Runnable):0:0 -> I
    1:1:void acknowledgeShutdownIfNeeded():0:0 -> Q
    1:1:java.lang.Thread createThreadSync():0:0 -> R
    1:1:boolean isShutDown():0:0 -> S
    1:1:boolean isShutdownRequested():0:0 -> T
    1:1:boolean notifyStartup():0:0 -> U
    1:1:void shutdownError():0:0 -> V
    1:1:void run():0:0 -> run
kotlinx.coroutines.DefaultExecutorKt -> x3.j0:
    boolean defaultMainDelayOptIn -> a
    kotlinx.coroutines.Delay DefaultDelay -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.Delay getDefaultDelay():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/k0;"}
    1:1:kotlinx.coroutines.Delay initializeDefaultDelay():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/k0;"}
kotlinx.coroutines.Delay -> x3.k0:
kotlinx.coroutines.DispatchedTask -> x3.l0:
    int resumeMode -> h
    1:1:void <init>(int):0:0 -> <init>
    void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> b
    kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/d;"}
    1:1:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> e
    1:1:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object):0:0 -> f
    1:1:void handleFatalException(java.lang.Throwable,java.lang.Throwable):0:0 -> g
    java.lang.Object takeState$kotlinx_coroutines_core() -> h
    1:1:void run():0:0 -> run
kotlinx.coroutines.DispatchedTaskKt -> x3.m0:
    1:1:void dispatch(kotlinx.coroutines.DispatchedTask,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l0;I)V"}
    1:1:boolean isCancellableMode(int):0:0 -> b
    1:1:boolean isReusableMode(int):0:0 -> c
    1:1:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l0;Lh3/d;Z)V"}
    1:1:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l0;)V"}
kotlinx.coroutines.Dispatchers -> x3.n0:
    kotlinx.coroutines.Dispatchers INSTANCE -> a
    kotlinx.coroutines.CoroutineDispatcher Default -> b
    kotlinx.coroutines.CoroutineDispatcher Unconfined -> c
    kotlinx.coroutines.CoroutineDispatcher IO -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlinx.coroutines.CoroutineDispatcher getDefault():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/a0;"}
    1:1:kotlinx.coroutines.CoroutineDispatcher getIO():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/a0;"}
    1:1:kotlinx.coroutines.MainCoroutineDispatcher getMain():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/o1;"}
kotlinx.coroutines.DisposableHandle -> x3.o0:
    void dispose() -> a
kotlinx.coroutines.Empty -> x3.p0:
    boolean isActive -> f
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:boolean isActive():0:0 -> d
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.EventLoop -> x3.q0:
    long useCount -> h
    boolean shared -> i
    kotlin.collections.ArrayDeque unconfinedQueue -> j
    void <init>() -> <init>
    1:1:boolean isUnconfinedQueueEmpty():0:0 -> A
    1:1:boolean processUnconfinedEvent():0:0 -> C
    void shutdown() -> D
    1:1:void decrementUseCount(boolean):0:0 -> p
    1:1:long delta(boolean):0:0 -> q
    1:1:void dispatchUnconfined(kotlinx.coroutines.DispatchedTask):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l0;)V"}
    1:1:long getNextTime():0:0 -> s
    1:1:void incrementUseCount(boolean):0:0 -> t
    1:1:void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/q0;ZILjava/lang/Object;)V"}
    1:1:boolean isUnconfinedLoopActive():0:0 -> y
kotlinx.coroutines.EventLoopImplBase -> x3.r0:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _queue$FU -> k
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _delayed$FU -> l
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isCompleted$FU -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void shutdown():0:0 -> D
    1:1:void closeQueue():0:0 -> G
    1:1:java.lang.Runnable dequeue():0:0 -> H
    1:1:void enqueue(java.lang.Runnable):0:0 -> I
    1:1:boolean enqueueImpl(java.lang.Runnable):0:0 -> J
    1:1:boolean isCompleted():0:0 -> K
    1:1:boolean isEmpty():0:0 -> L
    1:1:long processNextEvent():0:0 -> M
    1:1:void rescheduleAllDelayed():0:0 -> N
    1:1:void resetAll():0:0 -> O
    1:1:void setCompleted(boolean):0:0 -> P
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)V"}
    1:1:long getNextTime():0:0 -> s
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue -> x3.r0$a:
kotlinx.coroutines.EventLoopImplPlatform -> x3.s0:
    void <init>() -> <init>
    java.lang.Thread getThread() -> E
    1:1:void unpark():0:0 -> F
kotlinx.coroutines.EventLoopKt -> x3.t0:
    1:1:kotlinx.coroutines.EventLoop createEventLoop():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/q0;"}
kotlinx.coroutines.EventLoop_commonKt -> x3.u0:
    kotlinx.coroutines.internal.Symbol DISPOSED_TASK -> a
    kotlinx.coroutines.internal.Symbol CLOSED_EMPTY -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
kotlinx.coroutines.ExceptionsKt -> x3.v0:
    1:1:java.util.concurrent.CancellationException CancellationException(java.lang.String,java.lang.Throwable):0:0 -> a
kotlinx.coroutines.ExecutorCoroutineDispatcher -> x3.w0:
    kotlinx.coroutines.ExecutorCoroutineDispatcher$Key Key -> h
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key -> x3.w0$a:
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 -> x3.w0$a$a:
    kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$b;)Lx3/w0;"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
kotlinx.coroutines.ExecutorCoroutineDispatcherImpl -> x3.x0:
    java.util.concurrent.Executor executor -> i
    1:1:void <init>(java.util.concurrent.Executor):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)V"}
    1:1:void close():0:0 -> close
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:void cancelJobOnRejection(kotlin.coroutines.CoroutineContext,java.util.concurrent.RejectedExecutionException):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/util/concurrent/RejectedExecutionException;)V"}
    1:1:java.util.concurrent.Executor getExecutor():0:0 -> q
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.ExecutorsKt -> x3.y0:
    1:1:kotlinx.coroutines.CoroutineDispatcher from(java.util.concurrent.Executor):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/concurrent/Executor;)Lx3/a0;"}
kotlinx.coroutines.InactiveNodeList -> x3.z0:
    kotlinx.coroutines.NodeList list -> f
    1:1:void <init>(kotlinx.coroutines.NodeList):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/p1;)V"}
    1:1:boolean isActive():0:0 -> d
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.Incomplete -> x3.a1:
    boolean isActive() -> d
    kotlinx.coroutines.NodeList getList() -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/p1;"}
kotlinx.coroutines.IncompleteStateBox -> x3.b1:
    kotlinx.coroutines.Incomplete state -> a
    1:1:void <init>(kotlinx.coroutines.Incomplete):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/a1;)V"}
kotlinx.coroutines.InvokeOnCancelling -> x3.c1:
    kotlin.jvm.functions.Function1 handler -> j
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _invoked$FU -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
    1:1:void invoke(java.lang.Throwable):0:0 -> w
kotlinx.coroutines.InvokeOnCompletion -> x3.d1:
    kotlin.jvm.functions.Function1 handler -> j
    1:1:void <init>(kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
    1:1:void invoke(java.lang.Throwable):0:0 -> w
kotlinx.coroutines.Job -> x3.e1:
    kotlinx.coroutines.Job$Key Key -> d
    1:1:void <clinit>():0:0 -> <clinit>
    void cancel(java.util.concurrent.CancellationException) -> b
    boolean isActive() -> d
    boolean start() -> f
    kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZLp3/l;)Lx3/o0;"}
    java.util.concurrent.CancellationException getCancellationException() -> k
    kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob) -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/r;)Lx3/p;"}
kotlinx.coroutines.Job$DefaultImpls -> x3.e1$a:
    1:1:void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V"}
    1:1:java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;Ljava/lang/Object;Lp3/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;Lh3/g$c;)Lh3/g$b;"}
    1:1:kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;ZZLp3/l;ILjava/lang/Object;)Lx3/o0;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;Lh3/g$c;)Lh3/g;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;Lh3/g;)Lh3/g;"}
kotlinx.coroutines.Job$Key -> x3.e1$b:
    kotlinx.coroutines.Job$Key $$INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
kotlinx.coroutines.JobCancellationException -> x3.f1:
    kotlinx.coroutines.Job job -> f
    1:1:void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/Throwable;Lx3/e1;)V"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Throwable fillInStackTrace():0:0 -> fillInStackTrace
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.JobCancellingNode -> x3.g1:
    void <init>() -> <init>
kotlinx.coroutines.JobImpl -> x3.h1:
    boolean handlesException -> h
    1:1:void <init>(kotlinx.coroutines.Job):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;)V"}
    1:1:boolean handlesException():0:0 -> F0
    1:1:boolean getHandlesException$kotlinx_coroutines_core():0:0 -> V
    1:1:boolean getOnCancelComplete$kotlinx_coroutines_core():0:0 -> W
kotlinx.coroutines.JobKt -> x3.i1:
    1:1:kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;)Lx3/s;"}
    1:1:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;ILjava/lang/Object;)Lx3/s;"}
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/util/concurrent/CancellationException;)V"}
    1:1:void ensureActive(kotlinx.coroutines.Job):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;)V"}
kotlinx.coroutines.JobKt__JobKt -> x3.j1:
    1:1:kotlinx.coroutines.CompletableJob Job(kotlinx.coroutines.Job):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;)Lx3/s;"}
    1:1:kotlinx.coroutines.CompletableJob Job$default(kotlinx.coroutines.Job,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;ILjava/lang/Object;)Lx3/s;"}
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/util/concurrent/CancellationException;)V"}
    1:1:void ensureActive(kotlinx.coroutines.Job):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;)V"}
kotlinx.coroutines.JobNode -> x3.k1:
    kotlinx.coroutines.JobSupport job -> i
    void <init>() -> <init>
    1:1:void dispose():0:0 -> a
    1:1:boolean isActive():0:0 -> d
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:kotlinx.coroutines.JobSupport getJob():0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/l1;"}
    1:1:void setJob(kotlinx.coroutines.JobSupport):0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l1;)V"}
kotlinx.coroutines.JobSupport -> x3.l1:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> f
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _parentHandle$FU -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object):0:0 -> A0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/a1;Ljava/lang/Object;)Z"}
    1:1:void parentCancelled(kotlinx.coroutines.ParentJob):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/s1;)V"}
    1:1:boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable):0:0 -> B0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/a1;Ljava/lang/Throwable;)Z"}
    1:1:java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l1;)Ljava/lang/String;"}
    1:1:java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object):0:0 -> C0
    1:1:void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l1;Lx3/l1$b;Lx3/q;Ljava/lang/Object;)V"}
    1:1:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object):0:0 -> D0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/a1;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:1:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lx3/p1;Lx3/k1;)Z"}
    1:1:boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> E0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l1$b;Lx3/q;Ljava/lang/Object;)Z"}
    1:1:void addSuppressedExceptions(java.lang.Throwable,java.util.List):0:0 -> F
    1:1:void afterCompletion(java.lang.Object):0:0 -> G
    1:1:boolean cancelCoroutine(java.lang.Throwable):0:0 -> H
    1:1:boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object):0:0 -> I
    1:1:void cancelInternal(java.lang.Throwable):0:0 -> J
    1:1:java.lang.Object cancelMakeCompleting(java.lang.Object):0:0 -> K
    1:1:boolean cancelParent(java.lang.Throwable):0:0 -> L
    1:1:java.lang.String cancellationExceptionMessage():0:0 -> M
    1:1:boolean childCancelled(java.lang.Throwable):0:0 -> N
    1:1:void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/a1;Ljava/lang/Object;)V"}
    1:1:void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> P
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l1$b;Lx3/q;Ljava/lang/Object;)V"}
    1:1:java.lang.Throwable createCauseException(java.lang.Object):0:0 -> Q
    1:1:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object):0:0 -> R
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l1$b;Ljava/lang/Object;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete):0:0 -> S
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/a1;)Lx3/q;"}
    1:1:java.lang.Throwable getExceptionOrNull(java.lang.Object):0:0 -> T
    1:1:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List):0:0 -> U
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l1$b;Ljava/util/List;)Ljava/lang/Throwable;"}
    1:1:boolean getHandlesException$kotlinx_coroutines_core():0:0 -> V
    1:1:boolean getOnCancelComplete$kotlinx_coroutines_core():0:0 -> W
    1:1:kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/a1;)Lx3/p1;"}
    1:1:kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core():0:0 -> Y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/p;"}
    1:1:java.lang.Object getState$kotlinx_coroutines_core():0:0 -> Z
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g$b;"}
    1:1:boolean handleJobException(java.lang.Throwable):0:0 -> a0
    1:1:void cancel(java.util.concurrent.CancellationException):0:0 -> b
    1:1:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> b0
    1:1:void initParentJob(kotlinx.coroutines.Job):0:0 -> c0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/e1;)V"}
    1:1:boolean isActive():0:0 -> d
    1:1:kotlinx.coroutines.DisposableHandle invokeOnCompletion(kotlin.jvm.functions.Function1):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;)Lx3/o0;"}
    1:1:boolean isCancelled():0:0 -> e0
    1:1:boolean start():0:0 -> f
    1:1:boolean isCompleted():0:0 -> f0
    1:1:java.util.concurrent.CancellationException getChildJobCancellationCause():0:0 -> g
    1:1:boolean isScopedCoroutine():0:0 -> g0
    1:1:kotlin.coroutines.CoroutineContext$Key getKey():0:0 -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g$c;"}
    1:1:java.lang.Object makeCancelling(java.lang.Object):0:0 -> h0
    1:1:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object):0:0 -> i0
    1:1:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ZZLp3/l;)Lx3/o0;"}
    1:1:kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;Z)Lx3/k1;"}
    1:1:java.util.concurrent.CancellationException getCancellationException():0:0 -> k
    1:1:java.lang.String nameString$kotlinx_coroutines_core():0:0 -> k0
    1:1:kotlinx.coroutines.ChildHandle attachChild(kotlinx.coroutines.ChildJob):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/r;)Lx3/p;"}
    1:1:kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/s;)Lx3/q;"}
    1:1:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/p1;Ljava/lang/Throwable;)V"}
    1:1:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/p1;Ljava/lang/Throwable;)V"}
    1:1:void onCancelling(java.lang.Throwable):0:0 -> o0
    1:1:void onCompletionInternal(java.lang.Object):0:0 -> p0
    1:1:void onStart():0:0 -> q0
    1:1:void promoteEmptyToNodeList(kotlinx.coroutines.Empty):0:0 -> r0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/p0;)V"}
    1:1:void promoteSingleToNodeList(kotlinx.coroutines.JobNode):0:0 -> s0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/k1;)V"}
    1:1:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode):0:0 -> t0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/k1;)V"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lp3/p;)Ljava/lang/Object;"}
    1:1:void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/p;)V"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g;"}
    1:1:int startInternal(java.lang.Object):0:0 -> v0
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Lh3/g;"}
    1:1:java.lang.String stateString(java.lang.Object):0:0 -> w0
    1:1:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String):0:0 -> x0
    1:1:java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object):0:0 -> y0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l1;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;"}
    1:1:java.lang.String toDebugString():0:0 -> z0
kotlinx.coroutines.JobSupport$ChildCompletion -> x3.l1$a:
    kotlinx.coroutines.JobSupport parent -> j
    kotlinx.coroutines.JobSupport$Finishing state -> k
    kotlinx.coroutines.ChildHandleNode child -> l
    java.lang.Object proposedUpdate -> m
    1:1:void <init>(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/l1;Lx3/l1$b;Lx3/q;Ljava/lang/Object;)V"}
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
    1:1:void invoke(java.lang.Throwable):0:0 -> w
kotlinx.coroutines.JobSupport$Finishing -> x3.l1$b:
    kotlinx.coroutines.NodeList list -> f
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isCompleting$FU -> g
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _rootCause$FU -> h
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _exceptionsHolder$FU -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/p1;ZLjava/lang/Throwable;)V"}
    1:1:void addExceptionLocked(java.lang.Throwable):0:0 -> a
    1:1:java.util.ArrayList allocateList():0:0 -> b
    1:1:java.lang.Object getExceptionsHolder():0:0 -> c
    1:1:boolean isActive():0:0 -> d
    1:1:java.lang.Throwable getRootCause():0:0 -> e
    1:1:boolean isCancelling():0:0 -> f
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/p1;"}
    1:1:boolean isCompleting():0:0 -> h
    1:1:boolean isSealed():0:0 -> i
    1:1:java.util.List sealLocked(java.lang.Throwable):0:0 -> j
    1:1:void setCompleting(boolean):0:0 -> k
    1:1:void setExceptionsHolder(java.lang.Object):0:0 -> l
    1:1:void setRootCause(java.lang.Throwable):0:0 -> m
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1 -> x3.l1$c:
    kotlinx.coroutines.JobSupport this$0 -> d
    java.lang.Object $expect$inlined -> e
    1:1:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/s;Lx3/l1;Ljava/lang/Object;)V"}
    1:1:java.lang.Object prepare(java.lang.Object):0:0 -> d
    1:1:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/s;)Ljava/lang/Object;"}
kotlinx.coroutines.JobSupportKt -> x3.m1:
    kotlinx.coroutines.internal.Symbol COMPLETING_ALREADY -> a
    kotlinx.coroutines.internal.Symbol COMPLETING_WAITING_CHILDREN -> b
    kotlinx.coroutines.internal.Symbol COMPLETING_RETRY -> c
    kotlinx.coroutines.internal.Symbol TOO_LATE_TO_CANCEL -> d
    kotlinx.coroutines.internal.Symbol SEALED -> e
    kotlinx.coroutines.Empty EMPTY_NEW -> f
    kotlinx.coroutines.Empty EMPTY_ACTIVE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/p0;"}
    1:1:kotlinx.coroutines.Empty access$getEMPTY_NEW$p():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/p0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getSEALED$p():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:java.lang.Object boxIncomplete(java.lang.Object):0:0 -> g
    1:1:java.lang.Object unboxState(java.lang.Object):0:0 -> h
kotlinx.coroutines.LazyStandaloneCoroutine -> x3.n1:
    kotlin.coroutines.Continuation continuation -> i
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Lp3/p;)V"}
    1:1:void onStart():0:0 -> q0
kotlinx.coroutines.MainCoroutineDispatcher -> x3.o1:
    void <init>() -> <init>
    kotlinx.coroutines.MainCoroutineDispatcher getImmediate() -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/o1;"}
    1:1:java.lang.String toStringInternalImpl():0:0 -> q
kotlinx.coroutines.NodeList -> x3.p1:
    void <init>() -> <init>
    1:1:boolean isActive():0:0 -> d
    1:1:kotlinx.coroutines.NodeList getList():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/p1;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.NonDisposableHandle -> x3.q1:
    kotlinx.coroutines.NonDisposableHandle INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispose():0:0 -> a
    1:1:boolean childCancelled(java.lang.Throwable):0:0 -> c
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.NotCompleted -> x3.r1:
kotlinx.coroutines.ParentJob -> x3.s1:
    java.util.concurrent.CancellationException getChildJobCancellationCause() -> g
kotlinx.coroutines.StandaloneCoroutine -> x3.t1:
    1:1:void <init>(kotlin.coroutines.CoroutineContext,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Z)V"}
    1:1:boolean handleJobException(java.lang.Throwable):0:0 -> a0
kotlinx.coroutines.ThreadContextElement -> x3.u1:
    java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext) -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Ljava/lang/Object;"}
    void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Object;)V"}
kotlinx.coroutines.ThreadLocalEventLoop -> x3.v1:
    kotlinx.coroutines.ThreadLocalEventLoop INSTANCE -> a
    java.lang.ThreadLocal ref -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/q0;"}
    1:1:void resetEventLoop$kotlinx_coroutines_core():0:0 -> b
    1:1:void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/q0;)V"}
kotlinx.coroutines.Unconfined -> x3.w1:
    kotlinx.coroutines.Unconfined INSTANCE -> h
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)V"}
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Z"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.UndispatchedCoroutine -> x3.x1:
kotlinx.coroutines.UndispatchedMarker -> x3.y1:
    kotlinx.coroutines.UndispatchedMarker INSTANCE -> f
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g$b;"}
    1:1:kotlin.coroutines.CoroutineContext$Key getKey():0:0 -> getKey
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g$c;"}
    1:1:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lp3/p;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g$c;)Lh3/g;"}
    1:1:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext):0:0 -> w
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Lh3/g;"}
kotlinx.coroutines.Waiter -> x3.z1:
    void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/e0;I)V"}
kotlinx.coroutines.YieldContext -> x3.a2:
    kotlinx.coroutines.YieldContext$Key Key -> g
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.YieldContext$Key -> x3.a2$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
kotlinx.coroutines.android.AndroidDispatcherFactory -> y3.a:
    void <init>() -> <init>
    1:1:int getLoadPriority():0:0 -> a
    1:1:java.lang.String hintOnError():0:0 -> b
    1:1:kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lx3/o1;"}
kotlinx.coroutines.android.AndroidExceptionPreHandler -> y3.b:
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.reflect.Method preHandler():0:0 -> c
    1:1:void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.android.HandlerContext -> y3.c:
    android.os.Handler handler -> h
    java.lang.String name -> i
    boolean invokeImmediately -> j
    kotlinx.coroutines.android.HandlerContext immediate -> k
    1:1:void <init>(android.os.Handler,java.lang.String):0:0 -> <init>
    2:2:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Handler;Ljava/lang/String;ILq3/g;)V"}
    3:3:void <init>(android.os.Handler,java.lang.String,boolean):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)V"}
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Z"}
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:kotlinx.coroutines.MainCoroutineDispatcher getImmediate():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/o1;"}
    1:1:void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)V"}
    1:1:kotlinx.coroutines.android.HandlerContext getImmediate():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Ly3/c;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.android.HandlerDispatcher -> y3.d:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
kotlinx.coroutines.android.HandlerDispatcherKt -> y3.e:
    kotlinx.coroutines.android.HandlerDispatcher Main -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:android.os.Handler asHandler(android.os.Looper,boolean):0:0 -> a
kotlinx.coroutines.channels.BufferOverflow -> z3.a:
    kotlinx.coroutines.channels.BufferOverflow SUSPEND -> f
    kotlinx.coroutines.channels.BufferOverflow DROP_OLDEST -> g
    kotlinx.coroutines.channels.BufferOverflow DROP_LATEST -> h
    kotlinx.coroutines.channels.BufferOverflow[] $VALUES -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlinx.coroutines.channels.BufferOverflow[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz3/a;"}
    1:1:kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Lz3/a;"}
    1:1:kotlinx.coroutines.channels.BufferOverflow[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lz3/a;"}
kotlinx.coroutines.channels.BufferedChannel -> z3.b:
    int capacity -> f
    kotlin.jvm.functions.Function1 onUndeliveredElement -> g
    kotlin.jvm.functions.Function3 onUndeliveredElementReceiveCancellationConstructor -> h
    java.util.concurrent.atomic.AtomicLongFieldUpdater sendersAndCloseStatus$FU -> i
    java.util.concurrent.atomic.AtomicLongFieldUpdater receivers$FU -> j
    java.util.concurrent.atomic.AtomicLongFieldUpdater bufferEnd$FU -> k
    java.util.concurrent.atomic.AtomicLongFieldUpdater completedExpandBuffersAndPauseFlag$FU -> l
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater sendSegment$FU -> m
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater receiveSegment$FU -> n
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater bufferEndSegment$FU -> o
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _closeCause$FU -> p
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater closeHandler$FU -> q
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILp3/l;)V"}
    1:1:void completeCloseOrCancel():0:0 -> A
    1:1:void waitExpandBufferCompletion$kotlinx_coroutines_core(long):0:0 -> A0
    1:1:void dropFirstElementUntilTheSpecifiedCellIsInTheBuffer(long):0:0 -> B
    1:1:void expandBuffer():0:0 -> C
    1:1:kotlinx.coroutines.channels.ChannelSegment findSegmentBufferEnd(long,kotlinx.coroutines.channels.ChannelSegment,long):0:0 -> D
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLz3/j;J)Lz3/j;"}
    1:1:kotlinx.coroutines.channels.ChannelSegment findSegmentReceive(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> E
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLz3/j;)Lz3/j;"}
    1:1:kotlinx.coroutines.channels.ChannelSegment findSegmentSend(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> F
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLz3/j;)Lz3/j;"}
    1:1:long getBufferEndCounter():0:0 -> G
    1:1:java.lang.Throwable getCloseCause():0:0 -> H
    1:1:java.lang.Throwable getReceiveException():0:0 -> I
    1:1:long getReceiversCounter$kotlinx_coroutines_core():0:0 -> J
    1:1:java.lang.Throwable getSendException():0:0 -> K
    1:1:long getSendersCounter$kotlinx_coroutines_core():0:0 -> L
    1:1:boolean hasElements$kotlinx_coroutines_core():0:0 -> M
    1:1:void incCompletedExpandBufferAttempts(long):0:0 -> N
    1:1:void incCompletedExpandBufferAttempts$default(kotlinx.coroutines.channels.BufferedChannel,long,int,java.lang.Object):0:0 -> O
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;JILjava/lang/Object;)V"}
    1:1:void invokeCloseHandler():0:0 -> P
    1:1:boolean isCellNonEmpty(kotlinx.coroutines.channels.ChannelSegment,int,long):0:0 -> Q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;IJ)Z"}
    1:1:boolean isClosed(long,boolean):0:0 -> R
    1:1:boolean isClosedForReceive():0:0 -> S
    1:1:boolean isClosedForReceive0(long):0:0 -> T
    1:1:boolean isClosedForSend0(long):0:0 -> U
    1:1:boolean isConflatedDropOldest():0:0 -> V
    1:1:boolean isRendezvousOrUnlimited():0:0 -> W
    1:1:long markAllEmptyCellsAsClosed(kotlinx.coroutines.channels.ChannelSegment):0:0 -> X
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;)J"}
    1:1:void markCancellationStarted():0:0 -> Y
    1:1:void markCancelled():0:0 -> Z
    1:1:kotlinx.coroutines.channels.ChannelSegment access$findSegmentReceive(kotlinx.coroutines.channels.BufferedChannel,long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;JLz3/j;)Lz3/j;"}
    1:1:void markClosed():0:0 -> a0
    1:1:void cancel(java.util.concurrent.CancellationException):0:0 -> b
    1:1:void moveSegmentBufferEndToSpecifiedOrLast(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> b0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLz3/j;)V"}
    1:1:kotlinx.coroutines.channels.ChannelSegment access$findSegmentSend(kotlinx.coroutines.channels.BufferedChannel,long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;JLz3/j;)Lz3/j;"}
    1:1:void onClosedIdempotent():0:0 -> c0
    1:1:java.lang.Throwable access$getReceiveException(kotlinx.coroutines.channels.BufferedChannel):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;)Ljava/lang/Throwable;"}
    1:1:java.lang.Object onClosedSend(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> d0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
    1:1:void onClosedSendOnNoWaiterSuspend(java.lang.Object,kotlinx.coroutines.CancellableContinuation):0:0 -> e0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lx3/j;)V"}
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getReceiveSegment$FU$p():0:0 -> f
    1:1:void onReceiveDequeued():0:0 -> f0
    1:1:java.util.concurrent.atomic.AtomicLongFieldUpdater access$getReceivers$FU$p():0:0 -> g
    1:1:void onReceiveEnqueued():0:0 -> g0
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$getSendSegment$FU$p():0:0 -> h
    1:1:void prepareReceiverForSuspension(kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> h0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/z1;Lz3/j;I)V"}
    1:1:java.util.concurrent.atomic.AtomicLongFieldUpdater access$getSendersAndCloseStatus$FU$p():0:0 -> i
    1:1:void prepareSenderForSuspension(kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> i0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/z1;Lz3/j;I)V"}
    1:1:kotlinx.coroutines.channels.ChannelIterator iterator():0:0 -> iterator
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz3/f;"}
    1:1:boolean access$isClosedForSend0(kotlinx.coroutines.channels.BufferedChannel,long):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;J)Z"}
    1:1:void removeUnprocessedElements(kotlinx.coroutines.channels.ChannelSegment):0:0 -> j0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;)V"}
    1:1:void access$onClosedSendOnNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlinx.coroutines.CancellableContinuation):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;Ljava/lang/Object;Lx3/j;)V"}
    1:1:void resumeReceiverOnClosedChannel(kotlinx.coroutines.Waiter):0:0 -> k0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/z1;)V"}
    1:1:void access$prepareReceiverForSuspension(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;Lx3/z1;Lz3/j;I)V"}
    1:1:void resumeSenderOnCancelledChannel(kotlinx.coroutines.Waiter):0:0 -> l0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/z1;)V"}
    1:1:void access$prepareSenderForSuspension(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.Waiter,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;Lx3/z1;Lz3/j;I)V"}
    1:1:void resumeWaiterOnClosedChannel(kotlinx.coroutines.Waiter,boolean):0:0 -> m0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/z1;Z)V"}
    1:1:java.lang.Object access$updateCellReceive(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;Lz3/j;IJLjava/lang/Object;)Ljava/lang/Object;"}
    1:1:java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.BufferedChannel,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> n0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
    1:1:int access$updateCellSend(kotlinx.coroutines.channels.BufferedChannel,kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;Lz3/j;ILjava/lang/Object;JLjava/lang/Object;Z)I"}
    1:1:java.lang.Object sendOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,kotlin.coroutines.Continuation):0:0 -> o0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;ILjava/lang/Object;JLh3/d;)Ljava/lang/Object;"}
    1:1:void invokeOnClose(kotlin.jvm.functions.Function1):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;)V"}
    1:1:boolean shouldSendSuspend(long):0:0 -> p0
    1:1:boolean close(java.lang.Throwable):0:0 -> q
    1:1:boolean tryResumeReceiver(java.lang.Object,java.lang.Object):0:0 -> q0
    1:1:java.lang.Object trySend-JP2dKIU(java.lang.Object):0:0 -> r
    1:1:boolean tryResumeSender(java.lang.Object,kotlinx.coroutines.channels.ChannelSegment,int):0:0 -> r0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lz3/j;I)Z"}
    1:1:boolean bufferOrRendezvousSend(long):0:0 -> s
    1:1:boolean updateCellExpandBuffer(kotlinx.coroutines.channels.ChannelSegment,int,long):0:0 -> s0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;IJ)Z"}
    1:1:boolean cancelImpl$kotlinx_coroutines_core(java.lang.Throwable):0:0 -> t
    1:1:boolean updateCellExpandBufferSlow(kotlinx.coroutines.channels.ChannelSegment,int,long):0:0 -> t0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;IJ)Z"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:void cancelSuspendedReceiveRequests(kotlinx.coroutines.channels.ChannelSegment,long):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;J)V"}
    1:1:java.lang.Object updateCellReceive(kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object):0:0 -> u0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;IJLjava/lang/Object;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.channels.ChannelSegment closeLinkedList():0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz3/j;"}
    1:1:java.lang.Object updateCellReceiveSlow(kotlinx.coroutines.channels.ChannelSegment,int,long,java.lang.Object):0:0 -> v0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;IJLjava/lang/Object;)Ljava/lang/Object;"}
    1:1:boolean closeOrCancelImpl(java.lang.Throwable,boolean):0:0 -> w
    1:1:int updateCellSend(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean):0:0 -> w0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;ILjava/lang/Object;JLjava/lang/Object;Z)I"}
    1:1:boolean isClosedForSend():0:0 -> x
    1:1:int updateCellSendSlow(kotlinx.coroutines.channels.ChannelSegment,int,java.lang.Object,long,java.lang.Object,boolean):0:0 -> x0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;ILjava/lang/Object;JLjava/lang/Object;Z)I"}
    1:1:void completeCancel(long):0:0 -> y
    1:1:void updateReceiversCounterIfLower(long):0:0 -> y0
    1:1:kotlinx.coroutines.channels.ChannelSegment completeClose(long):0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lz3/j;"}
    1:1:void updateSendersCounterIfLower(long):0:0 -> z0
kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator -> z3.b$a:
    java.lang.Object receiveResult -> f
    kotlinx.coroutines.CancellableContinuationImpl continuation -> g
    kotlinx.coroutines.channels.BufferedChannel this$0 -> h
    1:1:void <init>(kotlinx.coroutines.channels.BufferedChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;)V"}
    1:1:void invokeOnCancellation(kotlinx.coroutines.internal.Segment,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/e0;I)V"}
    1:1:java.lang.Object hasNext(kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)Ljava/lang/Object;"}
    1:1:void access$onClosedHasNextNoWaiterSuspend(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b$a;)V"}
    1:1:void access$setContinuation$p(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,kotlinx.coroutines.CancellableContinuationImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b$a;Lx3/k;)V"}
    1:1:void access$setReceiveResult$p(kotlinx.coroutines.channels.BufferedChannel$BufferedChannelIterator,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b$a;Ljava/lang/Object;)V"}
    1:1:java.lang.Object hasNextOnNoWaiterSuspend(kotlinx.coroutines.channels.ChannelSegment,int,long,kotlin.coroutines.Continuation):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/j;IJLh3/d;)Ljava/lang/Object;"}
    1:1:boolean onClosedHasNext():0:0 -> g
    1:1:void onClosedHasNextNoWaiterSuspend():0:0 -> h
    1:1:boolean tryResumeHasNext(java.lang.Object):0:0 -> i
    1:1:void tryResumeHasNextOnClosedChannel():0:0 -> j
    1:1:java.lang.Object next():0:0 -> next
kotlinx.coroutines.channels.BufferedChannel$onUndeliveredElementReceiveCancellationConstructor$1$1 -> z3.b$b:
    kotlinx.coroutines.channels.BufferedChannel this$0 -> g
    1:1:void <init>(kotlinx.coroutines.channels.BufferedChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/b;)V"}
kotlinx.coroutines.channels.BufferedChannelKt -> z3.c:
    kotlinx.coroutines.channels.ChannelSegment NULL_SEGMENT -> a
    int SEGMENT_SIZE -> b
    int EXPAND_BUFFER_COMPLETION_WAIT_ITERATIONS -> c
    kotlinx.coroutines.internal.Symbol BUFFERED -> d
    kotlinx.coroutines.internal.Symbol IN_BUFFER -> e
    kotlinx.coroutines.internal.Symbol RESUMING_BY_RCV -> f
    kotlinx.coroutines.internal.Symbol RESUMING_BY_EB -> g
    kotlinx.coroutines.internal.Symbol POISONED -> h
    kotlinx.coroutines.internal.Symbol DONE_RCV -> i
    kotlinx.coroutines.internal.Symbol INTERRUPTED_SEND -> j
    kotlinx.coroutines.internal.Symbol INTERRUPTED_RCV -> k
    kotlinx.coroutines.internal.Symbol CHANNEL_CLOSED -> l
    kotlinx.coroutines.internal.Symbol SUSPEND -> m
    kotlinx.coroutines.internal.Symbol SUSPEND_NO_WAITER -> n
    kotlinx.coroutines.internal.Symbol FAILED -> o
    kotlinx.coroutines.internal.Symbol NO_RECEIVE_RESULT -> p
    kotlinx.coroutines.internal.Symbol CLOSE_HANDLER_CLOSED -> q
    kotlinx.coroutines.internal.Symbol CLOSE_HANDLER_INVOKED -> r
    kotlinx.coroutines.internal.Symbol NO_CLOSE_CAUSE -> s
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:long initialBufferEnd(int):0:0 -> A
    1:1:boolean tryResume0(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> B
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/j;Ljava/lang/Object;Lp3/l;)Z"}
    1:1:boolean tryResume0$default(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> C
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/j;Ljava/lang/Object;Lp3/l;ILjava/lang/Object;)Z"}
    1:1:long access$constructEBCompletedAndPauseFlag(long,boolean):0:0 -> a
    1:1:long access$constructSendersAndCloseStatus(long,int):0:0 -> b
    1:1:kotlinx.coroutines.channels.ChannelSegment access$createSegment(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLz3/j;)Lz3/j;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSE_HANDLER_CLOSED$p():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSE_HANDLER_INVOKED$p():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getDONE_RCV$p():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:int access$getEXPAND_BUFFER_COMPLETION_WAIT_ITERATIONS$p():0:0 -> g
    1:1:kotlinx.coroutines.internal.Symbol access$getFAILED$p():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getINTERRUPTED_RCV$p():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getINTERRUPTED_SEND$p():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getIN_BUFFER$p():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getNO_CLOSE_CAUSE$p():0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getNO_RECEIVE_RESULT$p():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.channels.ChannelSegment access$getNULL_SEGMENT$p():0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz3/j;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getPOISONED$p():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getRESUMING_BY_EB$p():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getRESUMING_BY_RCV$p():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getSUSPEND$p():0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getSUSPEND_NO_WAITER$p():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:long access$initialBufferEnd(int):0:0 -> t
    1:1:boolean access$tryResume0(kotlinx.coroutines.CancellableContinuation,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/j;Ljava/lang/Object;Lp3/l;)Z"}
    1:1:long constructEBCompletedAndPauseFlag(long,boolean):0:0 -> v
    1:1:long constructSendersAndCloseStatus(long,int):0:0 -> w
    1:1:kotlinx.coroutines.channels.ChannelSegment createSegment(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> x
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLz3/j;)Lz3/j;"}
    1:1:kotlin.reflect.KFunction createSegmentFunction():0:0 -> y
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lu3/e;"}
    1:1:kotlinx.coroutines.internal.Symbol getCHANNEL_CLOSED():0:0 -> z
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1 -> z3.c$a:
    kotlinx.coroutines.channels.BufferedChannelKt$createSegmentFunction$1 INSTANCE -> o
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
    1:1:kotlinx.coroutines.channels.ChannelSegment invoke(long,kotlinx.coroutines.channels.ChannelSegment):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLz3/j;)Lz3/j;"}
kotlinx.coroutines.channels.Channel -> z3.d:
    kotlinx.coroutines.channels.Channel$Factory Factory -> e
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.channels.Channel$Factory -> z3.d$a:
    kotlinx.coroutines.channels.Channel$Factory $$INSTANCE -> a
    int CHANNEL_DEFAULT_CAPACITY -> b
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:int getCHANNEL_DEFAULT_CAPACITY$kotlinx_coroutines_core():0:0 -> a
kotlinx.coroutines.channels.ChannelCoroutine -> z3.e:
    kotlinx.coroutines.channels.Channel _channel -> i
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel,boolean,boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Lz3/d;ZZ)V"}
    1:1:void cancelInternal(java.lang.Throwable):0:0 -> J
    1:1:kotlinx.coroutines.channels.Channel get_channel():0:0 -> J0
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz3/d;"}
    1:1:void cancel(java.util.concurrent.CancellationException):0:0 -> b
    1:1:java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.channels.ChannelIterator iterator():0:0 -> iterator
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz3/f;"}
    1:1:void invokeOnClose(kotlin.jvm.functions.Function1):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;)V"}
    1:1:boolean close(java.lang.Throwable):0:0 -> q
    1:1:java.lang.Object trySend-JP2dKIU(java.lang.Object):0:0 -> r
    1:1:boolean isClosedForSend():0:0 -> x
kotlinx.coroutines.channels.ChannelIterator -> z3.f:
    java.lang.Object hasNext(kotlin.coroutines.Continuation) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)Ljava/lang/Object;"}
    java.lang.Object next() -> next
kotlinx.coroutines.channels.ChannelKt -> z3.g:
    1:1:kotlinx.coroutines.channels.Channel Channel(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILz3/a;Lp3/l;)Lz3/d;"}
    1:1:kotlinx.coroutines.channels.Channel Channel$default(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILz3/a;Lp3/l;ILjava/lang/Object;)Lz3/d;"}
kotlinx.coroutines.channels.ChannelResult -> z3.h:
    kotlinx.coroutines.channels.ChannelResult$Companion Companion -> a
    kotlinx.coroutines.channels.ChannelResult$Failed failed -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.channels.ChannelResult$Failed access$getFailed$cp():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz3/h$c;"}
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> b
    1:1:java.lang.Throwable exceptionOrNull-impl(java.lang.Object):0:0 -> c
    1:1:boolean isClosed-impl(java.lang.Object):0:0 -> d
    1:1:boolean isSuccess-impl(java.lang.Object):0:0 -> e
kotlinx.coroutines.channels.ChannelResult$Closed -> z3.h$a:
    java.lang.Throwable cause -> a
    1:1:void <init>(java.lang.Throwable):0:0 -> <init>
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.channels.ChannelResult$Companion -> z3.h$b:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:java.lang.Object closed-JP2dKIU(java.lang.Throwable):0:0 -> a
    1:1:java.lang.Object failure-PtdJZtk():0:0 -> b
    1:1:java.lang.Object success-JP2dKIU(java.lang.Object):0:0 -> c
kotlinx.coroutines.channels.ChannelResult$Failed -> z3.h$c:
    void <init>() -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.channels.ChannelSegment -> z3.j:
    kotlinx.coroutines.channels.BufferedChannel _channel -> j
    java.util.concurrent.atomic.AtomicReferenceArray data -> k
    1:1:void <init>(long,kotlinx.coroutines.channels.ChannelSegment,kotlinx.coroutines.channels.BufferedChannel,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLz3/j;Lz3/b;I)V"}
    1:1:void setState$kotlinx_coroutines_core(int,java.lang.Object):0:0 -> A
    1:1:void storeElement$kotlinx_coroutines_core(int,java.lang.Object):0:0 -> B
    1:1:int getNumberOfSlots():0:0 -> n
    1:1:void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Throwable;Lh3/g;)V"}
    1:1:boolean casState$kotlinx_coroutines_core(int,java.lang.Object,java.lang.Object):0:0 -> r
    1:1:void cleanElement$kotlinx_coroutines_core(int):0:0 -> s
    1:1:java.lang.Object getAndSetState$kotlinx_coroutines_core(int,java.lang.Object):0:0 -> t
    1:1:kotlinx.coroutines.channels.BufferedChannel getChannel():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz3/b;"}
    1:1:java.lang.Object getElement$kotlinx_coroutines_core(int):0:0 -> v
    1:1:java.lang.Object getState$kotlinx_coroutines_core(int):0:0 -> w
    1:1:void onCancelledRequest(int,boolean):0:0 -> x
    1:1:java.lang.Object retrieveElement$kotlinx_coroutines_core(int):0:0 -> y
    1:1:void setElementLazy(int,java.lang.Object):0:0 -> z
kotlinx.coroutines.channels.ChannelSegment$$ExternalSyntheticBackportWithForwarding0 -> z3.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean kotlinx.coroutines.channels.ChannelSegment$$InternalSyntheticBackportWithForwarding$1$6f7cae9946c5b86424e4e5c7a6884a900669cd56eb800ecaba91e55e82091194$0.m(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.channels.ChannelsKt -> z3.k:
    1:1:void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/s;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.channels.ChannelsKt__Channels_commonKt -> z3.l:
    1:1:void cancelConsumed(kotlinx.coroutines.channels.ReceiveChannel,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/s;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.channels.ClosedReceiveChannelException -> z3.m:
    1:1:void <init>(java.lang.String):0:0 -> <init>
kotlinx.coroutines.channels.ClosedSendChannelException -> z3.n:
    1:1:void <init>(java.lang.String):0:0 -> <init>
kotlinx.coroutines.channels.ConflatedBufferedChannel -> z3.o:
    int capacity -> r
    kotlinx.coroutines.channels.BufferOverflow onBufferOverflow -> s
    1:1:void <init>(int,kotlinx.coroutines.channels.BufferOverflow,kotlin.jvm.functions.Function1):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILz3/a;Lp3/l;)V"}
    1:1:java.lang.Object send$suspendImpl(kotlinx.coroutines.channels.ConflatedBufferedChannel,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> B0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/o;Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object trySendDropLatest-Mj0NB7M(java.lang.Object,boolean):0:0 -> C0
    1:1:java.lang.Object trySendDropOldest-JP2dKIU(java.lang.Object):0:0 -> D0
    1:1:java.lang.Object trySendImpl-Mj0NB7M(java.lang.Object,boolean):0:0 -> E0
    1:1:boolean isConflatedDropOldest():0:0 -> V
    1:1:java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object trySend-JP2dKIU(java.lang.Object):0:0 -> r
kotlinx.coroutines.channels.ProduceKt -> z3.p:
    1:1:java.lang.Object awaitClose(kotlinx.coroutines.channels.ProducerScope,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/r;Lp3/a;Lh3/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.channels.ReceiveChannel produce(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/d0;Lh3/g;ILz3/a;Lx3/f0;Lp3/l;Lp3/p;)Lz3/s;"}
    1:1:kotlinx.coroutines.channels.ReceiveChannel produce$default(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,kotlinx.coroutines.CoroutineStart,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/d0;Lh3/g;ILz3/a;Lx3/f0;Lp3/l;Lp3/p;ILjava/lang/Object;)Lz3/s;"}
kotlinx.coroutines.channels.ProduceKt$awaitClose$1 -> z3.p$a:
    java.lang.Object L$0 -> i
    java.lang.Object L$1 -> j
    java.lang.Object result -> k
    int label -> l
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
kotlinx.coroutines.channels.ProduceKt$awaitClose$4$1 -> z3.p$b:
    kotlinx.coroutines.CancellableContinuation $cont -> g
    1:1:void <init>(kotlinx.coroutines.CancellableContinuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/j;)V"}
    1:1:void invoke(java.lang.Throwable):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
kotlinx.coroutines.channels.ProducerCoroutine -> z3.q:
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.channels.Channel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Lz3/d;)V"}
    1:1:void onCancelled(java.lang.Throwable,boolean):0:0 -> G0
    1:1:void onCompleted(java.lang.Object):0:0 -> H0
    1:1:void onCompleted(kotlin.Unit):0:0 -> K0
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lf3/q;)V"}
    1:1:boolean isActive():0:0 -> d
kotlinx.coroutines.channels.ProducerScope -> z3.r:
kotlinx.coroutines.channels.ReceiveChannel -> z3.s:
    void cancel(java.util.concurrent.CancellationException) -> b
    kotlinx.coroutines.channels.ChannelIterator iterator() -> iterator
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lz3/f;"}
kotlinx.coroutines.channels.SendChannel -> z3.t:
    java.lang.Object send(java.lang.Object,kotlin.coroutines.Continuation) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
    void invokeOnClose(kotlin.jvm.functions.Function1) -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;)V"}
    boolean close(java.lang.Throwable) -> q
    java.lang.Object trySend-JP2dKIU(java.lang.Object) -> r
    boolean isClosedForSend() -> x
kotlinx.coroutines.channels.SendChannel$DefaultImpls -> z3.t$a:
    1:1:boolean close$default(kotlinx.coroutines.channels.SendChannel,java.lang.Throwable,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/t;Ljava/lang/Throwable;ILjava/lang/Object;)Z"}
kotlinx.coroutines.channels.WaiterEB -> z3.u:
    kotlinx.coroutines.Waiter waiter -> a
    1:1:void <init>(kotlinx.coroutines.Waiter):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/z1;)V"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.CallbackFlowBuilder -> a4.a:
    kotlin.jvm.functions.Function2 block -> e
    1:1:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;Lh3/g;ILz3/a;)V"}
    2:2:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;Lh3/g;ILz3/a;ILq3/g;)V"}
    1:1:java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/r;Lh3/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;ILz3/a;)Lb4/d;"}
kotlinx.coroutines.flow.CallbackFlowBuilder$collectTo$1 -> a4.a$a:
    java.lang.Object L$0 -> i
    java.lang.Object result -> j
    kotlinx.coroutines.flow.CallbackFlowBuilder this$0 -> k
    int label -> l
    1:1:void <init>(kotlinx.coroutines.flow.CallbackFlowBuilder,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/a;Lh3/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
kotlinx.coroutines.flow.ChannelFlowBuilder -> a4.b:
    kotlin.jvm.functions.Function2 block -> d
    1:1:void <init>(kotlin.jvm.functions.Function2,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;Lh3/g;ILz3/a;)V"}
    1:1:java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/r;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.ChannelFlowBuilder,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/b;Lz3/r;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.Flow -> a4.c:
    java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.FlowCollector -> a4.d:
    java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.FlowKt -> a4.e:
    1:1:kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;)La4/c;"}
    1:1:java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lz3/s;Lh3/d;)Ljava/lang/Object;"}
    1:1:void ensureActive(kotlinx.coroutines.flow.FlowCollector):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;)V"}
    1:1:kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/c;Lh3/g;)La4/c;"}
kotlinx.coroutines.flow.FlowKt__BuildersKt -> a4.f:
    1:1:kotlinx.coroutines.flow.Flow callbackFlow(kotlin.jvm.functions.Function2):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;)La4/c;"}
kotlinx.coroutines.flow.FlowKt__ChannelsKt -> a4.g:
    1:1:java.lang.Object access$emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lz3/s;ZLh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object emitAll(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lz3/s;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object emitAllImpl$FlowKt__ChannelsKt(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.channels.ReceiveChannel,boolean,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lz3/s;ZLh3/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.FlowKt__ChannelsKt$emitAllImpl$1 -> a4.g$a:
    java.lang.Object L$0 -> i
    java.lang.Object L$1 -> j
    java.lang.Object L$2 -> k
    boolean Z$0 -> l
    java.lang.Object result -> m
    int label -> n
    1:1:void <init>(kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
kotlinx.coroutines.flow.FlowKt__ContextKt -> a4.h:
    1:1:void checkFlowContext$FlowKt__ContextKt(kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)V"}
    1:1:kotlinx.coroutines.flow.Flow flowOn(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/c;Lh3/g;)La4/c;"}
kotlinx.coroutines.flow.FlowKt__EmittersKt -> a4.i:
    1:1:void ensureActive(kotlinx.coroutines.flow.FlowCollector):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;)V"}
kotlinx.coroutines.flow.MutableStateFlow -> a4.j:
    void setValue(java.lang.Object) -> setValue
kotlinx.coroutines.flow.SharedFlow -> a4.k:
kotlinx.coroutines.flow.SharedFlowKt -> a4.l:
    kotlinx.coroutines.internal.Symbol NO_VALUE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.flow.Flow fuseSharedFlow(kotlinx.coroutines.flow.SharedFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/k;Lh3/g;ILz3/a;)La4/c;"}
kotlinx.coroutines.flow.StateFlow -> a4.m:
kotlinx.coroutines.flow.StateFlowImpl -> a4.n:
    int sequence -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;ILz3/a;)La4/c;"}
    1:1:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/d;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb4/c;"}
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lb4/c;"}
    1:1:kotlinx.coroutines.flow.StateFlowSlot createSlot():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La4/p;"}
    1:1:kotlinx.coroutines.flow.StateFlowSlot[] createSlotArray(int):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[La4/p;"}
    1:1:boolean updateState(java.lang.Object,java.lang.Object):0:0 -> k
    1:1:void setValue(java.lang.Object):0:0 -> setValue
kotlinx.coroutines.flow.StateFlowImpl$collect$1 -> a4.n$a:
    java.lang.Object L$0 -> i
    java.lang.Object L$1 -> j
    java.lang.Object L$2 -> k
    java.lang.Object L$3 -> l
    java.lang.Object L$4 -> m
    java.lang.Object result -> n
    kotlinx.coroutines.flow.StateFlowImpl this$0 -> o
    int label -> p
    1:1:void <init>(kotlinx.coroutines.flow.StateFlowImpl,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/n;Lh3/d;)V"}
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
kotlinx.coroutines.flow.StateFlowKt -> a4.o:
    kotlinx.coroutines.internal.Symbol NONE -> a
    kotlinx.coroutines.internal.Symbol PENDING -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.flow.MutableStateFlow MutableStateFlow(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)La4/j;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getNONE$p():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.Symbol access$getPENDING$p():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.flow.Flow fuseStateFlow(kotlinx.coroutines.flow.StateFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/m;Lh3/g;ILz3/a;)La4/c;"}
kotlinx.coroutines.flow.StateFlowSlot -> a4.p:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:boolean allocateLocked(java.lang.Object):0:0 -> a
    1:1:kotlin.coroutines.Continuation[] freeLocked(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)[Lh3/d;"}
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$get_state$FU$p():0:0 -> c
    1:1:boolean allocateLocked(kotlinx.coroutines.flow.StateFlowImpl):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/n;)Z"}
    1:1:java.lang.Object awaitPending(kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;)Ljava/lang/Object;"}
    1:1:kotlin.coroutines.Continuation[] freeLocked(kotlinx.coroutines.flow.StateFlowImpl):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/n;)[Lh3/d;"}
    1:1:void makePending():0:0 -> g
    1:1:boolean takePending():0:0 -> h
kotlinx.coroutines.flow.internal.AbstractSharedFlow -> b4.a:
    kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] slots -> a
    int nCollectors -> b
    int nextIndex -> c
    void <init>() -> <init>
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot allocateSlot():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb4/c;"}
    kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot createSlot() -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lb4/c;"}
    kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] createSlotArray(int) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)[Lb4/c;"}
    1:1:void freeSlot(kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb4/c;)V"}
    1:1:kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot[] getSlots():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Lb4/c;"}
kotlinx.coroutines.flow.internal.AbstractSharedFlowKt -> b4.b:
    kotlin.coroutines.Continuation[] EMPTY_RESUMES -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot -> b4.c:
    void <init>() -> <init>
    boolean allocateLocked(java.lang.Object) -> a
    kotlin.coroutines.Continuation[] freeLocked(java.lang.Object) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)[Lh3/d;"}
kotlinx.coroutines.flow.internal.ChannelFlow -> b4.d:
    kotlin.coroutines.CoroutineContext context -> a
    int capacity -> b
    kotlinx.coroutines.channels.BufferOverflow onBufferOverflow -> c
    1:1:void <init>(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;ILz3/a;)V"}
    1:1:java.lang.String additionalToStringProps():0:0 -> a
    1:1:kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;ILz3/a;)La4/c;"}
    1:1:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlow,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb4/d;La4/d;Lh3/d;)Ljava/lang/Object;"}
    java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation) -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/r;Lh3/d;)Ljava/lang/Object;"}
    kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow) -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;ILz3/a;)Lb4/d;"}
    1:1:kotlin.jvm.functions.Function2 getCollectToFun$kotlinx_coroutines_core():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lp3/p;"}
    1:1:int getProduceCapacity$kotlinx_coroutines_core():0:0 -> h
    1:1:kotlinx.coroutines.channels.ReceiveChannel produceImpl(kotlinx.coroutines.CoroutineScope):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/d0;)Lz3/s;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.internal.ChannelFlow$collect$2 -> b4.d$a:
    int label -> j
    java.lang.Object L$0 -> k
    kotlinx.coroutines.flow.FlowCollector $collector -> l
    kotlinx.coroutines.flow.internal.ChannelFlow this$0 -> m
    1:1:void <init>(kotlinx.coroutines.flow.FlowCollector,kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lb4/d;Lh3/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Lh3/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
    1:1:java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/d0;Lh3/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.ChannelFlow$collectToFun$1 -> b4.d$b:
    int label -> j
    java.lang.Object L$0 -> k
    kotlinx.coroutines.flow.internal.ChannelFlow this$0 -> l
    1:1:void <init>(kotlinx.coroutines.flow.internal.ChannelFlow,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb4/d;Lh3/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Lh3/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
    1:1:java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/r;Lh3/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.ChannelFlowKt -> b4.e:
    1:1:kotlinx.coroutines.flow.FlowCollector access$withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/g;)La4/d;"}
    1:1:java.lang.Object withContextUndispatched(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Object;Ljava/lang/Object;Lp3/p;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object withContextUndispatched$default(kotlin.coroutines.CoroutineContext,java.lang.Object,java.lang.Object,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Object;Ljava/lang/Object;Lp3/p;Lh3/d;ILjava/lang/Object;)Ljava/lang/Object;"}
    1:1:kotlinx.coroutines.flow.FlowCollector withUndispatchedContextCollector(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/g;)La4/d;"}
kotlinx.coroutines.flow.internal.ChannelFlowOperator -> b4.f:
    kotlinx.coroutines.flow.Flow flow -> d
    1:1:void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/c;Lh3/g;ILz3/a;)V"}
    1:1:java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectTo(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/r;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collect$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb4/f;La4/d;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectTo$suspendImpl(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb4/f;Lz3/r;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.Object collectWithContextUndispatched(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/g;Lh3/d;)Ljava/lang/Object;"}
    java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation) -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/d;)Ljava/lang/Object;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.flow.internal.ChannelFlowOperator$collectWithContextUndispatched$2 -> b4.f$a:
    int label -> j
    java.lang.Object L$0 -> k
    kotlinx.coroutines.flow.internal.ChannelFlowOperator this$0 -> l
    1:1:void <init>(kotlinx.coroutines.flow.internal.ChannelFlowOperator,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb4/f;Lh3/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Lh3/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
    1:1:java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl -> b4.g:
    1:1:void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/c;Lh3/g;ILz3/a;)V"}
    2:2:void <init>(kotlinx.coroutines.flow.Flow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/c;Lh3/g;ILz3/a;ILq3/g;)V"}
    1:1:kotlinx.coroutines.flow.internal.ChannelFlow create(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;ILz3/a;)Lb4/d;"}
    1:1:java.lang.Object flowCollect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.FusibleFlow -> b4.h:
    kotlinx.coroutines.flow.Flow fuse(kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;ILz3/a;)La4/c;"}
kotlinx.coroutines.flow.internal.FusibleFlow$DefaultImpls -> b4.h$a:
    1:1:kotlinx.coroutines.flow.Flow fuse$default(kotlinx.coroutines.flow.internal.FusibleFlow,kotlin.coroutines.CoroutineContext,int,kotlinx.coroutines.channels.BufferOverflow,int,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lb4/h;Lh3/g;ILz3/a;ILjava/lang/Object;)La4/c;"}
kotlinx.coroutines.flow.internal.NullSurrogateKt -> b4.i:
    kotlinx.coroutines.internal.Symbol NULL -> a
    kotlinx.coroutines.internal.Symbol UNINITIALIZED -> b
    kotlinx.coroutines.internal.Symbol DONE -> c
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.flow.internal.SendingCollector -> b4.j:
    kotlinx.coroutines.channels.SendChannel channel -> a
    1:1:void <init>(kotlinx.coroutines.channels.SendChannel):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lz3/t;)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.StackFrameContinuation -> b4.k:
    kotlin.coroutines.Continuation uCont -> f
    kotlin.coroutines.CoroutineContext context -> g
    1:1:void <init>(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;Lh3/g;)V"}
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g;"}
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj3/e;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> t
kotlinx.coroutines.flow.internal.UndispatchedContextCollector -> b4.l:
    kotlin.coroutines.CoroutineContext emitContext -> a
    java.lang.Object countOrElement -> b
    kotlin.jvm.functions.Function2 emitRef -> c
    1:1:void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/g;)V"}
    1:1:java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
kotlinx.coroutines.flow.internal.UndispatchedContextCollector$emitRef$1 -> b4.l$a:
    int label -> j
    java.lang.Object L$0 -> k
    kotlinx.coroutines.flow.FlowCollector $downstream -> l
    1:1:void <init>(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(La4/d;Lh3/d;)V"}
    1:1:kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Lh3/d;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
    1:1:java.lang.Object invokeSuspend(java.lang.Object):0:0 -> i
    1:1:java.lang.Object invoke(java.lang.Object,kotlin.coroutines.Continuation):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/d;)Ljava/lang/Object;"}
kotlinx.coroutines.internal.AtomicKt -> c4.a:
    java.lang.Object NO_DECISION -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.internal.AtomicOp -> c4.b:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _consensus$FU -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object perform(java.lang.Object):0:0 -> a
    void complete(java.lang.Object,java.lang.Object) -> b
    1:1:java.lang.Object decide(java.lang.Object):0:0 -> c
    java.lang.Object prepare(java.lang.Object) -> d
kotlinx.coroutines.internal.ConcurrentKt -> c4.c:
    java.lang.reflect.Method REMOVE_FUTURE_ON_CANCEL -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:boolean removeFutureOnCancel(java.util.concurrent.Executor):0:0 -> a
kotlinx.coroutines.internal.ConcurrentLinkedListKt -> c4.d:
    kotlinx.coroutines.internal.Symbol CLOSED -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSED$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode close(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/e;)Lc4/e;"}
    1:1:java.lang.Object findSegmentInternal(kotlinx.coroutines.internal.Segment,long,kotlin.jvm.functions.Function2):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/e0;JLp3/p;)Ljava/lang/Object;"}
kotlinx.coroutines.internal.ConcurrentLinkedListNode -> c4.e:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU -> f
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/e;)V"}
    1:1:java.lang.Object access$getNextOrClosed(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/e;)Ljava/lang/Object;"}
    1:1:void cleanPrev():0:0 -> b
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getAliveSegmentLeft():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/e;"}
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getAliveSegmentRight():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/e;"}
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getNext():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/e;"}
    1:1:java.lang.Object getNextOrClosed():0:0 -> f
    1:1:kotlinx.coroutines.internal.ConcurrentLinkedListNode getPrev():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/e;"}
    boolean isRemoved() -> h
    1:1:boolean isTail():0:0 -> i
    1:1:boolean markAsClosed():0:0 -> j
    1:1:void remove():0:0 -> k
    1:1:boolean trySetNext(kotlinx.coroutines.internal.ConcurrentLinkedListNode):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/e;)Z"}
kotlinx.coroutines.internal.ContextScope -> c4.f:
    kotlin.coroutines.CoroutineContext coroutineContext -> f
    1:1:void <init>(kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)V"}
    1:1:kotlin.coroutines.CoroutineContext getCoroutineContext():0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g;"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.CoroutineExceptionHandlerImplKt -> c4.g:
    java.util.Collection platformExceptionHandlers -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.util.Collection getPlatformExceptionHandlers():0:0 -> a
    1:1:void propagateExceptionFinalResort(java.lang.Throwable):0:0 -> b
kotlinx.coroutines.internal.CoroutineExceptionHandlerImpl_commonKt -> c4.h:
    1:1:void handleUncaughtCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Throwable;)V"}
kotlinx.coroutines.internal.DiagnosticCoroutineContextException -> c4.i:
    kotlin.coroutines.CoroutineContext context -> f
    1:1:void <init>(kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)V"}
    1:1:java.lang.Throwable fillInStackTrace():0:0 -> fillInStackTrace
    1:1:java.lang.String getLocalizedMessage():0:0 -> getLocalizedMessage
kotlinx.coroutines.internal.DispatchedContinuation -> c4.j:
    kotlinx.coroutines.CoroutineDispatcher dispatcher -> i
    kotlin.coroutines.Continuation continuation -> j
    java.lang.Object _state -> k
    java.lang.Object countOrElement -> l
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _reusableCancellableContinuation$FU -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/a0;Lh3/d;)V"}
    1:1:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable):0:0 -> b
    1:1:kotlin.coroutines.CoroutineContext getContext():0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/g;"}
    1:1:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core():0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lh3/d;"}
    1:1:java.lang.Object takeState$kotlinx_coroutines_core():0:0 -> h
    1:1:void awaitReusability():0:0 -> i
    1:1:kotlinx.coroutines.CancellableContinuationImpl claimReusableCancellableContinuation():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/k;"}
    1:1:kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation():0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/k;"}
    1:1:boolean isReusable():0:0 -> l
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj3/e;"}
    1:1:boolean postponeCancellation(java.lang.Throwable):0:0 -> n
    1:1:void release():0:0 -> o
    1:1:java.lang.Throwable tryReleaseClaimedContinuation(kotlinx.coroutines.CancellableContinuation):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/j;)Ljava/lang/Throwable;"}
    1:1:void resumeWith(java.lang.Object):0:0 -> t
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.DispatchedContinuationKt -> c4.k:
    kotlinx.coroutines.internal.Symbol UNDEFINED -> a
    kotlinx.coroutines.internal.Symbol REUSABLE_CLAIMED -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/h0;"}
    1:1:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;Ljava/lang/Object;Lp3/l;)V"}
    1:1:void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;Ljava/lang/Object;Lp3/l;ILjava/lang/Object;)V"}
kotlinx.coroutines.internal.FastServiceLoader -> c4.l:
    kotlinx.coroutines.internal.FastServiceLoader INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class):0:0 -> a
    1:1:java.util.List load(java.lang.Class,java.lang.ClassLoader):0:0 -> b
    1:1:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():0:0 -> c
    1:1:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):0:0 -> d
    1:1:java.util.List parse(java.net.URL):0:0 -> e
    1:1:java.util.List parseFile(java.io.BufferedReader):0:0 -> f
kotlinx.coroutines.internal.FastServiceLoaderKt -> c4.m:
    boolean ANDROID_DETECTED -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:boolean getANDROID_DETECTED():0:0 -> a
kotlinx.coroutines.internal.InlineList -> c4.n:
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> a
    1:1:java.lang.Object constructor-impl$default(java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILq3/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object plus-FjFbRPM(java.lang.Object,java.lang.Object):0:0 -> c
kotlinx.coroutines.internal.LimitedDispatcher -> c4.o:
    kotlinx.coroutines.CoroutineDispatcher dispatcher -> h
    int parallelism -> i
    kotlinx.coroutines.Delay $$delegate_0 -> j
    kotlinx.coroutines.internal.LockFreeTaskQueue queue -> k
    java.lang.Object workerAllocationLock -> l
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater runningWorkers$FU -> m
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.CoroutineDispatcher,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/a0;I)V"}
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)V"}
    1:1:kotlinx.coroutines.CoroutineDispatcher access$getDispatcher$p(kotlinx.coroutines.internal.LimitedDispatcher):0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/o;)Lx3/a0;"}
    1:1:java.lang.Runnable access$obtainTaskOrDeallocateWorker(kotlinx.coroutines.internal.LimitedDispatcher):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/o;)Ljava/lang/Runnable;"}
    1:1:java.lang.Runnable obtainTaskOrDeallocateWorker():0:0 -> r
    1:1:boolean tryAllocateWorker():0:0 -> s
kotlinx.coroutines.internal.LimitedDispatcher$Worker -> c4.o$a:
    java.lang.Runnable currentTask -> f
    kotlinx.coroutines.internal.LimitedDispatcher this$0 -> g
    1:1:void <init>(kotlinx.coroutines.internal.LimitedDispatcher,java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/o;Ljava/lang/Runnable;)V"}
    1:1:void run():0:0 -> run
kotlinx.coroutines.internal.LimitedDispatcherKt -> c4.p:
    1:1:void checkParallelism(int):0:0 -> a
kotlinx.coroutines.internal.LockFreeLinkedListHead -> c4.q:
    void <init>() -> <init>
    1:1:boolean isRemoved():0:0 -> r
kotlinx.coroutines.internal.LockFreeLinkedListKt -> c4.r:
    java.lang.Object CONDITION_FALSE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Object getCONDITION_FALSE():0:0 -> a
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lc4/s;"}
kotlinx.coroutines.internal.LockFreeLinkedListNode -> c4.s:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU -> f
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _prev$FU -> g
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _removedRef$FU -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/s;Lc4/s;)V"}
    1:1:java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$get_next$FU$p():0:0 -> j
    1:1:boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/s;)Z"}
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/a0;)Lc4/s;"}
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/s;)Lc4/s;"}
    1:1:void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/s;)V"}
    1:1:java.lang.Object getNext():0:0 -> o
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/s;"}
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode():0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/s;"}
    1:1:boolean isRemoved():0:0 -> r
    1:1:boolean remove():0:0 -> s
    1:1:kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext():0:0 -> t
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/s;"}
    1:1:java.lang.String toString():0:0 -> toString
    1:1:kotlinx.coroutines.internal.Removed removed():0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/b0;"}
    1:1:int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/s;Lc4/s;Lc4/s$a;)I"}
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp -> c4.s$a:
    kotlinx.coroutines.internal.LockFreeLinkedListNode newNode -> b
    kotlinx.coroutines.internal.LockFreeLinkedListNode oldNext -> c
    1:1:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/s;)V"}
    1:1:void complete(java.lang.Object,java.lang.Object):0:0 -> b
    1:1:void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/s;Ljava/lang/Object;)V"}
kotlinx.coroutines.internal.LockFreeLinkedListNode$toString$1 -> c4.s$b:
    1:1:void <init>(java.lang.Object):0:0 -> <init>
    1:1:java.lang.Object get():0:0 -> get
kotlinx.coroutines.internal.LockFreeTaskQueue -> c4.t:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _cur$FU -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean):0:0 -> <init>
    1:1:boolean addLast(java.lang.Object):0:0 -> a
    1:1:void close():0:0 -> b
    1:1:int getSize():0:0 -> c
    1:1:java.lang.Object removeFirstOrNull():0:0 -> d
kotlinx.coroutines.internal.LockFreeTaskQueueCore -> c4.u:
    int capacity -> a
    boolean singleConsumer -> b
    int mask -> c
    java.util.concurrent.atomic.AtomicReferenceArray array -> d
    kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion Companion -> e
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _next$FU -> f
    java.util.concurrent.atomic.AtomicLongFieldUpdater _state$FU -> g
    kotlinx.coroutines.internal.Symbol REMOVE_FROZEN -> h
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,boolean):0:0 -> <init>
    1:1:int addLast(java.lang.Object):0:0 -> a
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lc4/u;"}
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(J)Lc4/u;"}
    1:1:boolean close():0:0 -> d
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)Lc4/u;"}
    1:1:int getSize():0:0 -> f
    1:1:boolean isEmpty():0:0 -> g
    1:1:long markFrozen():0:0 -> h
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore next():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/u;"}
    1:1:java.lang.Object removeFirstOrNull():0:0 -> j
    1:1:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Lc4/u;"}
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion -> c4.u$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
    1:1:int addFailReason(long):0:0 -> a
    1:1:long updateHead(long,int):0:0 -> b
    1:1:long updateTail(long,int):0:0 -> c
    1:1:long wo(long,long):0:0 -> d
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder -> c4.u$b:
    int index -> a
    1:1:void <init>(int):0:0 -> <init>
kotlinx.coroutines.internal.MainDispatcherFactory -> c4.v:
    int getLoadPriority() -> a
    java.lang.String hintOnError() -> b
    kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/util/List;)Lx3/o1;"}
kotlinx.coroutines.internal.MainDispatcherLoader -> c4.w:
    kotlinx.coroutines.internal.MainDispatcherLoader INSTANCE -> a
    boolean FAST_SERVICE_LOADER_ENABLED -> b
    kotlinx.coroutines.MainCoroutineDispatcher dispatcher -> c
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/o1;"}
kotlinx.coroutines.internal.MainDispatchersKt -> c4.x:
    boolean SUPPORT_MISSING -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Ljava/lang/String;)Lc4/y;"}
    1:1:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Lc4/y;"}
    1:1:boolean isMissing(kotlinx.coroutines.MainCoroutineDispatcher):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/o1;)Z"}
    1:1:java.lang.Void throwMissingMainDispatcherException():0:0 -> d
    1:1:kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/v;Ljava/util/List;)Lx3/o1;"}
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher -> c4.y:
    java.lang.Throwable cause -> h
    java.lang.String errorHint -> i
    1:1:void <init>(java.lang.Throwable,java.lang.String):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)V"}
    1:1:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Z"}
    1:1:kotlinx.coroutines.MainCoroutineDispatcher getImmediate():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lx3/o1;"}
    1:1:java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> r
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)Ljava/lang/Void;"}
    1:1:java.lang.Void missing():0:0 -> s
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.OnUndeliveredElementKt -> c4.z:
    1:1:kotlin.jvm.functions.Function1 bindCancellationFun(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;Ljava/lang/Object;Lh3/g;)Lp3/l;"}
    1:1:void callUndeliveredElement(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;Ljava/lang/Object;Lh3/g;)V"}
    1:1:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;Ljava/lang/Object;Lc4/q0;)Lc4/q0;"}
    1:1:kotlinx.coroutines.internal.UndeliveredElementException callUndeliveredElementCatchingException$default(kotlin.jvm.functions.Function1,java.lang.Object,kotlinx.coroutines.internal.UndeliveredElementException,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;Ljava/lang/Object;Lc4/q0;ILjava/lang/Object;)Lc4/q0;"}
kotlinx.coroutines.internal.OnUndeliveredElementKt$bindCancellationFun$1 -> c4.z$a:
    kotlin.jvm.functions.Function1 $this_bindCancellationFun -> g
    java.lang.Object $element -> h
    kotlin.coroutines.CoroutineContext $context -> i
    1:1:void <init>(kotlin.jvm.functions.Function1,java.lang.Object,kotlin.coroutines.CoroutineContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/l;Ljava/lang/Object;Lh3/g;)V"}
    1:1:void invoke(java.lang.Throwable):0:0 -> a
    1:1:java.lang.Object invoke(java.lang.Object):0:0 -> b
kotlinx.coroutines.internal.OpDescriptor -> c4.a0:
    void <init>() -> <init>
    java.lang.Object perform(java.lang.Object) -> a
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.Removed -> c4.b0:
    kotlinx.coroutines.internal.LockFreeLinkedListNode ref -> a
    1:1:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/s;)V"}
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.ResizableAtomicArray -> c4.c0:
    1:1:void <init>(int):0:0 -> <init>
    1:1:int currentLength():0:0 -> a
    1:1:java.lang.Object get(int):0:0 -> b
    1:1:void setSynchronized(int,java.lang.Object):0:0 -> c
kotlinx.coroutines.internal.ScopeCoroutine -> c4.d0:
    kotlin.coroutines.Continuation uCont -> i
    1:1:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.Continuation):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Lh3/d;)V"}
    1:1:void afterResume(java.lang.Object):0:0 -> F0
    1:1:void afterCompletion(java.lang.Object):0:0 -> G
    1:1:boolean isScopedCoroutine():0:0 -> g0
    1:1:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame():0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj3/e;"}
kotlinx.coroutines.internal.Segment -> c4.e0:
    long id -> h
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater cleanedAndPointers$FU -> i
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(long,kotlinx.coroutines.internal.Segment,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLc4/e0;I)V"}
    1:1:boolean isRemoved():0:0 -> h
    1:1:boolean decPointers$kotlinx_coroutines_core():0:0 -> m
    int getNumberOfSlots() -> n
    void onCancellation(int,java.lang.Throwable,kotlin.coroutines.CoroutineContext) -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Throwable;Lh3/g;)V"}
    1:1:void onSlotCleaned():0:0 -> p
    1:1:boolean tryIncPointers$kotlinx_coroutines_core():0:0 -> q
kotlinx.coroutines.internal.SegmentOrClosed -> c4.f0:
    1:1:java.lang.Object constructor-impl(java.lang.Object):0:0 -> a
    1:1:kotlinx.coroutines.internal.Segment getSegment-impl(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;)Lc4/e0;"}
    1:1:boolean isClosed-impl(java.lang.Object):0:0 -> c
kotlinx.coroutines.internal.StackTraceRecoveryKt -> c4.g0:
    java.lang.StackTraceElement ARTIFICIAL_FRAME -> a
    java.lang.String baseContinuationImplClassName -> b
    java.lang.String stackTraceRecoveryClassName -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:java.lang.Throwable recoverStackTrace(java.lang.Throwable):0:0 -> a
kotlinx.coroutines.internal.Symbol -> c4.h0:
    java.lang.String symbol -> a
    1:1:void <init>(java.lang.String):0:0 -> <init>
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.internal.SystemPropsKt -> c4.i0:
    1:1:int getAVAILABLE_PROCESSORS():0:0 -> a
    1:1:int systemProp(java.lang.String,int,int,int):0:0 -> b
    1:1:long systemProp(java.lang.String,long,long,long):0:0 -> c
    1:1:java.lang.String systemProp(java.lang.String):0:0 -> d
    1:1:java.lang.String systemProp(java.lang.String,java.lang.String):0:0 -> e
    1:1:boolean systemProp(java.lang.String,boolean):0:0 -> f
    1:1:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object):0:0 -> g
    1:1:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object):0:0 -> h
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt -> c4.j0:
    int AVAILABLE_PROCESSORS -> a
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:int getAVAILABLE_PROCESSORS():0:0 -> a
    1:1:java.lang.String systemProp(java.lang.String):0:0 -> b
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt -> c4.k0:
    1:1:int systemProp(java.lang.String,int,int,int):0:0 -> a
    1:1:long systemProp(java.lang.String,long,long,long):0:0 -> b
    1:1:java.lang.String systemProp(java.lang.String,java.lang.String):0:0 -> c
    1:1:boolean systemProp(java.lang.String,boolean):0:0 -> d
    1:1:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object):0:0 -> e
    1:1:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object):0:0 -> f
kotlinx.coroutines.internal.ThreadContextKt -> c4.l0:
    kotlinx.coroutines.internal.Symbol NO_THREAD_ELEMENTS -> a
    kotlin.jvm.functions.Function2 countAll -> b
    kotlin.jvm.functions.Function2 findOne -> c
    kotlin.jvm.functions.Function2 updateState -> d
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Object;)V"}
    1:1:java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)Ljava/lang/Object;"}
    1:1:java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Object;)Ljava/lang/Object;"}
kotlinx.coroutines.internal.ThreadContextKt$countAll$1 -> c4.l0$a:
    kotlinx.coroutines.internal.ThreadContextKt$countAll$1 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;Lh3/g$b;)Ljava/lang/Object;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
kotlinx.coroutines.internal.ThreadContextKt$findOne$1 -> c4.l0$b:
    kotlinx.coroutines.internal.ThreadContextKt$findOne$1 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/u1;Lh3/g$b;)Lx3/u1;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
kotlinx.coroutines.internal.ThreadContextKt$updateState$1 -> c4.l0$c:
    kotlinx.coroutines.internal.ThreadContextKt$updateState$1 INSTANCE -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/p0;Lh3/g$b;)Lc4/p0;"}
    1:1:java.lang.Object invoke(java.lang.Object,java.lang.Object):0:0 -> h
kotlinx.coroutines.internal.ThreadLocalKt -> c4.m0:
    1:1:java.lang.ThreadLocal commonThreadLocal(kotlinx.coroutines.internal.Symbol):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/h0;)Ljava/lang/ThreadLocal;"}
kotlinx.coroutines.internal.ThreadSafeHeap -> c4.n0:
    kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/o0;"}
    boolean isEmpty() -> b
    kotlinx.coroutines.internal.ThreadSafeHeapNode peek() -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/o0;"}
    kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull() -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lc4/o0;"}
kotlinx.coroutines.internal.ThreadSafeHeapNode -> c4.o0:
kotlinx.coroutines.internal.ThreadState -> c4.p0:
    kotlin.coroutines.CoroutineContext context -> a
    java.lang.Object[] values -> b
    kotlinx.coroutines.ThreadContextElement[] elements -> c
    int i -> d
    1:1:void <init>(kotlin.coroutines.CoroutineContext,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;I)V"}
    1:1:void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lx3/u1;Ljava/lang/Object;)V"}
    1:1:void restore(kotlin.coroutines.CoroutineContext):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;)V"}
kotlinx.coroutines.internal.UndeliveredElementException -> c4.q0:
    1:1:void <init>(java.lang.String,java.lang.Throwable):0:0 -> <init>
kotlinx.coroutines.intrinsics.CancellableKt -> d4.a:
    1:1:void dispatcherFailure(kotlin.coroutines.Continuation,java.lang.Throwable):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;Ljava/lang/Throwable;)V"}
    1:1:void startCoroutineCancellable(kotlin.coroutines.Continuation,kotlin.coroutines.Continuation):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/d;Lh3/d;)V"}
    1:1:void startCoroutineCancellable(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;Ljava/lang/Object;Lh3/d;Lp3/l;)V"}
    1:1:void startCoroutineCancellable$default(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation,kotlin.jvm.functions.Function1,int,java.lang.Object):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;Ljava/lang/Object;Lh3/d;Lp3/l;ILjava/lang/Object;)V"}
kotlinx.coroutines.intrinsics.UndispatchedKt -> d4.b:
    1:1:void startCoroutineUndispatched(kotlin.jvm.functions.Function2,java.lang.Object,kotlin.coroutines.Continuation):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lp3/p;Ljava/lang/Object;Lh3/d;)V"}
    1:1:java.lang.Object startUndispatchedOrReturn(kotlinx.coroutines.internal.ScopeCoroutine,java.lang.Object,kotlin.jvm.functions.Function2):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc4/d0;Ljava/lang/Object;Lp3/p;)Ljava/lang/Object;"}
kotlinx.coroutines.scheduling.CoroutineScheduler -> e4.a:
    int corePoolSize -> f
    int maxPoolSize -> g
    long idleWorkerKeepAliveNs -> h
    java.lang.String schedulerName -> i
    kotlinx.coroutines.scheduling.GlobalQueue globalCpuQueue -> j
    kotlinx.coroutines.scheduling.GlobalQueue globalBlockingQueue -> k
    kotlinx.coroutines.internal.ResizableAtomicArray workers -> l
    kotlinx.coroutines.scheduling.CoroutineScheduler$Companion Companion -> m
    java.util.concurrent.atomic.AtomicLongFieldUpdater parkedWorkersStack$FU -> n
    java.util.concurrent.atomic.AtomicLongFieldUpdater controlState$FU -> o
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater _isTerminated$FU -> p
    kotlinx.coroutines.internal.Symbol NOT_IN_STACK -> q
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(int,int,long,java.lang.String):0:0 -> <init>
    1:1:java.util.concurrent.atomic.AtomicLongFieldUpdater access$getControlState$FU$p():0:0 -> a
    1:1:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/h;)Z"}
    1:1:int createNewWorker():0:0 -> c
    1:1:void close():0:0 -> close
    1:1:kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Le4/i;)Le4/h;"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker():0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le4/a$c;"}
    1:1:void execute(java.lang.Runnable):0:0 -> execute
    1:1:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Le4/i;Z)V"}
    1:1:void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/a;Ljava/lang/Runnable;Le4/i;ZILjava/lang/Object;)V"}
    1:1:boolean isTerminated():0:0 -> h
    1:1:int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/a$c;)I"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop():0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le4/a$c;"}
    1:1:boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/a$c;)Z"}
    1:1:void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/a$c;II)V"}
    1:1:void runSafely(kotlinx.coroutines.scheduling.Task):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/h;)V"}
    1:1:void shutdown(long):0:0 -> n
    1:1:void signalBlockingWork(long,boolean):0:0 -> o
    1:1:void signalCpuWork():0:0 -> p
    1:1:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/a$c;Le4/h;Z)Le4/h;"}
    1:1:boolean tryCreateWorker(long):0:0 -> r
    1:1:boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object):0:0 -> s
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/a;JILjava/lang/Object;)Z"}
    1:1:boolean tryUnpark():0:0 -> t
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion -> e4.a$a:
    void <init>() -> <init>
    1:1:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq3/g;)V"}
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings -> e4.a$b:
    int[] $EnumSwitchMapping$0 -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker -> e4.a$c:
    kotlinx.coroutines.scheduling.WorkQueue localQueue -> f
    kotlin.jvm.internal.Ref$ObjectRef stolenTask -> g
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState state -> h
    long terminationDeadline -> i
    long minDelayUntilStealableTaskNs -> j
    int rngState -> k
    boolean mayHaveLocalTasks -> l
    kotlinx.coroutines.scheduling.CoroutineScheduler this$0 -> m
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater workerCtl$FU -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/a;)V"}
    2:2:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler,int):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/a;I)V"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler access$getThis$0$p(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/a$c;)Le4/a;"}
    1:1:void afterTask(int):0:0 -> b
    1:1:void beforeTask(int):0:0 -> c
    1:1:void executeTask(kotlinx.coroutines.scheduling.Task):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/h;)V"}
    1:1:kotlinx.coroutines.scheduling.Task findAnyTask(boolean):0:0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Le4/h;"}
    1:1:kotlinx.coroutines.scheduling.Task findBlockingTask():0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le4/h;"}
    1:1:kotlinx.coroutines.scheduling.Task findTask(boolean):0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Le4/h;"}
    1:1:int getIndexInArray():0:0 -> h
    1:1:java.lang.Object getNextParkedWorker():0:0 -> i
    1:1:java.util.concurrent.atomic.AtomicIntegerFieldUpdater getWorkerCtl$FU():0:0 -> j
    1:1:void idleReset(int):0:0 -> k
    1:1:boolean inStack():0:0 -> l
    1:1:int nextInt(int):0:0 -> m
    1:1:void park():0:0 -> n
    1:1:kotlinx.coroutines.scheduling.Task pollGlobalQueues():0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le4/h;"}
    1:1:void runWorker():0:0 -> p
    1:1:void setIndexInArray(int):0:0 -> q
    1:1:void setNextParkedWorker(java.lang.Object):0:0 -> r
    1:1:void run():0:0 -> run
    1:1:boolean tryAcquireCpuPermit():0:0 -> s
    1:1:void tryPark():0:0 -> t
    1:1:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState):0:0 -> u
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/a$d;)Z"}
    1:1:kotlinx.coroutines.scheduling.Task trySteal(int):0:0 -> v
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Le4/h;"}
    1:1:void tryTerminateWorker():0:0 -> w
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState -> e4.a$d:
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState CPU_ACQUIRED -> f
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState BLOCKING -> g
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState PARKING -> h
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState DORMANT -> i
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState TERMINATED -> j
    kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $VALUES -> k
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(java.lang.String,int):0:0 -> <init>
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le4/a$d;"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String):0:0 -> valueOf
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)Le4/a$d;"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values():0:0 -> values
      # {"id":"com.android.tools.r8.residualsignature","signature":"()[Le4/a$d;"}
kotlinx.coroutines.scheduling.DefaultIoScheduler -> e4.b:
    kotlinx.coroutines.scheduling.DefaultIoScheduler INSTANCE -> i
    kotlinx.coroutines.CoroutineDispatcher default -> j
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)V"}
    1:1:void close():0:0 -> close
    1:1:void execute(java.lang.Runnable):0:0 -> execute
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.scheduling.DefaultScheduler -> e4.c:
    kotlinx.coroutines.scheduling.DefaultScheduler INSTANCE -> n
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:void close():0:0 -> close
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.scheduling.GlobalQueue -> e4.d:
    1:1:void <init>():0:0 -> <init>
kotlinx.coroutines.scheduling.NanoTimeSource -> e4.e:
    kotlinx.coroutines.scheduling.NanoTimeSource INSTANCE -> a
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:long nanoTime():0:0 -> a
kotlinx.coroutines.scheduling.SchedulerCoroutineDispatcher -> e4.f:
    int corePoolSize -> i
    int maxPoolSize -> j
    long idleWorkerKeepAliveNs -> k
    java.lang.String schedulerName -> l
    kotlinx.coroutines.scheduling.CoroutineScheduler coroutineScheduler -> m
    1:1:void <init>(int,int,long,java.lang.String):0:0 -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)V"}
    1:1:kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le4/a;"}
    1:1:void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):0:0 -> q
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;Le4/i;Z)V"}
kotlinx.coroutines.scheduling.SchedulerTimeSource -> e4.g:
    void <init>() -> <init>
    long nanoTime() -> a
kotlinx.coroutines.scheduling.Task -> e4.h:
    long submissionTime -> f
    kotlinx.coroutines.scheduling.TaskContext taskContext -> g
    1:1:void <init>():0:0 -> <init>
    2:2:void <init>(long,kotlinx.coroutines.scheduling.TaskContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(JLe4/i;)V"}
kotlinx.coroutines.scheduling.TaskContext -> e4.i:
    int getTaskMode() -> a
    void afterTask() -> b
kotlinx.coroutines.scheduling.TaskContextImpl -> e4.j:
    int taskMode -> a
    1:1:void <init>(int):0:0 -> <init>
    1:1:int getTaskMode():0:0 -> a
    1:1:void afterTask():0:0 -> b
kotlinx.coroutines.scheduling.TaskImpl -> e4.k:
    java.lang.Runnable block -> h
    1:1:void <init>(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Runnable;JLe4/i;)V"}
    1:1:void run():0:0 -> run
    1:1:java.lang.String toString():0:0 -> toString
kotlinx.coroutines.scheduling.TasksKt -> e4.l:
    java.lang.String DEFAULT_SCHEDULER_NAME -> a
    long WORK_STEALING_TIME_RESOLUTION_NS -> b
    int CORE_POOL_SIZE -> c
    int MAX_POOL_SIZE -> d
    long IDLE_WORKER_KEEP_ALIVE_NS -> e
    kotlinx.coroutines.scheduling.SchedulerTimeSource schedulerTimeSource -> f
    kotlinx.coroutines.scheduling.TaskContext NonBlockingContext -> g
    kotlinx.coroutines.scheduling.TaskContext BlockingContext -> h
    1:1:void <clinit>():0:0 -> <clinit>
kotlinx.coroutines.scheduling.UnlimitedIoScheduler -> e4.m:
    kotlinx.coroutines.scheduling.UnlimitedIoScheduler INSTANCE -> h
    1:1:void <clinit>():0:0 -> <clinit>
    void <init>() -> <init>
    1:1:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lh3/g;Ljava/lang/Runnable;)V"}
    1:1:kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Lx3/a0;"}
kotlinx.coroutines.scheduling.WorkQueue -> e4.n:
    java.util.concurrent.atomic.AtomicReferenceArray buffer -> a
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater lastScheduledTask$FU -> b
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater producerIndex$FU -> c
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater consumerIndex$FU -> d
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater blockingTasksInBuffer$FU -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
    1:1:kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/h;Z)Le4/h;"}
    1:1:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/h;)Le4/h;"}
    1:1:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/h;)V"}
    1:1:int getBufferSize():0:0 -> d
    1:1:int getSize$kotlinx_coroutines_core():0:0 -> e
    1:1:void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue):0:0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/d;)V"}
    1:1:kotlinx.coroutines.scheduling.Task poll():0:0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le4/h;"}
    1:1:kotlinx.coroutines.scheduling.Task pollBlocking():0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le4/h;"}
    1:1:kotlinx.coroutines.scheduling.Task pollBuffer():0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le4/h;"}
    1:1:boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue):0:0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Le4/d;)Z"}
    1:1:kotlinx.coroutines.scheduling.Task pollWithExclusiveMode(boolean):0:0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Z)Le4/h;"}
    1:1:kotlinx.coroutines.scheduling.Task stealWithExclusiveMode(int):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Le4/h;"}
    1:1:kotlinx.coroutines.scheduling.Task tryExtractFromTheMiddle(int,boolean):0:0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(IZ)Le4/h;"}
    1:1:long trySteal(int,kotlin.jvm.internal.Ref$ObjectRef):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILq3/q;)J"}
    1:1:long tryStealLastScheduled(int,kotlin.jvm.internal.Ref$ObjectRef):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILq3/q;)J"}
